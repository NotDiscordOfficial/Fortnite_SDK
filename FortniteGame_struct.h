// Enum FortniteGame.ELinkToDirection
enum class ELinkToDirection : uint8 {
	Up,
	Down,
	Right,
	Left,
	Forward,
	Backward,
	ELinkToDirection_MAX,
};

// Enum FortniteGame.EFortDayPhase
enum class EFortDayPhase : uint8 {
	Morning,
	Day,
	Evening,
	Night,
	NumPhases,
	EFortDayPhase_MAX,
};

// Enum FortniteGame.EBuildingReplacementType
enum class EBuildingReplacementType : uint8 {
	BRT_None,
	BRT_Edited,
	BRT_Upgrade,
	BRT_MAX,
};

// Enum FortniteGame.EFortCustomPartType
enum class EFortCustomPartType : uint8 {
	Head,
	Body,
	Hat,
	Backpack,
	MiscOrTail,
	Face,
	Gameplay,
	NumTypes,
	EFortCustomPartType_MAX,
};

// Enum FortniteGame.EInteractionBeingAttempted
enum class EInteractionBeingAttempted : uint8 {
	FirstInteraction,
	SecondInteraction,
	AllInteraction,
	EInteractionBeingAttempted_MAX,
};

// Enum FortniteGame.EFortAIDirectorEvent
enum class EFortAIDirectorEvent : uint8 {
	PlayerAIEnemies,
	PlayerTakeDamage,
	PlayerHealth,
	PlayerDeath,
	PlayerLookAtAIEnemy,
	PlayerDamageAIEnemy,
	PlayerKillAIEnemy,
	PlayerHealingPotential,
	PlayerAmmoLight,
	PlayerAmmoMedium,
	PlayerAmmoHeavy,
	PlayerAmmoShells,
	PlayerAmmoEnergy,
	PlayerAINear,
	PlayerMovement,
	ObjectiveTakeDamage,
	ObjectiveHealth,
	ObjectiveDestroyed,
	TrapFired,
	TrapDamagedAIEnemy,
	ObjectivePathCost,
	PlayerPathCost,
	ObjectiveNearbyBuildingDamaged,
	Max_None,
	EFortAIDirectorEvent_MAX,
};

// Enum FortniteGame.EFortWeaponReloadType
enum class EFortWeaponReloadType : uint8 {
	ReloadWholeClip,
	ReloadIndividualBullets,
	ReloadBasedOnAmmoCostPerFire,
	ReloadBasedOnCartridgePerFire,
	EFortWeaponReloadType_MAX,
};

// Enum FortniteGame.EFortInventoryType
enum class EFortInventoryType : uint8 {
	World,
	Account,
	Outpost,
	MAX,
};

// Enum FortniteGame.EOfferPurchaseError
enum class EOfferPurchaseError : uint8 {
	NoError,
	PendingServerConfirmation,
	CannotAffordItem,
	InvalidOfferID,
	InvalidPriceIndex,
	NoneLeft,
	PurchaseAlreadyPending,
	NoConnection,
	AccountNotEligible,
	CannotGiftItem,
	MFANotEnabled,
	EOfferPurchaseError_MAX,
};

// Enum FortniteGame.EFortAlteration
enum class EFortAlteration : uint8 {
	AttributeSlot,
	GameplaySlot,
	ComplexCosmeticSlot,
	UserPickedCosmeticSlot,
	ColorSlot,
	HeroSpecializationTier1Slot,
	HeroSpecializationTier2Slot,
	HeroSpecializationTier3Slot,
	HeroSpecializationTier4Slot,
	HeroSpecializationTier5Slot,
	EFortAlteration_MAX,
};

// Enum FortniteGame.EPlayerCompetitiveBanReasons
enum class EPlayerCompetitiveBanReasons : uint8 {
	None,
	Cheating,
	Collusion,
	Toxicity,
	Harassment,
	Ringing,
	Gambling,
	Exploiting,
	IntentionalDisconnect,
	IllegalRestart,
	Other,
	AccountSharing,
	CircumventingRegionLock,
	CircumventingBan,
	Smurfing,
	CircumventingTeamLock,
	EPlayerCompetitiveBanReasons_MAX,
};

// Enum FortniteGame.EPlayerBanReasons
enum class EPlayerBanReasons : uint8 {
	Teaming,
	Afk_Leeching,
	Harassment,
	TradeScamming,
	Exploiting,
	Competitive,
	Creative,
	TeamingWithCheater,
	EPlayerBanReasons_MAX,
};

// Enum FortniteGame.EFortItemType
enum class EFortItemType : uint8 {
	WorldItem,
	Ammo,
	Badge,
	BackpackPickup,
	BuildingPiece,
	CharacterPart,
	Consumable,
	Deco,
	EditTool,
	Ingredient,
	ItemCache,
	Food,
	Gadget,
	AthenaGadget,
	HomebaseGadget,
	BattleLabDevice,
	SpyTechPerk,
	HeroAbility,
	MissionItem,
	Trap,
	MultiItem,
	Weapon,
	WeaponMelee,
	WeaponRanged,
	WeaponHarvest,
	WeaponCreativePhone,
	WeaponMod,
	WorldResource,
	CreativeUserPrefab,
	CreativePlayset,
	Vehicle,
	Npc,
	AccountItem,
	AccountResource,
	CollectedResource,
	Alteration,
	CardPack,
	Currency,
	Hero,
	Schematic,
	Worker,
	TeamPerk,
	PlayerTech,
	Token,
	DailyRewardScheduleToken,
	CodeToken,
	Stat,
	Buff,
	BuffCredit,
	Quest,
	Accolades,
	FriendChest,
	MedalsPunchCard,
	RepeatableDailiesCard,
	ChallengeBundle,
	ChallengeBundleSchedule,
	ChallengeBundleCompletionToken,
	GameplayModifier,
	Outpost,
	HomebaseNode,
	Defender,
	ConversionControl,
	DeployableBaseCloudSave,
	ConsumableAccountItem,
	Quota,
	Expedition,
	HomebaseBannerIcon,
	HomebaseBannerColor,
	AthenaSkyDiveContrail,
	PersonalVehicle,
	AthenaGlider,
	AthenaPickaxe,
	AthenaHat,
	AthenaBackpack,
	AthenaCharacter,
	AthenaDance,
	AthenaConsumableEmote,
	AthenaLoadingScreen,
	AthenaBattleBus,
	AthenaVehicleCosmetic,
	AthenaItemWrap,
	AthenaCallingCard,
	AthenaMapMarker,
	AthenaMusicPack,
	AthenaPetCosmetic,
	AthenaCharmCosmetic,
	AthenaVictoryPose,
	AthenaSeasonTreasure,
	AthenaSeason,
	AthenaRewardGraph,
	AthenaExtResource,
	EventDescription,
	BattleLabDeviceAccount,
	MatchAward,
	AthenaEventToken,
	EventPurchaseTracker,
	CosmeticVariantToken,
	CampaignHeroLoadout,
	Playset,
	PrerollData,
	CreativePlot,
	PlayerSurveyToken,
	CosmeticLocker,
	BannerToken,
	RestedXpBoosterToken,
	RewardEventGraphPurchaseToken,
	HardcoreModifier,
	EventDependentItem,
	ItemAccessToken,
	SpecialItem,
	Emote,
	Stack,
	CollectionBookPage,
	BGAConsumableWrapper,
	GiftBox,
	GiftBoxUnlock,
	PlaysetProp,
	RegCosmeticDef,
	Profile,
	Max_None,
	EFortItemType_MAX,
};

// Enum FortniteGame.EAthenaTravelLogPlayerType
enum class EAthenaTravelLogPlayerType : uint8 {
	Self,
	Ally,
	Enemy,
	Invalid,
	EAthenaTravelLogPlayerType_MAX,
};

// Enum FortniteGame.EAthenaTravelEventType
enum class EAthenaTravelEventType : uint8 {
	GroundMove,
	AirMove,
	BattleBusJump,
	LaunchJump,
	Landed,
	OpenChest,
	OpenAmmo,
	GotAssist,
	GotKnockdown,
	GotKill,
	PlayerDowned,
	PlayerDied,
	Won,
	DealtDamage,
	HealthChange,
	GotItem,
	DroppedItem,
	ShieldChange,
	WeaponExecuted,
	EnteredVehicle,
	ExitedVehicle,
	TrapBuilt,
	UsedItem,
	ZoneUpdate,
	PlacedBuilding,
	EmoteUsed,
	UpgradedBuilding,
	EditedBuilding,
	Count,
	EAthenaTravelEventType_MAX,
};

// Enum FortniteGame.ERewardSource
enum class ERewardSource : uint8 {
	Invalid,
	MinutesPlayed,
	FirstKill,
	TeamKills,
	FirstRevive,
	AdditionalRevives,
	Placement,
	Medals,
	FirstWin,
	SeasonLevelUp,
	BookLevelUp,
	MatchXP,
	MAX_COUNT,
	ERewardSource_MAX,
};

// Enum FortniteGame.EAthenaMatchXpMultiplierSource
enum class EAthenaMatchXpMultiplierSource : uint8 {
	Invalid,
	BattlePassSelf,
	BattlePassFriends,
	CosmeticSet,
	AntiAddictionPenalty,
	BonusXpEvent,
	MAX_COUNT,
	EAthenaMatchXpMultiplierSource_MAX,
};

// Enum FortniteGame.EFortAccoladeSubtype
enum class EFortAccoladeSubtype : uint8 {
	NotSet,
	Action,
	Discovery,
	XpToken,
	EFortAccoladeSubtype_MAX,
};

// Enum FortniteGame.EAlertLevel
enum class EAlertLevel : uint8 {
	Unaware,
	Alerted,
	LKP,
	Threatened,
	Count,
	EAlertLevel_MAX,
};

// Enum FortniteGame.EFortBudgetCategory
enum class EFortBudgetCategory : uint8 {
	Memory,
	Simulation,
	Rendering,
	Network,
	Audio,
	Max,
};

// Enum FortniteGame.EVolumeState
enum class EVolumeState : uint8 {
	Uninitialized,
	ReadOnly,
	Initializing,
	Ready,
	EVolumeState_MAX,
};

// Enum FortniteGame.EAthenaGameMsgType
enum class EAthenaGameMsgType : uint8 {
	None,
	DefaultIntro,
	DefaultMessage,
	DefaultCriticalMessage,
	CommIntro,
	CommMessage,
	CommCriticalMessage,
	CornerIntro,
	CornerMessage,
	CornerCriticalMessage,
	RespawnTurningOffWarning,
	RespawnOffWarning,
	CenterMessage,
	CenterImportantMessage,
	CenterCriticalMessage,
	EAthenaGameMsgType_MAX,
};

// Enum FortniteGame.EHUDMessagePlacement
enum class EHUDMessagePlacement : uint8 {
	None,
	BottomCenter,
	TopCenter,
	CenterRight,
	EHUDMessagePlacement_MAX,
};

// Enum FortniteGame.EFortVolumeType
enum class EFortVolumeType : uint8 {
	None,
	Island,
	Published,
	Featured,
	Prefab,
	Hub,
	EFortVolumeType_MAX,
};

// Enum FortniteGame.EVolumeShape
enum class EVolumeShape : uint8 {
	Sphere,
	Box,
	EVolumeShape_MAX,
};

// Enum FortniteGame.EFortBuildingType
enum class EFortBuildingType : uint8 {
	Wall,
	Floor,
	Corner,
	Deco,
	Prop,
	Stairs,
	Roof,
	Pillar,
	SpawnedItem,
	Container,
	Trap,
	GenericCenterCellActor,
	None,
	EFortBuildingType_MAX,
};

// Enum FortniteGame.EFortItemEntryState
enum class EFortItemEntryState : uint8 {
	NoneState,
	NewItemCount,
	ShouldShowItemToast,
	DurabilityInitialized,
	DoNotShowSpawnParticles,
	FromRecoveredBackpack,
	FromGift,
	PendingUpgradeCriteriaProgress,
	OwnerBuildingHandle,
	FromDroppedPickup,
	JustCrafted,
	CraftAndSlotTarget,
	GenericAttributeValueSet,
	PickupInstigatorHandle,
	RechargingWeaponServerTime,
	DisallowSwapOnNextPickUpAttempt,
	DroppedFromQuestSource,
	Tossed,
	EFortItemEntryState_MAX,
};

// Enum FortniteGame.EFortQuickBars
enum class EFortQuickBars : uint8 {
	Primary,
	Secondary,
	Creative,
	Max_None,
	EFortQuickBars_MAX,
};

// Enum FortniteGame.EAthenaCustomizationCategory
enum class EAthenaCustomizationCategory : uint8 {
	None,
	Glider,
	Pickaxe,
	Hat,
	Backpack,
	Character,
	LoadingScreen,
	BattleBus,
	VehicleDecoration,
	CallingCard,
	MapMarker,
	Dance,
	ConsumableEmote,
	VictoryPose,
	SkyDiveContrail,
	MusicPack,
	ItemWrap,
	PetSkin,
	Charm,
	RegCosmeticDef,
	Loadout,
	SaveLoadout,
	MAX,
};

// Enum FortniteGame.EFortObjectiveStatus
enum class EFortObjectiveStatus : uint8 {
	Created,
	InProgress,
	Succeeded,
	Failed,
	NeutralCompletion,
	Max_None,
	EFortObjectiveStatus_MAX,
};

// Enum FortniteGame.EStatCategory
enum class EStatCategory : uint8 {
	Combat,
	Building,
	Utility,
	Max_None,
	EStatCategory_MAX,
};

// Enum FortniteGame.EFortResourceType
enum class EFortResourceType : uint8 {
	Wood,
	Stone,
	Metal,
	Permanite,
	GoldCurrency,
	Ingredient,
	None,
	EFortResourceType_MAX,
};

// Enum FortniteGame.ERichPresenceStateChange
enum class ERichPresenceStateChange : uint8 {
	AutoUpdate,
	Idle,
	Active,
	Busy,
	NotBusy,
	ERichPresenceStateChange_MAX,
};

// Enum FortniteGame.ESubGame
enum class ESubGame : uint8 {
	Campaign,
	Athena,
	Invalid,
	Count,
	Creative,
	ESubGame_MAX,
};

// Enum FortniteGame.ELockOnState
enum class ELockOnState : uint8 {
	NoTarget,
	TargetAcquired,
	LockingOnToTarget,
	TargetLockedOn,
	Cooldown,
	COUNT,
	ELockOnState_MAX,
};

// Enum FortniteGame.EStatRecordingPeriod
enum class EStatRecordingPeriod : uint8 {
	Frame,
	Minute,
	AthenaSafeZonePhase,
	Life,
	Map,
	Campaign,
	Persistent,
	Max,
};

// Enum FortniteGame.EStatMod
enum class EStatMod : uint8 {
	Delta,
	Set,
	Maximum,
	EStatMod_MAX,
};

// Enum FortniteGame.EFortDamageZone
enum class EFortDamageZone : uint8 {
	Light,
	Normal,
	Critical,
	Vulnerability,
	Max,
};

// Enum FortniteGame.EFortEmotePlayMode
enum class EFortEmotePlayMode : uint8 {
	CheckIfOwned,
	ForcePlay,
	EFortEmotePlayMode_MAX,
};

// Enum FortniteGame.EFortItemTier
enum class EFortItemTier : uint8 {
	No_Tier,
	I,
	II,
	III,
	IV,
	V,
	VI,
	VII,
	VIII,
	IX,
	X,
	NumItemTierValues,
	EFortItemTier_MAX,
};

// Enum FortniteGame.EFortResourceLevel
enum class EFortResourceLevel : uint8 {
	First,
	Second,
	Third,
	Fourth,
	Fifth,
	Sixth,
	NumLevels,
	Invalid,
	EFortResourceLevel_MAX,
};

// Enum FortniteGame.EFortRequestedGameplayAction
enum class EFortRequestedGameplayAction : uint8 {
	ContinuePlaying,
	StartPlaying,
	StopPlaying,
	EnterZone,
	LeaveZone,
	ReturnToMainMenu,
	QuitGame,
	Invalid,
	EFortRequestedGameplayAction_MAX,
};

// Enum FortniteGame.EFortGameplayState
enum class EFortGameplayState : uint8 {
	NormalGameplay,
	WaitingToStart,
	EndOfZone,
	EnteringZone,
	LeavingZone,
	Invalid,
	EFortGameplayState_MAX,
};

// Enum FortniteGame.EBuildingHighlightType
enum class EBuildingHighlightType : uint8 {
	Primary,
	Interact,
	WillBeDestroyed,
	Quest,
	MAX_None,
	EBuildingHighlightType_MAX,
};

// Enum FortniteGame.EFortCollectedVariantClientUpdate
enum class EFortCollectedVariantClientUpdate : uint8 {
	NewVariant,
	CollectedCount,
	Improvement,
	HiddenImprovement,
	EFortCollectedVariantClientUpdate_MAX,
};

// Enum FortniteGame.EFortCollectedState
enum class EFortCollectedState : uint8 {
	Unknown,
	New,
	Known,
	NewlyCollected,
	Collected,
	NewBest,
	NewRecord,
	NewLocation,
	NewlyCompleted,
	Complete,
	EFortCollectedState_MAX,
};

// Enum FortniteGame.EFortPawnStasisMode
enum class EFortPawnStasisMode : uint8 {
	None,
	NoMovement,
	NoMovementOrTurning,
	NoMovementOrFalling,
	NoMovement_EmotesEnabled,
	NoMovementOrTurning_EmotesEnabled,
	NoMovementOrFalling_EmotesEnabled,
	EFortPawnStasisMode_MAX,
};

// Enum FortniteGame.EFortJumpStaminaCost
enum class EFortJumpStaminaCost : uint8 {
	None,
	Trigger,
	SprintTrigger,
	SprintAir,
	EFortJumpStaminaCost_MAX,
};

// Enum FortniteGame.EFortPCTutorialCompletedState
enum class EFortPCTutorialCompletedState : uint8 {
	Unknown,
	Incomplete,
	Complete,
	EFortPCTutorialCompletedState_MAX,
};

// Enum FortniteGame.EFortCompletionResult
enum class EFortCompletionResult : uint8 {
	Win,
	Loss,
	Draw,
	Undefined,
	EFortCompletionResult_MAX,
};

// Enum FortniteGame.EFortRewardActivityType
enum class EFortRewardActivityType : uint8 {
	General,
	MissionPrimary,
	MissionSecondary,
	AccountLevelUp,
	Max_None,
	EFortRewardActivityType_MAX,
};

// Enum FortniteGame.EFortDelayedQuickBarAction
enum class EFortDelayedQuickBarAction : uint8 {
	Add,
	Remove,
	Replace,
	Invalid,
	EFortDelayedQuickBarAction_MAX,
};

// Enum FortniteGame.EFortElementalDamageType
enum class EFortElementalDamageType : uint8 {
	None,
	Fire,
	Ice,
	Lightning,
	Energy,
	MAX,
};

// Enum FortniteGame.EFortDamageNumberType
enum class EFortDamageNumberType : uint8 {
	None,
	Pawn,
	Building,
	Player,
	Shield,
	Score,
	DBNO,
	Percent,
	EFortDamageNumberType_MAX,
};

// Enum FortniteGame.EFortCostInfoTypes
enum class EFortCostInfoTypes : uint8 {
	Placement,
	Repair,
	Conversion,
	Ability,
	None,
	EFortCostInfoTypes_MAX,
};

// Enum FortniteGame.EFortBuildPreviewMarkerOptionalAdjustment
enum class EFortBuildPreviewMarkerOptionalAdjustment : uint8 {
	None,
	FreeWallPieceOnTop,
	FreeWallPieceOnBottom,
	EFortBuildPreviewMarkerOptionalAdjustment_MAX,
};

// Enum FortniteGame.EFortVoteStatus
enum class EFortVoteStatus : uint8 {
	Begin,
	Update,
	End,
	BeginLockout,
	EndLockout,
	EFortVoteStatus_MAX,
};

// Enum FortniteGame.EFortVoteType
enum class EFortVoteType : uint8 {
	SurvivalVote,
	DifficultyIncrease,
	MissionActivation,
	ContinueOrExtract,
	EFortVoteType_MAX,
};

// Enum FortniteGame.EAthenaGamePhase
enum class EAthenaGamePhase : uint8 {
	None,
	Setup,
	Warmup,
	Aircraft,
	SafeZones,
	EndGame,
	Count,
	EAthenaGamePhase_MAX,
};

// Enum FortniteGame.EAthenaGamePhaseStep
enum class EAthenaGamePhaseStep : uint8 {
	None,
	Setup,
	Warmup,
	GetReady,
	BusLocked,
	BusFlying,
	StormForming,
	StormHolding,
	StormShrinking,
	Countdown,
	FinalCountdown,
	EndGame,
	Count,
	EAthenaGamePhaseStep_MAX,
};

// Enum FortniteGame.EAthenaStormCapState
enum class EAthenaStormCapState : uint8 {
	None,
	Clear,
	Warning,
	Damaging,
	EAthenaStormCapState_MAX,
};

// Enum FortniteGame.EFortIsFinalXpUpdate
enum class EFortIsFinalXpUpdate : uint8 {
	Uninitialized,
	NotFinal,
	Final,
	EFortIsFinalXpUpdate_MAX,
};

// Enum FortniteGame.EFortTeam
enum class EFortTeam : uint8 {
	Spectator,
	HumanCampaign,
	Monster,
	HumanPvP_Team1,
	HumanPvP_Team2,
	MAX,
};

// Enum FortniteGame.EFortVoteArbitratorType
enum class EFortVoteArbitratorType : uint8 {
	Invalid,
	Majority,
	Unanimous,
	EFortVoteArbitratorType_MAX,
};

// Enum FortniteGame.EWaveRules
enum class EWaveRules : uint8 {
	KillAllEnemies,
	Timed,
	KillPoints,
	KillSpecificEnemy,
	Mission,
	EWaveRules_MAX,
};

// Enum FortniteGame.EServerStability
enum class EServerStability : uint8 {
	Stable,
	LowUnstability,
	HighUnstability,
	Count,
	EServerStability_MAX,
};

// Enum FortniteGame.EFortPlaylistType
enum class EFortPlaylistType : uint8 {
	Default,
	Playground,
	Creative,
	Creative_LTM,
	BattleLab,
	EFortPlaylistType_MAX,
};

// Enum FortniteGame.EMapLocationStateType
enum class EMapLocationStateType : uint8 {
	Normal,
	Golden,
	Undiscovered,
	Max,
};

// Enum FortniteGame.ESpawnMachineState
enum class ESpawnMachineState : uint8 {
	Default,
	WaitingForUse,
	Active,
	Complete,
	OnCooldown,
	ESpawnMachineState_MAX,
};

// Enum FortniteGame.ESafeZoneStartUp
enum class ESafeZoneStartUp : uint8 {
	UseDefaultGameBehavior,
	StartsWithWarmUp,
	StartsWithAirCraft,
	StartsWithNoAirCraft,
	ESafeZoneStartUp_MAX,
};

// Enum FortniteGame.EEventTournamentRound
enum class EEventTournamentRound : uint8 {
	Open,
	Qualifiers,
	SemiFinals,
	Finals,
	Unknown,
	Arena,
	EEventTournamentRound_MAX,
};

// Enum FortniteGame.EFriendlyFireType
enum class EFriendlyFireType : uint8 {
	Off,
	On,
	EFriendlyFireType_MAX,
};

// Enum FortniteGame.EAirCraftBehavior
enum class EAirCraftBehavior : uint8 {
	Default,
	OpposingAirCraftForEachTeam,
	FlyTowardFirstCircleCenter,
	NoAircraft,
	EAirCraftBehavior_MAX,
};

// Enum FortniteGame.EAthenaScoringEvent
enum class EAthenaScoringEvent : uint8 {
	None,
	Elimination,
	ChestOpened,
	AmmoCanOpened,
	SupplyDropOpened,
	SupplyLlamaOpened,
	ForagedItemConsumed,
	SurvivalInMinutes,
	CollectedCoinBronze,
	CollectedCoinSilver,
	CollectedCoinGold,
	AIKilled,
	EAthenaScoringEvent_MAX,
};

// Enum FortniteGame.EMatchAbandonState
enum class EMatchAbandonState : uint8 {
	None,
	Joining,
	CanAbandon,
	TeamLocked,
	EMatchAbandonState_MAX,
};

// Enum FortniteGame.ETrustedPlatformType
enum class ETrustedPlatformType : uint8 {
	Unknown,
	Untrusted,
	PS4,
	PS5,
	XboxOne,
	Switch,
	ETrustedPlatformType_MAX,
};

// Enum FortniteGame.EReadyCheckState
enum class EReadyCheckState : uint8 {
	CheckStarted,
	Ready,
	NotReady,
	EReadyCheckState_MAX,
};

// Enum FortniteGame.EFortAppliedSwapItemAndVariantState
enum class EFortAppliedSwapItemAndVariantState : uint8 {
	None,
	Active,
	Inactive,
	EFortAppliedSwapItemAndVariantState_MAX,
};

// Enum FortniteGame.EFortCustomBodyType
enum class EFortCustomBodyType : uint8 {
	NONE,
	Small,
	Medium,
	MediumAndSmall,
	Large,
	LargeAndSmall,
	LargeAndMedium,
	All,
	Deprecated,
	EFortCustomBodyType_MAX,
};

// Enum FortniteGame.EFortCustomGender
enum class EFortCustomGender : uint8 {
	Invalid,
	Male,
	Female,
	Both,
	EFortCustomGender_MAX,
};

// Enum FortniteGame.EFortPlayerRole
enum class EFortPlayerRole : uint8 {
	Player,
	LiveSpectator,
	ReplaySpectator,
	InactivePlayer,
	EFortPlayerRole_MAX,
};

// Enum FortniteGame.EFortKickReason
enum class EFortKickReason : uint8 {
	NotKicked,
	GenericKick,
	WasBanned,
	EncryptionRequired,
	CrossPlayRestriction,
	ClientIdRestriction,
	EFortKickReason_MAX,
};

// Enum FortniteGame.EMessageDispatcherErrorMessageType
enum class EMessageDispatcherErrorMessageType : uint8 {
	FailedToSetTrigger_TooManyTriggers,
	FailedToSetReceiver_TooManyReceivers,
	FailedToSetReceiver_TooManyReceiversOnOneChannel,
	FailedToSetTriggerReceiver_InvalidChannel,
	FailedToEnqueueMessage,
	BuildLimitReached,
	UnknownError,
	EMessageDispatcherErrorMessageType_MAX,
};

// Enum FortniteGame.EDeathCause
enum class EDeathCause : uint8 {
	OutsideSafeZone,
	FallDamage,
	Pistol,
	Shotgun,
	Rifle,
	SMG,
	Sniper,
	SniperNoScope,
	Melee,
	InfinityBlade,
	Grenade,
	C4,
	GrenadeLauncher,
	RocketLauncher,
	Minigun,
	Bow,
	Trap,
	DBNOTimeout,
	Banhammer,
	RemovedFromGame,
	MassiveMelee,
	MassiveDiveBomb,
	MassiveRanged,
	Vehicle,
	ShoppingCart,
	ATK,
	QuadCrasher,
	Biplane,
	BiplaneGun,
	LMG,
	GasGrenade,
	InstantEnvironmental,
	InstantEnvironmentalFellOutOfWorld,
	InstantEnvironmentalUnderLandscape,
	Turret,
	ShipCannon,
	Cube,
	Balloon,
	StormSurge,
	Lava,
	BasicFiend,
	EliteFiend,
	RangedFiend,
	BasicBrute,
	EliteBrute,
	MegaBrute,
	SilentSwitchingToSpectate,
	LoggedOut,
	TeamSwitchSuicide,
	WonMatch,
	Unspecified,
	EDeathCause_MAX,
};

// Enum FortniteGame.ETeamMemberState
enum class ETeamMemberState : uint8 {
	None,
	FIRST_CHAT_MESSAGE,
	NeedAmmoHeavy,
	NeedAmmoLight,
	NeedAmmoMedium,
	NeedAmmoShells,
	NeedAmmoRocket,
	ChatBubble,
	EnemySpotted,
	NeedBandages,
	NeedMaterials,
	NeedShields,
	NeedWeapon,
	LAST_CHAT_MESSAGE,
	MAX,
};

// Enum FortniteGame.EFortWeaponOverheatState
enum class EFortWeaponOverheatState : uint8 {
	None,
	Heating,
	Cooling,
	Overheated,
	EFortWeaponOverheatState_MAX,
};

// Enum FortniteGame.EDialogMarkerInteractionState
enum class EDialogMarkerInteractionState : uint8 {
	Conversation,
	InteractionRange,
	IndicatorRange,
	None,
	EDialogMarkerInteractionState_MAX,
};

// Enum FortniteGame.EFortReportDayPhase
enum class EFortReportDayPhase : uint8 {
	Dawn,
	Dusk,
	ZoneFinished,
	PlayerLogout,
	EFortReportDayPhase_MAX,
};

// Enum FortniteGame.EXPEventPriorityType
enum class EXPEventPriorityType : uint8 {
	NearReticle,
	XPBarOnly,
	TopCenter,
	Feed,
	EXPEventPriorityType_MAX,
};

// Enum FortniteGame.EMatchmakingCancelReasonV2
enum class EMatchmakingCancelReasonV2 : uint8 {
	Explicit,
	JoinedParty,
	LeftParty,
	PartyMemberJoined,
	PartyMemberLeft,
	PartyMemberCanceled,
	PartyLeaderSwap,
	PlayReplay,
	UIDestroyed,
	PCDestroyed,
	AppBackgrounded,
	HotfixOutdated,
	TournamentOver,
	NotInParty,
	CrossplayBlocked,
	TournamentCrossplayBlocked,
	AccountLevelTooLow,
	FillNoCrossplay,
	CreativeCanceledByLeader,
	CreativeMemberLeftIsland,
	CreativeIslandStateChanged,
	JoinInProgressRejected,
	MatchmakingDisabled,
	NotLoggedIn,
	NoIdentityInterface,
	NoSessionInterface,
	TimedOut,
	InvalidPlaylist,
	AttemptedToQueueTooFrequently,
	TournamentBlackout,
	CellularDataRefusal,
	CancelledDownloadContent,
	Unknown,
	EMatchmakingCancelReasonV2_MAX,
};

// Enum FortniteGame.EPlayerControllerFollow
enum class EPlayerControllerFollow : uint8 {
	NextTeammate,
	PreviousTeammate,
	NextPlayer,
	PreviousPlayer,
	SpecialActor,
	EPlayerControllerFollow_MAX,
};

// Enum FortniteGame.EFortQuickTimeEventResult
enum class EFortQuickTimeEventResult : uint8 {
	None,
	Miss,
	Good,
	Great,
	Perfect,
	EFortQuickTimeEventResult_MAX,
};

// Enum FortniteGame.EVehicleSeats
enum class EVehicleSeats : uint8 {
	Driver,
	Passenger1,
	Passenger2,
	Passenger3,
	Passenger4,
	Passenger5,
	MaxCount,
	EVehicleSeats_MAX,
};

// Enum FortniteGame.ELeecherStatus
enum class ELeecherStatus : uint8 {
	NotReady,
	NonLeecher,
	Leecher,
	ELeecherStatus_MAX,
};

// Enum FortniteGame.EEndOfMatchReason
enum class EEndOfMatchReason : uint8 {
	LastManStanding,
	ScoreReached,
	TimeRanOut,
	WinEventOccurred,
	AllLoggedOut,
	AllEliminated,
	EEndOfMatchReason_MAX,
};

// Enum FortniteGame.EFortMarkedActorScreenClamping
enum class EFortMarkedActorScreenClamping : uint8 {
	Default,
	Clamp,
	ClampWhileNew,
	DontClamp,
	EFortMarkedActorScreenClamping_MAX,
};

// Enum FortniteGame.EFortWorldMarkerType
enum class EFortWorldMarkerType : uint8 {
	None,
	Location,
	Enemy,
	Item,
	Elimination,
	SpecialLocal,
	SpecialServer,
	MAX,
};

// Enum FortniteGame.EBuildingGameplayActorAircraftSpawnSide
enum class EBuildingGameplayActorAircraftSpawnSide : uint8 {
	None,
	Side1,
	Side2,
	EBuildingGameplayActorAircraftSpawnSide_MAX,
};

// Enum FortniteGame.EForceKickAfterDeathMode
enum class EForceKickAfterDeathMode : uint8 {
	Disabled,
	KickAll,
	KickPrivate,
	EForceKickAfterDeathMode_MAX,
};

// Enum FortniteGame.ECapturePointState
enum class ECapturePointState : uint8 {
	Idle,
	Capturing,
	Contested,
	Resetting,
	Captured,
	Reset,
	ECapturePointState_MAX,
};

// Enum FortniteGame.EAdHocSquads_InviteStatus
enum class EAdHocSquads_InviteStatus : uint8 {
	Unset,
	Inviting,
	InviteEnded_APlayerAcceptedTheInvite,
	InviteCancelled_SquadFull,
	InviteCancelled_ByInvitingPlayer,
	EAdHocSquads_MAX,
};

// Enum FortniteGame.EAdHocSquads_SquadUpResult
enum class EAdHocSquads_SquadUpResult : uint8 {
	Success,
	Failure_OneOrMorePlayersWereNull,
	Failure_BothPlayersAreInAdHocSquads,
	Failure_BothPlayersAreAlreadyInTheSameAdHocSquad,
	Failure_CouldNotCreateAdHocSquad,
	Failure_CalledOnClient,
	Failure_SquadIsAlreadyFull,
	Failure_TooManyPlayersToMergeSquads,
	Failure_MutatorIsDisabled,
	Failure_Unknown,
	Failure_Custom,
	EAdHocSquads_MAX,
};

// Enum FortniteGame.EAdHocSquads_LeaveSquadReason
enum class EAdHocSquads_LeaveSquadReason : uint8 {
	ManualLeave,
	MutatorDisabled,
	JoinedADifferentSquad,
	PlayerDiedAndCannotBeRevived,
	PlayerHasWonGame,
	EAdHocSquads_MAX,
};

// Enum FortniteGame.EMiniMapComponentDiscoverableVisibility
enum class EMiniMapComponentDiscoverableVisibility : uint8 {
	Unset,
	NotVisible,
	Visible_NotDiscovered,
	Discovered,
	EMiniMapComponentDiscoverableVisibility_MAX,
};

// Enum FortniteGame.EPlayerBountyThreatLevel
enum class EPlayerBountyThreatLevel : uint8 {
	Low,
	Medium,
	High,
	MAX,
};

// Enum FortniteGame.EBackupSaveState
enum class EBackupSaveState : uint8 {
	Ready,
	InProgress,
	OnCooldown,
	EBackupSaveState_MAX,
};

// Enum FortniteGame.EPropertyOverrideTargetType
enum class EPropertyOverrideTargetType : uint8 {
	None,
	Default,
	ImmutableTarget,
	EPropertyOverrideTargetType_MAX,
};

// Enum FortniteGame.TInteractionType
enum class TInteractionType : uint8 {
	IT_NoInteraction,
	IT_Simple,
	IT_LongPress,
	IT_BuildingEdit,
	IT_BuildingImprovement,
	IT_TrapPlacement,
	IT_MAX,
};

// Enum FortniteGame.EFortBuildingPersistentState
enum class EFortBuildingPersistentState : uint8 {
	Default,
	New,
	Constructed,
	Destroyed,
	Searched,
	None,
	EFortBuildingPersistentState_MAX,
};

// Enum FortniteGame.EFortBuildingInitializationReason
enum class EFortBuildingInitializationReason : uint8 {
	StaticallyPlaced,
	Spawned,
	Replaced,
	LoadedFromSave,
	DynamicBuilderPlaced,
	PlacementTool,
	TrapTool,
	None,
	EFortBuildingInitializationReason_MAX,
};

// Enum FortniteGame.ENavigationObstacleOverride
enum class ENavigationObstacleOverride : uint8 {
	UseMeshSettings,
	ForceEnabled,
	ForceDisabled,
	ENavigationObstacleOverride_MAX,
};

// Enum FortniteGame.EDynamicBuildingPlacementType
enum class EDynamicBuildingPlacementType : uint8 {
	CountsTowardsBounds,
	DestroyIfColliding,
	DestroyAnythingThatCollides,
	EDynamicBuildingPlacementType_MAX,
};

// Enum FortniteGame.EFortBaseWeaponDamage
enum class EFortBaseWeaponDamage : uint8 {
	Combat,
	Environmental,
	EFortBaseWeaponDamage_MAX,
};

// Enum FortniteGame.EBuildingActorComponentCreationPolicy
enum class EBuildingActorComponentCreationPolicy : uint8 {
	Never,
	Lazy,
	Always,
	EBuildingActorComponentCreationPolicy_MAX,
};

// Enum FortniteGame.EAttributeInitLevelSource
enum class EAttributeInitLevelSource : uint8 {
	WorldDifficulty,
	PlayerBuildingSkill,
	AthenaPlaylist,
	EAttributeInitLevelSource_MAX,
};

// Enum FortniteGame.EFortAbilityTargetingSource
enum class EFortAbilityTargetingSource : uint8 {
	Camera,
	PawnForward,
	PawnTowardsFocus,
	WeaponForward,
	WeaponTowardsFocus,
	Custom,
	Max_None,
	EFortAbilityTargetingSource_MAX,
};

// Enum FortniteGame.EFortDeliveryInfoBuildingActorSpecification
enum class EFortDeliveryInfoBuildingActorSpecification : uint8 {
	All,
	PlayerBuildable,
	NonPlayerBuildable,
	EFortDeliveryInfoBuildingActorSpecification_MAX,
};

// Enum FortniteGame.EFortTeamAffiliation
enum class EFortTeamAffiliation : uint8 {
	Friendly,
	Neutral,
	Hostile,
	EFortTeamAffiliation_MAX,
};

// Enum FortniteGame.EFortProximityBasedGEApplicationType
enum class EFortProximityBasedGEApplicationType : uint8 {
	ApplyOnProximityPulse,
	ApplyOnProximityTouch,
	ApplyOnlyDuringProximityTouch,
	ApplyOnProximityExit,
	ApplyOnProximityPrePulse,
	EFortProximityBasedGEApplicationType_MAX,
};

// Enum FortniteGame.EHudVisibilityState
enum class EHudVisibilityState : uint8 {
	FullyVisible,
	FullyHidden,
	GameOnly,
	ReplayOnly,
	MAX,
};

// Enum FortniteGame.EFortReplayEventType
enum class EFortReplayEventType : uint8 {
	Elimination,
	Eliminated,
	DBNO,
	UserPlaced,
	MAX,
};

// Enum FortniteGame.ESpectatorCameraType
enum class ESpectatorCameraType : uint8 {
	ThirdPerson,
	DroneFree,
	Gameplay,
	ReverseShot,
	FollowShot,
	DroneFollow,
	DroneAttach,
	BattleMap,
	ARDrone,
	MAX,
};

// Enum FortniteGame.EIntelStateEnum
enum class EIntelStateEnum : uint8 {
	None,
	OnGround,
	HeldByAttacker,
	HeldByDefender,
	Downloaded,
	Captured,
	Downloading,
	EIntelStateEnum_MAX,
};

// Enum FortniteGame.EEventResponderEventType
enum class EEventResponderEventType : uint8 {
	OneShotEvent,
	PersistentEventJoinInProgress,
	PersistentEventStart,
	PersistentEventChange,
	PersistentEventEnd,
	EEventResponderEventType_MAX,
};

// Enum FortniteGame.EMatchConditionMutatorTimingType
enum class EMatchConditionMutatorTimingType : uint8 {
	Round,
	MatchAtEndOfRound,
	MatchImmediate,
	COUNT,
	EMatchConditionMutatorTimingType_MAX,
};

// Enum FortniteGame.EAthenaRoundsMutatorPhase
enum class EAthenaRoundsMutatorPhase : uint8 {
	GamePhase_Setup,
	GamePhase_Warmup,
	FadeOutToNextRound,
	RoundSetup,
	RoundPlay,
	RoundEnd,
	RoundEndUI,
	MatchEndUI,
	MatchEndedPrematurely,
	EAthenaRoundsMutatorPhase_MAX,
};

// Enum FortniteGame.EFortMutatorOverridePriority
enum class EFortMutatorOverridePriority : uint8 {
	None,
	Low,
	Medium,
	High,
	EFortMutatorOverridePriority_MAX,
};

// Enum FortniteGame.EUraniumRoundPhase
enum class EUraniumRoundPhase : uint8 {
	None,
	EndOfRoundStart,
	ShowRoundEnd,
	HideRoundEnd,
	FadeOut,
	SetupForNextRound,
	ShowRoundIntro,
	ShowPOICamera,
	PerkSelect,
	RoundActive,
	FadeIn,
	EndOfRoundFinish,
	FadeBeforeReleasePlayerIntoGameplay,
	ReleasePlayersIntoGameplay,
	EndGame,
	MAX,
};

// Enum FortniteGame.EUraniumEventId
enum class EUraniumEventId : uint8 {
	Intro,
	CartBecomesPushable,
	CheckPointReached,
	NearCheckPoint,
	NearFinalCheckPoint,
	TimeIsLow,
	TimeIsExtraLow,
	OvertimeStarted,
	RoundEnd_PushersWin,
	RoundEnd_DefendersWin,
	RoundStart,
	GameEnded_AllRoundsPlayed,
	GameEndedEarly_BlowOut,
	GameEndedEarly_OutNumbered,
	EUraniumEventId_MAX,
};

// Enum FortniteGame.EUraniumCartMovementRuleOnNewRound
enum class EUraniumCartMovementRuleOnNewRound : uint8 {
	NoChange,
	MoveToNextCheckpoint,
	MoveToStartOfNewSpline,
	MoveToRandomCheckPointOfNewSpline,
	MoveToNextCheckPointOfNewSpline,
	EUraniumCartMovementRuleOnNewRound_MAX,
};

// Enum FortniteGame.EUraniumRoundEndCondition
enum class EUraniumRoundEndCondition : uint8 {
	RanOutOfTime_Or_CheckpointReached,
	RanOutOfTime_Or_LastCheckpointReached,
	RanOutOfTime_Or_MAX,
};

// Enum FortniteGame.EFortMinigameState
enum class EFortMinigameState : uint8 {
	PreGame,
	Setup,
	Transitioning,
	WaitingForCameras,
	Warmup,
	InProgress,
	PostGameTimeDilation,
	PostRoundEnd,
	PostGameEnd,
	PostGameAbandon,
	PostGameReset,
	EFortMinigameState_MAX,
};

// Enum FortniteGame.SpecialEventInputButton
enum class SpecialEventInputButton : uint8 {
	PrimaryFire,
	SecondaryFire,
	RollLeft,
	RollRight,
	Jump,
	Reload,
	SpecialEventInputButton_MAX,
};

// Enum FortniteGame.EBuildingGameplayActorSentry_State
enum class EBuildingGameplayActorSentry_State : uint8 {
	PassiveIdle,
	ActiveIdle,
	Tracking,
	Aggro,
	Dormant,
	Deactivated,
	ReturningToIdle,
	LocatingDamager,
	EBuildingGameplayActorSentry_MAX,
};

// Enum FortniteGame.ELockState
enum class ELockState : uint8 {
	INVALID,
	UNLOCKED,
	LOCKED,
	ELockState_MAX,
};

// Enum FortniteGame.EJoinInProgress
enum class EJoinInProgress : uint8 {
	Spectate,
	JoinOnNextRound,
	JoinImmediately,
	JoinSpecificTeam,
	EJoinInProgress_MAX,
};

// Enum FortniteGame.EMMSPrivacy
enum class EMMSPrivacy : uint8 {
	Public,
	Private,
	EMMSPrivacy_MAX,
};

// Enum FortniteGame.EPortalLinkCodeLockStatus
enum class EPortalLinkCodeLockStatus : uint8 {
	Unlocked_NotSet,
	Unlocked,
	Locked,
	EPortalLinkCodeLockStatus_MAX,
};

// Enum FortniteGame.EHeldObjectState
enum class EHeldObjectState : uint8 {
	Unheld,
	Held,
	Thrown,
	Placed,
	Dropped,
	HeldInVehicle,
	EHeldObjectState_MAX,
};

// Enum FortniteGame.EFortHomingStyle
enum class EFortHomingStyle : uint8 {
	None,
	LockOn,
	LaserTargeted,
	LaserTargeted_NoTrace,
	DrunkArtillery,
	EFortHomingStyle_MAX,
};

// Enum FortniteGame.ECaptureState
enum class ECaptureState : uint8 {
	Neutral,
	Capturing,
	Contested,
	Disabled,
	Decapturing,
	Neutralizing,
	Deneutralizing,
	Captured,
	ECaptureState_MAX,
};

// Enum FortniteGame.EHitTraceRule
enum class EHitTraceRule : uint8 {
	Visibility,
	Terrain,
	None,
	EHitTraceRule_MAX,
};

// Enum FortniteGame.ETransformationType
enum class ETransformationType : uint8 {
	Translation,
	Rotation,
	Scale,
	None,
	ETransformationType_MAX,
};

// Enum FortniteGame.EScaleAxis
enum class EScaleAxis : uint8 {
	All,
	X,
	Y,
	Z,
	EScaleAxis_MAX,
};

// Enum FortniteGame.ESelectionProperty
enum class ESelectionProperty : uint8 {
	SingleObject,
	MultipleObjects,
	MultipleObjectsMoveOnGrid,
	None,
	ESelectionProperty_MAX,
};

// Enum FortniteGame.ECreativeKeyLockState
enum class ECreativeKeyLockState : uint8 {
	LOCKED,
	UNLOCKED,
	INVALID,
	ECreativeKeyLockState_MAX,
};

// Enum FortniteGame.EFortPrototypingStatus
enum class EFortPrototypingStatus : uint8 {
	Unknown,
	Disabled,
	Enabled,
	EFortPrototypingStatus_MAX,
};

// Enum FortniteGame.EFortQuestObjectiveStatEvent
enum class EFortQuestObjectiveStatEvent : uint8 {
	Kill,
	TeamKill,
	KillContribution,
	Damage,
	SquadDamage,
	Visit,
	VisitDiscoverPOI,
	Land,
	Emote,
	Spray,
	Toy,
	Build,
	BuildingEdit,
	BuildingRepair,
	BuildingUpgrade,
	PlaceTrap,
	Complete,
	Craft,
	Collect,
	Win,
	Interact,
	TeamInteract,
	Destroy,
	Ability,
	WaveComplete,
	Custom,
	ComplexCustom,
	Client,
	AthenaRank,
	AthenaOutlive,
	RevivePlayer,
	Heal,
	EarnVehicleTrickPoints,
	VehicleAirTime,
	TimeElapsed,
	Death,
	AthenaMarker,
	PlacementUpdate,
	StormPhase,
	DistanceTraveled,
	DownOrElim,
	Accolade,
	TakeDamage,
	AthenaCollection,
	UsedNPCService,
	ReceivedNPCGift,
	InitiatedNPCConversation,
	AthenaCraft,
	AthenaTurnInQuest,
	AthenaVehicleMod,
	AthenaOpenedFriendChest,
	AthenaAcquire,
	InitiatedServiceStationConversation,
	NumGameplayEvents,
	Acquire,
	Consume,
	OpenCardPack,
	PurchaseCardPack,
	Convert,
	Upgrade,
	UpgradeRarity,
	QuestComplete,
	AssignWorker,
	CollectExpedition,
	CollectSuccessfulExpedition,
	LevelUpCollectionBook,
	LevelUpAthenaSeason,
	LevelUpBattlePass,
	GainAthenaSeasonXp,
	HasItem,
	HasAccumulatedItem,
	SlotInCollection,
	AlterationRespec,
	AlterationUpgrade,
	HasCompletedQuest,
	HasAssignedWorker,
	HasUpgraded,
	HasConverted,
	HasUpgradedRarity,
	HasLeveledUpCollectionBook,
	SlotHeroInLoadout,
	HasLeveledUpAthenaSeason,
	HasLeveledUpBattlePass,
	HasGainedAthenaSeasonXp,
	MinigameDynamicEvent,
	MinigameComplete,
	MinigameDeath,
	MinigameAssist,
	Max_None,
	EFortQuestObjectiveStatEvent_MAX,
};

// Enum FortniteGame.EFortMinigameEnd
enum class EFortMinigameEnd : uint8 {
	AbandonGame,
	EndGame,
	EndRound,
	EFortMinigameEnd_MAX,
};

// Enum FortniteGame.EPlayerIndicatorDisplayMode
enum class EPlayerIndicatorDisplayMode : uint8 {
	DontOverride,
	TeamOnly,
	Enemies,
	Anyone,
	Never,
	EPlayerIndicatorDisplayMode_MAX,
};

// Enum FortniteGame.ECreativeBossDisplayMode
enum class ECreativeBossDisplayMode : uint8 {
	DontOverride,
	Yes,
	No,
	ECreativeBossDisplayMode_MAX,
};

// Enum FortniteGame.EFortMissionVisibilityOverride
enum class EFortMissionVisibilityOverride : uint8 {
	Visible,
	Invisible,
	Max_None,
	EFortMissionVisibilityOverride_MAX,
};

// Enum FortniteGame.EMatchmakingCompleteResult
enum class EMatchmakingCompleteResult : uint8 {
	NotStarted,
	UpdateNeeded,
	OutpostNotFound,
	Cancelled,
	NoResults,
	Failure,
	CreateFailure,
	Success,
	EMatchmakingCompleteResult_MAX,
};

// Enum FortniteGame.EMatchmakingState
enum class EMatchmakingState : uint8 {
	NotMatchmaking,
	CancelingMatchmaking,
	ReleasingLock,
	AcquiringLock,
	LockAcquistionFailure,
	FindingEmptyServer,
	FindingExistingSession,
	TestingEmptyServers,
	TestingExistingSessions,
	JoiningExistingSession,
	NoMatchesAvailable,
	CleaningUpExisting,
	HandlingFailure,
	JoinSuccess,
	EMatchmakingState_MAX,
};

// Enum FortniteGame.EMatchmakingUtilityState
enum class EMatchmakingUtilityState : uint8 {
	Idle,
	MatchmakingUtilityBegin,
	MatchmakingUtilityCompleted,
	Failed,
	CheckSittingOutState,
	InitializePlaylistSelection,
	JoinMatchInProgress,
	CheckingIfBanned,
	CreativeContentDownloadModal,
	CrossplayOptIn_GameMode,
	CrossplayOptIn_Fill,
	CrossplayDevices,
	FactionChoice,
	SetPartyReadiness,
	WaitingForPartyReadinessConfirmed,
	TournamentEligibility,
	TournamentRegionLock,
	TournamentMFA,
	TournamentEULA,
	AppEnvSecurity,
	WaitingForInitialPlaylistSelection,
	ServerBrowsers,
	WaitingForServerBrowserPlaylistSwap,
	DelayReadyUp,
	QoSSettings_UpdateManager,
	QoSSettings_UpdateManager_Success,
	SetAthenaReady,
	WaitingForAthenaReadinessConfirmed,
	PreloadAthena,
	UpdateHiddenMatchmakingDelay,
	WaitingForUpdateHiddenMatchmakingDelay,
	HiddenMatchmakingDelay,
	FindExistingEditSession,
	SelectingFlow,
	PreloadingForFlow,
	ReadyingUpforFlow,
	CallingMatchmakingForFlow,
	WaitingForJoinMatchInProgressResponse,
	WaitingForMatchmakingResponse,
	WaitingForMatchmakingToCompleteAsPartyMember,
	WaitingForEntirePartyReady,
	WaitingToRestartMatchmaking_TooFrequentRequest,
	RequestingSpectateMatch,
	ProcessingMatchmakingResults_Success,
	ProcessingMatchmakingResults_Fail,
	PreloadingForJoiningMatchInProgress,
	ProcessingJoinMatchInProgressResults_Success,
	ProcessingJoinMatchInProgressResults_Fail,
	DownloadingAdditionalContent,
	RestartingMatchmaking,
	INVALID,
	EMatchmakingUtilityState_MAX,
};

// Enum FortniteGame.EAthenaPartyMemberReadyType
enum class EAthenaPartyMemberReadyType : uint8 {
	Ready,
	NotReady,
	Playing,
	Spectating,
	WatchingReplay,
	EAthenaPartyMemberReadyType_MAX,
};

// Enum FortniteGame.EFortFriendRequestStatus
enum class EFortFriendRequestStatus : uint8 {
	None,
	Accepted,
	PendingReceived,
	PendingSent,
	EFortFriendRequestStatus_MAX,
};

// Enum FortniteGame.EFortPartyMemberLocation
enum class EFortPartyMemberLocation : uint8 {
	PreLobby,
	ConnectingToLobby,
	Lobby,
	JoiningGame,
	ProcessingRejoin,
	InGame,
	Spectating,
	WatchingReplay,
	ReturningToFrontEnd,
	EFortPartyMemberLocation_MAX,
};

// Enum FortniteGame.EFortPartyState
enum class EFortPartyState : uint8 {
	Undetermined,
	WorldView,
	TheaterView,
	Matchmaking,
	PostMatchmaking,
	ReturningToFrontEnd,
	BattleRoyaleView,
	BattleRoyalePreloading,
	BattleRoyaleMatchmaking,
	BattleRoyalePostMatchmaking,
	EFortPartyState_MAX,
};

// Enum FortniteGame.EFortPartyMemberDisplayState
enum class EFortPartyMemberDisplayState : uint8 {
	Open,
	Connecting,
	Connected,
	Max,
};

// Enum FortniteGame.ESpectateBlendEasing
enum class ESpectateBlendEasing : uint8 {
	Linear,
	EaseOutQuad,
	ESpectateBlendEasing_MAX,
};

// Enum FortniteGame.EFortSpectatorBlendType
enum class EFortSpectatorBlendType : uint8 {
	None,
	Orbit,
	Default,
	EFortSpectatorBlendType_MAX,
};

// Enum FortniteGame.ESpectatorSquadIdMode
enum class ESpectatorSquadIdMode : uint8 {
	AlwaysOff,
	AlwaysOn,
	HoldToDisplay,
	ESpectatorSquadIdMode_MAX,
};

// Enum FortniteGame.EPlayEventType
enum class EPlayEventType : uint8 {
	None,
	TeamFlight,
	Zone,
	Elimination,
	PlayerMoves,
	SinglePlayerMove,
	ActorsPosition,
	GameHighlights,
	Timecode,
	EPlayEventType_MAX,
};

// Enum FortniteGame.ECameraShotNotificationTypes
enum class ECameraShotNotificationTypes : uint8 {
	Notification,
	HighlightAnnotation,
	TitleScreen,
	ECameraShotNotificationTypes_MAX,
};

// Enum FortniteGame.EThirdPersonAutoFollowMode
enum class EThirdPersonAutoFollowMode : uint8 {
	Off,
	Auto,
	Lazy,
	EThirdPersonAutoFollowMode_MAX,
};

// Enum FortniteGame.EFortPlayerSurveyFinishReason
enum class EFortPlayerSurveyFinishReason : uint8 {
	Submitted,
	Canceled,
	Disallowed,
	EFortPlayerSurveyFinishReason_MAX,
};

// Enum FortniteGame.EFortPlayerSurveyAnswerContainerChangeReason
enum class EFortPlayerSurveyAnswerContainerChangeReason : uint8 {
	AnswerChange,
	QuestionChange,
	ProxyChange,
	EFortPlayerSurveyAnswerContainerChangeReason_MAX,
};

// Enum FortniteGame.EInteriorAudioState
enum class EInteriorAudioState : uint8 {
	Indoors,
	Outdoors,
	PartialOutdoors,
	Max_None,
	EInteriorAudioState_MAX,
};

// Enum FortniteGame.ECollectionBookRewardType
enum class ECollectionBookRewardType : uint8 {
	Uninitialized,
	Book,
	Page,
	Section,
	ECollectionBookRewardType_MAX,
};

// Enum FortniteGame.ECampaignCustomizationCategory
enum class ECampaignCustomizationCategory : uint8 {
	None,
	PersonalVehicle,
	ECampaignCustomizationCategory_MAX,
};

// Enum FortniteGame.EFortDialogFeedbackType
enum class EFortDialogFeedbackType : uint8 {
	FriendRequestSent,
	FriendRequestReceived,
	FriendRequestAccepted,
	Default,
	EFortDialogFeedbackType_MAX,
};

// Enum FortniteGame.EFortWeakPointState
enum class EFortWeakPointState : uint8 {
	Uninitialized,
	Inactive,
	Active,
	Destroyed,
	EFortWeakPointState_MAX,
};

// Enum FortniteGame.EDualWeaponHand
enum class EDualWeaponHand : uint8 {
	LEFT,
	RIGHT,
	MAX,
};

// Enum FortniteGame.EFortEncounterDirection
enum class EFortEncounterDirection : uint8 {
	North,
	NorthEast,
	East,
	SouthEast,
	South,
	SouthWest,
	West,
	NorthWest,
	Max_None,
	EFortEncounterDirection_MAX,
};

// Enum FortniteGame.EQuestUpdateType
enum class EQuestUpdateType : uint8 {
	ObjectiveCompleted,
	QuestCompleted,
	ObjectiveUpdated,
	QuestUpdated,
	QuestAndObjectiveUpdate,
	EQuestUpdateType_MAX,
};

// Enum FortniteGame.EQuestVisibilityResponse
enum class EQuestVisibilityResponse : uint8 {
	Hide,
	Show,
	Custom,
	EQuestVisibilityResponse_MAX,
};

// Enum FortniteGame.EItemWrapMaterialType
enum class EItemWrapMaterialType : uint8 {
	WeaponWrap,
	VehicleWrap_Opaque,
	VehicleWrap_Masked,
	Character,
	EItemWrapMaterialType_MAX,
};

// Enum FortniteGame.EFortRarity
enum class EFortRarity : uint8 {
	Common,
	Uncommon,
	Rare,
	Epic,
	Legendary,
	Mythic,
	Transcendent,
	Unattainable,
	NumRarityValues,
	EFortRarity_MAX,
};

// Enum FortniteGame.EAIHotSpotAssignmentFilter
enum class EAIHotSpotAssignmentFilter : uint8 {
	All,
	WithSlots,
	WaitingList,
	EAIHotSpotAssignmentFilter_MAX,
};

// Enum FortniteGame.EAIHotSpotSlotFilter
enum class EAIHotSpotSlotFilter : uint8 {
	All,
	AvailableOnly,
	UnavailableOnly,
	EAIHotSpotSlotFilter_MAX,
};

// Enum FortniteGame.EAIHotSpotSlot
enum class EAIHotSpotSlot : uint8 {
	Free,
	Claimed,
	Occupied,
	Blocked,
	Disabled,
	EAIHotSpotSlot_MAX,
};

// Enum FortniteGame.EBoundingBoxSlotDirectionCalculation
enum class EBoundingBoxSlotDirectionCalculation : uint8 {
	Auto,
	FaceWall,
	FaceAwayFromWall,
	FaceCenter,
	EBoundingBoxSlotDirectionCalculation_MAX,
};

// Enum FortniteGame.EBarrierFlagState
enum class EBarrierFlagState : uint8 {
	FlagUp,
	FlagDown,
	EBarrierFlagState_MAX,
};

// Enum FortniteGame.EBarrierState
enum class EBarrierState : uint8 {
	BarrierUp,
	BarrierComingDown,
	BarrierDown,
	EBarrierState_MAX,
};

// Enum FortniteGame.EAthenaBroadcastKillFeedEntryType
enum class EAthenaBroadcastKillFeedEntryType : uint8 {
	Elimination,
	Storm,
	FallDamage,
	Explosion,
	DBNO,
	EAthenaBroadcastKillFeedEntryType_MAX,
};

// Enum FortniteGame.ECapturePointUnlockRules
enum class ECapturePointUnlockRules : uint8 {
	Reset,
	MaintainState,
	ResetDeactivate,
	ECapturePointUnlockRules_MAX,
};

// Enum FortniteGame.EContentionRuleType
enum class EContentionRuleType : uint8 {
	MajorityWins,
	OneTeamOnlyWins,
	EContentionRuleType_MAX,
};

// Enum FortniteGame.EVariantUnlockType
enum class EVariantUnlockType : uint8 {
	UnlockAll,
	ExclusiveChoice,
	EVariantUnlockType_MAX,
};

// Enum FortniteGame.EAthenaPIEStartupMode
enum class EAthenaPIEStartupMode : uint8 {
	UseDefaults,
	Warmup,
	WarmupPaused,
	Aircraft,
	AircraftPaused,
	Gameplay,
	EAthenaPIEStartupMode_MAX,
};

// Enum FortniteGame.EEventTokenType
enum class EEventTokenType : uint8 {
	Invite,
	Creation,
	EEventTokenType_MAX,
};

// Enum FortniteGame.ELayeredAudioTriggerDirection
enum class ELayeredAudioTriggerDirection : uint8 {
	AnyDirection,
	Forwards,
	Sideways,
	Backwards,
	Count,
	ELayeredAudioTriggerDirection_MAX,
};

// Enum FortniteGame.EItemWrapSectionNames
enum class EItemWrapSectionNames : uint8 {
	Section_1,
	Section_2,
	Section_3,
	Section_4,
	Section_5,
	Section_6,
	Section_7,
	Section_8,
	Section_9,
	Section_10,
	Section_11,
	Section_12,
	Section_13,
	Section_14,
	Section_15,
	Section_16,
	Section_17,
	Section_18,
	Section_19,
	Section_20,
	Section_21,
	Section_22,
	Section_23,
	Section_24,
	Section_25,
	Section_26,
	Section_27,
	Section_28,
	Section_29,
	Section_30,
	Section_31,
	Section_32,
	Section_MAX,
};

// Enum FortniteGame.ECancelMarkerReason
enum class ECancelMarkerReason : uint8 {
	Ping,
	MapOrDeath,
	ECancelMarkerReason_MAX,
};

// Enum FortniteGame.EInBoundsState
enum class EInBoundsState : uint8 {
	NoBounds,
	NotInBounds,
	InBounds,
	EInBoundsState_MAX,
};

// Enum FortniteGame.EAthenaPetAttachRule
enum class EAthenaPetAttachRule : uint8 {
	AttachToBackpack,
	AttachToBody,
	EAthenaPetAttachRule_MAX,
};

// Enum FortniteGame.EAthenaQuickChatFilteringType
enum class EAthenaQuickChatFilteringType : uint8 {
	AlwaysVisible,
	ActiveMaterial,
	FacingPickup,
	ActiveHotbarItem,
	ActiveHotbarItemAmmo,
	FacingPickupOrActiveHotbarItem,
	NoWeaponEquippedRequiringAmmo,
	WeaponEquippedOfAmmoType,
	EAthenaQuickChatFilteringType_MAX,
};

// Enum FortniteGame.EAthenaSeasonRewardTrack
enum class EAthenaSeasonRewardTrack : uint8 {
	Invalid,
	SeasonProgressionTrack,
	CompendiumFreeTrack,
	CompendiumPaidTrack,
	CompendiumAdditionalTrack,
	EAthenaSeasonRewardTrack_MAX,
};

// Enum FortniteGame.EAthenaRewardVisualImportanceType
enum class EAthenaRewardVisualImportanceType : uint8 {
	Normal,
	Hot,
	CrazyHot,
	Crazy,
	EAthenaRewardVisualImportanceType_MAX,
};

// Enum FortniteGame.EAthenaRewardItemType
enum class EAthenaRewardItemType : uint8 {
	Normal,
	HiddenReward,
	GiftboxHiddenReward,
	NonExportedFakeReward,
	EAthenaRewardItemType_MAX,
};

// Enum FortniteGame.EBattlePassRewardSource
enum class EBattlePassRewardSource : uint8 {
	None,
	ChallengeBundle,
	Quest,
	EBattlePassRewardSource_MAX,
};

// Enum FortniteGame.EPageItemTileSize
enum class EPageItemTileSize : uint8 {
	Size_1_x_2,
	Size_2_x_2,
	Size_2_x_3,
	Size_3_x_3,
	Size_3_x_4,
	Count,
	EPageItemTileSize_MAX,
};

// Enum FortniteGame.ETraversePointState
enum class ETraversePointState : uint8 {
	None,
	Hidden,
	Active,
	TouchedByPlayer,
	Finished,
	ETraversePointState_MAX,
};

// Enum FortniteGame.EFortVehicleDecoType
enum class EFortVehicleDecoType : uint8 {
	Unknown,
	Flag,
	HoodOrnament,
	Wings,
	EFortVehicleDecoType_MAX,
};

// Enum FortniteGame.EWrapPreviewCamera
enum class EWrapPreviewCamera : uint8 {
	Weapon,
	LargeWeapon,
	Vehicle,
	EWrapPreviewCamera_MAX,
};

// Enum FortniteGame.EAutoFrameMode
enum class EAutoFrameMode : uint8 {
	Off,
	ManualOverride,
	AutoFrame,
	EAutoFrameMode_MAX,
};

// Enum FortniteGame.EBacchusHUDStateType
enum class EBacchusHUDStateType : uint8 {
	DoNothing,
	Hide,
	Show,
	FallbackToDefault,
	EBacchusHUDStateType_MAX,
};

// Enum FortniteGame.BattleMapHoveredReason
enum class BattleMapHoveredReason : uint8 {
	None,
	Mouse,
	Code,
	BattleMapHoveredReason_MAX,
};

// Enum FortniteGame.EBuildingTickReason
enum class EBuildingTickReason : uint8 {
	Dynamic,
	Damaged,
	GameplayCue_Damage,
	GameplayCue_Healing,
	GameplayCue_InstantDeath,
	UnderConstruction,
	UnderRepair,
	Editing,
	BuildingAnimation,
	DynamicLODAnim,
	DynamicShrinkAnim,
	AutoBuild,
	FullHealthEffect,
	BounceAnimation,
	DoorOpenStyleChanged,
	DoorOpenChanged,
	DoorInteract,
	EBuildingTickReason_MAX,
};

// Enum FortniteGame.ECalendarDrivenState
enum class ECalendarDrivenState : uint8 {
	ForceEnable,
	ForceDisable,
	ECalendarDrivenState_MAX,
};

// Enum FortniteGame.EBinaryToggleValues
enum class EBinaryToggleValues : uint8 {
	BTV_Active,
	BTV_Inactive,
	BTV_Either,
	BTV_MAX,
};

// Enum FortniteGame.EAuxIndicatorStates
enum class EAuxIndicatorStates : uint8 {
	AIS_GuidingArrow,
	AIS_ConfirmedArrow,
	AIS_Inactive,
	AIS_Active,
	AIS_MAX,
};

// Enum FortniteGame.EDynamicFoundationEnabledState
enum class EDynamicFoundationEnabledState : uint8 {
	Unknown,
	Enabled,
	Disabled,
	EDynamicFoundationEnabledState_MAX,
};

// Enum FortniteGame.EDynamicFoundationType
enum class EDynamicFoundationType : uint8 {
	Static,
	StartEnabled_Stationary,
	StartEnabled_Dynamic,
	StartDisabled,
	EDynamicFoundationType_MAX,
};

// Enum FortniteGame.EBuildingFoundationType
enum class EBuildingFoundationType : uint8 {
	BFT_3x3,
	BFT_5x5,
	BFT_5x10,
	BFT_None,
	BFT_MAX,
};

// Enum FortniteGame.ESpawnMachineSubTextState
enum class ESpawnMachineSubTextState : uint8 {
	NoCards,
	VanInUse,
	None,
	ESpawnMachineSubTextState_MAX,
};

// Enum FortniteGame.EFortItemCollectorTrackingType
enum class EFortItemCollectorTrackingType : uint8 {
	Player,
	Team,
	EFortItemCollectorTrackingType_MAX,
};

// Enum FortniteGame.EFortItemCollectorBehavior
enum class EFortItemCollectorBehavior : uint8 {
	FirstToGoal,
	FreeForAll,
	EFortItemCollectorBehavior_MAX,
};

// Enum FortniteGame.EFortItemCollectorState
enum class EFortItemCollectorState : uint8 {
	CanInteract,
	Active,
	Inactive,
	Captured,
	Invalid,
	EFortItemCollectorState_MAX,
};

// Enum FortniteGame.ELayoutRequirementStatus
enum class ELayoutRequirementStatus : uint8 {
	Inactive_Invisible,
	Active_Invisible,
	Active_Visible,
	ELayoutRequirementStatus_MAX,
};

// Enum FortniteGame.ECaptureAreaItemFilters
enum class ECaptureAreaItemFilters : uint8 {
	None,
	Both,
	ForPeriodicScoring,
	ToTakeControl,
	ECaptureAreaItemFilters_MAX,
};

// Enum FortniteGame.EPlayerCaptureKnobOptions
enum class EPlayerCaptureKnobOptions : uint8 {
	Off,
	EachPlayer,
	OnePlayerPerTeam,
	OwningTeam,
	EPlayerCaptureKnobOptions_MAX,
};

// Enum FortniteGame.ECreativeVendingMachineState
enum class ECreativeVendingMachineState : uint8 {
	DisplayingItem,
	AcceptingItem,
	AcceptedItem,
	RejectedItem,
	ECreativeVendingMachineState_MAX,
};

// Enum FortniteGame.EMusicTrackPlayback
enum class EMusicTrackPlayback : uint8 {
	Disabled,
	Enabled,
	EMusicTrackPlayback_MAX,
};

// Enum FortniteGame.ERiftCosmeticState
enum class ERiftCosmeticState : uint8 {
	None,
	Intro,
	Idle,
	RampUp,
	ShouldDie,
	ERiftCosmeticState_MAX,
};

// Enum FortniteGame.EFortRiftSpawnSlotSelectionMode
enum class EFortRiftSpawnSlotSelectionMode : uint8 {
	Random,
	BestScore,
	EFortRiftSpawnSlotSelectionMode_MAX,
};

// Enum FortniteGame.EFortRiftSlotStatus
enum class EFortRiftSlotStatus : uint8 {
	Reserved,
	Occupied,
	Max_None,
	EFortRiftSlotStatus_MAX,
};

// Enum FortniteGame.EBuildingNavObstacleType
enum class EBuildingNavObstacleType : uint8 {
	UnwalkableAll,
	UnwalkableHuskOnly,
	SmashWhenLowHeight,
	SmashOnlyLowHeight,
	SmashSmasherOnly,
	SmashAll,
	EBuildingNavObstacleType_MAX,
};

// Enum FortniteGame.EFortDamageVisualsState
enum class EFortDamageVisualsState : uint8 {
	UnDamaged,
	DamagedAndAnimating,
	DamagedAndStatic,
	EFortDamageVisualsState_MAX,
};

// Enum FortniteGame.EStructuralSupportCheck
enum class EStructuralSupportCheck : uint8 {
	Stable,
	Unstable,
	Max_None,
	EStructuralSupportCheck_MAX,
};

// Enum FortniteGame.ESavedSupportStatus
enum class ESavedSupportStatus : uint8 {
	UnknownState,
	Supported,
	UnSupported,
	ESavedSupportStatus_MAX,
};

// Enum FortniteGame.EPlacementType
enum class EPlacementType : uint8 {
	Free,
	Grid,
	None,
	EPlacementType_MAX,
};

// Enum FortniteGame.EBuildingAttachmentSide
enum class EBuildingAttachmentSide : uint8 {
	Front,
	Back,
	Any,
	EBuildingAttachmentSide_MAX,
};

// Enum FortniteGame.EBuildingAttachmentSlot
enum class EBuildingAttachmentSlot : uint8 {
	SLOT_Floor,
	SLOT_Wall,
	SLOT_Ceiling,
	SLOT_None,
	SLOT_MAX,
};

// Enum FortniteGame.EBuildingAnim
enum class EBuildingAnim : uint8 {
	EBA_None,
	EBA_Building,
	EBA_Breaking,
	EBA_Destruction,
	EBA_Placement,
	EBA_DynamicLOD,
	EBA_DynamicShrink,
	EBA_MAX,
};

// Enum FortniteGame.EStructuralFloorPosition
enum class EStructuralFloorPosition : uint8 {
	Top,
	Bottom,
	EStructuralFloorPosition_MAX,
};

// Enum FortniteGame.EStructuralWallPosition
enum class EStructuralWallPosition : uint8 {
	Left,
	Right,
	Front,
	Back,
	EStructuralWallPosition_MAX,
};

// Enum FortniteGame.EFortDefenderInteractionError
enum class EFortDefenderInteractionError : uint8 {
	None,
	Obstructed,
	NoEditPermission,
	UsedByAnotherPlayer,
	EFortDefenderInteractionError_MAX,
};

// Enum FortniteGame.EFortBuildingDestroyedReason
enum class EFortBuildingDestroyedReason : uint8 {
	Unknown,
	WeaponDamage,
	LostSupport,
	Edit,
	FireDirect,
	FireIndirect,
	EFortBuildingDestroyedReason_MAX,
};

// Enum FortniteGame.EFortBounceType
enum class EFortBounceType : uint8 {
	Hit,
	Interact,
	EditPlaced,
	EFortBounceType_MAX,
};

// Enum FortniteGame.EFortConnectivityCubeFace
enum class EFortConnectivityCubeFace : uint8 {
	Front,
	Left,
	Back,
	Right,
	Upper,
	Lower,
	MAX,
};

// Enum FortniteGame.EFortDecoPlacementQueryResults
enum class EFortDecoPlacementQueryResults : uint8 {
	CanAdd,
	ExistingTrap,
	ExistingObject,
	Obstructed,
	NoLocation,
	WrongType,
	WrongShape,
	BeingModified,
	WrongTeam,
	BlueprintFailure,
	AbilityFailure,
	RequiresPlayerBuildableActor,
	NoEditPermission,
	WrongZone,
	EFortDecoPlacementQueryResults_MAX,
};

// Enum FortniteGame.EFortStructuralGridQueryResults
enum class EFortStructuralGridQueryResults : uint8 {
	CanAdd,
	ExistingActor,
	Obstructed,
	NoStructuralSupport,
	InvalidActor,
	ReachedLimit,
	NoEditPermission,
	PatternNotPermittedByLayoutRequirement,
	ResourceTypeNotPermittedByLayoutRequirement,
	BuildingAtRequirementsDisabled,
	BuildingOtherThanRequirementsDisabled,
	EFortStructuralGridQueryResults_MAX,
};

// Enum FortniteGame.EFortBuildingState
enum class EFortBuildingState : uint8 {
	Placement,
	EditMode,
	None,
	EFortBuildingState_MAX,
};

// Enum FortniteGame.EFortTextureDataSlot
enum class EFortTextureDataSlot : uint8 {
	Primary,
	Secondary,
	Tertiary,
	Fourth,
	NumSlots,
	EFortTextureDataSlot_MAX,
};

// Enum FortniteGame.EFortTextureDataType
enum class EFortTextureDataType : uint8 {
	Any,
	OuterWall,
	InnerWall,
	Corner,
	Floor,
	Ceiling,
	Trim,
	Roof,
	Pillar,
	Shingle,
	None,
	EFortTextureDataType_MAX,
};

// Enum FortniteGame.EBuildingAttachmentType
enum class EBuildingAttachmentType : uint8 {
	ATTACH_Floor,
	ATTACH_Wall,
	ATTACH_Ceiling,
	ATTACH_Corner,
	ATTACH_All,
	ATTACH_WallThenFloor,
	ATTACH_FloorAndStairs,
	ATTACH_CeilingAndStairs,
	ATTACH_None,
	ATTACH_MAX,
};

// Enum FortniteGame.EDoorOpenStyle
enum class EDoorOpenStyle : uint8 {
	Open,
	SlamOpen,
	SmashOpen,
	Close,
	EDoorOpenStyle_MAX,
};

// Enum FortniteGame.ESmoothProgressState
enum class ESmoothProgressState : uint8 {
	Enabled,
	DisabledByForceProgress,
	DisabledByState,
	ESmoothProgressState_MAX,
};

// Enum FortniteGame.EClientContentReadiness
enum class EClientContentReadiness : uint8 {
	AwaitingServerResponse,
	ReceivingContentNames,
	DownloadingContent,
	MountingContent,
	ReadyToJoin,
	FailedToMount,
	NotConnected,
	ConnectionFailed,
	CelluarDataRefusal,
	CancelledDownloadContent,
	None,
	EClientContentReadiness_MAX,
};

// Enum FortniteGame.EContentRequestStatus
enum class EContentRequestStatus : uint8 {
	None,
	Active,
	Finished,
	EContentRequestStatus_MAX,
};

// Enum FortniteGame.ECreativeMinimapComponentIconColorType
enum class ECreativeMinimapComponentIconColorType : uint8 {
	None,
	White,
	Red,
	Orange,
	Yellow,
	Green,
	Teal,
	Blue,
	Purple,
	ECreativeMinimapComponentIconColorType_MAX,
};

// Enum FortniteGame.EShowProgressMode
enum class EShowProgressMode : uint8 {
	Total,
	Remaining,
	Off,
	MAX,
};

// Enum FortniteGame.ECreativeQuestSharing
enum class ECreativeQuestSharing : uint8 {
	Individual,
	Team,
	All,
	MAX,
};

// Enum FortniteGame.ECreativeQuestStat
enum class ECreativeQuestStat : uint8 {
	None,
	Eliminations,
	Eliminated,
	Score,
	MAX,
};

// Enum FortniteGame.EScoreDistributionType
enum class EScoreDistributionType : uint8 {
	Default,
	DivideByDamage,
	DivideEvenly,
	AllToKiller,
	EScoreDistributionType_MAX,
};

// Enum FortniteGame.EAccessoryColorName
enum class EAccessoryColorName : uint8 {
	EAccessoryColorName_AccessoryColor1,
	EAccessoryColorName_AccessoryColor2,
	EAccessoryColorName_AccessoryColor3,
	EAccessoryColorName_NumTypes,
	EAccessoryColorName_MAX,
};

// Enum FortniteGame.ECustomHatType
enum class ECustomHatType : uint8 {
	ECustomHatType_None,
	ECustomHatType_Cap,
	ECustomHatType_Helmet,
	ECustomHatType_Mask,
	ECustomHatType_Hat,
	ECustomHatType_HeadReplacement,
	ECustomHatType_MAX,
};

// Enum FortniteGame.EClothingColorName
enum class EClothingColorName : uint8 {
	EClothingColorName_AccessoryColor1,
	EClothingColorName_AccessoryColor2,
	EClothingColorName_NumTypes,
	EClothingColorName_MAX,
};

// Enum FortniteGame.EColorSwatchType
enum class EColorSwatchType : uint8 {
	EColorSwatchType_Skin,
	EColorSwatchType_Hair,
	EColorSwatchType_BodyAccessory,
	EColorSwatchType_Accessory,
	EColorSwatchType_NumTypes,
	EColorSwatchType_MAX,
};

// Enum FortniteGame.ECharacterColorSwatchType
enum class ECharacterColorSwatchType : uint8 {
	ECharacterColorSwatchType_Skin,
	ECharacterColorSwatchType_Hair,
	ECharacterColorSwatchType_NumTypes,
	ECharacterColorSwatchType_MAX,
};

// Enum FortniteGame.EVehicleEnteredCosmeticReaction
enum class EVehicleEnteredCosmeticReaction : uint8 {
	Driver,
	Passenger,
	Both,
	EVehicleEnteredCosmeticReaction_MAX,
};

// Enum FortniteGame.EDadBroHealthType
enum class EDadBroHealthType : uint8 {
	None,
	Weakpoints,
	Horn,
	Guy,
	EDadBroHealthType_MAX,
};

// Enum FortniteGame.EDeployableBaseConstructionStatus
enum class EDeployableBaseConstructionStatus : uint8 {
	Constructing,
	Destroying,
	Finished,
	EDeployableBaseConstructionStatus_MAX,
};

// Enum FortniteGame.EDeployableBaseBuildingState
enum class EDeployableBaseBuildingState : uint8 {
	Empty,
	Built,
	Unoccupied,
	WaitingToBuild,
	Building,
	WaitingToDestroy,
	Destroying,
	WaitingToReset,
	Resetting,
	EDeployableBaseBuildingState_MAX,
};

// Enum FortniteGame.EDeployableBaseBoxType
enum class EDeployableBaseBoxType : uint8 {
	BuildSpace,
	SaveSpace,
	PlotSpace,
	NumSpaceTypes,
	EDeployableBaseBoxType_MAX,
};

// Enum FortniteGame.EReferenceType
enum class EReferenceType : uint8 {
	Hard,
	Soft,
	Dynamic,
	EReferenceType_MAX,
};

// Enum FortniteGame.EFortSharedAnimationState
enum class EFortSharedAnimationState : uint8 {
	Anim_Walk,
	Anim_Run,
	Anim_Turn,
	Anim_Attack,
	Anim_Death,
	Anim_Knockback,
	Anim_FullBodyHit,
	Anim_Pushed,
	Anim_Dance,
	Anim_Idle,
	Anim_RangedAttack,
	Anim_MAX,
};

// Enum FortniteGame.EFortStatDisplayType
enum class EFortStatDisplayType : uint8 {
	Category,
	Buff,
	Debuff,
	Neutral,
	DoNotDisplay,
	EFortStatDisplayType_MAX,
};

// Enum FortniteGame.EFortAbilityTargetSelectionUsage
enum class EFortAbilityTargetSelectionUsage : uint8 {
	BothTargetingAndCanHit,
	OnlyTargeting,
	OnlyCanHit,
	EFortAbilityTargetSelectionUsage_MAX,
};

// Enum FortniteGame.EFortDirectedMovementSpace
enum class EFortDirectedMovementSpace : uint8 {
	WorldSpace,
	ActorLocRelative,
	ActorLocRotRelative,
	CameraRelative,
	EFortDirectedMovementSpace_MAX,
};

// Enum FortniteGame.EFortAbilityTargetDataPolicy
enum class EFortAbilityTargetDataPolicy : uint8 {
	ReplicateToServer,
	SimulateOnServer,
	EFortAbilityTargetDataPolicy_MAX,
};

// Enum FortniteGame.EFortAbilityChargeState
enum class EFortAbilityChargeState : uint8 {
	None,
	ChargingUp,
	MaxCharge,
	Discharge,
	ChargingDown,
	EFortAbilityChargeState_MAX,
};

// Enum FortniteGame.EFortAccoladeType
enum class EFortAccoladeType : uint8 {
	Acknowledgement,
	Accolade,
	Medal,
	EFortAccoladeType_MAX,
};

// Enum FortniteGame.EFortActorIndicatorContainerWidget
enum class EFortActorIndicatorContainerWidget : uint8 {
	Top,
	Middle,
	Bottom,
	EFortActorIndicatorContainerWidget_MAX,
};

// Enum FortniteGame.EFortActorSpawnerAuthority
enum class EFortActorSpawnerAuthority : uint8 {
	ServerAuthoritative,
	ClientAuthoritative,
	EFortActorSpawnerAuthority_MAX,
};

// Enum FortniteGame.EAthenaAITelemetryEventType
enum class EAthenaAITelemetryEventType : uint8 {
	Spawn,
	Despawn,
	EAthenaAITelemetryEventType_MAX,
};

// Enum FortniteGame.EDespawnAIType
enum class EDespawnAIType : uint8 {
	Relevancy,
	Distance,
	EDespawnAIType_MAX,
};

// Enum FortniteGame.EFortEncounterUtilityDesire
enum class EFortEncounterUtilityDesire : uint8 {
	Low,
	Medium,
	High,
	VeryHigh,
	Max_None,
	EFortEncounterUtilityDesire_MAX,
};

// Enum FortniteGame.EFortAIDirectorFactorContribution
enum class EFortAIDirectorFactorContribution : uint8 {
	Direct,
	Inverse,
	EFortAIDirectorFactorContribution_MAX,
};

// Enum FortniteGame.EFortAIDirectorEventContribution
enum class EFortAIDirectorEventContribution : uint8 {
	Increment,
	Set,
	EFortAIDirectorEventContribution_MAX,
};

// Enum FortniteGame.EFortAIWaveProgressSection
enum class EFortAIWaveProgressSection : uint8 {
	SectionOne,
	SectionTwo,
	Max_None,
	EFortAIWaveProgressSection_MAX,
};

// Enum FortniteGame.EFortEncounterState
enum class EFortEncounterState : uint8 {
	Uninitialized,
	InitializingProperties,
	InitializingRiftManager,
	AwaitingActivation,
	Active,
	ReplacingRifts,
	Max_None,
	EFortEncounterState_MAX,
};

// Enum FortniteGame.EFortEncounterPacingState
enum class EFortEncounterPacingState : uint8 {
	Ramp,
	Peak,
	Fade,
	Rest,
	Max_None,
	EFortEncounterPacingState_MAX,
};

// Enum FortniteGame.EFortEncounterSequenceResult
enum class EFortEncounterSequenceResult : uint8 {
	Success,
	FailedEncounterInProgress,
	Failed,
	EFortEncounterSequenceResult_MAX,
};

// Enum FortniteGame.EAssignmentCreationResult
enum class EAssignmentCreationResult : uint8 {
	AssignmentNotFoundOrCreated,
	AssignmentCreated,
	AssignmentFound,
	EAssignmentCreationResult_MAX,
};

// Enum FortniteGame.ETagGoalScoringCategory
enum class ETagGoalScoringCategory : uint8 {
	Ignore,
	HighInterest,
	NumCategories,
	ETagGoalScoringCategory_MAX,
};

// Enum FortniteGame.EFortAIPawnGender
enum class EFortAIPawnGender : uint8 {
	FAPG_Default,
	FAPG_Female,
	FAPG_Male,
	FAPG_MAX,
};

// Enum FortniteGame.EFortAILevelRatingDisplayType
enum class EFortAILevelRatingDisplayType : uint8 {
	DisplayRatingBasedOnDifficulty,
	DisplayAIDifficultyAsRating,
	DontDisplayRating,
	EFortAILevelRatingDisplayType_MAX,
};

// Enum FortniteGame.EFortressAIType
enum class EFortressAIType : uint8 {
	FAT_Dormant,
	FAT_Cleaner,
	FAT_DayWanderer,
	FAT_NightWanderer,
	FAT_DebugOnly,
	FAT_Encounter,
	FAT_MAX,
};

// Enum FortniteGame.ECorePerceptionTypes
enum class ECorePerceptionTypes : uint8 {
	Sight,
	Hearing,
	Damage,
	Touch,
	Team,
	Prediction,
	MAX,
};

// Enum FortniteGame.EAIScalableFloatScalingType
enum class EAIScalableFloatScalingType : uint8 {
	Disabled,
	ReceivedDamageByTarget,
	EAIScalableFloatScalingType_MAX,
};

// Enum FortniteGame.ETargetDistanceComparisonType
enum class ETargetDistanceComparisonType : uint8 {
	TwoDimensions,
	ThreeDimensions,
	CollisionHalfHeightMultiplier,
	ETargetDistanceComparisonType_MAX,
};

// Enum FortniteGame.EFortPartialPathUsage
enum class EFortPartialPathUsage : uint8 {
	Always,
	OnlyGoalsOnDestructible,
	Never,
	EFortPartialPathUsage_MAX,
};

// Enum FortniteGame.EHotspotTypeConfigMode
enum class EHotspotTypeConfigMode : uint8 {
	AlwaysAdd,
	WhenNotDefined,
	WhenNotValid,
	EHotspotTypeConfigMode_MAX,
};

// Enum FortniteGame.EFortHotSpotPreview
enum class EFortHotSpotPreview : uint8 {
	None,
	Smashing,
	Shooting,
	EFortHotSpotPreview_MAX,
};

// Enum FortniteGame.EFortHotSpotDirection
enum class EFortHotSpotDirection : uint8 {
	PositiveX,
	NegativeX,
	PositiveY,
	NegativeY,
	PositiveZ,
	NegativeZ,
	Any,
	EFortHotSpotDirection_MAX,
};

// Enum FortniteGame.EFortHotSpotSlot
enum class EFortHotSpotSlot : uint8 {
	Melee,
	MeleeHuge,
	Ranged,
	None,
	EFortHotSpotSlot_MAX,
};

// Enum FortniteGame.EBuildingFloorRailing
enum class EBuildingFloorRailing : uint8 {
	None,
	Balcony,
	EBuildingFloorRailing_MAX,
};

// Enum FortniteGame.EBuildingStairsRailing
enum class EBuildingStairsRailing : uint8 {
	None,
	Partial,
	Full,
	EBuildingStairsRailing_MAX,
};

// Enum FortniteGame.EBuildingWallArea
enum class EBuildingWallArea : uint8 {
	Regular,
	Flat,
	Special,
	EBuildingWallArea_MAX,
};

// Enum FortniteGame.EAssignmentType
enum class EAssignmentType : uint8 {
	Invalid,
	Encounter,
	World,
	Enemy,
	NumAssignmentTypes,
	EAssignmentType_MAX,
};

// Enum FortniteGame.EFortAILODLevel
enum class EFortAILODLevel : uint8 {
	Invalid,
	MIN,
	Dormant,
	BelowLower,
	Lower,
	AboveLower,
	BelowNormal,
	Normal,
	AboveNormal,
	MAX,
};

// Enum FortniteGame.EFortAnalyticsClientEngagementEventType
enum class EFortAnalyticsClientEngagementEventType : uint8 {
	None,
	DamageReceivedFromPlayerPawn,
	DamageDealtToPlayerPawn,
	DamageDealtToPlayerBuild,
	DamageDealtToOther,
	EngagementTimeout,
	PlayerWon,
	PlayerDeathOnWin,
	TeamWon,
	TeamLost,
	PlayerLost,
	PlayerKilledPlayer,
	PlayerFiredWeapon,
	ManagerStopped,
	PlayerPawnDied,
	PlayerPawnSpawned,
	Count,
	EFortAnalyticsClientEngagementEventType_MAX,
};

// Enum FortniteGame.EFortAnalyticsEventBlacklistPlaylistKey
enum class EFortAnalyticsEventBlacklistPlaylistKey : uint8 {
	PlaylistType,
	PlaylistName,
	All,
	EFortAnalyticsEventBlacklistPlaylistKey_MAX,
};

// Enum FortniteGame.EAlphaFromDeltaTypes
enum class EAlphaFromDeltaTypes : uint8 {
	TranslationX,
	TranslationY,
	TranslationZ,
	Scale,
	ScaleX,
	ScaleY,
	ScaleZ,
	EulerX,
	EulerY,
	EulerZ,
	QuaternionTwist,
	EAlphaFromDeltaTypes_MAX,
};

// Enum FortniteGame.ESkydivingDirection
enum class ESkydivingDirection : uint8 {
	Center,
	Right,
	Left,
	Forward,
	Back,
	ESkydivingDirection_MAX,
};

// Enum FortniteGame.EAnimRelaxedState
enum class EAnimRelaxedState : uint8 {
	None,
	WeaponRaised,
	RelaxedLevel1,
	RelaxedLevel2,
	EAnimRelaxedState_MAX,
};

// Enum FortniteGame.ESourceSelectionMode
enum class ESourceSelectionMode : uint8 {
	MaxDifference,
	ESourceSelectionMode_MAX,
};

// Enum FortniteGame.ESpeedWarpingAxisMode
enum class ESpeedWarpingAxisMode : uint8 {
	IKFootRootLocalX,
	IKFootRootLocalY,
	IKFootRootLocalZ,
	WorldSpaceVectorInput,
	ComponentSpaceVectorInput,
	ActorSpaceVectorInput,
	ESpeedWarpingAxisMode_MAX,
};

// Enum FortniteGame.EFortNotifyAudioParamsStoreSource
enum class EFortNotifyAudioParamsStoreSource : uint8 {
	Weapon,
	Pawn,
	Controller,
	EFortNotifyAudioParamsStoreSource_MAX,
};

// Enum FortniteGame.EMontageSyncTargetType
enum class EMontageSyncTargetType : uint8 {
	Pet,
	CustomPartType,
	EMontageSyncTargetType_MAX,
};

// Enum FortniteGame.EMontageInterrupt
enum class EMontageInterrupt : uint8 {
	Any,
	RootMotionOnly,
	None,
	EMontageInterrupt_MAX,
};

// Enum FortniteGame.EDeimosAnimState
enum class EDeimosAnimState : uint8 {
	Idle,
	Running,
	Attack,
	Dance,
	Dying,
	Died,
	FullBodyHitReact,
	AdditiveHitReact,
	ActiveIdle,
	Falling,
	Frozen,
	RangedAttack,
	Walking,
	Sprinting,
	EDeimosAnimState_MAX,
};

// Enum FortniteGame.EFortHandIKOverrideType
enum class EFortHandIKOverrideType : uint8 {
	UseDefault,
	ForceFK,
	ForceIK,
	ForceFKSnap,
	EFortHandIKOverrideType_MAX,
};

// Enum FortniteGame.EFortPlayerAnimBodyType
enum class EFortPlayerAnimBodyType : uint8 {
	Small,
	Medium,
	Large,
	All,
	EFortPlayerAnimBodyType_MAX,
};

// Enum FortniteGame.EFortCardinalDirection
enum class EFortCardinalDirection : uint8 {
	North,
	East,
	South,
	West,
	EFortCardinalDirection_MAX,
};

// Enum FortniteGame.EPlaneDirection
enum class EPlaneDirection : uint8 {
	Center,
	Right,
	Left,
	Up,
	Down,
	EPlaneDirection_MAX,
};

// Enum FortniteGame.EGliderType
enum class EGliderType : uint8 {
	HangGlider,
	Umbrella,
	Surfing,
	Cape,
	NoGlider,
	EGliderType_MAX,
};

// Enum FortniteGame.EFortFacialAnimTypes
enum class EFortFacialAnimTypes : uint8 {
	Default,
	FaceOnly,
	FullHead,
	FromAmplitude,
	Max,
};

// Enum FortniteGame.EWaxTokenState
enum class EWaxTokenState : uint8 {
	None,
	FirstSpline,
	Interpolation,
	LastSpline,
	Finished,
	EWaxTokenState_MAX,
};

// Enum FortniteGame.EAIBotBuildingTemplate
enum class EAIBotBuildingTemplate : uint8 {
	SingleWall,
	SingleRamp,
	SingleRoof,
	SingleBrace,
	SingleWallWindow,
	MAX,
};

// Enum FortniteGame.EBotNamingMode
enum class EBotNamingMode : uint8 {
	RealName,
	SkinName,
	Anonymous,
	Custom,
	EBotNamingMode_MAX,
};

// Enum FortniteGame.EReachLocationValidationMode
enum class EReachLocationValidationMode : uint8 {
	None,
	Storm,
	Leash,
	SoftLeash,
	EReachLocationValidationMode_MAX,
};

// Enum FortniteGame.EHarvestResult
enum class EHarvestResult : uint8 {
	None,
	InProgress,
	Success,
	Fail,
	EHarvestResult_MAX,
};

// Enum FortniteGame.EObstacleType
enum class EObstacleType : uint8 {
	IncomingSmashable,
	BlockingSmashable,
	BlockingDetectedTrap,
	Unknown,
	Count,
	EObstacleType_MAX,
};

// Enum FortniteGame.BotDataOverrideCosmeticMode
enum class BotDataOverrideCosmeticMode : uint8 {
	SpecificLoadout,
	CosmeticLibrary,
	BotDataOverrideCosmeticMode_MAX,
};

// Enum FortniteGame.EEvasiveManeuverType
enum class EEvasiveManeuverType : uint8 {
	Crouch,
	Dodge,
	Jump,
	JetpackStrafe,
	None,
	EEvasiveManeuverType_MAX,
};

// Enum FortniteGame.EFreeFallingMode
enum class EFreeFallingMode : uint8 {
	Idle,
	Random,
	TowardNearestAlly,
	EFreeFallingMode_MAX,
};

// Enum FortniteGame.EFocusingBehavior
enum class EFocusingBehavior : uint8 {
	FocusCurrentTarget,
	IgnoreThreatAfterTimer,
	IgnoreThreatAlways,
	LookAtInvestigate,
	LookAtHeardSound,
	LookAtScanAround,
	LookAtScanAroundOnly,
	Invalid,
	EFocusingBehavior_MAX,
};

// Enum FortniteGame.EAILootBlackListReason
enum class EAILootBlackListReason : uint8 {
	Invalid,
	ExecutionError,
	CannotReachLootLocation,
	OutsideSafeZoneRadius,
	NoInventorySpace,
	LootStateUnavailable,
	PathNotFound,
	GoalOffNavmesh,
	AgentBlocked,
	IsolatedIsland,
	UnsupportedItem,
	Count,
	EAILootBlackListReason_MAX,
};

// Enum FortniteGame.EBotMovementState
enum class EBotMovementState : uint8 {
	None,
	InProgress,
	Failed_NoPathFound,
	Failed_Aborted,
	Failed_AgentOffNavmesh,
	Failed_GoalOffNavmesh,
	Failed_Blocked,
	Failed_OffPath,
	Failed_Falling,
	Success,
	Success_Partial,
	EBotMovementState_MAX,
};

// Enum FortniteGame.EExecutionStatus
enum class EExecutionStatus : uint8 {
	ExecutionError,
	ExecutionDenied,
	ExecutionSuccess,
	ExecutionPending,
	ExecutionAllowed,
	EExecutionStatus_MAX,
};

// Enum FortniteGame.ELootElementType
enum class ELootElementType : uint8 {
	Pickup,
	Chest,
	SupplyDrop,
	Invalid,
	ELootElementType_MAX,
};

// Enum FortniteGame.ETeleportReason
enum class ETeleportReason : uint8 {
	AgentNotOnNavmesh,
	AgentDestinationNotOnNavMesh,
	AgentStuckInRepetitivePartialPaths,
	AgentBlocked,
	Unknown,
	ETeleportReason_MAX,
};

// Enum FortniteGame.EActionState
enum class EActionState : uint8 {
	TryingToEquip,
	EquippingItem,
	UsingItem,
	WaitingItemTermination,
	ActionEndedWithNoError,
	ActionEndedWithError,
	EActionState_MAX,
};

// Enum FortniteGame.EFreelookMode
enum class EFreelookMode : uint8 {
	None,
	Mouse,
	Analog,
	EFreelookMode_MAX,
};

// Enum FortniteGame.EExitCraftState
enum class EExitCraftState : uint8 {
	None,
	Spawned,
	Landed,
	SpawnBalloon,
	GettingIntoPosition,
	GettingIntoPosition_Simple,
	WaitingForPawns,
	Exiting,
	EExitCraftState_MAX,
};

// Enum FortniteGame.EFortExitRequirements
enum class EFortExitRequirements : uint8 {
	AnyPlayer,
	WholeSquad,
	EFortExitRequirements_MAX,
};

// Enum FortniteGame.EFortMutatorReturnValue
enum class EFortMutatorReturnValue : uint8 {
	Ignore,
	Override,
	OverrideReturn,
	EFortMutatorReturnValue_MAX,
};

// Enum FortniteGame.EAshtonStoneStateType
enum class EAshtonStoneStateType : uint8 {
	NotSpawned,
	Spawned,
	Captured,
	MAX,
};

// Enum FortniteGame.EAshtonStoneType
enum class EAshtonStoneType : uint8 {
	Purple,
	Blue,
	Red,
	Orange,
	Green,
	Yellow,
	MAX,
};

// Enum FortniteGame.EBagelDifficulty
enum class EBagelDifficulty : uint8 {
	Easy,
	Medium,
	Hard,
	EBagelDifficulty_MAX,
};

// Enum FortniteGame.EBagelScoreEvent
enum class EBagelScoreEvent : uint8 {
	FiendKill,
	BruteKill,
	RangedKill,
	ExplodingKill,
	ChillKill,
	PoisonKill,
	GoldKill,
	RiftDestroyed,
	ScoreMultiplierUsed,
	HeadshotKill,
	RespawnPenalty,
	AmmoBoxOpened,
	ChestOpened,
	FinalBossKill,
	MAX,
};

// Enum FortniteGame.EBagelPhase
enum class EBagelPhase : uint8 {
	NotStarted,
	Preparation,
	Survival,
	AfterMath,
	Moving,
	FinalPhase,
	FinalPhaseFullStorm,
	MAX,
};

// Enum FortniteGame.EBarrierObjectiveDamageState
enum class EBarrierObjectiveDamageState : uint8 {
	Health_76,
	Health_51,
	Health_26,
	Health_11,
	Health_6,
	Health_5,
	Health_4,
	Health_3,
	Health_2,
	MAX,
};

// Enum FortniteGame.EBarrierFoodTeam
enum class EBarrierFoodTeam : uint8 {
	Burger,
	Tomato,
	MAX,
};

// Enum FortniteGame.EAllowedToEdit
enum class EAllowedToEdit : uint8 {
	Default,
	Anyone,
	EAllowedToEdit_MAX,
};

// Enum FortniteGame.ECreativeRespawnWaveType
enum class ECreativeRespawnWaveType : uint8 {
	None,
	WaveStartingOnElimination,
	ECreativeRespawnWaveType_MAX,
};

// Enum FortniteGame.EFortCrucibleWorkType
enum class EFortCrucibleWorkType : uint8 {
	Invalid,
	SetupPlayer,
	GetFriendsList,
	GetFriendsStats,
	GetGlobalLeaderboard,
	GetDisplayNames,
	EFortCrucibleWorkType_MAX,
};

// Enum FortniteGame.EFortCrucibleLeaderboardState
enum class EFortCrucibleLeaderboardState : uint8 {
	Disabled,
	ReadyForQuery,
	WaitingForQueryResults,
	NeedsUserInfoQueried,
	Complete,
	EFortCrucibleLeaderboardState_MAX,
};

// Enum FortniteGame.EFortCrucibleLeaderboardId
enum class EFortCrucibleLeaderboardId : uint8 {
	GlobalGamepad,
	GlobalKBM,
	GlobalTouch,
	GlobalAll,
	FriendsGamepad,
	FriendsKBM,
	FriendsTouch,
	FriendsAll,
	Count,
	EFortCrucibleLeaderboardId_MAX,
};

// Enum FortniteGame.EFortCrucibleStatSource
enum class EFortCrucibleStatSource : uint8 {
	None,
	Backend,
	CurrentSession,
	EFortCrucibleStatSource_MAX,
};

// Enum FortniteGame.EFortCrucibleStatId
enum class EFortCrucibleStatId : uint8 {
	Gamepad_CourseOverall,
	Gamepad_CourseSegment1,
	Gamepad_CourseSegment2,
	Gamepad_CourseSegment3,
	Gamepad_CourseSegment4,
	Gamepad_CourseSegment5,
	KBM_CourseOverall,
	KBM_CourseSegment1,
	KBM_CourseSegment2,
	KBM_CourseSegment3,
	KBM_CourseSegment4,
	KBM_CourseSegment5,
	Touch_CourseOverall,
	Touch_CourseSegment1,
	Touch_CourseSegment2,
	Touch_CourseSegment3,
	Touch_CourseSegment4,
	Touch_CourseSegment5,
	Count,
	EFortCrucibleStatId_MAX,
};

// Enum FortniteGame.EFortCrucibleControlType
enum class EFortCrucibleControlType : uint8 {
	Gamepad,
	KBM,
	Touch,
	Count,
	EFortCrucibleControlType_MAX,
};

// Enum FortniteGame.EFortCrucibleStatType
enum class EFortCrucibleStatType : uint8 {
	CourseOverall,
	CourseSegment1,
	CourseSegment2,
	CourseSegment3,
	CourseSegment4,
	CourseSegment5,
	Count,
	EFortCrucibleStatType_MAX,
};

// Enum FortniteGame.EDadBroState
enum class EDadBroState : uint8 {
	NotYet,
	Initializing,
	Active,
	EDadBroState_MAX,
};

// Enum FortniteGame.EDBNOMutatorType
enum class EDBNOMutatorType : uint8 {
	Default,
	On,
	Off,
	EDBNOMutatorType_MAX,
};

// Enum FortniteGame.EControlPointState
enum class EControlPointState : uint8 {
	None,
	Disabled,
	Enabled,
	EControlPointState_MAX,
};

// Enum FortniteGame.EEnvironmentDamageFilter
enum class EEnvironmentDamageFilter : uint8 {
	Off,
	PlayerBuiltOnly,
	All,
	EEnvironmentDamageFilter_MAX,
};

// Enum FortniteGame.EBuildingDamageTeamFilter
enum class EBuildingDamageTeamFilter : uint8 {
	Default,
	OwnerOnly,
	TeamOnly,
	EnemyOnly,
	EnemyAndOwnerOnly,
	None,
	EBuildingDamageTeamFilter_MAX,
};

// Enum FortniteGame.EEQSActorSpawnerStopSpawningReason
enum class EEQSActorSpawnerStopSpawningReason : uint8 {
	Success,
	ManualStop,
	Requeued,
	RanOutOfRetries,
	EEQSActorSpawnerStopSpawningReason_MAX,
};

// Enum FortniteGame.EEQSActorSpawnerSpawnType
enum class EEQSActorSpawnerSpawnType : uint8 {
	Actor,
	AIPawn,
	Pickup,
	EEQSActorSpawnerSpawnType_MAX,
};

// Enum FortniteGame.EEQSActorSpawnerTriggerType
enum class EEQSActorSpawnerTriggerType : uint8 {
	Manual,
	SafeZoneState,
	EEQSActorSpawnerTriggerType_MAX,
};

// Enum FortniteGame.EAthenaMutatorEvaluators
enum class EAthenaMutatorEvaluators : uint8 {
	NoOverride,
	ForceOverride,
	Add,
	Multiply,
	EAthenaMutatorEvaluators_MAX,
};

// Enum FortniteGame.EHeistExitCraftState
enum class EHeistExitCraftState : uint8 {
	None,
	Incoming,
	Spawned,
	Exited,
	EHeistExitCraftState_MAX,
};

// Enum FortniteGame.EFortReticleVisibiltyOption
enum class EFortReticleVisibiltyOption : uint8 {
	DoNotOverride,
	ShowAlways,
	ShowPickaxeOnly,
	ShowNonPickaxeOnly,
	HideAlways,
	EFortReticleVisibiltyOption_MAX,
};

// Enum FortniteGame.EFortHUDElementVisibiltyOption
enum class EFortHUDElementVisibiltyOption : uint8 {
	DoNotOverride,
	ShowElement,
	HideElement,
	EFortHUDElementVisibiltyOption_MAX,
};

// Enum FortniteGame.EInfiltrationTeam
enum class EInfiltrationTeam : uint8 {
	Attacking,
	Defending,
	NumOfTeams,
	EInfiltrationTeam_MAX,
};

// Enum FortniteGame.EAthenaInventorySpawnOverride
enum class EAthenaInventorySpawnOverride : uint8 {
	NoOverride,
	Always,
	IntialSpawn,
	AircraftPhaseOnly,
	AfterWarmup,
	EAthenaInventorySpawnOverride_MAX,
};

// Enum FortniteGame.EAthenaLootDropOverride
enum class EAthenaLootDropOverride : uint8 {
	NoOverride,
	ForceDrop,
	ForceKeep,
	ForceDestroy,
	ForceDropUnlessRespawning,
	ForceDestroyUnlessRespawning,
	DropUnlessTeamSelectionUpdated,
	EAthenaLootDropOverride_MAX,
};

// Enum FortniteGame.ERespawnRequirements
enum class ERespawnRequirements : uint8 {
	RespawnOnly,
	NoRespawnOnly,
	Both,
	ERespawnRequirements_MAX,
};

// Enum FortniteGame.ECustomLootSelection
enum class ECustomLootSelection : uint8 {
	Default,
	HighExplosives,
	CloseEncounters,
	SolidGold,
	WildWest,
	SniperShootout,
	OneShot,
	ECustomLootSelection_MAX,
};

// Enum FortniteGame.EMashDifficulty
enum class EMashDifficulty : uint8 {
	Easy,
	Medium,
	Hard,
	EMashDifficulty_MAX,
};

// Enum FortniteGame.EMashScoreEvent
enum class EMashScoreEvent : uint8 {
	FiendKill,
	BruteKill,
	RangedKill,
	ExplodingKill,
	ChillKill,
	PoisonKill,
	GoldKill,
	RiftDestroyed,
	ScoreMultiplierUsed,
	HeadshotKill,
	RespawnPenalty,
	AmmoBoxOpened,
	ChestOpened,
	FinalBossKill,
	MAX,
};

// Enum FortniteGame.EMashPhase
enum class EMashPhase : uint8 {
	NotStarted,
	Preparation,
	Survival,
	AfterMath,
	Moving,
	FinalPhase,
	FinalPhaseFullStorm,
	MAX,
};

// Enum FortniteGame.EMatchConditionMutatorTeamStatus
enum class EMatchConditionMutatorTeamStatus : uint8 {
	None,
	Won,
	Lost,
	Placed,
	EMatchConditionMutatorTeamStatus_MAX,
};

// Enum FortniteGame.EIndicatorDisplayMode
enum class EIndicatorDisplayMode : uint8 {
	Default,
	Always,
	Never,
	MiniMap,
	EIndicatorDisplayMode_MAX,
};

// Enum FortniteGame.EOmahaTeam
enum class EOmahaTeam : uint8 {
	Home,
	Away,
	MAX,
};

// Enum FortniteGame.EOperationsTeamFaction
enum class EOperationsTeamFaction : uint8 {
	Alter,
	Ego,
	NumFactions,
	EOperationsTeamFaction_MAX,
};

// Enum FortniteGame.EPlayerDamageHeightRatioDetectionType
enum class EPlayerDamageHeightRatioDetectionType : uint8 {
	None,
	FromBottom,
	FromTop,
	EPlayerDamageHeightRatioDetectionType_MAX,
};

// Enum FortniteGame.ERespawnAndSpectateServerPayloadId
enum class ERespawnAndSpectateServerPayloadId : uint8 {
	SpectateTargetSelected,
	RespawnTargetSelected,
	SpectateAndRespawnTargetSelected,
	ERespawnAndSpectateServerPayloadId_MAX,
};

// Enum FortniteGame.ERespawnAndSpectateClientEventId
enum class ERespawnAndSpectateClientEventId : uint8 {
	ShowUI,
	HideUI,
	ShowRespawnAvailableUI,
	MAX,
};

// Enum FortniteGame.EShowPlacardPhase
enum class EShowPlacardPhase : uint8 {
	None,
	StartShow,
	WaitBeforeInitialFadeOut,
	PreShowFadeOut,
	Show,
	FadeOut,
	PostShowFadeIn,
	DoneShowingScreen,
	MAX,
};

// Enum FortniteGame.ESkyCapState
enum class ESkyCapState : uint8 {
	Hidden,
	StormStarting,
	ESkyCapState_MAX,
};

// Enum FortniteGame.ESynchronizedTeleportHealthAndShieldResetType
enum class ESynchronizedTeleportHealthAndShieldResetType : uint8 {
	None,
	EvaluateHealthAndShieldMutators,
	MaxHealth,
	ESynchronizedTeleportHealthAndShieldResetType_MAX,
};

// Enum FortniteGame.EAthenaTODPostProcess
enum class EAthenaTODPostProcess : uint8 {
	NoOverride,
	Blueprint1,
	Blueprint2,
	Blueprint3,
	Blueprint4,
	Blueprint5,
	Blueprint6,
	Blueprint7,
	Blueprint8,
	Blueprint9,
	Blueprint10,
	Blueprint11,
	EAthenaTODPostProcess_MAX,
};

// Enum FortniteGame.EAthenaTODColor
enum class EAthenaTODColor : uint8 {
	NoOverride,
	Black,
	White,
	Red,
	Green,
	Blue,
	Yellow,
	Magenta,
	Cyan,
	EAthenaTODColor_MAX,
};

// Enum FortniteGame.EAthenaFogDensityOverride
enum class EAthenaFogDensityOverride : uint8 {
	NoOverride,
	Fog0,
	Fog1,
	Fog2,
	Fog3,
	Fog4,
	Fog5,
	Fog6,
	Fog7,
	Fog8,
	Fog9,
	Fog10,
	EAthenaFogDensityOverride_MAX,
};

// Enum FortniteGame.EAthenaLightIntensityOverride
enum class EAthenaLightIntensityOverride : uint8 {
	NoOverride,
	Intensity0,
	Intensity1,
	Intensity2,
	Intensity3,
	Intensity4,
	Intensity5,
	Intensity6,
	Intensity7,
	Intensity8,
	Intensity9,
	Intensity10,
	EAthenaLightIntensityOverride_MAX,
};

// Enum FortniteGame.EAthenaTimeOfDayOverride
enum class EAthenaTimeOfDayOverride : uint8 {
	NoOverride,
	ForceDay,
	ForceNight,
	Custom,
	Hour0,
	Hour1,
	Hour2,
	Hour3,
	Hour4,
	Hour5,
	Hour6,
	Hour7,
	Hour8,
	Hour9,
	Hour10,
	Hour11,
	Hour12,
	Hour13,
	Hour14,
	Hour15,
	Hour16,
	Hour17,
	Hour18,
	Hour19,
	Hour20,
	Hour21,
	Hour22,
	Hour23,
	Random,
	EAthenaTimeOfDayOverride_MAX,
};

// Enum FortniteGame.EUraniumGameEndedReason
enum class EUraniumGameEndedReason : uint8 {
	GameIsStillInProgress,
	AllRoundsPlayed,
	EarlyGameEnd_BlowOut,
	EarlyGameEnd_OutNumbered,
	EUraniumGameEndedReason_MAX,
};

// Enum FortniteGame.EFortAthenaMutator_VoiceChatChannelType
enum class EFortAthenaMutator_VoiceChatChannelType : uint8 {
	Default,
	None,
	SquadOnly,
	TeamOnly,
	WholeServer,
	ScopeOnly,
	ScopeSquadOnly,
	ScopeTeamOnly,
	EFortAthenaMutator_MAX,
};

// Enum FortniteGame.EWaxState
enum class EWaxState : uint8 {
	None,
	SomewhatVisible,
	ModeratelyVisible,
	VeryVisible,
	Undeniable,
	EWaxState_MAX,
};

// Enum FortniteGame.EWaxMinimapDrawMode
enum class EWaxMinimapDrawMode : uint8 {
	NoDrawing,
	DrawCloseAndMoveOrShoot,
	DrawMoveOrShoot,
	DrawAlways,
	EWaxMinimapDrawMode_MAX,
};

// Enum FortniteGame.EEncampmentRole
enum class EEncampmentRole : uint8 {
	Guard,
	Build,
	Count,
	EEncampmentRole_MAX,
};

// Enum FortniteGame.EPatrollingMode
enum class EPatrollingMode : uint8 {
	BackAndForth,
	Loop,
	EPatrollingMode_MAX,
};

// Enum FortniteGame.ECoastState
enum class ECoastState : uint8 {
	Idle,
	Mount,
	Coasting,
	Pedaling,
	PreDismount,
	Dismount,
	EndCoast,
	ECoastState_MAX,
};

// Enum FortniteGame.EFortAthenaTutorial_StandaloneStep
enum class EFortAthenaTutorial_StandaloneStep : uint8 {
	None,
	HealingInterrupted,
	Count,
	EFortAthenaTutorial_MAX,
};

// Enum FortniteGame.EDebugVehicleFlags
enum class EDebugVehicleFlags : uint8 {
	Status,
	Input,
	Shocks,
	Exits,
	Water,
	Wheels,
	Friction,
	AirControl,
	CenterOfMass,
	Gravity,
	Forces,
	Damage,
	Collisions,
	OrientationCorrection,
	BoundarySpline,
	Sleeping,
	Misc,
	LeanBreak,
	EDebugVehicleFlags_MAX,
};

// Enum FortniteGame.EBounceCompressionState
enum class EBounceCompressionState : uint8 {
	None,
	Crouching,
	Crouched,
	Jumping,
	Recoiling,
	EBounceCompressionState_MAX,
};

// Enum FortniteGame.ENaturalSlideState
enum class ENaturalSlideState : uint8 {
	None,
	Entering,
	InProgress,
	Exiting,
	ENaturalSlideState_MAX,
};

// Enum FortniteGame.EPowerSlideState
enum class EPowerSlideState : uint8 {
	None,
	Entering,
	InProgress,
	Exiting,
	EPowerSlideState_MAX,
};

// Enum FortniteGame.EFortFuelGadgetVisualType
enum class EFortFuelGadgetVisualType : uint8 {
	FuelMeter,
	ChargeText,
	Invalid,
	EFortFuelGadgetVisualType_MAX,
};

// Enum FortniteGame.EFortAttributeDisplay
enum class EFortAttributeDisplay : uint8 {
	BasicInt,
	NegativeImpliesInfiniteInt,
	BasicFloat,
	NegativeImpliesInfiniteFloat,
	BasicString,
	NormalizedPercentage,
	StringArray,
	SlateBrush,
	DoNotDisplay,
	None_Max,
	EFortAttributeDisplay_MAX,
};

// Enum FortniteGame.EAudioAnalysisParameterTypes
enum class EAudioAnalysisParameterTypes : uint8 {
	Scalar,
	Vector4,
	Count,
	EAudioAnalysisParameterTypes_MAX,
};

// Enum FortniteGame.EVectorCurveType
enum class EVectorCurveType : uint8 {
	Original,
	Modified,
	EVectorCurveType_MAX,
};

// Enum FortniteGame.EVectorCurveFloat
enum class EVectorCurveFloat : uint8 {
	VectorCurve_X,
	VectorCurve_Y,
	VectorCurve_Z,
	VectorCurve_MAX,
};

// Enum FortniteGame.EAudioShapeComponentState
enum class EAudioShapeComponentState : uint8 {
	Inactive,
	Active,
	Count,
	EAudioShapeComponentState_MAX,
};

// Enum FortniteGame.EBiplaneSimEvent
enum class EBiplaneSimEvent : uint8 {
	EngineStart,
	EngineStop,
	Takeoff,
	Landing,
	BoostBegin,
	BoostEnd,
	BoostChargeAboveThreshold,
	AileronRoll,
	ControlContextChange,
	EBiplaneSimEvent_MAX,
};

// Enum FortniteGame.EAileronRollDirection
enum class EAileronRollDirection : uint8 {
	None,
	Right,
	Left,
	EAileronRollDirection_MAX,
};

// Enum FortniteGame.EDoghouseControlMode
enum class EDoghouseControlMode : uint8 {
	GroundControls,
	AirControls,
	MaxCount,
	EDoghouseControlMode_MAX,
};

// Enum FortniteGame.EIDScannerResult
enum class EIDScannerResult : uint8 {
	Success_PlayerBelongsToFaction,
	Success_DownedPlayer,
	Success_DownedGuard,
	Success_PlayerIsDisguised,
	Failure_NotFromFaction,
	Other,
	EIDScannerResult_MAX,
};

// Enum FortniteGame.EEnvironmentalItemEndReason
enum class EEnvironmentalItemEndReason : uint8 {
	None,
	PlayerExit,
	PlayerDeath,
	ObjectDestroyed,
	EEnvironmentalItemEndReason_MAX,
};

// Enum FortniteGame.ESpawnResult
enum class ESpawnResult : uint8 {
	Success,
	Failure_NoLocationFound,
	Failure_NoActorClass,
	Failure_BadQueryData,
	ESpawnResult_MAX,
};

// Enum FortniteGame.EFortBuildingSoundType
enum class EFortBuildingSoundType : uint8 {
	Construction,
	GenericDestruction,
	PlayerBuiltDestruction,
	None,
	EFortBuildingSoundType_MAX,
};

// Enum FortniteGame.EFortUICameraFrameTargetBoundingBehavior
enum class EFortUICameraFrameTargetBoundingBehavior : uint8 {
	NoBounds,
	AllBounds,
	TopBoundOnly,
	EFortUICameraFrameTargetBoundingBehavior_MAX,
};

// Enum FortniteGame.ECameraOrigin
enum class ECameraOrigin : uint8 {
	ViewTargetTransform,
	BoneTransform,
	ECameraOrigin_MAX,
};

// Enum FortniteGame.EChallengeBundleQuestUnlockType
enum class EChallengeBundleQuestUnlockType : uint8 {
	Manually,
	GrantWithBundle,
	RequiresBattlePass,
	DaysFromEventStart,
	ChallengesCompletedToUnlock,
	BundleLevelup,
	EChallengeBundleQuestUnlockType_MAX,
};

// Enum FortniteGame.EChallengeScheduleUnlockType
enum class EChallengeScheduleUnlockType : uint8 {
	Manually,
	OnScheduleGranted,
	DaysSinceEventStart,
	EChallengeScheduleUnlockType_MAX,
};

// Enum FortniteGame.EBundleStyleColor
enum class EBundleStyleColor : uint8 {
	Primary,
	Secondary,
	Accent,
	EBundleStyleColor_MAX,
};

// Enum FortniteGame.EManagedCosmeticType
enum class EManagedCosmeticType : uint8 {
	Glider,
	GliderAnimSet,
	Pickaxe,
	Pet,
	ItemWrap,
	Charm,
	MAX_COUNT,
	EManagedCosmeticType_MAX,
};

// Enum FortniteGame.EFortCustomMovement
enum class EFortCustomMovement : uint8 {
	Default,
	Driving,
	Passenger,
	Parachuting,
	Skydiving,
	SkydiveFollowing,
	Hover,
	RemoteControl_Flying,
	Ziplining,
	ZipliningOnSpline,
	Ballooning,
	SurfaceSwimming,
	DBNOCarried,
	Floating,
	Goop,
	EFortCustomMovement_MAX,
};

// Enum FortniteGame.EOstrichDetonationState
enum class EOstrichDetonationState : uint8 {
	None,
	Detonate,
	SelfDestruct,
	Instant,
	EOstrichDetonationState_MAX,
};

// Enum FortniteGame.EChatRoomJoinHelperState
enum class EChatRoomJoinHelperState : uint8 {
	Ready,
	AttemptingJoin,
	Joined,
	AttemptingLeave,
	EChatRoomJoinHelperState_MAX,
};

// Enum FortniteGame.EFortAnnouncementDisplayPreference
enum class EFortAnnouncementDisplayPreference : uint8 {
	Default_HUD,
	QuestIntroduction,
	QuestJournal,
	EFortAnnouncementDisplayPreference_MAX,
};

// Enum FortniteGame.EFortAnnouncementChannel
enum class EFortAnnouncementChannel : uint8 {
	Primary,
	Conversation,
	Tutorial,
	Max_None,
	EFortAnnouncementChannel_MAX,
};

// Enum FortniteGame.EFortAnnouncementDelivery
enum class EFortAnnouncementDelivery : uint8 {
	Created,
	Received,
	Ignored,
	Active,
	Stopped,
	Max_None,
	EFortAnnouncementDelivery_MAX,
};

// Enum FortniteGame.ECreativeBotItemTestingState
enum class ECreativeBotItemTestingState : uint8 {
	ITS_NONE,
	ITS_Teleporting,
	ITS_Landing,
	ITS_Grant,
	ITS_Equip,
	ITS_Place,
	ITS_Cleanup,
	ITS_MAX,
};

// Enum FortniteGame.ECreativeBotIslandLoadingState
enum class ECreativeBotIslandLoadingState : uint8 {
	ILS_NONE,
	ILS_LoadNotStarted,
	ILS_GrantPlotItem,
	ILS_WaitingUserPlotReady,
	ILS_LoadInProgress,
	ILS_LoadComplete,
	ILS_Teleporting,
	ILS_Returning,
	ILS_Items,
	ILS_MAX,
};

// Enum FortniteGame.ECreativeBotIslandIterationType
enum class ECreativeBotIslandIterationType : uint8 {
	CBI_NONE,
	CBI_Mnemonics,
	CBI_User,
	CBI_MAX,
};

// Enum FortniteGame.ELicensedAudioTreatment
enum class ELicensedAudioTreatment : uint8 {
	None,
	MuteOthers,
	MuteAll,
	ELicensedAudioTreatment_MAX,
};

// Enum FortniteGame.ESelectableVoiceChatSetting
enum class ESelectableVoiceChatSetting : uint8 {
	Off,
	FriendsOnly,
	Everyone,
	ESelectableVoiceChatSetting_MAX,
};

// Enum FortniteGame.EFortAutoMulchMode
enum class EFortAutoMulchMode : uint8 {
	Off,
	Common,
	Uncommon,
	Rare,
	Epic,
	Num,
	EFortAutoMulchMode_MAX,
};

// Enum FortniteGame.EFortAutoMulchCategory
enum class EFortAutoMulchCategory : uint8 {
	Invalid,
	Weapon,
	Trap,
	Survivor,
	Defender,
	Hero,
	Num,
	EFortAutoMulchCategory_MAX,
};

// Enum FortniteGame.EQuestMapScreenMode
enum class EQuestMapScreenMode : uint8 {
	Invalid,
	MainCampaign,
	Event,
	EQuestMapScreenMode_MAX,
};

// Enum FortniteGame.EFortAllowBackgroundAudioSetting
enum class EFortAllowBackgroundAudioSetting : uint8 {
	Off,
	NotificationsOnly,
	AllSounds,
	Num,
	EFortAllowBackgroundAudioSetting_MAX,
};

// Enum FortniteGame.EAndroidAppStoreTypes
enum class EAndroidAppStoreTypes : uint8 {
	Unset,
	Epic,
	Samsung,
	EAndroidAppStoreTypes_MAX,
};

// Enum FortniteGame.EColorBlindMode
enum class EColorBlindMode : uint8 {
	Off,
	Deuteranope,
	Protanope,
	Tritanope,
	EColorBlindMode_MAX,
};

// Enum FortniteGame.ECloudFileState
enum class ECloudFileState : uint8 {
	Unitialized,
	Saving,
	Loading,
	Idle,
	ECloudFileState_MAX,
};

// Enum FortniteGame.ECodeTokenPlatform
enum class ECodeTokenPlatform : uint8 {
	PC,
	PS4,
	XBOX,
	ECodeTokenPlatform_MAX,
};

// Enum FortniteGame.EFortCollectionBookState
enum class EFortCollectionBookState : uint8 {
	Active,
	Completed,
	Claimed,
	EFortCollectionBookState_MAX,
};

// Enum FortniteGame.EFortPIDValueGraphElements
enum class EFortPIDValueGraphElements : uint8 {
	Proportional,
	Integral,
	Max_None,
	EFortPIDValueGraphElements_MAX,
};

// Enum FortniteGame.EFortIntensityGraphElements
enum class EFortIntensityGraphElements : uint8 {
	ActualIntensity,
	DesiredIntensity,
	Max_None,
	EFortIntensityGraphElements_MAX,
};

// Enum FortniteGame.EFortContributionGraphElements
enum class EFortContributionGraphElements : uint8 {
	ProportionalLine,
	IntegralLine,
	TotalLine,
	PendingLine,
	ActionLine,
	Max_None,
	EFortContributionGraphElements_MAX,
};

// Enum FortniteGame.EFortFactorContributionType
enum class EFortFactorContributionType : uint8 {
	CurrentValue_Direct,
	CurrentValue_Inverse,
	AverageValue_Direct,
	AverageValue_Inverse,
	EFortFactorContributionType_MAX,
};

// Enum FortniteGame.EFortAIDirectorFactor
enum class EFortAIDirectorFactor : uint8 {
	PlayerDamageThreat,
	ObjectiveDamageThreat,
	ObjectivePathCost,
	PlayerPathCost,
	PlayerMovement,
	TrapsEffective,
	PlayerWander,
	NearbyEnemyPresence,
	OffensiveResources,
	DefensiveResources,
	Boredom,
	ArtilleryVulnerability,
	Max_None,
	EFortAIDirectorFactor_MAX,
};

// Enum FortniteGame.EFortCombatFactors
enum class EFortCombatFactors : uint8 {
	PlayerDamageThreat,
	ObjectiveDamageThreat,
	ObjectivePathCost,
	PlayerPathCost,
	PlayerMovement,
	TrapsEffective,
	PlayerWander,
	NearbyEnemyPresence,
	OffensiveResources,
	DefensiveResources,
	Boredom,
	ArtilleryVulnerability,
	Max_None,
	EFortCombatFactors_MAX,
};

// Enum FortniteGame.EFortCombatEventContribution
enum class EFortCombatEventContribution : uint8 {
	Linear,
	Inverse,
	Accumulator,
	Max_None,
	EFortCombatEventContribution_MAX,
};

// Enum FortniteGame.EFortCombatEvents
enum class EFortCombatEvents : uint8 {
	HuskFollowing,
	SmasherFollowing,
	TrollFollowing,
	FlingerFollowing,
	TakerFollowing,
	HuskCombatNearby,
	SmasherCombatNearby,
	TrollCombatNearby,
	FlingerCombatNearby,
	TakerCombatNearby,
	PlayerTakeDamage,
	PlayerHealth,
	PlayerLookAtEnemy,
	PlayerDamageEnemy,
	PlayerKilledEnemy,
	AtlasTakeDamage,
	AtlasHealth,
	AtlasDestroyed,
	TrapFiring,
	BuildingTakeDamage,
	FoodHealingPotential,
	PlayerAmmo,
	EnemiesNear,
	PlayerMovement,
	BuildingDamagedNearObjective,
	TrapDamageEnemy,
	ObjectivePathCost,
	PlayerPathCost,
	Max_None,
	EFortCombatEvents_MAX,
};

// Enum FortniteGame.EFortAIDirectorEventParticipant
enum class EFortAIDirectorEventParticipant : uint8 {
	Target,
	Source,
	Either,
	Max_None,
	EFortAIDirectorEventParticipant_MAX,
};

// Enum FortniteGame.EFortCombatThresholds
enum class EFortCombatThresholds : uint8 {
	Low,
	Medium,
	High,
	Extreme,
	Max_None,
	EFortCombatThresholds_MAX,
};

// Enum FortniteGame.EFortWeaponCoreAnimation
enum class EFortWeaponCoreAnimation : uint8 {
	Melee,
	Pistol,
	Shotgun,
	PaperBlueprint,
	Rifle,
	MeleeOneHand,
	MachinePistol,
	RocketLauncher,
	GrenadeLauncher,
	GoingCommando,
	AssaultRifle,
	TacticalShotgun,
	SniperRifle,
	TrapPlacement,
	ShoulderLauncher,
	AbilityDecoTool,
	Crossbow,
	C4,
	RemoteControl,
	DualWield,
	AR_BullPup,
	AR_ForwardGrip,
	MedPackPaddles,
	SMG_P90,
	AR_DrumGun,
	Consumable_Small,
	Consumable_Large,
	Balloon,
	MountedTurret,
	CreativeTool,
	ExplosiveBow,
	AshtonIndigo,
	AshtonChicago,
	MeleeDualWield,
	MAX,
};

// Enum FortniteGame.EFortTargetingFXState
enum class EFortTargetingFXState : uint8 {
	TargetingStart,
	TargetingEnd,
	Max_None,
	EFortTargetingFXState_MAX,
};

// Enum FortniteGame.EFortReloadFXState
enum class EFortReloadFXState : uint8 {
	ReloadStart,
	ReloadCartridge,
	ReloadEnd,
	Max_None,
	EFortReloadFXState_MAX,
};

// Enum FortniteGame.EFortWeaponSoundChannel
enum class EFortWeaponSoundChannel : uint8 {
	NormalA,
	NormalB,
	LowAmmo,
	Degraded,
	Max_None,
	EFortWeaponSoundChannel_MAX,
};

// Enum FortniteGame.EFortWeaponSoundState
enum class EFortWeaponSoundState : uint8 {
	Normal,
	LowAmmo,
	Degraded,
	Max_None,
	EFortWeaponSoundState_MAX,
};

// Enum FortniteGame.EFortMontageInputType
enum class EFortMontageInputType : uint8 {
	WindowClickOrHold,
	WindowHoldOnly,
	InstantClick,
	EFortMontageInputType_MAX,
};

// Enum FortniteGame.EFortAmmoType
enum class EFortAmmoType : uint8 {
	Pistol,
	Shotgun,
	Assault,
	Sniper,
	Energy,
	EFortAmmoType_MAX,
};

// Enum FortniteGame.EFortConditionalResourceItemTest
enum class EFortConditionalResourceItemTest : uint8 {
	CanEarnMtx,
	EFortConditionalResourceItemTest_MAX,
};

// Enum FortniteGame.EFortContentEncryptionAllowedReferences
enum class EFortContentEncryptionAllowedReferences : uint8 {
	None,
	SoftOnly,
	Any,
	EFortContentEncryptionAllowedReferences_MAX,
};

// Enum FortniteGame.EFortContentEncryptionCollectionGrouping
enum class EFortContentEncryptionCollectionGrouping : uint8 {
	Individual,
	Combined,
	ByCosmeticSet,
	EFortContentEncryptionCollectionGrouping_MAX,
};

// Enum FortniteGame.EFortEncryptionStatus
enum class EFortEncryptionStatus : uint8 {
	ENCRYPTED,
	RELEASED,
	EFortEncryptionStatus_MAX,
};

// Enum FortniteGame.EFortContextualTutorialPlatform
enum class EFortContextualTutorialPlatform : uint8 {
	Any,
	PcAndConsole,
	Mobile,
	EFortContextualTutorialPlatform_MAX,
};

// Enum FortniteGame.ECollectionsComponentValidityResult
enum class ECollectionsComponentValidityResult : uint8 {
	IsValid,
	IsNotValid,
	ECollectionsComponentValidityResult_MAX,
};

// Enum FortniteGame.EContextualEvent
enum class EContextualEvent : uint8 {
	Generic,
	Location,
	InventoryAdded,
	InventoryRemoved,
	StartSkydiving,
	NewQuests,
	EContextualEvent_MAX,
};

// Enum FortniteGame.EContextualContext
enum class EContextualContext : uint8 {
	DoNotShow,
	BusPhase,
	Skydiving,
	Gameplay,
	EContextualContext_MAX,
};

// Enum FortniteGame.EShareActorWithMask
enum class EShareActorWithMask : uint8 {
	None,
	SquadOnTeam,
	AllTeam,
	Target,
	EShareActorWithMask_MAX,
};

// Enum FortniteGame.EShareActorWith
enum class EShareActorWith : uint8 {
	None,
	SquadOnTeam,
	AllTeam,
	EShareActorWith_MAX,
};

// Enum FortniteGame.EIndicatorStateImage
enum class EIndicatorStateImage : uint8 {
	FIRST_FRIENDLY_STATE,
	Default,
	InCombat,
	DBNO,
	BeingRevived,
	Dead,
	LAST_FRIENDLY_STATE,
	FIRST_CHAT_MESSAGE,
	NeedAmmoHeavy,
	NeedAmmoLight,
	NeedAmmoMedium,
	NeedAmmoShells,
	NeedAmmoRocket,
	ChatBubble,
	EnemySpotted,
	NeedBandages,
	NeedMaterials,
	NeedShields,
	NeedWeapon,
	LAST_CHAT_MESSAGE,
	FIRST_MATE_STATE,
	Squadmate,
	Teammate,
	LAST_MATE_STATE,
	FIRST_ENEMY_STATE,
	Enemy,
	LAST_ENEMY_STATE,
	FIRST_NPC_STATE,
	FriendlyNPC,
	EnemyNPC,
	EliteFriendlyNPC,
	EliteEnemyNPC,
	LAST_NPC_STATE,
	FIRST_WORLDITEM_STATE,
	Interactable,
	InteractableLarge,
	GameplayItem,
	TreasureChest,
	LAST_WORLDITEM_STATE,
	FIRST_HARDCORE_STATE,
	HardCoreBeacon,
	LAST_HARDCORE_STATE,
	LAST_STATE,
	None,
	MAX,
};

// Enum FortniteGame.ETouchInteractMode
enum class ETouchInteractMode : uint8 {
	Off,
	InWorld,
	Buttons,
	ETouchInteractMode_MAX,
};

// Enum FortniteGame.EStashInventoryServiceSyncState
enum class EStashInventoryServiceSyncState : uint8 {
	Uninitialized,
	Syncing,
	Ready,
	EStashInventoryServiceSyncState_MAX,
};

// Enum FortniteGame.EMinigameActivityStat
enum class EMinigameActivityStat : uint8 {
	Time,
	Distance,
	RaceProgress,
	COUNT,
	EMinigameActivityStat_MAX,
};

// Enum FortniteGame.EMinigameActivityComponentValidityResult
enum class EMinigameActivityComponentValidityResult : uint8 {
	Valid,
	IsNotValid,
	EMinigameActivityComponentValidityResult_MAX,
};

// Enum FortniteGame.ESkydiveFeedbackPhase
enum class ESkydiveFeedbackPhase : uint8 {
	Initial,
	WithGlider,
	InVortex,
	None,
	ESkydiveFeedbackPhase_MAX,
};

// Enum FortniteGame.EConversationEventQueryMethod
enum class EConversationEventQueryMethod : uint8 {
	CheckAgainstCurrentConversationParticipant,
	CheckAgainstConversationEntryTag,
	EConversationEventQueryMethod_MAX,
};

// Enum FortniteGame.EFortSentenceAudioPreference
enum class EFortSentenceAudioPreference : uint8 {
	AudioAsset,
	FeedbackBank,
	EFortSentenceAudioPreference_MAX,
};

// Enum FortniteGame.EContextRequirementMatchPolicy
enum class EContextRequirementMatchPolicy : uint8 {
	RequireAll,
	RequireAny,
	EContextRequirementMatchPolicy_MAX,
};

// Enum FortniteGame.EPreventAbilityUseReason
enum class EPreventAbilityUseReason : uint8 {
	CannotAfford,
	AlreadyActive,
	AbilityActivationBlocked,
	None,
	Count,
	EPreventAbilityUseReason_MAX,
};

// Enum FortniteGame.ERequirementMatchPolicy
enum class ERequirementMatchPolicy : uint8 {
	RequireAll,
	RequireAny,
	ERequirementMatchPolicy_MAX,
};

// Enum FortniteGame.EDataDrivenEffectRecipient
enum class EDataDrivenEffectRecipient : uint8 {
	Player,
	NPC,
	EDataDrivenEffectRecipient_MAX,
};

// Enum FortniteGame.EPreventUseStormCircleServiceReason
enum class EPreventUseStormCircleServiceReason : uint8 {
	CannotAfford,
	AlreadyActive,
	StormLocationsAlreadyRevealed,
	None,
	EPreventUseStormCircleServiceReason_MAX,
};

// Enum FortniteGame.EPreventSupplyDropUseReason
enum class EPreventSupplyDropUseReason : uint8 {
	CannotAfford,
	OutOfStock,
	None,
	Count,
	EPreventSupplyDropUseReason_MAX,
};

// Enum FortniteGame.ESupplyDropSpawnLocationPolicy
enum class ESupplyDropSpawnLocationPolicy : uint8 {
	RadiusAroundLocation,
	SafeZone,
	ESupplyDropSpawnLocationPolicy_MAX,
};

// Enum FortniteGame.EFCRP_LoopBehavior
enum class EFCRP_LoopBehavior : uint8 {
	StopAtEnd,
	PingPong,
	WrapAround,
	EFCRP_MAX,
};

// Enum FortniteGame.EFortRichColorConflictResolutionRules
enum class EFortRichColorConflictResolutionRules : uint8 {
	NoConflictsAllowed,
	BlackOrWhiteCannotConflict,
	EFortRichColorConflictResolutionRules_MAX,
};

// Enum FortniteGame.EFortCosmeticSwapRequirementPart
enum class EFortCosmeticSwapRequirementPart : uint8 {
	None,
	Glider,
	Pickaxe,
	Backpack,
	Character,
	FullLoadout,
	MAX,
};

// Enum FortniteGame.ELoadoutVariantInsertType
enum class ELoadoutVariantInsertType : uint8 {
	StartOfArray,
	EndOfArray,
	ELoadoutVariantInsertType_MAX,
};

// Enum FortniteGame.EAnimInstanceClassSwapType
enum class EAnimInstanceClassSwapType : uint8 {
	None,
	SwapOnMatch,
	EAnimInstanceClassSwapType_MAX,
};

// Enum FortniteGame.EAssetChangeMethod
enum class EAssetChangeMethod : uint8 {
	Latest,
	Minimum,
	OnlyAddNew,
	BelowDoubleTheFixedCost,
	EAssetChangeMethod_MAX,
};

// Enum FortniteGame.EFortCreativeDiscoverySkippedEntries
enum class EFortCreativeDiscoverySkippedEntries : uint8 {
	None,
	ByCount,
	ByPercent,
	EFortCreativeDiscoverySkippedEntries_MAX,
};

// Enum FortniteGame.EFortCreativeDiscoveryPanelType
enum class EFortCreativeDiscoveryPanelType : uint8 {
	CuratedList,
	MetricDriven,
	EFortCreativeDiscoveryPanelType_MAX,
};

// Enum FortniteGame.EFortCreativeDiscoveryDeterminism
enum class EFortCreativeDiscoveryDeterminism : uint8 {
	Always,
	Random,
	PlayerDeterministic,
	PartyDeterministic,
	Never,
	EFortCreativeDiscoveryDeterminism_MAX,
};

// Enum FortniteGame.EFortLockDeviceVisibilityDuringGames
enum class EFortLockDeviceVisibilityDuringGames : uint8 {
	No,
	Yes,
	HologramOnly,
	EFortLockDeviceVisibilityDuringGames_MAX,
};

// Enum FortniteGame.EBuildingAsPropSetting
enum class EBuildingAsPropSetting : uint8 {
	None,
	SnapToEdge,
	SnapToCenter,
	EBuildingAsPropSetting_MAX,
};

// Enum FortniteGame.ECameraSpaceHoldPosition
enum class ECameraSpaceHoldPosition : uint8 {
	AsPickup,
	Left,
	Center,
	Right,
	ECameraSpaceHoldPosition_MAX,
};

// Enum FortniteGame.EAddToSelectionResult
enum class EAddToSelectionResult : uint8 {
	Added,
	Removed,
	AtLimit,
	None,
	EAddToSelectionResult_MAX,
};

// Enum FortniteGame.EHitTraceType
enum class EHitTraceType : uint8 {
	Single,
	Multi,
	EHitTraceType_MAX,
};

// Enum FortniteGame.ECreativePortalManagerValidityResult
enum class ECreativePortalManagerValidityResult : uint8 {
	Valid,
	Invalid,
	ECreativePortalManagerValidityResult_MAX,
};

// Enum FortniteGame.EFortCreativePlotPermission
enum class EFortCreativePlotPermission : uint8 {
	Private,
	Public,
	EFortCreativePlotPermission_MAX,
};

// Enum FortniteGame.ERealEstateOffsetType
enum class ERealEstateOffsetType : uint8 {
	CustomOffsetFromCorner,
	Center,
	ERealEstateOffsetType_MAX,
};

// Enum FortniteGame.EFortSourDropperColorType
enum class EFortSourDropperColorType : uint8 {
	None,
	Bright,
	MidBright,
	MidDark,
	Dark,
	EFortSourDropperColorType_MAX,
};

// Enum FortniteGame.EFortCreativeTeleporterEvent
enum class EFortCreativeTeleporterEvent : uint8 {
	Entered,
	Exited,
	Enabled,
	Disabled,
	None,
	EFortCreativeTeleporterEvent_MAX,
};

// Enum FortniteGame.EFortCreativeTeleporterGroup
enum class EFortCreativeTeleporterGroup : uint8 {
	Group_A,
	Group_B,
	Group_C,
	Group_D,
	Group_E,
	Group_F,
	Group_G,
	Group_H,
	Group_I,
	Group_J,
	Group_K,
	Group_L,
	Group_M,
	Group_N,
	Group_O,
	Group_P,
	Group_Q,
	Group_R,
	Group_S,
	Group_T,
	Group_U,
	Group_V,
	Group_W,
	Group_X,
	Group_Y,
	Group_Z,
	Group_None,
	Group_MAX,
};

// Enum FortniteGame.EMMSPlayersPerTeamPreset
enum class EMMSPlayersPerTeamPreset : uint8 {
	Solos,
	Duos,
	Trios,
	Squads,
	SplitEvenly,
	Dynamic,
	EMMSPlayersPerTeamPreset_MAX,
};

// Enum FortniteGame.EMMSRulePreset
enum class EMMSRulePreset : uint8 {
	RespectParties,
	KeepFull,
	Off,
	EMMSRulePreset_MAX,
};

// Enum FortniteGame.EFortCurieApplicationEvent
enum class EFortCurieApplicationEvent : uint8 {
	OnHit,
	OnBeginOverlap,
	OnEndOverlap,
	MaxValue,
	EFortCurieApplicationEvent_MAX,
};

// Enum FortniteGame.EFortCurieExecutionType
enum class EFortCurieExecutionType : uint8 {
	Application,
	Interaction,
	EFortCurieExecutionType_MAX,
};

// Enum FortniteGame.EFortNativeCurieFXCueResponse
enum class EFortNativeCurieFXCueResponse : uint8 {
	IgnoreCue,
	AllowCue,
	OverrideCue,
	EFortNativeCurieFXCueResponse_MAX,
};

// Enum FortniteGame.EFortCurieToggleComponentDeactivationBehavior
enum class EFortCurieToggleComponentDeactivationBehavior : uint8 {
	NeverDeactivate,
	TimedDeactivationAllowRefresh,
	TimedDeactivationNoRefresh,
	EFortCurieToggleComponentDeactivationBehavior_MAX,
};

// Enum FortniteGame.EFortCurieToggleComponentActivationBehavior
enum class EFortCurieToggleComponentActivationBehavior : uint8 {
	OnValidAttachment,
	EFortCurieToggleComponentActivationBehavior_MAX,
};

// Enum FortniteGame.EFortCurieNativeFXType
enum class EFortCurieNativeFXType : uint8 {
	None,
	Electricity,
	Fire,
	Charred,
	EFortCurieNativeFXType_MAX,
};

// Enum FortniteGame.ETimespanUnitDisplayFormat
enum class ETimespanUnitDisplayFormat : uint8 {
	Full,
	Abbreviated,
	ETimespanUnitDisplayFormat_MAX,
};

// Enum FortniteGame.ETimespanAsTextFormat
enum class ETimespanAsTextFormat : uint8 {
	DaysHoursMinutesSeconds,
	Colons,
	ColonsWithMilliseconds,
	Approximate,
	ApproximateWithWeeks,
	ApproximateWithMonths,
	ApproximateWithYears,
	ETimespanAsTextFormat_MAX,
};

// Enum FortniteGame.EDeathCauseReason
enum class EDeathCauseReason : uint8 {
	SelfInflicted,
	SelfInflictedDBNO,
	Eliminated,
	EliminatedDBNO,
	EDeathCauseReason_MAX,
};

// Enum FortniteGame.EFortDefenderSubtype
enum class EFortDefenderSubtype : uint8 {
	AssaultRifle,
	Pistol,
	Melee,
	Sniper,
	Shotgun,
	Invalid,
	EFortDefenderSubtype_MAX,
};

// Enum FortniteGame.EHordeTierStartStatus
enum class EHordeTierStartStatus : uint8 {
	ReadyToStart,
	WaitingForPlayer,
	WaitingForDBM,
	GenericNotReadyToStart,
	EHordeTierStartStatus_MAX,
};

// Enum FortniteGame.EHordeWaveStingerType
enum class EHordeWaveStingerType : uint8 {
	WaveSuccess,
	WaveFailure,
	WaveIncoming,
	WaveStarted,
	EHordeWaveStingerType_MAX,
};

// Enum FortniteGame.EQueueActionType
enum class EQueueActionType : uint8 {
	Plot,
	ZoneCleanup,
	EnvironmentActorRestoration,
	EQueueActionType_MAX,
};

// Enum FortniteGame.FDynamicBuildOrder
enum class FDynamicBuildOrder : uint8 {
	X,
	Y,
	Z,
	None,
	FDynamicBuildOrder_MAX,
};

// Enum FortniteGame.ENavOptionFallbackDir
enum class ENavOptionFallbackDir : uint8 {
	Left,
	Right,
	Up,
	Down,
	Num,
	Invalid,
	ENavOptionFallbackDir_MAX,
};

// Enum FortniteGame.EFortFactionAttitude
enum class EFortFactionAttitude : uint8 {
	Friendly,
	Neutral,
	Hostile,
	MAX,
};

// Enum FortniteGame.EFortFeedbackBroadcastFilter
enum class EFortFeedbackBroadcastFilter : uint8 {
	FFBF_Speaker,
	FFBF_SpeakerTeam,
	FFBF_SpeakerAdressee,
	FFBF_HumanPvP_Team1,
	FFBF_HumanPvP_Team2,
	FFBF_None_Max,
	FFBF_MAX,
};

// Enum FortniteGame.EFortFeedbackSelectionMethod
enum class EFortFeedbackSelectionMethod : uint8 {
	FFSM_Instigator,
	FFSM_Recipient,
	FFSM_TeamWitness,
	FFSM_EnemyWitness,
	FFSM_Random,
	FFSM_Priority_IRTE,
	FFSM_AllPawns,
	FFSM_Announcer,
	FFSM_MAX,
};

// Enum FortniteGame.EFortFeedbackAddressee
enum class EFortFeedbackAddressee : uint8 {
	FFA_Instigator,
	FFA_Recipient,
	FFA_All,
	FFA_MAX,
};

// Enum FortniteGame.EFortFeedbackContext
enum class EFortFeedbackContext : uint8 {
	FFC_Instigator,
	FFC_Recipient,
	FFC_TeamWitness,
	FFC_EnemyWitness,
	FFC_AllPawns,
	FFC_Announcer,
	FFC_None_Max,
	FFC_MAX,
};

// Enum FortniteGame.EFortFoleyHitAudioType
enum class EFortFoleyHitAudioType : uint8 {
	Body,
	Shield,
	Crit,
	Death,
	DeathCrit,
	Fall,
	FallDeath,
	Max_None,
	EFortFoleyHitAudioType_MAX,
};

// Enum FortniteGame.EFortFootstepPosition
enum class EFortFootstepPosition : uint8 {
	Parallel,
	Above,
	Below,
	AboveOrBelowAndVisible,
	Max_None,
	EFortFootstepPosition_MAX,
};

// Enum FortniteGame.EFortFootstepSurfaceType
enum class EFortFootstepSurfaceType : uint8 {
	Default,
	Wood,
	Stone,
	Metal,
	Water,
	Snow,
	Ice,
	Lava,
	Dirt,
	Grass,
	Sand,
	Max_None,
	EFortFootstepSurfaceType_MAX,
};

// Enum FortniteGame.EFortFootstepAudioType
enum class EFortFootstepAudioType : uint8 {
	Crouch,
	CrouchSprint,
	Walk,
	Sprint,
	Jump,
	Land,
	LandHard,
	Max_None,
	EFortFootstepAudioType_MAX,
};

// Enum FortniteGame.EFriendChestTimePeriod
enum class EFriendChestTimePeriod : uint8 {
	Daily,
	Weekly,
	EFriendChestTimePeriod_MAX,
};

// Enum FortniteGame.EFriendChestInstancedType
enum class EFriendChestInstancedType : uint8 {
	ItemDefinition,
	FreshDripCounter,
	GrantXp,
	Undefined,
	EFriendChestInstancedType_MAX,
};

// Enum FortniteGame.EFortGameActivityType
enum class EFortGameActivityType : uint8 {
	Undefined,
	STW,
	BR,
	LTM,
	CreativePublishedIsland,
	CreativePersonalIsland,
	Dummy,
	EFortGameActivityType_MAX,
};

// Enum FortniteGame.EFortActivityValidationResult
enum class EFortActivityValidationResult : uint8 {
	NotFound,
	InvalidKeyTooShort,
	InvalidKeyCharacters,
	IneligibleParty,
	IslandPrivate,
	CreativePublishedSuccess,
	EFortActivityValidationResult_MAX,
};

// Enum FortniteGame.ESubGameAccessReason
enum class ESubGameAccessReason : uint8 {
	NoAccess,
	OpenAccess,
	TokenItemAccess,
	XboxHomeSharingAccess,
	XboxServiceOutageAccess,
	LimitedAccess,
	ESubGameAccessReason_MAX,
};

// Enum FortniteGame.EClampType
enum class EClampType : uint8 {
	Minimum,
	Maximum,
	EClampType_MAX,
};

// Enum FortniteGame.ERatingsEnforcementType
enum class ERatingsEnforcementType : uint8 {
	Default,
	IgnoreMaximums,
	IgnoreParty,
	IgnorePartyMaximum,
	ERatingsEnforcementType_MAX,
};

// Enum FortniteGame.EDynamicSoundOverride
enum class EDynamicSoundOverride : uint8 {
	Cue,
	Wave,
	Class,
	EDynamicSoundOverride_MAX,
};

// Enum FortniteGame.EPlayerQueueType
enum class EPlayerQueueType : uint8 {
	Player,
	BroadcastSpectator,
	EPlayerQueueType_MAX,
};

// Enum FortniteGame.EFortInputFilterLevel
enum class EFortInputFilterLevel : uint8 {
	None,
	Touch,
	Gamepad,
	Mouse,
	EFortInputFilterLevel_MAX,
};

// Enum FortniteGame.EAircraftLaunchReason
enum class EAircraftLaunchReason : uint8 {
	StdTimerAllPlayers,
	EarlyTimerAllPlayers,
	StdTimerMostPlayers,
	EarlyTimerMostPlayers,
	StdTimerFewPlayers,
	EAircraftLaunchReason_MAX,
};

// Enum FortniteGame.EFortGamepadLookInputCurve
enum class EFortGamepadLookInputCurve : uint8 {
	Linear,
	Exponential,
	EFortGamepadLookInputCurve_MAX,
};

// Enum FortniteGame.EFortGamepadSensitivity
enum class EFortGamepadSensitivity : uint8 {
	Invalid,
	Slow,
	SlowPlus,
	SlowPlusPlus,
	Normal,
	NormalPlus,
	NormalPlusPlus,
	Fast,
	FastPlus,
	FastPlusPlus,
	Insane,
	MAX,
};

// Enum FortniteGame.EFortAbilityCostSource
enum class EFortAbilityCostSource : uint8 {
	Stamina,
	Durability,
	AmmoMagazine,
	AmmoPrimary,
	Item,
	EFortAbilityCostSource_MAX,
};

// Enum FortniteGame.EFortGameplayAbilityActivation
enum class EFortGameplayAbilityActivation : uint8 {
	Passive,
	Triggered,
	Active,
	EFortGameplayAbilityActivation_MAX,
};

// Enum FortniteGame.EFortGetPlayerPawnExecutions
enum class EFortGetPlayerPawnExecutions : uint8 {
	ValidFortPlayerPawn,
	AvatarCastFailed,
	EFortGetPlayerPawnExecutions_MAX,
};

// Enum FortniteGame.EFortAIWeaponUsage
enum class EFortAIWeaponUsage : uint8 {
	NoWeaponUsage,
	UsesRangedWeapon,
	UsesMeleeWeapon,
	EFortAIWeaponUsage_MAX,
};

// Enum FortniteGame.EFortGameplayAbilityMontageSectionToPlay
enum class EFortGameplayAbilityMontageSectionToPlay : uint8 {
	FirstSection,
	RandomSection,
	TestedRandomSection,
	EFortGameplayAbilityMontageSectionToPlay_MAX,
};

// Enum FortniteGame.EJumpBoostPackState
enum class EJumpBoostPackState : uint8 {
	Idle,
	Boost,
	Hovering,
	Falling,
	None,
	EJumpBoostPackState_MAX,
};

// Enum FortniteGame.EMedicPackState
enum class EMedicPackState : uint8 {
	Idle,
	Active,
	None,
	EMedicPackState_MAX,
};

// Enum FortniteGame.EFortGameplayCueSourceCondition
enum class EFortGameplayCueSourceCondition : uint8 {
	AnySource,
	LocalPlayerSource,
	NonLocalPlayerSource,
	EFortGameplayCueSourceCondition_MAX,
};

// Enum FortniteGame.EFortGameplayCueAttachType
enum class EFortGameplayCueAttachType : uint8 {
	AttachToTarget,
	DoNotAttach,
	EFortGameplayCueAttachType_MAX,
};

// Enum FortniteGame.EFortGameplayDataTrackerEventContributionType
enum class EFortGameplayDataTrackerEventContributionType : uint8 {
	Accumulate,
	Set,
	EFortGameplayDataTrackerEventContributionType_MAX,
};

// Enum FortniteGame.ESetCVarType
enum class ESetCVarType : uint8 {
	Numeric,
	String,
	ESetCVarType_MAX,
};

// Enum FortniteGame.EFortServerGameMode
enum class EFortServerGameMode : uint8 {
	Idle,
	LobbyPvE,
	LobbyPvP,
	ZonePvP,
	ZonePvE,
	EFortServerGameMode_MAX,
};

// Enum FortniteGame.EFortBanHammerNotificationAction
enum class EFortBanHammerNotificationAction : uint8 {
	BanAndKick,
	Kick,
	EFortBanHammerNotificationAction_MAX,
};

// Enum FortniteGame.EFortServerContentRestartReason
enum class EFortServerContentRestartReason : uint8 {
	None,
	CreativeCuratedHubChanged,
	CreativeFeaturedIslandsChanged,
	CreativePreloadRevisionChanged,
	CreativePlaylistConditionalFlagsChanged,
	GameFeaturePluginDisabled,
	ForceRestartEventFlagsChanged,
	ForceRestartFlagActiveStateChanged,
	EFortServerContentRestartReason_MAX,
};

// Enum FortniteGame.EServerRestartReason
enum class EServerRestartReason : uint8 {
	HotfixApplied,
	GracefulShutdown,
	BeaconJoinDelayRestart,
	Other,
	EServerRestartReason_MAX,
};

// Enum FortniteGame.ETeamChatRoomState
enum class ETeamChatRoomState : uint8 {
	NotCreated,
	Creating,
	Created,
	Timeout,
	ETeamChatRoomState_MAX,
};

// Enum FortniteGame.EPlayerIndicatorFlags
enum class EPlayerIndicatorFlags : uint8 {
	None,
	Minimap,
	WorldArrow,
	WorldName,
	DBNOCountDown,
	EPlayerIndicatorFlags_MAX,
};

// Enum FortniteGame.EAthenaAerialPhase
enum class EAthenaAerialPhase : uint8 {
	None,
	BusCantExit,
	BusCanExit,
	BusCanExitEndZebulonDrone,
	Skydiving,
	Parachuting,
	Falling,
	EAthenaAerialPhase_MAX,
};

// Enum FortniteGame.ERadiusTrackingGroupingType
enum class ERadiusTrackingGroupingType : uint8 {
	Global,
	Team,
	Squad,
	ERadiusTrackingGroupingType_MAX,
};

// Enum FortniteGame.EAnalyticMatchCounts
enum class EAnalyticMatchCounts : uint8 {
	IDScannerDoorFailed,
	IDSCannerDoorSuccessBelongsToFaction,
	IDSCannerDoorSuccessPlayerDisguised,
	IDSCannerDoorSuccessCarriedHenchman,
	IDSCannerDoorSuccessCarriedHuman,
	IDScannerChestFailed,
	IDSCannerChestSuccessBelongsToFaction,
	IDSCannerChestSuccessPlayerDisguised,
	IDSCannerChestSuccessCarriedHenchman,
	IDSCannerChestSuccessCarriedHuman,
	HenchmenEnteredAlertedState,
	HenchmenEnteredLKPState,
	HenchmenEnteredThreatenedState,
	HenchmenDowned,
	HenchmenEliminated,
	HenchmenInterrogated,
	BossesEliminated,
	DisguisePhoneBoothTimesEntered,
	DisguiseItemTimesUsed,
	HiddenPassagesTimesEntered,
	CameraOrSentryTimesEnteredCautionState,
	CameraOrSentryTimesEnteredAltertedState,
	CameraOrSentryTimesDestroyed,
	GeneratorTimesDisabled,
	UmbrellaNumberOfDashes,
	UmbrellaNumberUsedToFloat,
	UmbrellaAmountDamageBlocked,
	UmbrellaBulletsBlocked,
	UmbrellaMeleeHitsBlocked,
	Count,
	EAnalyticMatchCounts_MAX,
};

// Enum FortniteGame.EDefenderSpawnFailureReason
enum class EDefenderSpawnFailureReason : uint8 {
	None,
	AllPlayerSlotsFull,
	DefendersNotUnlocked,
	CurrentlySimulatingDefender,
	NotOutpostOwner,
	EDefenderSpawnFailureReason_MAX,
};

// Enum FortniteGame.ERHIType
enum class ERHIType : uint8 {
	D3D11,
	D3D12,
	Performance,
	ERHIType_MAX,
};

// Enum FortniteGame.EShowInGamePictureInPicture
enum class EShowInGamePictureInPicture : uint8 {
	Default,
	Hide,
	Show,
	EShowInGamePictureInPicture_MAX,
};

// Enum FortniteGame.EFortScalabilityMode
enum class EFortScalabilityMode : uint8 {
	LowPower,
	Frontend,
	EFortScalabilityMode_MAX,
};

// Enum FortniteGame.ESavedAccountType
enum class ESavedAccountType : uint8 {
	None,
	Facebook,
	Google,
	Epic,
	Device,
	Headless,
	Refresh,
	ESavedAccountType_MAX,
};

// Enum FortniteGame.EFortMobileFPSMode
enum class EFortMobileFPSMode : uint8 {
	Mode_20Fps,
	Mode_30Fps,
	Mode_45Fps,
	Mode_60Fps,
	Mode_90Fps,
	Mode_120Fps,
	Num,
	EFortMobileFPSMode_MAX,
};

// Enum FortniteGame.EFortGiftWrapType
enum class EFortGiftWrapType : uint8 {
	System,
	UserFree,
	UserUnlock,
	UserConsumable,
	Message,
	Ungift,
	EFortGiftWrapType_MAX,
};

// Enum FortniteGame.ETimeLimitForReplayCinematic
enum class ETimeLimitForReplayCinematic : uint8 {
	OpenTimeLimit,
	DurationTimeLimit,
	DurationExtraTime,
	ETimeLimitForReplayCinematic_MAX,
};

// Enum FortniteGame.EFortGlobalAction
enum class EFortGlobalAction : uint8 {
	TrapConfirm,
	TrapPicker,
	BuildConfirm,
	PerformBuildingEditInteraction,
	PerformBuildingImprovementInteraction,
	SwitchQuickBar,
	Use,
	Reload,
	InventoryOrChatHold,
	GamepadChangeMaterialOrHarvestHold,
	GamepadNextWeaponOrHarvestHold,
	GamepadNextWeaponOrAltInteractOrHarvestHold,
	ChangeMaterial,
	Fire,
	RotatePrimitiveClockwise,
	Gadget1,
	Gadget2,
	Ability1,
	Ability2,
	Ability3,
	ToggleFullScreenMap,
	ToggleInventory,
	Jump,
	Crouch,
	ShoppingCartCoast,
	GolfCartEBrake,
	GolfCartForward,
	GolfCartReverse,
	GolfCartHonk,
	GamepadToggleHarvestOrHoldCreativePhone,
	GamepadToggleCreativePhoneWeapon,
	Count,
	EFortGlobalAction_MAX,
};

// Enum FortniteGame.EFortClientUpdateType
enum class EFortClientUpdateType : uint8 {
	Client,
	ContentOnly,
	EFortClientUpdateType_MAX,
};

// Enum FortniteGame.EContentInstallState
enum class EContentInstallState : uint8 {
	NotInstalled,
	Pending,
	Installed,
	Unknown,
	Error,
	EContentInstallState_MAX,
};

// Enum FortniteGame.EFortAccountLinkingUIConfig
enum class EFortAccountLinkingUIConfig : uint8 {
	Disabled,
	Default,
	ExternalViewerOnly,
	FullExternal,
	EFortAccountLinkingUIConfig_MAX,
};

// Enum FortniteGame.EGravityGunHolderRotationAxis
enum class EGravityGunHolderRotationAxis : uint8 {
	XZ,
	YZ,
	ZX,
	MAX,
};

// Enum FortniteGame.EGravityGunHolderObjectType
enum class EGravityGunHolderObjectType : uint8 {
	Invalid,
	PhysicsObject,
	Vehicle,
	Projectile,
	PickUp,
	EGravityGunHolderObjectType_MAX,
};

// Enum FortniteGame.EGravityGunHolderState
enum class EGravityGunHolderState : uint8 {
	Invalid,
	Unrooting,
	Catching,
	Holding,
	Detached,
	EGravityGunHolderState_MAX,
};

// Enum FortniteGame.EFortHardcoreModifierTier
enum class EFortHardcoreModifierTier : uint8 {
	Bronze,
	Silver,
	Gold,
	Platinum,
	Diamond,
	EFortHardcoreModifierTier_MAX,
};

// Enum FortniteGame.EFortHelpContentLocation
enum class EFortHelpContentLocation : uint8 {
	Top,
	Bottom,
	Max,
};

// Enum FortniteGame.EFortHelpItemType
enum class EFortHelpItemType : uint8 {
	Header,
	Entry,
	Max,
};

// Enum FortniteGame.ESpecializationType
enum class ESpecializationType : uint8 {
	Tier1,
	Tier2,
	Tier3,
	Tier4,
	NumTiers,
	ESpecializationType_MAX,
};

// Enum FortniteGame.EFortHeroLoadoutPerkType
enum class EFortHeroLoadoutPerkType : uint8 {
	Commander,
	Standard,
	EFortHeroLoadoutPerkType_MAX,
};

// Enum FortniteGame.EFortSupportBonusType
enum class EFortSupportBonusType : uint8 {
	Normal,
	Tactical,
	Max_None,
	EFortSupportBonusType_MAX,
};

// Enum FortniteGame.EFortHexTileAdjacency
enum class EFortHexTileAdjacency : uint8 {
	North,
	NorthEast,
	SouthEast,
	South,
	SouthWest,
	NorthWest,
	Max_None,
	EFortHexTileAdjacency_MAX,
};

// Enum FortniteGame.EBannerUsageContext
enum class EBannerUsageContext : uint8 {
	Unknown,
	BannerIcon,
	PhysicalBanner,
	Spray,
	EBannerUsageContext_MAX,
};

// Enum FortniteGame.ESquadSlotType
enum class ESquadSlotType : uint8 {
	HeroSquadMissionDefender,
	SurvivorSquadLeadSurvivor,
	SurvivorSquadSurvivor,
	DefenderSquadMember,
	ExpeditionSquadMember,
	ESquadSlotType_MAX,
};

// Enum FortniteGame.EFortHomebaseSquadType
enum class EFortHomebaseSquadType : uint8 {
	AttributeSquad,
	CombatSquad,
	DefenderSquad,
	ExpeditionSquad,
	Max_None,
	EFortHomebaseSquadType_MAX,
};

// Enum FortniteGame.EHomebaseNodeType
enum class EHomebaseNodeType : uint8 {
	Gadget,
	Utility,
	Hidden,
	EHomebaseNodeType_MAX,
};

// Enum FortniteGame.EFortHuskAnimType
enum class EFortHuskAnimType : uint8 {
	Basic,
	Dwarf,
	BlasterBig,
	Weak,
	TinyHead,
	Beehive,
	Husky,
	Sploder,
	Zapper,
	EFortHuskAnimType_MAX,
};

// Enum FortniteGame.EMapCaptureMethod
enum class EMapCaptureMethod : uint8 {
	None,
	LiveCapture,
	StaticCapture,
	EMapCaptureMethod_MAX,
};

// Enum FortniteGame.EFortInputGameMode
enum class EFortInputGameMode : uint8 {
	SaveTheWorld,
	Athena,
	EFortInputGameMode_MAX,
};

// Enum FortniteGame.EFortIntensityCurveSequenceType
enum class EFortIntensityCurveSequenceType : uint8 {
	Sequence,
	Loop,
	Random,
	Max_None,
	EFortIntensityCurveSequenceType_MAX,
};

// Enum FortniteGame.EFortInteractContextInfoType
enum class EFortInteractContextInfoType : uint8 {
	Standard,
	Crafting,
	EFortInteractContextInfoType_MAX,
};

// Enum FortniteGame.EInteriorAudioBuildingType
enum class EInteriorAudioBuildingType : uint8 {
	None,
	Wall,
	Floor,
	CenterCell,
	EInteriorAudioBuildingType_MAX,
};

// Enum FortniteGame.EInteriorAudioBuildingDefaultRotation
enum class EInteriorAudioBuildingDefaultRotation : uint8 {
	PositiveY,
	NegativeX,
	NegativeY,
	PositiveX,
	EInteriorAudioBuildingDefaultRotation_MAX,
};

// Enum FortniteGame.EInteriorAudioQuadrant
enum class EInteriorAudioQuadrant : uint8 {
	None,
	Left,
	Right,
	Top,
	Bottom,
	EInteriorAudioQuadrant_MAX,
};

// Enum FortniteGame.EInteriorAudioBuildingTags
enum class EInteriorAudioBuildingTags : uint8 {
	None,
	HasDoors,
	RotationDependant,
	UseConditionalEvaluation,
	EInteriorAudioBuildingTags_MAX,
};

// Enum FortniteGame.EInteriorAudioBuildingRelativePosition
enum class EInteriorAudioBuildingRelativePosition : uint8 {
	SameCell,
	SameCellQuadrantTestFailed,
	OtherCellParallelToForward,
	OtherCellParallelToRight,
	OtherCellParallelToUp,
	Max_None,
	EInteriorAudioBuildingRelativePosition_MAX,
};

// Enum FortniteGame.EInteriorAudioBuildingDirection
enum class EInteriorAudioBuildingDirection : uint8 {
	Left,
	Right,
	Forward,
	Backward,
	Upward,
	EInteriorAudioBuildingDirection_MAX,
};

// Enum FortniteGame.EInteriorAudioBuildingEvaluation
enum class EInteriorAudioBuildingEvaluation : uint8 {
	Invalid,
	Partial,
	Solid,
	EInteriorAudioBuildingEvaluation_MAX,
};

// Enum FortniteGame.EInteriorAudioRoomSize
enum class EInteriorAudioRoomSize : uint8 {
	Small,
	Medium,
	Large,
	Max_None,
	EInteriorAudioRoomSize_MAX,
};

// Enum FortniteGame.EMinigameStatSavePolicy
enum class EMinigameStatSavePolicy : uint8 {
	Never,
	Always,
	OnlyIfLower,
	OnlyIfHigher,
	EMinigameStatSavePolicy_MAX,
};

// Enum FortniteGame.EItemEvolutionRestrictionReason
enum class EItemEvolutionRestrictionReason : uint8 {
	NoEvolutions,
	BelowMaximumLevel,
	VaultOverflow,
	MissingCatalyst,
	MissingCosts,
	NoRarityUpgrade,
	InUseByCrafting,
	EItemEvolutionRestrictionReason_MAX,
};

// Enum FortniteGame.EItemUpgradeRestrictionReason
enum class EItemUpgradeRestrictionReason : uint8 {
	NoAdditionalLevels,
	MaximumLevelAchieved,
	VaultOverflow,
	EItemUpgradeRestrictionReason_MAX,
};

// Enum FortniteGame.EFortTemplateAccess
enum class EFortTemplateAccess : uint8 {
	Normal,
	Trusted,
	Private,
	EFortTemplateAccess_MAX,
};

// Enum FortniteGame.EItemProfileType
enum class EItemProfileType : uint8 {
	Common,
	Campaign,
	Athena,
	EItemProfileType_MAX,
};

// Enum FortniteGame.EFortJackalSimEvent
enum class EFortJackalSimEvent : uint8 {
	Jumped,
	EFortJackalSimEvent_MAX,
};

// Enum FortniteGame.ELayeredAudioTriggerDir
enum class ELayeredAudioTriggerDir : uint8 {
	Forward,
	Backward,
	ELayeredAudioTriggerDir_MAX,
};

// Enum FortniteGame.ELayeredAudioInterpolationType
enum class ELayeredAudioInterpolationType : uint8 {
	None,
	CustomCurve,
	Linear,
	ELayeredAudioInterpolationType_MAX,
};

// Enum FortniteGame.EUnableToLoadReason
enum class EUnableToLoadReason : uint8 {
	None,
	PackageDoesNotExist,
	EUnableToLoadReason_MAX,
};

// Enum FortniteGame.FLightOverrideLevel
enum class FLightOverrideLevel : uint8 {
	Default,
	High,
	Count,
	FLightOverrideLevel_MAX,
};

// Enum FortniteGame.ELobbyMissionGeneratorDetailsRequirement
enum class ELobbyMissionGeneratorDetailsRequirement : uint8 {
	Unknown,
	NotRequired,
	Required,
	ELobbyMissionGeneratorDetailsRequirement_MAX,
};

// Enum FortniteGame.ELootQuotaLevel
enum class ELootQuotaLevel : uint8 {
	Unlimited,
	Level1,
	Level2,
	Level3,
	Level4,
	Level5,
	Level6,
	Level7,
	Level8,
	Level9,
	Level10,
	Level11,
	Level12,
	Level13,
	Level14,
	Level15,
	Level16,
	Level17,
	NumLevels,
	ELootQuotaLevel_MAX,
};

// Enum FortniteGame.EMarkableResult
enum class EMarkableResult : uint8 {
	Markable,
	Block,
	Continue,
	EMarkableResult_MAX,
};

// Enum FortniteGame.EFortMatchmakingType
enum class EFortMatchmakingType : uint8 {
	Gathering,
	CriticalMission,
	QuickPlay,
	Session,
	EFortMatchmakingType_MAX,
};

// Enum FortniteGame.EFortSessionHelperJoinResult
enum class EFortSessionHelperJoinResult : uint8 {
	NoResult,
	ReservationSuccess,
	ReservationFailure_PartyLimitReached,
	ReservationFailure_IncorrectPlayerCount,
	ReservationFailure_RequestTimedOut,
	ReservationFailure_ReservationNotFound,
	ReservationFailure_ReservationDenied,
	ReservationFailure_ReservationDenied_Banned,
	ReservationFailure_ReservationRequestCanceled,
	ReservationFailure_ReservationInvalid,
	ReservationFailure_BadSessionId,
	ReservationFailure_ReservationDenied_ContainsExistingPlayers,
	ReservationFailure_GeneralError,
	ReservationFailure_NoSubsystem,
	ReservationFailure_NoIdentity,
	ReservationFailure_InvalidSession,
	ReservationFailure_InvalidUser,
	ReservationFailure_EncryptionKey,
	ReservationFailure_RefreshAuth,
	ReservationFailure_AlreadyJoiningDuringReserve,
	ReservationFailure_AlreadyJoiningDuringSkip,
	JoinSessionSuccess,
	JoinSessionFailure_SessionIsFull,
	JoinSessionFailure_SessionDoesNotExist,
	JoinSessionFailure_CouldNotRetrieveAddress,
	JoinSessionFailure_AlreadyInSession,
	JoinSessionFailure_UnknownError,
	JoinSessionFailure_InvalidSession,
	JoinSessionFailure_InvalidSearchResultIndex,
	JoinSessionFailure_AlreadyJoiningDuringJoin,
	SearchPassFailure_NoSessionHelper,
	SearchPassFailure_InvalidUser,
	SearchPassFailure_NoIdentity,
	SearchPassFailure_InvalidSearchResult,
	SearchPassFailure_InvalidSearchResultIndex,
	JoinSessionCanceled,
	EFortSessionHelperJoinResult_MAX,
};

// Enum FortniteGame.EFortMatchmakingPool
enum class EFortMatchmakingPool : uint8 {
	Any,
	Desktop,
	PS4,
	XboxOne,
	Mobile,
	Test,
	Switch,
	Console,
	All,
	EFortMatchmakingPool_MAX,
};

// Enum FortniteGame.EFortMatchmakingPrivacyConfiguration
enum class EFortMatchmakingPrivacyConfiguration : uint8 {
	UserPartyConfigured,
	ForcePrivate,
	ForcePublic,
	EFortMatchmakingPrivacyConfiguration_MAX,
};

// Enum FortniteGame.EMatchmakingFlags
enum class EMatchmakingFlags : uint8 {
	None,
	CreateNewOnly,
	NoReservation,
	Private,
	UseWorldDataOwner,
	EMatchmakingFlags_MAX,
};

// Enum FortniteGame.EMatchmakingStartLocation
enum class EMatchmakingStartLocation : uint8 {
	Lobby,
	Game,
	CreateNew,
	FindSingle,
	EMatchmakingStartLocation_MAX,
};

// Enum FortniteGame.EFortTournamentAlertType
enum class EFortTournamentAlertType : uint8 {
	Warning,
	Info,
	EFortTournamentAlertType_MAX,
};

// Enum FortniteGame.EPlaylistUpdateReason
enum class EPlaylistUpdateReason : uint8 {
	LocalPlayerJoinedParty,
	LocalPlayerLocationChangedToFrontend,
	LocalPlayerSubgameSelected,
	LocalPlayerLeftParty,
	LocalPlayerDeclinedCrossplayPermission,
	PartyGameSessionKeyChanged,
	PartySquadFillChanged,
	PartyMemberJoined,
	PartyMemberLeft,
	PartyMemberReadinessChanged,
	PartyMemberInGameReadyCheckChanged,
	PartyMemberLocationChanged,
	PartyMemberSpectateAvailabilityChanged,
	PartyMemberSessionJoinInfoChanged,
	ValidatePlaylist_QoSCheckFailed,
	ValidatePlaylist_TournamentEventOver,
	ValidatePlaylist_BlackoutChanged,
	ValidatePlaylist_MatchmakingEventsChanged,
	ValidatePlaylist_TournamentNewEventStarted,
	ValidatePlaylist_TournamentNewEventCountdown,
	ValidatePlaylist_TournamentsChanged,
	ValidatePlaylist_PlayerTournamentDataRefreshed,
	Initialization,
	EPlaylistUpdateReason_MAX,
};

// Enum FortniteGame.EMatchmakingUtilityFlows
enum class EMatchmakingUtilityFlows : uint8 {
	Automatic,
	JoinMatchInProgress,
	SpectateMatch,
	Legacy,
	LinkCode,
	JoinEditingSession,
	Internal_Unselected,
	EMatchmakingUtilityFlows_MAX,
};

// Enum FortniteGame.EMatchmakingSourceV2
enum class EMatchmakingSourceV2 : uint8 {
	None,
	AthenaMatchmakingWidget,
	ActivityMatchmakingWidget,
	ReadyUpScreenWidget,
	ForcedIntro,
	Unknown,
	EMatchmakingSourceV2_MAX,
};

// Enum FortniteGame.EUseInputWithPartyResult
enum class EUseInputWithPartyResult : uint8 {
	Success,
	LocalPlayerNeedsToAllowCrossplay,
	LocalPlayerRestricted,
	RemotePlayerRestricted,
	UnknownFailure,
	EUseInputWithPartyResult_MAX,
};

// Enum FortniteGame.EMatchmakingErrorV2
enum class EMatchmakingErrorV2 : uint8 {
	Success,
	Canceled,
	NeedUpdate,
	VersionMismatch,
	UpdateFailed,
	NotLoggedIn,
	NoIdentityInterface,
	NoSessionInterface,
	AlreadyInSession,
	FindSessionFailure,
	FailedToQueryEncryptionKey,
	FailedToRefreshAuthToken,
	FailedToCleanupSession,
	FailedToJoinSession,
	FailedToTravelToSession,
	Unauthorized,
	BannedFromAthena,
	BannedFromAthenaForExploit,
	BannedFromAthenaForTeaming,
	BannedFromAthenaForTeamKilling,
	InvalidCustomMatchKey,
	FailedToContactGameServices,
	FailedToConnectToMMS,
	MMSCommunicationIssue,
	ServiceReturnedError,
	PlaylistNoLongerAvailable,
	CrossplayUnsetWithInputDevicePoolShift,
	CrossplayNeededForTournamentMatch,
	MatchmakingDisabled,
	AccountLevelTooLow,
	JoinInProgressError,
	SpectateInProgressError,
	MatchmakingInProgress,
	TooFrequentRequests,
	FailedToAcquireContent,
	CellularDataRefusal,
	CancelledDownloadContent,
	DataAssetDirectoryUpdateFailed,
	InvalidPlaylistRevision,
	UnknownError,
	EMatchmakingErrorV2_MAX,
};

// Enum FortniteGame.EBadMatchType
enum class EBadMatchType : uint8 {
	None,
	Ping,
	PacketLoss,
	NotMonitored,
	EBadMatchType_MAX,
};

// Enum FortniteGame.ECharacterEncounterType
enum class ECharacterEncounterType : uint8 {
	Converstation,
	Attack,
	Count,
	ECharacterEncounterType_MAX,
};

// Enum FortniteGame.ESavePlayerQuestUpdate
enum class ESavePlayerQuestUpdate : uint8 {
	QuestGiven,
	QuestCompleted,
	ESavePlayerQuestUpdate_MAX,
};

// Enum FortniteGame.EAthenaFilterDisplayType
enum class EAthenaFilterDisplayType : uint8 {
	UseCategoryName,
	ShowFilterString,
	EAthenaFilterDisplayType_MAX,
};

// Enum FortniteGame.EMcpSubscriptionState
enum class EMcpSubscriptionState : uint8 {
	Inactive,
	Active,
	Canceled,
	PaymentProcessError,
	BlockedBenefits,
	Unknown,
	EMcpSubscriptionState_MAX,
};

// Enum FortniteGame.ESocialImportPanelPlatform
enum class ESocialImportPanelPlatform : uint8 {
	Facebook,
	VK,
	Steam,
	Xbox,
	Playstation,
	Switch,
	None,
	ESocialImportPanelPlatform_MAX,
};

// Enum FortniteGame.EPublishStatus
enum class EPublishStatus : uint8 {
	Banned,
	CannotPublish,
	NeedsCreatorName,
	CanPublishProvisionally,
	CanPublish,
	EPublishStatus_MAX,
};

// Enum FortniteGame.ETwitchViewerStatusType
enum class ETwitchViewerStatusType : uint8 {
	TwitchViewerStatus_Unknown,
	TwitchViewerStatus_Nonsubscriber,
	TwitchViewerStatus_Subscriber,
	TwitchViewerStatus_Broadcaster,
	TwitchViewerStatus_Max,
};

// Enum FortniteGame.EMegaStormState
enum class EMegaStormState : uint8 {
	GatheringActorList,
	DamagingActors,
	EMegaStormState_MAX,
};

// Enum FortniteGame.EMinigameGameEndCallout
enum class EMinigameGameEndCallout : uint8 {
	WinLose,
	Placement,
	Cooperative,
	EMinigameGameEndCallout_MAX,
};

// Enum FortniteGame.EMinigameScoreboardStates
enum class EMinigameScoreboardStates : uint8 {
	RoundEndDisplayWinner,
	GameEndDisplayWinner,
	RoundEndDisplayScoreboard,
	GameEndDisplayScoreboard,
	Max,
};

// Enum FortniteGame.EMinigameFullscreenMapWidgetType
enum class EMinigameFullscreenMapWidgetType : uint8 {
	Default_Map,
	Creative_Scoreboard,
	EMinigameFullscreenMapWidgetType_MAX,
};

// Enum FortniteGame.EFortMinigameExec
enum class EFortMinigameExec : uint8 {
	Yes,
	No,
	EFortMinigameExec_MAX,
};

// Enum FortniteGame.EMinigamePlayerPersistence
enum class EMinigamePlayerPersistence : uint8 {
	None,
	PartyLeaderOnly,
	AllPlayers,
	EMinigamePlayerPersistence_MAX,
};

// Enum FortniteGame.EMinigameWinCondition
enum class EMinigameWinCondition : uint8 {
	MostRoundWins,
	MostScoreWins,
	EMinigameWinCondition_MAX,
};

// Enum FortniteGame.EMinigameTeamListType
enum class EMinigameTeamListType : uint8 {
	Blacklist,
	Whitelist,
	EMinigameTeamListType_MAX,
};

// Enum FortniteGame.EMinigameCaptureObjectiveState
enum class EMinigameCaptureObjectiveState : uint8 {
	NotCaptured,
	Captured,
	EMinigameCaptureObjectiveState_MAX,
};

// Enum FortniteGame.EObjectiveType
enum class EObjectiveType : uint8 {
	DestructionObjective,
	CaptureObjective,
	EObjectiveType_MAX,
};

// Enum FortniteGame.ETrackedObjectiveQuery
enum class ETrackedObjectiveQuery : uint8 {
	All,
	ExactTeam,
	Friendly,
	Neutral,
	Hostile,
	NotFriendly,
	MAX,
};

// Enum FortniteGame.EMinigameScoreType
enum class EMinigameScoreType : uint8 {
	Time,
	PointTotal,
	EMinigameScoreType_MAX,
};

// Enum FortniteGame.EFortMinigameStatOperation
enum class EFortMinigameStatOperation : uint8 {
	Equal,
	Less,
	Greater,
	LessOrEqual,
	GreaterOrEqual,
	EFortMinigameStatOperation_MAX,
};

// Enum FortniteGame.EFortMinigameStatScope
enum class EFortMinigameStatScope : uint8 {
	Group,
	Team,
	Player,
	EFortMinigameStatScope_MAX,
};

// Enum FortniteGame.EBuildingMode
enum class EBuildingMode : uint8 {
	None,
	BuildingsOnly,
	TrapsOnly,
	All,
	EBuildingMode_MAX,
};

// Enum FortniteGame.EFortMinigameClassResetType
enum class EFortMinigameClassResetType : uint8 {
	Never,
	RoundEnd,
	GameEnd,
	PlayerDeath,
	EFortMinigameClassResetType_MAX,
};

// Enum FortniteGame.EFortMinigameClassSlot
enum class EFortMinigameClassSlot : uint8 {
	ZeroIndex,
	None,
	EFortMinigameClassSlot_MAX,
};

// Enum FortniteGame.EFortMinigamePostGameSpawnLocationSetting
enum class EFortMinigamePostGameSpawnLocationSetting : uint8 {
	IslandStart,
	PreGameLocation,
	EFortMinigamePostGameSpawnLocationSetting_MAX,
};

// Enum FortniteGame.EFortMinigamePlayerSpawnLocationSetting
enum class EFortMinigamePlayerSpawnLocationSetting : uint8 {
	SpawnPads,
	Air,
	CurrentLocation,
	EFortMinigamePlayerSpawnLocationSetting_MAX,
};

// Enum FortniteGame.EMiniMapIconParameterDataType
enum class EMiniMapIconParameterDataType : uint8 {
	None,
	Scalar,
	Vector,
	Texture,
	EMiniMapIconParameterDataType_MAX,
};

// Enum FortniteGame.EFortMiniMapIconRotation
enum class EFortMiniMapIconRotation : uint8 {
	EFMMIR_None,
	EFMMIR_Absolute,
	EFMMIR_Relative,
	EFMMIR_MAX,
};

// Enum FortniteGame.EFortMiniMapContext
enum class EFortMiniMapContext : uint8 {
	EFMC_MiniMap,
	EFMC_FullScreenMap,
	EFMC_MAX,
};

// Enum FortniteGame.EFortMiniMapHeight
enum class EFortMiniMapHeight : uint8 {
	EFMH_Equal,
	EFMH_Below,
	EFMH_Above,
	EFMH_MAX,
};

// Enum FortniteGame.EFortMiniMapDrawCategory
enum class EFortMiniMapDrawCategory : uint8 {
	AthenaBackground,
	MapLocation,
	SafeZone,
	BusPath,
	SpecialActorIcon,
	SquadPin,
	MapIndicator,
	MapCursor,
	Elimination,
	MAX,
};

// Enum FortniteGame.EFortCheatMissionGenType
enum class EFortCheatMissionGenType : uint8 {
	NewGeneration,
	OldGeneration,
	Max_None,
	EFortCheatMissionGenType_MAX,
};

// Enum FortniteGame.EFortOptionGenerationResult
enum class EFortOptionGenerationResult : uint8 {
	NoOptionsGenerated,
	NewOptionsGenerated,
	ExistingOptionsGenerated,
	EFortOptionGenerationResult_MAX,
};

// Enum FortniteGame.EPollActorsInVolumeTypes
enum class EPollActorsInVolumeTypes : uint8 {
	DesignerPlacedOnly,
	PlayerBuiltOnly,
	All,
	EPollActorsInVolumeTypes_MAX,
};

// Enum FortniteGame.EMissionReplyTypes
enum class EMissionReplyTypes : uint8 {
	Handled,
	NotHandled,
	EMissionReplyTypes_MAX,
};

// Enum FortniteGame.ETimerOverrideSetting
enum class ETimerOverrideSetting : uint8 {
	DefaultBehavior,
	ForceShow,
	ForceHide,
	ShowAtEnd,
	ETimerOverrideSetting_MAX,
};

// Enum FortniteGame.ESchemaModificationType
enum class ESchemaModificationType : uint8 {
	AddOrModify,
	Remove,
	Count,
	ESchemaModificationType_MAX,
};

// Enum FortniteGame.EMontageVisibilityRule
enum class EMontageVisibilityRule : uint8 {
	RequiredItem,
	ForbiddenItem,
	EMontageVisibilityRule_MAX,
};

// Enum FortniteGame.EFortMtxPlatform
enum class EFortMtxPlatform : uint8 {
	Epic,
	PSN,
	Live,
	Shared,
	EpicPC,
	EpicPCKorea,
	IOSAppStore,
	EpicAndroid,
	Nintendo,
	WeGame,
	Samsung,
	GooglePlay,
	EFortMtxPlatform_MAX,
};

// Enum FortniteGame.EFortMusicSectionType
enum class EFortMusicSectionType : uint8 {
	Intro,
	Loop,
	Outro,
	Max_None,
	EFortMusicSectionType_MAX,
};

// Enum FortniteGame.EFortMusicSectionStopBehavior
enum class EFortMusicSectionStopBehavior : uint8 {
	Crossfade,
	AllowFadeOut,
	EFortMusicSectionStopBehavior_MAX,
};

// Enum FortniteGame.EFortMusicCombatIntensity
enum class EFortMusicCombatIntensity : uint8 {
	Low,
	Medium,
	High,
	VeryHigh,
	Max_None,
	EFortMusicCombatIntensity_MAX,
};

// Enum FortniteGame.EMusicChannel
enum class EMusicChannel : uint8 {
	VoiceA,
	VoiceB,
	Max_None,
	EMusicChannel_MAX,
};

// Enum FortniteGame.EMusicFadeStyles
enum class EMusicFadeStyles : uint8 {
	CrossFade,
	FadeOutThenIn,
	Max_None,
	EMusicFadeStyles_MAX,
};

// Enum FortniteGame.EMutatorListInitState
enum class EMutatorListInitState : uint8 {
	Default,
	Enabled,
	Disabled,
	EMutatorListInitState_MAX,
};

// Enum FortniteGame.EFortAreaFlag
enum class EFortAreaFlag : uint8 {
	Default,
	Obstacle,
	Smashable,
	Unwalkable,
	Interactable,
	EFortAreaFlag_MAX,
};

// Enum FortniteGame.EVisibilityResponse
enum class EVisibilityResponse : uint8 {
	Hide,
	Show,
	Custom,
	EVisibilityResponse_MAX,
};

// Enum FortniteGame.EFortNavLinkPattern
enum class EFortNavLinkPattern : uint8 {
	Floor,
	Stairs,
	Roof,
	Manual,
	EFortNavLinkPattern_MAX,
};

// Enum FortniteGame.EFortNamedNavmesh
enum class EFortNamedNavmesh : uint8 {
	Husk,
	Smasher,
	MAX,
};

// Enum FortniteGame.EFXType
enum class EFXType : uint8 {
	GenericAnimNotify,
	TrailAnimNotify,
	WeaponImpactEffect,
	WeaponMeleeImpactEffect,
	Contrail,
	Emote,
	Trap,
	Skin,
	Glider,
	Vehicle,
	BackpackBling,
	Water,
	LootChest,
	EnvironmentalAmbient,
	WeaponRangedBeam,
	WeaponBulletShells,
	WeaponMuzzleFlashes,
	PickAxe,
	Curie,
	Projectile,
	EFXType_MAX,
};

// Enum FortniteGame.EFortOctopusSimEvent
enum class EFortOctopusSimEvent : uint8 {
	BeginBoostCooldown,
	EFortOctopusSimEvent_MAX,
};

// Enum FortniteGame.EOutpostBuildings
enum class EOutpostBuildings : uint8 {
	StormShield,
	HarvestingOptimizer,
	StorageVault,
	POST,
	EOutpostBuildings_MAX,
};

// Enum FortniteGame.EPartyMemberVoiceChatStatus
enum class EPartyMemberVoiceChatStatus : uint8 {
	Disabled,
	Enabled,
	PartyVoice,
	GameVoice,
	PlatformVoice,
	EPartyMemberVoiceChatStatus_MAX,
};

// Enum FortniteGame.EGameReadiness
enum class EGameReadiness : uint8 {
	NotReady,
	Ready,
	SittingOut,
	EGameReadiness_MAX,
};

// Enum FortniteGame.ESquadChangeType
enum class ESquadChangeType : uint8 {
	JoinSquad,
	BenchSelf,
	UnbenchSelf,
	Swap,
	None,
	ESquadChangeType_MAX,
};

// Enum FortniteGame.EPartyMemberSidekickStatus
enum class EPartyMemberSidekickStatus : uint8 {
	None,
	Linked,
	Connected,
	EPartyMemberSidekickStatus_MAX,
};

// Enum FortniteGame.EFortPartyMemberReadyCheckStatus
enum class EFortPartyMemberReadyCheckStatus : uint8 {
	None,
	InProgress,
	Complete,
	Canceled,
	EFortPartyMemberReadyCheckStatus_MAX,
};

// Enum FortniteGame.EPathUndermineEvent
enum class EPathUndermineEvent : uint8 {
	Predicted,
	Started,
	Finished,
	EPathUndermineEvent_MAX,
};

// Enum FortniteGame.EPathObstacleAction
enum class EPathObstacleAction : uint8 {
	Melee,
	Ignore,
	AbortMoveAsFailed,
	FinishMoveAsSucceeded,
	EPathObstacleAction_MAX,
};

// Enum FortniteGame.EWardAffectType
enum class EWardAffectType : uint8 {
	AffectsBothStartAndEndPoints,
	AffectsOnlyStartPoints,
	AffectsOnlyEndPoints,
	EWardAffectType_MAX,
};

// Enum FortniteGame.EFortWeaponListRemovalBehavior
enum class EFortWeaponListRemovalBehavior : uint8 {
	DestroyImmediately,
	DeferredLifespan,
	DoNotDestroy,
	EFortWeaponListRemovalBehavior_MAX,
};

// Enum FortniteGame.EFortControlRecoveryBehavior
enum class EFortControlRecoveryBehavior : uint8 {
	DefaultControl,
	LimitedControl,
	ChainControl,
	EFortControlRecoveryBehavior_MAX,
};

// Enum FortniteGame.EFortPawnPushSize
enum class EFortPawnPushSize : uint8 {
	FFPS_Normal,
	FPPS_Player,
	FPPS_Large,
	FPPS_SuperLarge,
	EFortPawnPushSize_MAX,
};

// Enum FortniteGame.EFortAnnouncerTeamVocalChords
enum class EFortAnnouncerTeamVocalChords : uint8 {
	Team1,
	Team2,
	Max_None,
	EFortAnnouncerTeamVocalChords_MAX,
};

// Enum FortniteGame.EFortBadMatchTriggerType
enum class EFortBadMatchTriggerType : uint8 {
	Unspecified,
	SmallTeam,
	LargeTeam,
	LetoTeam,
	EFortBadMatchTriggerType_MAX,
};

// Enum FortniteGame.EFortBadMatchTriggerOperation
enum class EFortBadMatchTriggerOperation : uint8 {
	LessThan,
	LessThanOrEqual,
	Equal,
	GreaterThan,
	GreaterThanOrEqual,
	EFortBadMatchTriggerOperation_MAX,
};

// Enum FortniteGame.EFortRewardType
enum class EFortRewardType : uint8 {
	Default,
	Missed,
	Max_None,
	EFortRewardType_MAX,
};

// Enum FortniteGame.EFortReplicatedStat
enum class EFortReplicatedStat : uint8 {
	MonsterKills,
	MonsterDamagePoints,
	PlayerKills,
	WoodGathered,
	StoneGathered,
	MetalGathered,
	Deaths,
	BluGloActivity,
	BuildingsBuilt,
	BuildingsBuilt_Wood,
	BuildingsBuilt_Stone,
	BuildingsBuilt_Metal,
	BuildingsUpgraded_Wood2,
	BuildingsUpgraded_Wood3,
	BuildingsUpgraded_Stone2,
	BuildingsUpgraded_Stone3,
	BuildingsUpgraded_Metal2,
	BuildingsUpgraded_Metal3,
	BuildingsDestroyed,
	Repair_Wood,
	Repair_Stone,
	Repair_Metal,
	FlagsCaptured,
	FlagsReturned,
	ContainersLooted,
	CraftingPoints,
	TrapPlacementPoints,
	TrapActivationPoints,
	TotalScore,
	OldTotalScore,
	CombatScore,
	BuildingScore,
	UtilityScore,
	BadgesScore,
	None,
	MAX,
};

// Enum FortniteGame.EFortReplenishmentType
enum class EFortReplenishmentType : uint8 {
	Restricted,
	ClampMin,
	Add,
	Ability,
	EFortReplenishmentType_MAX,
};

// Enum FortniteGame.EFortPhysicsObjectMovementState
enum class EFortPhysicsObjectMovementState : uint8 {
	None,
	Flying,
	Rolling,
	Sliding,
	Floating,
	EFortPhysicsObjectMovementState_MAX,
};

// Enum FortniteGame.EFortPhysicsObjectAwakeState
enum class EFortPhysicsObjectAwakeState : uint8 {
	Invalid,
	Awake,
	Asleep,
	EFortPhysicsObjectAwakeState_MAX,
};

// Enum FortniteGame.EFortPhysicsSimulationRepEvent
enum class EFortPhysicsSimulationRepEvent : uint8 {
	LinearVelocity,
	AngularVelocity,
	Impulse,
	ImpulseAtLocation,
	AngularImpulse,
	Force,
	Torque,
	None,
	EFortPhysicsSimulationRepEvent_MAX,
};

// Enum FortniteGame.EFortPhysicsObjectNetworkPolicy
enum class EFortPhysicsObjectNetworkPolicy : uint8 {
	ClientOnly,
	ServerAuthoritative,
	EFortPhysicsObjectNetworkPolicy_MAX,
};

// Enum FortniteGame.EFortPhysicsSimSize
enum class EFortPhysicsSimSize : uint8 {
	Large,
	Medium,
	Average,
	Small,
	Invalid,
	EFortPhysicsSimSize_MAX,
};

// Enum FortniteGame.EFortPickupTossState
enum class EFortPickupTossState : uint8 {
	NotTossed,
	InProgress,
	AtRest,
	EFortPickupTossState_MAX,
};

// Enum FortniteGame.EFortPickupSpawnSource
enum class EFortPickupSpawnSource : uint8 {
	Unset,
	PlayerElimination,
	Chest,
	SupplyDrop,
	AmmoBox,
	Drone,
	ItemSpawner,
	BotElimination,
	NPCElimination,
	LootDrop,
	EFortPickupSpawnSource_MAX,
};

// Enum FortniteGame.EFortPickupSourceTypeFlag
enum class EFortPickupSourceTypeFlag : uint8 {
	Other,
	Player,
	Destruction,
	Container,
	AI,
	Tossed,
	FloorLoot,
	Fishing,
	EFortPickupSourceTypeFlag_MAX,
};

// Enum FortniteGame.EManagedPickupContext
enum class EManagedPickupContext : uint8 {
	Unknown,
	PlayerDropped,
	Overflow,
	Spawned,
	EManagedPickupContext_MAX,
};

// Enum FortniteGame.EManagedPickupBucket
enum class EManagedPickupBucket : uint8 {
	Default,
	Junk,
	Normal,
	Important,
	EManagedPickupBucket_MAX,
};

// Enum FortniteGame.EConstructionBuildingType
enum class EConstructionBuildingType : uint8 {
	Wall,
	Floor,
	Stairs,
	Roof,
	Brace,
	WallWindow,
	Count,
	EConstructionBuildingType_MAX,
};

// Enum FortniteGame.EOrientedConstructionBuildingType
enum class EOrientedConstructionBuildingType : uint8 {
	WallX,
	WallY,
	Floor,
	StairsUpX,
	StairsUpY,
	StairsDownX,
	StairsDownY,
	Roof,
	BraceLeftX,
	BraceRightX,
	BraceLeftY,
	BraceRightY,
	WallWindowX,
	WallWindowY,
	Count,
	EOrientedConstructionBuildingType_MAX,
};

// Enum FortniteGame.ELeashReturnLocationMode
enum class ELeashReturnLocationMode : uint8 {
	Closest,
	Random,
	ELeashReturnLocationMode_MAX,
};

// Enum FortniteGame.ELookAtType
enum class ELookAtType : uint8 {
	ScanAround,
	Investigate,
	HeardSound,
	MAX,
};

// Enum FortniteGame.EPerceptionSoundType
enum class EPerceptionSoundType : uint8 {
	Default,
	Explosion,
	ProjectileFlyBy,
	ProjectileImpact,
	WeaponFiring,
	Building,
	MeleeImpact,
	MAX,
};

// Enum FortniteGame.ETrackingOffsetModifierCurve
enum class ETrackingOffsetModifierCurve : uint8 {
	Default,
	CombatStart,
	TargetLowHealth,
	MAX,
};

// Enum FortniteGame.EPerceptionState
enum class EPerceptionState : uint8 {
	Threat_Seeing,
	Threat_LKP,
	Threat_Alerted,
	ObstacleIncoming,
	ObstacleBlockedBy,
	ObstacleDetectedTrap,
	Unknown,
	Count,
	Threat_Count,
	EPerceptionState_MAX,
};

// Enum FortniteGame.EStimType
enum class EStimType : uint8 {
	Seeing,
	Seen,
	MightHaveSeen,
	Hurt,
	Heard,
	Obstacle,
	Enemy,
	Unknown,
	Count,
	EStimType_MAX,
};

// Enum FortniteGame.EDBNOPlayStyle
enum class EDBNOPlayStyle : uint8 {
	Thirsty,
	Default,
	Passive,
	ThristyButPassiveOnPlayers,
	DefaultButPassiveOnPlayers,
	EDBNOPlayStyle_MAX,
};

// Enum FortniteGame.EFortCrucibleWhitelistLevel
enum class EFortCrucibleWhitelistLevel : uint8 {
	None,
	Basic,
	Advanced,
	EFortCrucibleWhitelistLevel_MAX,
};

// Enum FortniteGame.ECreativeQuickbarSlots
enum class ECreativeQuickbarSlots : uint8 {
	Phone,
	ECreativeQuickbarSlots_MAX,
};

// Enum FortniteGame.EQuickbarSlots
enum class EQuickbarSlots : uint8 {
	HarvestingTool,
	Weapon1,
	Weapon2,
	Weapon3,
	Gadget1,
	Gadget2,
	Ability1,
	Ability2,
	Ability3,
	EQuickbarSlots_MAX,
};

// Enum FortniteGame.EFortPickerToDisplay
enum class EFortPickerToDisplay : uint8 {
	TrapPicker,
	WeaponPicker,
	SocialPicker,
	ChatPicker,
	NotePicker,
	EmotePicker,
	SquadQuickChatPicker,
	BattleLabDevicePicker,
	MusicSourcePicker,
	EFortPickerToDisplay_MAX,
};

// Enum FortniteGame.EMapZoomingMode
enum class EMapZoomingMode : uint8 {
	None,
	ZoomingIn,
	ZoomingOut,
	EMapZoomingMode_MAX,
};

// Enum FortniteGame.EFortIdleCheckResult
enum class EFortIdleCheckResult : uint8 {
	Invalid,
	ActivityDetected,
	Idle,
	IdlePastMaxTime,
	EFortIdleCheckResult_MAX,
};

// Enum FortniteGame.EHighlightReelTypes
enum class EHighlightReelTypes : uint8 {
	Generic,
	GameSummary,
	ExtendedGameSummary,
	Builder,
	FastMover,
	LongDistance,
	Multikill,
	StormCloud,
	EHighlightReelTypes_MAX,
};

// Enum FortniteGame.ECameraStateRestoreReason
enum class ECameraStateRestoreReason : uint8 {
	Unknown,
	ChangedFollowTarget,
	ChangedCameraType,
	InvokedHotKey,
	Scrubbed,
	Restored,
	SpecialAction,
	MAX,
};

// Enum FortniteGame.EGyroButtonResponse
enum class EGyroButtonResponse : uint8 {
	NoChange,
	Disable,
	Trackball,
	Invert,
	EGyroButtonResponse_MAX,
};

// Enum FortniteGame.EGyroAcceleration
enum class EGyroAcceleration : uint8 {
	Off,
	Low,
	Medium,
	High,
	Custom,
	Legacy,
	EGyroAcceleration_MAX,
};

// Enum FortniteGame.EGyroActiveMode
enum class EGyroActiveMode : uint8 {
	ScopeOnly,
	AimDownSightsOrFiring,
	ADSOrFiring,
	ADSOrFiringOrHarvestEquipped,
	All,
	EGyroActiveMode_MAX,
};

// Enum FortniteGame.EFortMotionYawAxis
enum class EFortMotionYawAxis : uint8 {
	Yaw,
	Roll,
	EFortMotionYawAxis_MAX,
};

// Enum FortniteGame.EFortInputActionGroup
enum class EFortInputActionGroup : uint8 {
	AllModes,
	Combat,
	Building,
	Movement,
	Edit,
	Death,
	Cinematic,
	Picker,
	Other,
	Interaction,
	AthenaLTMAbilities,
	ShoppingCart,
	ShoppingCartDriver,
	ShoppingCartPassenger,
	Cannon,
	CannonDriver,
	CannonPassenger,
	GolfCart,
	GolfCartDriver,
	GolfCartPassenger,
	QuadCrasher,
	QuadCrasherDriver,
	QuadCrasherPassenger,
	Biplane,
	BiplaneDriver,
	BiplanePassenger,
	Hamsterball,
	Jackal,
	Ostrich,
	OstrichDriver,
	OstrichPassenger,
	Meatball,
	MeatballDriver,
	MeatballPassenger,
	HoagieDriver,
	Dagwood,
	DagwoodDriver,
	DagwoodPassenger,
	Nevada,
	NevadaDriver,
	MountedTurret,
	Spectating,
	FullscreenMap,
	CreativeAll,
	CreativeModeratorMode,
	CreativeMoveToolEquipped,
	CreativeMoveObjectsFreely,
	CreativeMoveBuildingsOnGrid,
	CreativeFlying,
	CreativeIslandPanel,
	PropSelectorEquipped,
	DBNOCarryStart,
	DBNOCarryStop,
	DBNOCarry,
	InteractionStart,
	InteractionStop,
	BattleLab,
	SuperDuper,
	Tether,
	CombatAndBuilding,
	CombatAndAthenaLTMAbilities,
	CombatBuildingAndAthenaLTMAbilities,
	EFortInputActionGroup_MAX,
};

// Enum FortniteGame.EFortInputActionType
enum class EFortInputActionType : uint8 {
	Press,
	Click,
	Hold,
	Release,
	EFortInputActionType_MAX,
};

// Enum FortniteGame.EFortInputDevice
enum class EFortInputDevice : uint8 {
	Mouse,
	Keyboard,
	Gamepad,
	Touch,
	EFortInputDevice_MAX,
};

// Enum FortniteGame.EItemInteractionStatus
enum class EItemInteractionStatus : uint8 {
	Interrupted,
	Completed,
	TimedOut,
	EItemInteractionStatus_MAX,
};

// Enum FortniteGame.EItemInteractionType
enum class EItemInteractionType : uint8 {
	Search,
	LockOnSearch,
	None,
	EItemInteractionType_MAX,
};

// Enum FortniteGame.EBodyPartVisibilityGrouping
enum class EBodyPartVisibilityGrouping : uint8 {
	AllParts,
	AllButHead,
	OnlyBackBling,
	BackBlingAndCharm,
	OnlyBody,
	OnlyHead,
	OnlyTail,
	EBodyPartVisibilityGrouping_MAX,
};

// Enum FortniteGame.EFortDBNOCarryEvent
enum class EFortDBNOCarryEvent : uint8 {
	PickedUp,
	Interrogating,
	Dropped,
	Thrown,
	EFortDBNOCarryEvent_MAX,
};

// Enum FortniteGame.EUpdateCustomDepthOptimDirtyFlags
enum class EUpdateCustomDepthOptimDirtyFlags : uint8 {
	None,
	CharacterParts,
	Weapon,
	PossessedProp,
	EUpdateCustomDepthOptimDirtyFlags_MAX,
};

// Enum FortniteGame.EBackpackType
enum class EBackpackType : uint8 {
	Jetpack,
	Medic,
	StormTracker,
	Glider,
	EBackpackType_MAX,
};

// Enum FortniteGame.EFortPawnState
enum class EFortPawnState : uint8 {
	Default,
	InCombat,
	DBNO,
	IsReviving,
	BeingRevived,
	Dead,
	EFortPawnState_MAX,
};

// Enum FortniteGame.ECustomFeedFilterParticipantNames
enum class ECustomFeedFilterParticipantNames : uint8 {
	NoFiltering,
	AllPlayers,
	ECustomFeedFilterParticipantNames_MAX,
};

// Enum FortniteGame.EFortPlayerSurveyAnalyticsFinishReason
enum class EFortPlayerSurveyAnalyticsFinishReason : uint8 {
	Submitted,
	Canceled,
	EFortPlayerSurveyAnalyticsFinishReason_MAX,
};

// Enum FortniteGame.EFortPlayerSurveyQuestionPresentationStyle
enum class EFortPlayerSurveyQuestionPresentationStyle : uint8 {
	Invalid,
	Standard,
	MultipleChoice_Rating,
	Num,
	EFortPlayerSurveyQuestionPresentationStyle_MAX,
};

// Enum FortniteGame.EFortPlayerSurveyQuestionTypeLegacy
enum class EFortPlayerSurveyQuestionTypeLegacy : uint8 {
	Invalid,
	MultipleChoice,
	MultipleSelection,
	FreeFormText,
	Num,
	EFortPlayerSurveyQuestionTypeLegacy_MAX,
};

// Enum FortniteGame.EVehicleTrickType
enum class EVehicleTrickType : uint8 {
	None,
	RollIncrement,
	ReverseRollIncrement,
	YawIncrement,
	ReverseYawIncrement,
	PitchIncrement,
	ReversePitchIncrement,
	HeightIncrement,
	DistanceIncrement,
	AirTimeIncrement,
	ShoppingCart_Flying,
	ShoppingCart_Stooping,
	StartedLanding,
	FailedLanding,
	Cancelled,
	StuckLanding,
	Count,
	EVehicleTrickType_MAX,
};

// Enum FortniteGame.EVehicleTrickAxis
enum class EVehicleTrickAxis : uint8 {
	X,
	XNeg,
	Y,
	YNeg,
	Z,
	ZNeg,
	Count,
	EVehicleTrickAxis_MAX,
};

// Enum FortniteGame.EFortGameType
enum class EFortGameType : uint8 {
	BR,
	Creative,
	CreativeLTM,
	Playground,
	STW,
	BRArena,
	BRLTM,
	Social,
	MAX,
};

// Enum FortniteGame.EDBNOType
enum class EDBNOType : uint8 {
	On,
	Off,
	NotWhenRespawning,
	EDBNOType_MAX,
};

// Enum FortniteGame.EWeaponSelectionPreservationType
enum class EWeaponSelectionPreservationType : uint8 {
	KeepSelectionWhenRespawning,
	NeverKeepSelection,
	EWeaponSelectionPreservationType_MAX,
};

// Enum FortniteGame.ERewardPlacementBonusType
enum class ERewardPlacementBonusType : uint8 {
	Solo,
	Duo,
	Squad,
	LargeTeam,
	None,
	TwoTeam,
	MediumTeam,
	QuickSolo,
	QuickDuo,
	QuickSquad,
	QuickLargeTeam,
	QuickTwoTeam,
	QuickMediumTeam,
	SinglePlacement,
	ERewardPlacementBonusType_MAX,
};

// Enum FortniteGame.ERewardTimePlayedType
enum class ERewardTimePlayedType : uint8 {
	Default,
	NoReward,
	FlatValue,
	ERewardTimePlayedType_MAX,
};

// Enum FortniteGame.EAthenaWinCondition
enum class EAthenaWinCondition : uint8 {
	LastManStanding,
	LastManStandingIncludingAllies,
	TimedTeamFinalFight,
	FirstToGoalScore,
	TimedLastMenStanding,
	MutatorControlled,
	MutatorControlledGoalScore,
	MutatorControlledChinaSupported,
	EAthenaWinCondition_MAX,
};

// Enum FortniteGame.EAthenaRespawnLocation
enum class EAthenaRespawnLocation : uint8 {
	LastDeath,
	CreativePlayerStart,
	EAthenaRespawnLocation_MAX,
};

// Enum FortniteGame.EAthenaRespawnType
enum class EAthenaRespawnType : uint8 {
	None,
	InfiniteRespawn,
	InfiniteRespawnExceptStorm,
	EAthenaRespawnType_MAX,
};

// Enum FortniteGame.ECustomGameVoiceChannel
enum class ECustomGameVoiceChannel : uint8 {
	Squad,
	FullTeam,
	ECustomGameVoiceChannel_MAX,
};

// Enum FortniteGame.EPlaylistVisibilityState
enum class EPlaylistVisibilityState : uint8 {
	Enabled,
	Disabled,
	EnabledButInvisible,
	Hidden,
	EPlaylistVisibilityState_MAX,
};

// Enum FortniteGame.EPlaylistAdvertisementType
enum class EPlaylistAdvertisementType : uint8 {
	None,
	New,
	Updated,
	EPlaylistAdvertisementType_MAX,
};

// Enum FortniteGame.EPlaysetOffsetType
enum class EPlaysetOffsetType : uint8 {
	CustomOffsetFromCorner,
	Center,
	EPlaysetOffsetType_MAX,
};

// Enum FortniteGame.EFortPlayspaceMatchmakingRules
enum class EFortPlayspaceMatchmakingRules : uint8 {
	AllPlaylists,
	SpecificPlaylists,
	EFortPlayspaceMatchmakingRules_MAX,
};

// Enum FortniteGame.EFortPlayspaceUserAcceptanceType
enum class EFortPlayspaceUserAcceptanceType : uint8 {
	CustomLogic,
	Matchmaking,
	VolumeBased,
	EFortPlayspaceUserAcceptanceType_MAX,
};

// Enum FortniteGame.EPortalLinkCodeLockMode
enum class EPortalLinkCodeLockMode : uint8 {
	NeverLocked,
	WindowLocked,
	AlwaysLocked,
	EPortalLinkCodeLockMode_MAX,
};

// Enum FortniteGame.EFortPreferredItemSlotItemType
enum class EFortPreferredItemSlotItemType : uint8 {
	Unassigned,
	AssaultRifle,
	Shotgun,
	SMG,
	Pistol,
	Sniper,
	Bow,
	Launcher,
	Utility,
	Consumable,
	Num,
	EFortPreferredItemSlotItemType_MAX,
};

// Enum FortniteGame.EProfileGoState
enum class EProfileGoState : uint8 {
	None,
	SettlingLocation,
	RunningCommands,
	CompletedScenario,
	Summary,
	Completed,
	EProfileGoState_MAX,
};

// Enum FortniteGame.EProjectileWaterHitBehavior
enum class EProjectileWaterHitBehavior : uint8 {
	Overlap,
	StopIfStopSimulatingOnHit,
	StopOnOverlap,
	EProjectileWaterHitBehavior_MAX,
};

// Enum FortniteGame.EFortIdleDetectionState
enum class EFortIdleDetectionState : uint8 {
	Disabled,
	Default,
	Suspicious,
	Problematic,
	Inactive,
	EFortIdleDetectionState_MAX,
};

// Enum FortniteGame.EFortPointsFromNavGraphGoalPathDistanceFilterOperator
enum class EFortPointsFromNavGraphGoalPathDistanceFilterOperator : uint8 {
	AllGoalsInRange,
	AnyGoalInRange,
	EFortPointsFromNavGraphGoalPathDistanceFilterOperator_MAX,
};

// Enum FortniteGame.EFortTestGoalActorDot
enum class EFortTestGoalActorDot : uint8 {
	Dot3D,
	Dot2D,
	EFortTestGoalActorDot_MAX,
};

// Enum FortniteGame.EDistanceMode
enum class EDistanceMode : uint8 {
	DistItemToContext,
	DistItemGoalActorToContext,
	DistItemToItemGoalActor,
	EDistanceMode_MAX,
};

// Enum FortniteGame.ECountAIAssignedToType
enum class ECountAIAssignedToType : uint8 {
	Goal,
	Actor,
	Assignment,
	ECountAIAssignedToType_MAX,
};

// Enum FortniteGame.ETwoPointSolverRotationA
enum class ETwoPointSolverRotationA : uint8 {
	PointAToQuerier,
	QuerierToPointA,
	PointAToQuerierWithRandomOffset,
	QuerierToPointAWithRandomOffset,
	Custom,
	ETwoPointSolverRotationA_MAX,
};

// Enum FortniteGame.EObjectiveStatusUpdateType
enum class EObjectiveStatusUpdateType : uint8 {
	Always,
	OnPercent,
	OnComplete,
	Never,
	EObjectiveStatusUpdateType_MAX,
};

// Enum FortniteGame.EFortQuestRewardType
enum class EFortQuestRewardType : uint8 {
	BasicRewards,
	BasicPlusSingleChoice,
	EFortQuestRewardType_MAX,
};

// Enum FortniteGame.EFortQuestSubtype
enum class EFortQuestSubtype : uint8 {
	None,
	WeeklyChallenge,
	PunchCard,
	QuickChallenge,
	Milestone,
	UrgentQuest,
	EFortQuestSubtype_MAX,
};

// Enum FortniteGame.EFortQuestType
enum class EFortQuestType : uint8 {
	Task,
	Optional,
	DailyQuest,
	TransientQuest,
	SurvivorQuest,
	Achievement,
	Onboarding,
	StreamBroadcaster,
	StreamViewer,
	StreamSubscriber,
	Athena,
	AthenaDailyQuest,
	AthenaEvent,
	AthenaChallengeBundleQuest,
	AthenaTransientQuest,
	All,
	EFortQuestType_MAX,
};

// Enum FortniteGame.ECosmeticType
enum class ECosmeticType : uint8 {
	Image,
	Widget,
	ECosmeticType_MAX,
};

// Enum FortniteGame.EFortQuestMapNodeLabelPosition
enum class EFortQuestMapNodeLabelPosition : uint8 {
	Top,
	Bottom,
	EFortQuestMapNodeLabelPosition_MAX,
};

// Enum FortniteGame.EFortQuestMapNodeType
enum class EFortQuestMapNodeType : uint8 {
	MandatoryQuest,
	SideQuest,
	EFortQuestMapNodeType_MAX,
};

// Enum FortniteGame.EInlineObjectiveStatTagCheckEntryType
enum class EInlineObjectiveStatTagCheckEntryType : uint8 {
	Target,
	Source,
	Context,
	EInlineObjectiveStatTagCheckEntryType_MAX,
};

// Enum FortniteGame.EFortXPPropagationRule
enum class EFortXPPropagationRule : uint8 {
	Self,
	Party,
	Squad,
	EFortXPPropagationRule_MAX,
};

// Enum FortniteGame.EFortQuestObjectiveItemEvent
enum class EFortQuestObjectiveItemEvent : uint8 {
	Craft,
	Collect,
	Acquire,
	Consume,
	OpenCardPack,
	PurchaseCardPack,
	Convert,
	Upgrade,
	UpgradeRarity,
	QuestComplete,
	AssignWorker,
	LevelUpCollectionBook,
	LevelUpAthenaSeason,
	LevelUpBattlePass,
	GainAthenaSeasonXp,
	HasItem,
	HasAccumulatedItem,
	SlotInCollection,
	AlterationRespec,
	AlterationUpgrade,
	HasCompletedQuest,
	HasAssignedWorker,
	HasUpgraded,
	HasConverted,
	HasUpgradedRarity,
	HasLeveledUpCollectionBook,
	SlotHeroInLoadout,
	HasLeveledUpAthenaSeason,
	HasLeveledUpBattlePass,
	HasGainedAthenaSeasonXp,
	MinigameTime,
	Max_None,
	EFortQuestObjectiveItemEvent_MAX,
};

// Enum FortniteGame.EFortChallengeBundleInfoLockedReasonCode
enum class EFortChallengeBundleInfoLockedReasonCode : uint8 {
	Unlocked,
	NoKnownUnlockMethod,
	PurchaseTheBattlePass,
	ReachSpecificTier,
	TimeLeftBeforeUnlock,
	EFortChallengeBundleInfoLockedReasonCode_MAX,
};

// Enum FortniteGame.EFortQuestState
enum class EFortQuestState : uint8 {
	Inactive,
	Active,
	Completed,
	Claimed,
	EFortQuestState_MAX,
};

// Enum FortniteGame.ERegisteredPlayerUnregistrationStatus
enum class ERegisteredPlayerUnregistrationStatus : uint8 {
	Registered,
	UnregistrationStarting,
	UnregistrationWaitingForInitialLock,
	UnregistrationWaitingForScoreSave,
	UnregistrationWaitingForFinalSave,
	UnregistrationWaitingForProfileUnlock,
	UnregistrationComplete,
	ERegisteredPlayerUnregistrationStatus_MAX,
};

// Enum FortniteGame.EJoinServerState
enum class EJoinServerState : uint8 {
	Inactive,
	Rejoin,
	Tutorial,
	Abandon,
	EJoinServerState_MAX,
};

// Enum FortniteGame.EEventMatchScreen
enum class EEventMatchScreen : uint8 {
	None,
	ActivePlayerGrid,
	EliminatedPlayerGrid,
	MatchStatus,
	Scoreboard,
	EEventMatchScreen_MAX,
};

// Enum FortniteGame.EDroneFollowMode
enum class EDroneFollowMode : uint8 {
	None,
	ForceFacingLocation,
	ForceFacingFollowedPlayer,
	TetherToFollowedPlayer,
	MAX,
};

// Enum FortniteGame.EHighlightSignificances
enum class EHighlightSignificances : uint8 {
	NotSignificant,
	SomewhatSignificant,
	Significant,
	VerySignificant,
	Critical,
	EHighlightSignificances_MAX,
};

// Enum FortniteGame.EHighlightFeatures
enum class EHighlightFeatures : uint8 {
	INVALID,
	FollowingPlayerKill,
	FollowingPlayerDeath,
	InterestingDeathCause,
	BusyBuilder,
	FastMover,
	LongDistanceKill,
	Multikill,
	StormCloudAction,
	WinningMoment,
	PlacementScore,
	FollowingPlayerKillDBNO,
	FollowingPlayerDBNOFinished,
	MaxLongKillDistance,
	VehicleMultikill,
	VehiclePlayerLaunchDistance,
	VehicleKills,
	MaxMidFallKillTime,
	MaxMidFallNoScopeKillTime,
	MaxMidFallKillSpeed,
	MaxMidFallNoScopeSpeed,
	FallingElimination,
	VehicleUsage,
	COUNT,
	EHighlightFeatures_MAX,
};

// Enum FortniteGame.EClassRepNodeMapping
enum class EClassRepNodeMapping : uint8 {
	NotRouted,
	RelevantAllConnections,
	RelevantAllInsideFortVolume,
	Spatialize_Static,
	Spatialize_Dynamic,
	Spatialize_Dormancy,
	Instance_Dynamic,
	EClassRepNodeMapping_MAX,
};

// Enum FortniteGame.ECrucibleWhitelistOverride
enum class ECrucibleWhitelistOverride : uint8 {
	DoNothing,
	ForceOn,
	ForceOff,
	ECrucibleWhitelistOverride_MAX,
};

// Enum FortniteGame.EFortItemShopSection
enum class EFortItemShopSection : uint8 {
	RMTItemOffer,
	Featured,
	Daily,
	SpecialFeatured,
	SpecialDaily,
	Standalone,
	CommunityChoice,
	MegaBundle,
	BattlePass,
	MAX_None,
	EFortItemShopSection_MAX,
};

// Enum FortniteGame.EFortRuntimeOptionTabStateTarget
enum class EFortRuntimeOptionTabStateTarget : uint8 {
	All,
	Primary,
	Secondary,
	EFortRuntimeOptionTabStateTarget_MAX,
};

// Enum FortniteGame.EFortRuntimeOptionTabState
enum class EFortRuntimeOptionTabState : uint8 {
	Default,
	Disabled,
	Hidden,
	EFortRuntimeOptionTabState_MAX,
};

// Enum FortniteGame.ENewsExternalURLMode
enum class ENewsExternalURLMode : uint8 {
	PatchNotes,
	UpdateNotes,
	MoreInformation,
	ENewsExternalURLMode_MAX,
};

// Enum FortniteGame.EFortSafeZoneState
enum class EFortSafeZoneState : uint8 {
	None,
	Starting,
	Holding,
	Shrinking,
	EFortSafeZoneState_MAX,
};

// Enum FortniteGame.EFortUIScoreType
enum class EFortUIScoreType : uint8 {
	Combat,
	Building,
	Utility,
	Badges,
	Bonus,
	Total,
	Max_None,
	EFortUIScoreType_MAX,
};

// Enum FortniteGame.EFortScriptedActionEnvironment
enum class EFortScriptedActionEnvironment : uint8 {
	FrontEnd,
	GameServer,
	GameClient,
	Max_None,
	EFortScriptedActionEnvironment_MAX,
};

// Enum FortniteGame.EFortScriptedActionSource
enum class EFortScriptedActionSource : uint8 {
	Quest,
	Token,
	Manual,
	Max_None,
	EFortScriptedActionSource_MAX,
};

// Enum FortniteGame.EServerManifestOutputFormat
enum class EServerManifestOutputFormat : uint8 {
	FlatFile,
	Json,
	HTTP,
	EServerManifestOutputFormat_MAX,
};

// Enum FortniteGame.EServerManifestCommandType
enum class EServerManifestCommandType : uint8 {
	Move,
	Copy,
	Unknown,
	EServerManifestCommandType_MAX,
};

// Enum FortniteGame.EFortSessionHelperJoinState
enum class EFortSessionHelperJoinState : uint8 {
	NotJoining,
	RequestingReservation,
	FailedReservation,
	WaitingOnGame,
	AttemptingJoin,
	JoiningSession,
	FailedJoin,
	CanceledJoin,
	EFortSessionHelperJoinState_MAX,
};

// Enum FortniteGame.ESkeletalAudioBoneVelocityType
enum class ESkeletalAudioBoneVelocityType : uint8 {
	Linear,
	Rotational,
	Custom,
	ESkeletalAudioBoneVelocityType_MAX,
};

// Enum FortniteGame.ESkeletalAudioBoneSpace
enum class ESkeletalAudioBoneSpace : uint8 {
	Relative,
	World,
	ESkeletalAudioBoneSpace_MAX,
};

// Enum FortniteGame.ESkeletalAudioBoneEvent
enum class ESkeletalAudioBoneEvent : uint8 {
	None,
	SlowThresholdStart,
	SlowThresholdStop,
	MediumThreshold,
	FastThreshold,
	ESkeletalAudioBoneEvent_MAX,
};

// Enum FortniteGame.EFortPowerRatingComparison
enum class EFortPowerRatingComparison : uint8 {
	InRange,
	OverLevel,
	UnderLevel,
	Unknown,
	EFortPowerRatingComparison_MAX,
};

// Enum FortniteGame.EFortInvalidActivityReason
enum class EFortInvalidActivityReason : uint8 {
	None,
	PartyTooBig,
	PartyTooSmall,
	NotPartyLeader,
	MatchmakingAlready,
	InvalidData,
	EFortInvalidActivityReason_MAX,
};

// Enum FortniteGame.EAcceptFriendInviteFailureReason
enum class EAcceptFriendInviteFailureReason : uint8 {
	InviterTooManyFriends,
	SelfTooManyFriends,
	UnknownError,
	EAcceptFriendInviteFailureReason_MAX,
};

// Enum FortniteGame.ESendFriendInviteFailureReason
enum class ESendFriendInviteFailureReason : uint8 {
	NotFound,
	AlreadyFriends,
	InvitePending,
	AddingSelfFail,
	AddingBlockedFail,
	AutoDeclined,
	BlockedByTarget,
	InviteeInboxFull,
	SelfOutboxFull,
	UnknownError,
	ESendFriendInviteFailureReason_MAX,
};

// Enum FortniteGame.EFortSocialFriendRequestMethod
enum class EFortSocialFriendRequestMethod : uint8 {
	LobbySuggestion,
	LobbyPlayerPanel,
	MassImportPlatformFriends,
	AutoImportPlatformFriends,
	PartyContextRewriteHelper,
	EFortSocialFriendRequestMethod_MAX,
};

// Enum FortniteGame.EFortSoundIndicatorTypes
enum class EFortSoundIndicatorTypes : uint8 {
	Generic,
	FootStep,
	Gunshot,
	Chest,
	Glider,
	Vehicle,
	COUNT,
	EFortSoundIndicatorTypes_MAX,
};

// Enum FortniteGame.EFortSpawnActorTime
enum class EFortSpawnActorTime : uint8 {
	PostPlaylistLoad,
	StartOfStormHoldTime,
	EFortSpawnActorTime_MAX,
};

// Enum FortniteGame.ESplineWaterAudioFacingDirection
enum class ESplineWaterAudioFacingDirection : uint8 {
	None,
	Inwards,
	Outwards,
	ESplineWaterAudioFacingDirection_MAX,
};

// Enum FortniteGame.ESplineWaterAudioWindingOrder
enum class ESplineWaterAudioWindingOrder : uint8 {
	Clockwise,
	Counterclockwise,
	ESplineWaterAudioWindingOrder_MAX,
};

// Enum FortniteGame.EFortEventConditionType
enum class EFortEventConditionType : uint8 {
	EFEC_StatCompare,
	EFEC_MAX,
};

// Enum FortniteGame.EFortCompare
enum class EFortCompare : uint8 {
	EFC_LessThan,
	EFC_LessThanOrEqual,
	EFC_GreaterThan,
	EFC_GreaterThanOrEqual,
	EFC_Equals,
	EFC_MAX,
};

// Enum FortniteGame.EFortEventRepeat
enum class EFortEventRepeat : uint8 {
	EFER_Inactive,
	EFER_Always,
	EFER_OncePerPlayer,
	EFER_OncePerCampaign,
	EFER_OncePerMap,
	EFER_MAX,
};

// Enum FortniteGame.EFortStatType
enum class EFortStatType : uint8 {
	Fortitude,
	Offense,
	Resistance,
	Technology,
	Fortitude_Team,
	Offense_Team,
	Resistance_Team,
	Technology_Team,
	Invalid,
	EFortStatType_MAX,
};

// Enum FortniteGame.UCPTypes
enum class UCPTypes : uint8 {
	UCPAudio,
	UCPVideo,
	UCPBoth,
	UCPNone,
	UCPTypes_MAX,
};

// Enum FortniteGame.ESupplyDropItemTrackType
enum class ESupplyDropItemTrackType : uint8 {
	SpecialActors,
	ESupplyDropItemTrackType_MAX,
};

// Enum FortniteGame.ESupplyDropSpawnType
enum class ESupplyDropSpawnType : uint8 {
	SafeZoneDriven,
	ItemDeliveryManagement,
	MutatorManaged,
	ESupplyDropSpawnType_MAX,
};

// Enum FortniteGame.EFortSwimmingAudioType
enum class EFortSwimmingAudioType : uint8 {
	Normal,
	Sprint,
	SprintStart,
	PickaxeSwing,
	NormalDBNO,
	SprintBoostStart,
	SwimStart,
	SwimEnd,
	Max_None,
	EFortSwimmingAudioType_MAX,
};

// Enum FortniteGame.EFortAutoTestState
enum class EFortAutoTestState : uint8 {
	InitialLoad,
	Login,
	FrontendLoad,
	FrontendPvELoad,
	FrontendPvETest,
	PvEMatchmaking,
	ZoneLoad,
	ZoneTest,
	Finished,
	MAX,
};

// Enum FortniteGame.EReplaySmokeTestStep
enum class EReplaySmokeTestStep : uint8 {
	Setup,
	TogglePause,
	StepForward,
	StepBackward,
	StepToEnd,
	StepToBeginning,
	SpeedUpPlayback,
	SlowDownPlayback,
	ToggleHideTimeline,
	IterateCameraModes,
	TogglePlayerOutlines,
	ToggleNamePlates,
	ToggleReplayRegion,
	ZoomIn,
	ZoomOut,
	ToggleAutoFollowThirdPerson,
	IncreaseExposure,
	DecreaseExposure,
	SetAutoExposure,
	IncreaseAperture,
	DecreaseAperture,
	IncreaseFocalLength,
	DecreaseFocalLength,
	IncreaseFocusDistance,
	DecreaseFocusDistance,
	SetAutoFocus,
	ToggleDamageEffects,
	ToggleHideUI,
	ToggleMap,
	Reset,
	MAX,
};

// Enum FortniteGame.EFortTheaterType
enum class EFortTheaterType : uint8 {
	Standard,
	Elder,
	PvP,
	PvP2,
	Tutorial,
	TutorialGate,
	Max_None,
	EFortTheaterType_MAX,
};

// Enum FortniteGame.EFortTheaterMapTileType
enum class EFortTheaterMapTileType : uint8 {
	Normal,
	CriticalMission,
	AlwaysActive,
	Outpost,
	NonMission,
	PvPFOB,
	EFortTheaterMapTileType_MAX,
};

// Enum FortniteGame.EFortMapNavigationDirection
enum class EFortMapNavigationDirection : uint8 {
	North,
	NorthEast,
	East,
	SouthEast,
	South,
	SouthWest,
	West,
	NorthWest,
	Invalid,
	EFortMapNavigationDirection_MAX,
};

// Enum FortniteGame.EFortMissionQuestValidityResult
enum class EFortMissionQuestValidityResult : uint8 {
	Invalid,
	InvalidNotPlayable,
	ValidLinked,
	ValidObjectiveCondition,
	ValidFallback,
	EFortMissionQuestValidityResult_MAX,
};

// Enum FortniteGame.EThresholdRequirement
enum class EThresholdRequirement : uint8 {
	LessThan,
	LessThanOrEqual,
	Equal,
	GreaterThan,
	GreaterThanOrEqual,
	EThresholdRequirement_MAX,
};

// Enum FortniteGame.ECollectionSelectionMethod
enum class ECollectionSelectionMethod : uint8 {
	TierAsIndex,
	TierAsIndexOverflowToLastValid,
	Modulo,
	Random,
	None,
	ECollectionSelectionMethod_MAX,
};

// Enum FortniteGame.EGlobalWeatherState
enum class EGlobalWeatherState : uint8 {
	Inactive,
	Active,
	BlendingIn,
	BlendingOut,
	EGlobalWeatherState_MAX,
};

// Enum FortniteGame.EWidgetInterfaceTimerStatus
enum class EWidgetInterfaceTimerStatus : uint8 {
	None,
	Active,
	Paused,
	Inactive,
	EWidgetInterfaceTimerStatus_MAX,
};

// Enum FortniteGame.EFortTipDisplayPlatformGroup
enum class EFortTipDisplayPlatformGroup : uint8 {
	None,
	Desktop,
	Console,
	Switch,
	Mobile,
	EFortTipDisplayPlatformGroup_MAX,
};

// Enum FortniteGame.EPayoutScoringType
enum class EPayoutScoringType : uint8 {
	Invalid,
	Points,
	Ranking,
	Percentile,
	Persistent,
	EPayoutScoringType_MAX,
};

// Enum FortniteGame.EPayoutRewardType
enum class EPayoutRewardType : uint8 {
	Invalid,
	Commerce,
	GameRelated,
	Token,
	Score,
	EPayoutRewardType_MAX,
};

// Enum FortniteGame.ETournamentDisplayType
enum class ETournamentDisplayType : uint8 {
	Default,
	Creative,
	ETournamentDisplayType_MAX,
};

// Enum FortniteGame.EScoreMatchOperator
enum class EScoreMatchOperator : uint8 {
	Invalid,
	LessThan,
	LessThanOrEqual,
	Equal,
	GreaterThan,
	GreaterThanOrEqual,
	EScoreMatchOperator_MAX,
};

// Enum FortniteGame.FTowhookExtensionState
enum class FTowhookExtensionState : uint8 {
	Hold,
	Extend,
	Contract,
	FTowhookExtensionState_MAX,
};

// Enum FortniteGame.EMessageFeedSubject
enum class EMessageFeedSubject : uint8 {
	ToyOwner,
	OtherPlayerInteractingWithToy,
	EMessageFeedSubject_MAX,
};

// Enum FortniteGame.EMessageFeedRelationshipFilter
enum class EMessageFeedRelationshipFilter : uint8 {
	Anyone,
	SquadAndTeamMembers,
	SquadMembersOnly,
	SelfOnly,
	EMessageFeedRelationshipFilter_MAX,
};

// Enum FortniteGame.ETrackVerticality
enum class ETrackVerticality : uint8 {
	Floor,
	Ramp,
	GradualRamp,
	Max_None,
	ETrackVerticality_MAX,
};

// Enum FortniteGame.ETrackIncline
enum class ETrackIncline : uint8 {
	NoNeighbor,
	Flat,
	Up,
	Down,
	GradualUp,
	GradualDown,
	Max_None,
	ETrackIncline_MAX,
};

// Enum FortniteGame.ETrackPieceType
enum class ETrackPieceType : uint8 {
	None,
	Straight,
	Turn,
	TShape,
	Cross,
	Max_None,
	ETrackPieceType_MAX,
};

// Enum FortniteGame.ETrackDirection
enum class ETrackDirection : uint8 {
	YNegative,
	XPositive,
	YPositive,
	XNegative,
	Max_None,
	ETrackDirection_MAX,
};

// Enum FortniteGame.EFortServerTickRate
enum class EFortServerTickRate : uint8 {
	UseDefault,
	Twenty,
	Thirty,
	EFortServerTickRate_MAX,
};

// Enum FortniteGame.EDuelState
enum class EDuelState : uint8 {
	Started,
	Won,
	Lost,
	EDuelState_MAX,
};

// Enum FortniteGame.EMissionStormShieldState
enum class EMissionStormShieldState : uint8 {
	IDLE,
	GROWING,
	SHRINKING,
	MAX,
};

// Enum FortniteGame.EDynamicBackgroudKey
enum class EDynamicBackgroudKey : uint8 {
	Lobby,
	Vault,
	Max_None,
	EDynamicBackgroudKey_MAX,
};

// Enum FortniteGame.EFortLeaderboardMetric
enum class EFortLeaderboardMetric : uint8 {
	Score,
	Kills,
	TeamScore,
	EFortLeaderboardMetric_MAX,
};

// Enum FortniteGame.UFortMatchmakingKnobsDataSource
enum class UFortMatchmakingKnobsDataSource : uint8 {
	None,
	Playlist,
	Mutator,
	GameMode,
	Permissions,
	UISettings,
	CreativeGlobalOption,
	Max,
};

// Enum FortniteGame.ECreativeItemCategory
enum class ECreativeItemCategory : uint8 {
	Prefabs,
	Devices,
	Weapons,
	Consumables,
	Gallery,
	None,
	ECreativeItemCategory_MAX,
};

// Enum FortniteGame.EFortPlaylistTeamSizeType
enum class EFortPlaylistTeamSizeType : uint8 {
	Solo,
	Duo,
	Trio,
	Squad,
	LargeTeam,
	MAX,
};

// Enum FortniteGame.EFortGameFeatureState
enum class EFortGameFeatureState : uint8 {
	Unknown,
	Unavailable,
	Downloading,
	DownloadFailed,
	Available,
	Preloading,
	Preloaded,
	Loading,
	Loaded,
	Count,
	EFortGameFeatureState_MAX,
};

// Enum FortniteGame.EFortGameFeature
enum class EFortGameFeature : uint8 {
	EarlyStartup,
	DedicatedServer,
	KairosInitial,
	KairosCapture,
	KairosLoadElectraPlayer,
	DanceRoyale,
	Frontend,
	GameplayAthena,
	GameplayCampaignTutorial,
	GameplayCampaign,
	GameplayCreative,
	Invalid,
	Count,
	EFortGameFeature_MAX,
};

// Enum FortniteGame.EFortStartupPhase
enum class EFortStartupPhase : uint8 {
	InitializingEngine,
	EarlyStartupLoading,
	EarlyStartupFinished,
	GameStartupLoading,
	GameStartupFinished,
	Invalid,
	Count,
	EFortStartupPhase_MAX,
};

// Enum FortniteGame.EFortCreativeAdColorPreset
enum class EFortCreativeAdColorPreset : uint8 {
	Default,
	Emphasized,
	Common,
	Uncommon,
	Rare,
	Epic,
	Legendary,
	EFortCreativeAdColorPreset_MAX,
};

// Enum FortniteGame.EFortCreativeAdType
enum class EFortCreativeAdType : uint8 {
	Default,
	Playset,
	Toy,
	Game,
	Island,
	Knob,
	EFortCreativeAdType_MAX,
};

// Enum FortniteGame.EEventTournamentType
enum class EEventTournamentType : uint8 {
	Online,
	Onsite,
	Test,
	Unknown,
	EEventTournamentType_MAX,
};

// Enum FortniteGame.EFortLobbyType
enum class EFortLobbyType : uint8 {
	Default,
	Tournament,
	Creative,
	Division,
	EFortLobbyType_MAX,
};

// Enum FortniteGame.EFortMatchmakingViolatorStyle
enum class EFortMatchmakingViolatorStyle : uint8 {
	None,
	Basic,
	HighStakes,
	Showdown,
	EFortMatchmakingViolatorStyle_MAX,
};

// Enum FortniteGame.EFortMatchmakingTileStyle
enum class EFortMatchmakingTileStyle : uint8 {
	None,
	Special,
	HighStakes,
	Showdown,
	EFortMatchmakingTileStyle_MAX,
};

// Enum FortniteGame.EFortErrorSeverity
enum class EFortErrorSeverity : uint8 {
	Unspecified,
	Silent,
	Passive,
	Blocking,
	SevereBlocking,
	EFortErrorSeverity_MAX,
};

// Enum FortniteGame.EFortPickerMode
enum class EFortPickerMode : uint8 {
	BuildingCategory,
	TrapCategory,
	WeaponCategory,
	SocialCategory,
	Building,
	Trap,
	TrapRadial,
	Weapon,
	Social,
	DirectPickEmote,
	DirectPickSpray,
	SquadQuickChat,
	WeaponsSlotted,
	BattleLabDevice,
	MusicSource,
	EFortPickerMode_MAX,
};

// Enum FortniteGame.EPTTState
enum class EPTTState : uint8 {
	Enabled,
	MicDisabled,
	AllSoundDisabled,
	EPTTState_MAX,
};

// Enum FortniteGame.EMobileInteractionIconTypes
enum class EMobileInteractionIconTypes : uint8 {
	Interact,
	Swap,
	Revive,
	Blocked,
	MAX,
};

// Enum FortniteGame.EAthenaPickerType
enum class EAthenaPickerType : uint8 {
	EditMode,
	Interact,
	MAX,
};

// Enum FortniteGame.EFortGliderType
enum class EFortGliderType : uint8 {
	Glider,
	Umbrella,
	EFortGliderType_MAX,
};

// Enum FortniteGame.EItemListViewDisplayType
enum class EItemListViewDisplayType : uint8 {
	World,
	Outpost,
	Account,
	DeployableBase,
	Max,
};

// Enum FortniteGame.EStormShieldDefense
enum class EStormShieldDefense : uint8 {
	NotSSD,
	StormShieldExpansion,
	WargameSimulation,
	EStormShieldDefense_MAX,
};

// Enum FortniteGame.EFortClientAnnouncementQueueType
enum class EFortClientAnnouncementQueueType : uint8 {
	Toasts,
	Stickies,
	Max,
};

// Enum FortniteGame.EFortNotificationQueueType
enum class EFortNotificationQueueType : uint8 {
	Toasts,
	Stickies,
	Messages,
	Max,
};

// Enum FortniteGame.EFortDialogResult
enum class EFortDialogResult : uint8 {
	Confirmed,
	Declined,
	Ignored,
	Killed,
	TimedOut,
	Unknown,
	EFortDialogResult_MAX,
};

// Enum FortniteGame.ETutorialType
enum class ETutorialType : uint8 {
	None,
	Callout,
	GuardScreen,
	WidgetIntro,
	Highlight,
	ETutorialType_MAX,
};

// Enum FortniteGame.EFortBangType
enum class EFortBangType : uint8 {
	Invalid,
	Custom,
	PlayTab,
	VaultTab,
	StoreTab,
	FriendsButton,
	PartyInviteButton,
	SubGameAccessChanged,
	DailyRewardsButton,
	QuestsButton,
	CompletedExpeditions,
	MainMenu,
	HelpMenu,
	VaultSchematics,
	VaultLeadSurvivors,
	VaultSurvivors,
	VaultHeroes,
	VaultDefenders,
	VaultResources,
	VaultMelee,
	VaultRanged,
	VaultConsumables,
	VaultIngredients,
	VaultTraps,
	BattlePassTab,
	SpecialEventTab,
	CosmeticsTab,
	CosmeticsOutfit,
	CosmeticGlider,
	CosmeticContrail,
	CosmeticBattleBus,
	CosmeticVehicle,
	CosmeticItemWrap,
	CosmeticCallingCard,
	CosmeticMapMarker,
	CosmeticMusicPack,
	CosmeticPetSkin,
	CosmeticLoadingScreen,
	CosmeticBackpack,
	CosmeticHat,
	CosmeticPickaxe,
	CosmeticDance,
	CosmeticCharm,
	AthenaDirectedAcquisitionTab,
	ItemShop_RMTItemOfferTab,
	ItemShop_FeaturedTab,
	ItemShop_DailyTab,
	ItemShop_SpecialFeaturedTab,
	ItemShop_SpecialDailyTab,
	ItemShop_StandaloneTab,
	ItemShop_CommunityVotingTab,
	ItemShop_MegaBundleTab,
	ItemShop_BattlePassTab,
	AthenaChallengesTab,
	AthenaShowdownTab,
	AthenaCareerTab,
	PlayerBanners,
	STWCommand,
	STWCommand_Heroes,
	STWCommand_Heroes_Manage,
	STWCommand_Heroes_HeroLoadout,
	STWCommand_Heroes_Defenders,
	STWCommand_Heroes_Expeditions,
	STWCommand_Survivors,
	STWCommand_Survivors_Manage,
	STWCommand_Survivors_Squads,
	STWCommand_Upgrades,
	STWCommand_Research,
	STWCommand_AccountXP,
	STWArmory,
	STWArmory_Schematics,
	STWArmory_Backpack,
	STWArmory_Storage,
	STWArmory_CollectionBook,
	STWArmory_Transform,
	STWArmory_Resources,
	STWLocker,
	EFortBangType_MAX,
};

// Enum FortniteGame.EItemShopNavigationAction
enum class EItemShopNavigationAction : uint8 {
	None,
	ShowOfferDetails,
	NavigateToOffer,
	EItemShopNavigationAction_MAX,
};

// Enum FortniteGame.EFortEventNameType
enum class EFortEventNameType : uint8 {
	Mission,
	Client,
	EFortEventNameType_MAX,
};

// Enum FortniteGame.EFortCraftFailCause
enum class EFortCraftFailCause : uint8 {
	Unknown,
	NotEnoughResources,
	InventoryFull,
	InsufficientTeamLevel,
	CraftingQueueFull,
	CurrentlyLocked,
	OverflowSchematic,
	EFortCraftFailCause_MAX,
};

// Enum FortniteGame.EKeepDefenseState
enum class EKeepDefenseState : uint8 {
	Inactive,
	Warmup,
	Defense,
	LastAlive,
	Max,
};

// Enum FortniteGame.EKeepContainerType
enum class EKeepContainerType : uint8 {
	Base,
	Storeroom,
	FirstAid,
	Armory,
	Workshop,
	AmmoStash,
	Max,
};

// Enum FortniteGame.EFortIndicatorState
enum class EFortIndicatorState : uint8 {
	Hidden,
	OnlyFriendsVisible,
	Visible,
	EFortIndicatorState_MAX,
};

// Enum FortniteGame.EFortAIUtility
enum class EFortAIUtility : uint8 {
	KillPlayersMelee,
	KillPlayersRanged,
	KillPlayersArtillery,
	DestroyBuildingsMelee,
	DestroyBuildingsRanged,
	DestroyBuildingsArtillery,
	DestroyTraps,
	Tank,
	Infiltrate,
	Mob,
	Support,
	Kiting,
	AreaOfDenial,
	DisableTraps,
	Dormant,
	Assassin,
	MAX,
};

// Enum FortniteGame.EFortTileEdgeType
enum class EFortTileEdgeType : uint8 {
	Undefined,
	Outer_2,
	Transition_3,
	Inner_4,
	Border_5,
	BorderTransitionSingle_6,
	BorderTransitionDouble_7,
	MAX,
};

// Enum FortniteGame.EFortMovementUrgency
enum class EFortMovementUrgency : uint8 {
	None,
	Low,
	Medium,
	High,
	NumLevels,
	EFortMovementUrgency_MAX,
};

// Enum FortniteGame.EFortMovementStyle
enum class EFortMovementStyle : uint8 {
	Running,
	Walking,
	Charging,
	Sprinting,
	PersonalVehicle,
	Flying,
	Tethered,
	Burrowing,
	EFortMovementStyle_MAX,
};

// Enum FortniteGame.EFortWeaponTriggerType
enum class EFortWeaponTriggerType : uint8 {
	OnPress,
	Automatic,
	OnRelease,
	OnPressAndRelease,
	EFortWeaponTriggerType_MAX,
};

// Enum FortniteGame.EFortDayPhasePrio
enum class EFortDayPhasePrio : uint8 {
	Default,
	DailySummary,
	EFortDayPhasePrio_MAX,
};

// Enum FortniteGame.EFortPawnDisplayContext
enum class EFortPawnDisplayContext : uint8 {
	BattleRoyale,
	VaultItemsFromOffer,
	VaultItem,
	VaultItems,
	VaultItemFromDefinition,
	CampaignFrontEndPlayer,
	CampaignNPC,
	CampaignHeroInspect,
	CampaignHeroLoadoutSupport,
	CampaignOutfitPicker,
	EFortPawnDisplayContext_MAX,
};

// Enum FortniteGame.EFortCustomCharmType
enum class EFortCustomCharmType : uint8 {
	Weapon,
	Lapel,
	Backpack1,
	Backpack2,
	NumTypes,
	EFortCustomCharmType_MAX,
};

// Enum FortniteGame.EFortDisplayGender
enum class EFortDisplayGender : uint8 {
	Unknown,
	Male,
	Female,
	NumTypes,
	EFortDisplayGender_MAX,
};

// Enum FortniteGame.EFortTargetSelectionFilter
enum class EFortTargetSelectionFilter : uint8 {
	Damageable,
	Everything,
	Pawns,
	Buildings,
	Walls,
	Traps,
	Players,
	AIPawns,
	Instigator,
	WeakSpots,
	World,
	Max,
};

// Enum FortniteGame.EFortWeaponType
enum class EFortWeaponType : uint8 {
	None,
	RangedAny,
	Pistol,
	Shotgun,
	Rifle,
	SMG,
	Sniper,
	GrenadeLauncher,
	RocketLauncher,
	Bow,
	Minigun,
	LMG,
	BiplaneGun,
	MeleeAny,
	Harvesting,
	MAX,
};

// Enum FortniteGame.EFortTargetSelectionTestType
enum class EFortTargetSelectionTestType : uint8 {
	Overlap,
	Swept,
	Ballistic,
	EFortTargetSelectionTestType_MAX,
};

// Enum FortniteGame.EFortTargetSelectionShape
enum class EFortTargetSelectionShape : uint8 {
	Sphere,
	Cone,
	Box,
	Capsule,
	Line,
	Cylinder,
	Custom,
	CustomOnSource,
	EFortTargetSelectionShape_MAX,
};

// Enum FortniteGame.EFortBrushSize
enum class EFortBrushSize : uint8 {
	VeryVerySmall,
	VerySmall,
	Small,
	Medium,
	Large,
	VeryLarge,
	EFortBrushSize_MAX,
};

// Enum FortniteGame.ESpecialActorStatType
enum class ESpecialActorStatType : uint8 {
	NumEliminationsNearby,
	TimeInWorld,
	PickupNumSpawns,
	PickupNumDespawns,
	PickupNumDropped,
	PickupNumTaken,
	PlayerWon,
	PlayerNumEliminations,
	PlayerNum,
	TotalStats,
	ESpecialActorStatType_MAX,
};

// Enum FortniteGame.EFortItemViewRotationMode
enum class EFortItemViewRotationMode : uint8 {
	None,
	BoundsPivot,
	World,
	Relative,
	EFortItemViewRotationMode_MAX,
};

// Enum FortniteGame.EChangeInStructDetected
enum class EChangeInStructDetected : uint8 {
	Dirty,
	Clean,
	EChangeInStructDetected_MAX,
};

// Enum FortniteGame.EFortInventoryCustomFilter
enum class EFortInventoryCustomFilter : uint8 {
	Mythic,
	Legendary,
	Epic,
	Rare,
	Uncommon,
	Common,
	EFortInventoryCustomFilter_MAX,
};

// Enum FortniteGame.EInventoryContentSortType
enum class EInventoryContentSortType : uint8 {
	ByName,
	ByRating,
	ByLevel,
	ByCategory,
	ByRarity,
	ByLocation,
	ByPersonality,
	ByBonus,
	BySubtype,
	ByGrantTime,
	Invalid,
	EInventoryContentSortType_MAX,
};

// Enum FortniteGame.EFortFrontendInventoryFilter
enum class EFortFrontendInventoryFilter : uint8 {
	Schematics,
	WorldItems,
	WorldItemsInGame,
	WorldItemsStorage,
	WorldItemsTransfer,
	ConsumablesAndAccountResources,
	Heroes,
	Defenders,
	Survivors,
	AthenaCharacter,
	AthenaBackpack,
	AthenaPickaxe,
	AthenaGliders,
	AthenaContrails,
	AthenaEmotes,
	AthenaItemWraps,
	AthenaLoadingScreens,
	AthenaLobbyMusic,
	AthenaCharm,
	HestiaWeapons,
	HestiaResources,
	StarlightInventory,
	Invisible,
	Max_None,
	EFortFrontendInventoryFilter_MAX,
};

// Enum FortniteGame.EFortInventoryFilter
enum class EFortInventoryFilter : uint8 {
	WeaponMelee,
	WeaponRanged,
	Ammo,
	Traps,
	Consumables,
	Ingredients,
	Gadget,
	Decorations,
	Badges,
	Heroes,
	LeadSurvivors,
	Survivors,
	Defenders,
	Resources,
	ConversionControl,
	AthenaCosmetics,
	Playset,
	CreativePlot,
	TeamPerk,
	Workers,
	Invisible,
	Max_None,
	EFortInventoryFilter_MAX,
};

// Enum FortniteGame.EFortItemCategoryOrdinal
enum class EFortItemCategoryOrdinal : uint8 {
	Primary,
	Secondary,
	Tertiary,
	EFortItemCategoryOrdinal_MAX,
};

// Enum FortniteGame.ESubGameMatchmakingStatus
enum class ESubGameMatchmakingStatus : uint8 {
	Disabled,
	Enabled,
	ESubGameMatchmakingStatus_MAX,
};

// Enum FortniteGame.ESubGameAccessStatus
enum class ESubGameAccessStatus : uint8 {
	Disabled,
	LimitedAccess,
	OpenAccess,
	ESubGameAccessStatus_MAX,
};

// Enum FortniteGame.EUIExtensionSlot
enum class EUIExtensionSlot : uint8 {
	Primary,
	TopRightCorner,
	GameInfoBox,
	Quickbar,
	QuickbarUnderlay,
	UpperCenter,
	CrosshairRight,
	UnderSquadInfo,
	FullScreenMap,
	BelowRespawnWidget,
	BelowCompass,
	UnderTeammateStatus,
	ControllerBindingCallout,
	AboveStormMessageSlot,
	CustomMinigameCallouts,
	UnderLocalPlayerInfo,
	PlayerHealthbarOverlay,
	InventoryScreenReplacement,
	Reticle,
	KillfeedSlot,
	PrioritizedContextualSlot,
	RightOfTeammateStatus,
	TeammateStatusPortraitOverlay,
	MobileHUDBottomRight,
	InventoryScreenTab,
	InventoryPanelSubTab,
	MiniMapOverlay,
	InventoryEquipSlot,
	InventoryItemInfo,
	HUDEquippedItemInfo,
	UnderneathTeammateStatusList,
	FullScreenMapSquadEliminationsOverlay,
	PrimaryQuickBarSlot,
	EUIExtensionSlot_MAX,
};

// Enum FortniteGame.EFortUIFriendNotificationType
enum class EFortUIFriendNotificationType : uint8 {
	Default,
	FriendRequest,
	PartyInvite,
	InviteFriendToParty,
	PartyRequest,
	AutoImportFriendSuggestion,
	PartyMemberCreated,
	EFortUIFriendNotificationType_MAX,
};

// Enum FortniteGame.EFortNotificationPriority
enum class EFortNotificationPriority : uint8 {
	Vote,
	Friend,
	BoostedXP,
	TwitchHigh,
	GeneralSendNotification,
	TwitchLow,
	Max,
};

// Enum FortniteGame.EFortNotificationType
enum class EFortNotificationType : uint8 {
	Default,
	Power,
	HealthWarning,
	Error,
	GiftSent,
	VoiceChannel,
	FriendSubscriptionNudge,
	DonutChallenge,
	HousepartyWelcome,
	HousepartyFOMO,
	HousepartyMic,
	IncomingFriendRequest,
	SocialNotification,
	BattlePassPageUnlock,
	Max,
};

// Enum FortniteGame.EFortContextualReticleTypes
enum class EFortContextualReticleTypes : uint8 {
	FCR_GenericFailure,
	FCR_Upgrade,
	FCR_Repair,
	FCR_Locked,
	FCR_Placement,
	FCR_Edit,
	FCR_NoTarget,
	FCR_InProgress,
	FCR_None,
	FCR_MAX,
};

// Enum FortniteGame.EFortUserCloudRequestResult
enum class EFortUserCloudRequestResult : uint8 {
	Success,
	Failure_CloudStorageDisabled,
	Failure_CloudStorageError,
	Failure_FileNotFoundInUserFileList,
	Failure_SavingNotAllowedForSpecifiedUser,
	EFortUserCloudRequestResult_MAX,
};

// Enum FortniteGame.EFortUserCloudRequestType
enum class EFortUserCloudRequestType : uint8 {
	LoadCloudFile,
	SaveCloudFile,
	EFortUserCloudRequestType_MAX,
};

// Enum FortniteGame.EFortValetVehicleType
enum class EFortValetVehicleType : uint8 {
	Default,
	Sport,
	BasicTruck,
	EFortValetVehicleType_MAX,
};

// Enum FortniteGame.EVehicleAudioTriggerDir
enum class EVehicleAudioTriggerDir : uint8 {
	Forward,
	Backward,
	EVehicleAudioTriggerDir_MAX,
};

// Enum FortniteGame.EVehicleAudioInterpolationType
enum class EVehicleAudioInterpolationType : uint8 {
	None,
	CustomCurve,
	Linear,
	EVehicleAudioInterpolationType_MAX,
};

// Enum FortniteGame.EVehicleFuelState
enum class EVehicleFuelState : uint8 {
	Uninitialized,
	UsingVehicleFuel,
	NotUsingVehicleFuel,
	EVehicleFuelState_MAX,
};

// Enum FortniteGame.EVehicleSessionEndReason
enum class EVehicleSessionEndReason : uint8 {
	Invalid,
	NoPassengers,
	EVehicleSessionEndReason_MAX,
};

// Enum FortniteGame.EVehicleMovementMode
enum class EVehicleMovementMode : uint8 {
	OnGround,
	InAir,
	WipeOut,
	MaxCount,
	EVehicleMovementMode_MAX,
};

// Enum FortniteGame.ETryExitVehicleBehavior
enum class ETryExitVehicleBehavior : uint8 {
	DoNotForce,
	ForceOnBlocking,
	ForceAlways,
	ETryExitVehicleBehavior_MAX,
};

// Enum FortniteGame.EFortVisibilityBehavior
enum class EFortVisibilityBehavior : uint8 {
	Proximity,
	OnceSeenAlwaysSeen,
	AlwaysSeen,
	Invalid,
	EFortVisibilityBehavior_MAX,
};

// Enum FortniteGame.EVolumeValidityResult
enum class EVolumeValidityResult : uint8 {
	Valid,
	Invalid,
	EVolumeValidityResult_MAX,
};

// Enum FortniteGame.EFortWeaponAbilityRemovalPolicy
enum class EFortWeaponAbilityRemovalPolicy : uint8 {
	GameDefault,
	Remove,
	Persist,
	EFortWeaponAbilityRemovalPolicy_MAX,
};

// Enum FortniteGame.EFortWeaponAbilityRemovalReason
enum class EFortWeaponAbilityRemovalReason : uint8 {
	RemovedFromInventory,
	EndPlay,
	Unequipped,
	INVALID_MAX,
	EFortWeaponAbilityRemovalReason_MAX,
};

// Enum FortniteGame.EFortWeaponReduceMeshWorkSetting
enum class EFortWeaponReduceMeshWorkSetting : uint8 {
	DisableTick,
	DontReduceWork,
	HandledInAnimInstance,
	EFortWeaponReduceMeshWorkSetting_MAX,
};

// Enum FortniteGame.EFortWeaponChargeStateForFireFX
enum class EFortWeaponChargeStateForFireFX : uint8 {
	Partial,
	Full,
	Over,
	Max_None,
	EFortWeaponChargeStateForFireFX_MAX,
};

// Enum FortniteGame.EFortReloadMontageSection
enum class EFortReloadMontageSection : uint8 {
	Intro,
	Loop,
	Outro,
	EFortReloadMontageSection_MAX,
};

// Enum FortniteGame.EFortRecoilCurveType
enum class EFortRecoilCurveType : uint8 {
	WithTime,
	WithOverheat,
	EFortRecoilCurveType_MAX,
};

// Enum FortniteGame.EFortDisplayTier
enum class EFortDisplayTier : uint8 {
	Invalid,
	Handmade,
	Copper,
	Silver,
	Malachite,
	Obsidian,
	Brightcore,
	Spectrolite,
	Shadowshard,
	Sunbeam,
	Moonglow,
	EFortDisplayTier_MAX,
};

// Enum FortniteGame.EFortMeleeFX
enum class EFortMeleeFX : uint8 {
	Idle,
	Swing,
	AnimTrail,
	EFortMeleeFX_MAX,
};

// Enum FortniteGame.EFortDualWieldStance
enum class EFortDualWieldStance : uint8 {
	TwoPicksInUse,
	SinglePickDataDriven,
	EFortDualWieldStance_MAX,
};

// Enum FortniteGame.EFortDualWieldSwingState
enum class EFortDualWieldSwingState : uint8 {
	None,
	MainHand,
	OffHand,
	EFortDualWieldSwingState_MAX,
};

// Enum FortniteGame.EWorldItemDropBehavior
enum class EWorldItemDropBehavior : uint8 {
	DropAsPickup,
	DestroyOnDrop,
	DropAsPickupDestroyOnEmpty,
	DropAsPickupEvenWhenEmpty,
	EWorldItemDropBehavior_MAX,
};

// Enum FortniteGame.EFortWorldManagerState
enum class EFortWorldManagerState : uint8 {
	WMS_Created,
	WMS_QueryingWorld,
	WMS_WorldQueryComplete,
	WMS_CreatingNewWorld,
	WMS_LoadingExistingWorld,
	WMS_Running,
	WMS_Failed,
	WMS_MAX,
};

// Enum FortniteGame.EFortLevelStreamingState
enum class EFortLevelStreamingState : uint8 {
	LSS_Unloaded,
	LSS_Loaded,
	LSS_UnconditionalFoundationsUpdated,
	LSS_AllFoundationsUpdated,
	LSS_NewActorsCreatedButNotUpdated,
	LSS_AllUpdated,
	LSS_Ready,
	LSS_MAX,
};

// Enum FortniteGame.EFortQueuedActionUserStatus
enum class EFortQueuedActionUserStatus : uint8 {
	Succeeded,
	Failed,
	WaitingForCloudRequest,
	WaitingForProfileSave,
	EFortQueuedActionUserStatus_MAX,
};

// Enum FortniteGame.EFortWorldRecordState
enum class EFortWorldRecordState : uint8 {
	StartProcessing,
	WaitingForResponse,
	RetrievingTheaterInformation,
	RetrievingZoneInformation,
	LoadingWorldRecord,
	LoadingZoneRecord,
	SavingZoneRecord,
	SavingPlayerProfiles,
	SavingPlayerDeployableBases,
	Succeeded,
	Failed,
	Max_None,
	EFortWorldRecordState_MAX,
};

// Enum FortniteGame.EFortWorldRecordAction
enum class EFortWorldRecordAction : uint8 {
	LoadWorldOnly,
	SaveWorldOnly,
	SaveZoneAndWorld,
	LoadZoneAndWorld,
	SaveDeployableBasesAndWorld,
	Max_None,
	EFortWorldRecordAction_MAX,
};

// Enum FortniteGame.EDeployableBaseUseType
enum class EDeployableBaseUseType : uint8 {
	Neighborhood,
	PvECombat,
	EDeployableBaseUseType_MAX,
};

// Enum FortniteGame.EFortZoneType
enum class EFortZoneType : uint8 {
	PVE,
	PVP,
	Keep,
	SingleZone,
	Max_None,
	EFortZoneType_MAX,
};

// Enum FortniteGame.EFrontEndCamera
enum class EFrontEndCamera : uint8 {
	Invalid,
	Command,
	Command_HeroLoadout,
	LegacyHeroLoadout,
	Cosmetics,
	Expeditions,
	FrontendDefault,
	Heroes,
	HeroSelect,
	HeroLoadout,
	Home,
	HomeBase,
	Login,
	Manage1,
	Manage2,
	Manage3,
	Manage4,
	MissionControl,
	Party,
	Play,
	Research,
	SkillTrees,
	SmallCosmetics,
	SpatialUI,
	SpecialEvent,
	SpecialEvent2,
	SpecialEvent3,
	Store,
	StoreItemInspect,
	StwFrontendDefault,
	SurvivorSquadBuilding1,
	SurvivorSquadBuilding2,
	SurvivorSquadBuilding3,
	SurvivorSquadBuilding4,
	TutorialPhaseOne,
	TutorialPhaseTwo,
	TutorialPhaseThree,
	Upgrades,
	Vault,
	WorldMap,
	LobbyCentered,
	CosmeticDisplay,
	BattlePass,
	Rewards,
	SpecialEventRewards,
	Armory,
	EFrontEndCamera_MAX,
};

// Enum FortniteGame.EPlayerAttributeClampType
enum class EPlayerAttributeClampType : uint8 {
	Minimum,
	Maximum,
	EPlayerAttributeClampType_MAX,
};

// Enum FortniteGame.EFortWeaponUpgradeInteractionResult
enum class EFortWeaponUpgradeInteractionResult : uint8 {
	Upgradable,
	NotEnoughResources,
	CannotUpgrade,
	CannotInteract,
	EFortWeaponUpgradeInteractionResult_MAX,
};

// Enum FortniteGame.EFortWeaponUpgradeDirection
enum class EFortWeaponUpgradeDirection : uint8 {
	NotSet,
	Vertical,
	Horizontal,
	EFortWeaponUpgradeDirection_MAX,
};

// Enum FortniteGame.EFortWeaponUpgradeCosts
enum class EFortWeaponUpgradeCosts : uint8 {
	NotSet,
	WoodUncommon,
	WoodRare,
	WoodVeryRare,
	WoodSuperRare,
	MetalUncommon,
	MetalRare,
	MetalVeryRare,
	MetalSuperRare,
	BrickUncommon,
	BrickRare,
	BrickVeryRare,
	BrickSuperRare,
	HorizontalWoodCommon,
	HorizontalWoodUncommon,
	HorizontalWoodRare,
	HorizontalWoodVeryRare,
	HorizontalWoodSuperRare,
	HorizontalMetalCommon,
	HorizontalMetalUncommon,
	HorizontalMetalRare,
	HorizontalMetalVeryRare,
	HorizontalMetalSuperRare,
	HorizontalBrickCommon,
	HorizontalBrickUncommon,
	HorizontalBrickRare,
	HorizontalBrickVeryRare,
	HorizontalBrickSuperRare,
	EFortWeaponUpgradeCosts_MAX,
};

// Enum FortniteGame.EDroneFacingLocationMode
enum class EDroneFacingLocationMode : uint8 {
	NotFacingLocation,
	FindingPoint,
	TrackingPoint,
	EDroneFacingLocationMode_MAX,
};

// Enum FortniteGame.EFireModeType
enum class EFireModeType : uint8 {
	Unset,
	TapToShoot,
	FireButton,
	AutoFire,
	ForceTouch,
	Custom,
	MAX,
};

// Enum FortniteGame.ELayoutDataType
enum class ELayoutDataType : uint8 {
	Custom,
	DefaultToolLayout,
	DefaultGameLayout,
	MAX_Local,
	CustomCloudLayout,
	ELayoutDataType_MAX,
};

// Enum FortniteGame.ESpawnPointState
enum class ESpawnPointState : uint8 {
	Inactive,
	Active_CarryObjectInRange,
	Active_CarryObjectOutOfRange,
	IntelCaptured,
	IntelDownloaded,
	ESpawnPointState_MAX,
};

// Enum FortniteGame.EIslandInspectorState
enum class EIslandInspectorState : uint8 {
	Initializing,
	Ready,
	AwaitingProcessCommand,
	ProcessingCommand,
	EIslandInspectorState_MAX,
};

// Enum FortniteGame.ELevelSaveRecordVersion
enum class ELevelSaveRecordVersion : uint8 {
	CloudSaveInfoAdded,
	TimestampConversion,
	SoftActorClassReferences,
	SoftActorComponentClassReferences,
	DuplicateNewActorRecordsRemoved,
	StartOfResaveWhenNotLatestVersion,
	LowerCloseThresholdForDuplicates,
	DeprecatedDeleteAndNewActorRecords,
	DependenciesFromSerializedWorld,
	RemovingSerializedDependencies,
	AddingVolumeInfoRecordsMap,
	AddingVolumeGridDependency,
	AddingScale,
	AddingDataHash,
	AddedIslandTemplateId,
	AddedLevelStreamedDeleteRecord,
	UsingSaveActorGUID,
	UsingActorFNameForEditorSpawning,
	AddedPlayerPersistenceUserWipeNumber,
	VersionPlusOne,
	LatestVersion,
	ELevelSaveRecordVersion_MAX,
};

// Enum FortniteGame.ELevelSaveCategory
enum class ELevelSaveCategory : uint8 {
	ActorInstance,
	VolumeInfoActor,
	ELevelSaveCategory_MAX,
};

// Enum FortniteGame.EFortEncounterSpawnLimitType
enum class EFortEncounterSpawnLimitType : uint8 {
	NoLimit,
	NumPawnsLimit,
	SpawnPointLimit,
	UserDefined,
	MAX,
};

// Enum FortniteGame.EFortEncounterUtilitiesMode
enum class EFortEncounterUtilitiesMode : uint8 {
	LockedOnly,
	LockedAndFree,
	EFortEncounterUtilitiesMode_MAX,
};

// Enum FortniteGame.EFortEncounterSpawnLocationManagementMode
enum class EFortEncounterSpawnLocationManagementMode : uint8 {
	Spawn,
	Search,
	EFortEncounterSpawnLocationManagementMode_MAX,
};

// Enum FortniteGame.EFortEncounterSpawnLocationPlacementMode
enum class EFortEncounterSpawnLocationPlacementMode : uint8 {
	Directional,
	Ring,
	Volume,
	Custom,
	Max_None,
	EFortEncounterSpawnLocationPlacementMode_MAX,
};

// Enum FortniteGame.EFortEncounterPacingMode
enum class EFortEncounterPacingMode : uint8 {
	SpawnPointsPercentageCurve,
	IntensityCurve,
	Burst,
	Fixed,
	EFortEncounterPacingMode_MAX,
};

// Enum FortniteGame.EFortMissionAudibility
enum class EFortMissionAudibility : uint8 {
	UseVisibility,
	Audible,
	Inaudible,
	EFortMissionAudibility_MAX,
};

// Enum FortniteGame.EFortMissionType
enum class EFortMissionType : uint8 {
	Primary,
	Secondary,
	Max_None,
	EFortMissionType_MAX,
};

// Enum FortniteGame.EFortObjectiveRequirement
enum class EFortObjectiveRequirement : uint8 {
	Optional,
	Required,
	RequiredButCanFail,
	EFortObjectiveRequirement_MAX,
};

// Enum FortniteGame.EFortMissionStatus
enum class EFortMissionStatus : uint8 {
	Created,
	InProgress,
	Succeeded,
	Failed,
	NeutralCompletion,
	Quit,
	Max_None,
	EFortMissionStatus_MAX,
};

// Enum FortniteGame.EMissionGenerationCategory
enum class EMissionGenerationCategory : uint8 {
	Primary,
	Secondary,
	Tertiary,
	Survivor,
	Max_None,
	EMissionGenerationCategory_MAX,
};

// Enum FortniteGame.EClipMessageSettings
enum class EClipMessageSettings : uint8 {
	DontShow,
	ShowString,
	DeduceUnicornAnnotation,
	ShotTitleScreen,
	EClipMessageSettings_MAX,
};

// Enum FortniteGame.EPegasusTimelineCategories
enum class EPegasusTimelineCategories : uint8 {
	Unassigned,
	Player,
	Combat,
	Building,
	Inventory,
	Social,
	Resources,
	EPegasusTimelineCategories_MAX,
};

// Enum FortniteGame.EPrimitiveCrosstalkFunctions
enum class EPrimitiveCrosstalkFunctions : uint8 {
	SendTagAsPayload,
	SendTaggedObjectPayload,
	SendTaggedStringPayload,
	SendTaggedIntPayload,
	GetTaggedObjectPayload,
	GetTaggedStringPayload,
	GetTaggedIntPayload,
	BindNoParamEventToTaggedDelegate,
	UnbindNoParamEventFromTaggedDelegate,
	UnbindObjectCallbacksFromAllTaggedDelegates,
	EPrimitiveCrosstalkFunctions_MAX,
};

// Enum FortniteGame.EQuickHealingRequirementFlags
enum class EQuickHealingRequirementFlags : uint8 {
	Nothing,
	NeedsHealing,
	NeedsShields,
	NeedsBoth,
	Invalid,
	EQuickHealingRequirementFlags_MAX,
};

// Enum FortniteGame.EVideoManagerJobTypes
enum class EVideoManagerJobTypes : uint8 {
	EliminationExtraction,
	DefinedShotSequence,
	EVideoManagerJobTypes_MAX,
};

// Enum FortniteGame.EVideoManagerStates
enum class EVideoManagerStates : uint8 {
	INVALID,
	LoadingReplay,
	ScrubbingReplay,
	WaitingForShotSetup,
	WatchingShot,
	ExportingShot,
	PostExportedShot,
	EVideoManagerStates_MAX,
};

// Enum FortniteGame.ERespawnAndSpectatePlayerRespawningState
enum class ERespawnAndSpectatePlayerRespawningState : uint8 {
	None,
	WaitingOnTimer,
	WaitingOnPlayerSelection,
	WaitingOnClientReady,
	Respawning,
	RespawnFinishing,
	ERespawnAndSpectatePlayerRespawningState_MAX,
};

// Enum FortniteGame.ESaveLocation
enum class ESaveLocation : uint8 {
	Local_ForDevice,
	Local_MAX,
};

// Enum FortniteGame.EIndexNavigationResult
enum class EIndexNavigationResult : uint8 {
	Succeeded,
	Modified,
	Clamped,
	StepOff,
	NoMove,
	EIndexNavigationResult_MAX,
};

// Enum FortniteGame.ESpecialRelevancyMode
enum class ESpecialRelevancyMode : uint8 {
	NormalRelevancy,
	SoloRelevancy,
	SquadRelevancy,
	MultiSquad,
	MAX,
};

// Enum FortniteGame.EFortThreatDeactivationType
enum class EFortThreatDeactivationType : uint8 {
	Off,
	Dormant,
	EFortThreatDeactivationType_MAX,
};

// Enum FortniteGame.EUnicornSocialFeatures
enum class EUnicornSocialFeatures : uint8 {
	INVALID,
	FriendPlay,
	DancePartyManpower,
	CongaLineManpower,
	SocialPartyDuration,
	COUNT,
	EUnicornSocialFeatures_MAX,
};

// Enum FortniteGame.EHighlightReelIds
enum class EHighlightReelIds : uint8 {
	INVALID,
	MainHighlightReel,
	ShortHighlightReel,
	MicroHighlights,
	EntireGameReel,
	ShortExtendedHighlightReel,
	MediumHighlightReel,
	MediumExtendedHighlightReel,
	ShorterHighlightReel,
	PlayerSpotlightReel,
	PlayerSpotlightNoDeathsReel,
	VATReel,
	COUNT,
	EHighlightReelIds_MAX,
};

// Enum FortniteGame.EWrapPreviewGridLockerMode
enum class EWrapPreviewGridLockerMode : uint8 {
	IgnoreLockerConfiguration,
	SupportedWeaponsOnly,
	UnsupportedWeaponsOnly,
	EWrapPreviewGridLockerMode_MAX,
};

// ScriptStruct FortniteGame.PawnDamageData
// Size: 0x50 (Inherited: 0x00)
struct FPawnDamageData {
	struct AActor* DamagedActor; // 0x00(0x08)
	float Damage; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct AController* InstigatedBy; // 0x10(0x08)
	struct AActor* DamageCauser; // 0x18(0x08)
	struct FVector HitLocation; // 0x20(0x0c)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct UPrimitiveComponent* HitComponent; // 0x30(0x08)
	struct FName BoneName; // 0x38(0x08)
	struct FVector Momentum; // 0x40(0x0c)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// ScriptStruct FortniteGame.FortPawnMaterialOverride
// Size: 0x70 (Inherited: 0x00)
struct FFortPawnMaterialOverride {
	struct FGuid OverrideId; // 0x00(0x10)
	struct TSoftObjectPtr<struct UMaterialInterface> Material; // 0x10(0x28)
	struct FFortPawnMaterialOverrideCopiedParameters MaterialParamsToCopy; // 0x38(0x30)
	float Priority; // 0x68(0x04)
	bool bHideParticleSystems; // 0x6c(0x01)
	bool bApplyToWeapon; // 0x6d(0x01)
	char pad_6E[0x2]; // 0x6e(0x02)
};

// ScriptStruct FortniteGame.FortPawnMaterialOverrideCopiedParameters
// Size: 0x30 (Inherited: 0x00)
struct FFortPawnMaterialOverrideCopiedParameters {
	struct TArray<struct FName> ScalarParamNames; // 0x00(0x10)
	struct TArray<struct FName> VectorParamNames; // 0x10(0x10)
	struct TArray<struct FName> TextureParamNames; // 0x20(0x10)
};

// ScriptStruct FortniteGame.ProjectileEventData
// Size: 0x28 (Inherited: 0x00)
struct FProjectileEventData {
	struct AFortProjectileBase* SpawnedProjectile; // 0x00(0x08)
	struct TArray<struct FHitResult> Hits; // 0x08(0x10)
	struct TArray<struct AActor*> ExplodedActors; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortAthenaVehicleInputState
// Size: 0x2c (Inherited: 0x00)
struct FFortAthenaVehicleInputState {
	float ForwardAlpha; // 0x00(0x04)
	float RightAlpha; // 0x04(0x04)
	float PitchAlpha; // 0x08(0x04)
	float LookUpDelta; // 0x0c(0x04)
	float TurnDelta; // 0x10(0x04)
	float SteerAlpha; // 0x14(0x04)
	float GravityOffset; // 0x18(0x04)
	struct FVector MovementDir; // 0x1c(0x0c)
	char bIsSprinting : 1; // 0x28(0x01)
	char bIsJumping : 1; // 0x28(0x01)
	char bIsBraking : 1; // 0x28(0x01)
	char bIsHonking : 1; // 0x28(0x01)
	char bIgnoreForwardInAir : 1; // 0x28(0x01)
	char bMovementModifier0 : 1; // 0x28(0x01)
	char bMovementModifier1 : 1; // 0x28(0x01)
	char bMovementModifier2 : 1; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
};

// ScriptStruct FortniteGame.FortAIDirectorEvent
// Size: 0x20 (Inherited: 0x00)
struct FFortAIDirectorEvent {
	enum class EFortAIDirectorEvent event; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct UObject* EventSource; // 0x08(0x08)
	struct UObject* EventTarget; // 0x10(0x08)
	float EventValue; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortTeamMemberInfo
// Size: 0x200 (Inherited: 0x00)
struct FFortTeamMemberInfo {
	struct FUniqueNetIdRepl MemberUniqueId; // 0x00(0x28)
	struct FUniqueNetIdRepl PartyLeaderUniqueId; // 0x28(0x28)
	struct FUniqueNetIdRepl ConsoleUniqueId; // 0x50(0x28)
	struct FString Platform; // 0x78(0x10)
	struct FText PlayerName; // 0x88(0x18)
	bool bPartyLeader; // 0xa0(0x01)
	bool bIsInZone; // 0xa1(0x01)
	bool bHasBoostXp; // 0xa2(0x01)
	bool bHasRestXp; // 0xa3(0x01)
	char pad_A4[0x4]; // 0xa4(0x04)
	struct FString BannerIconId; // 0xa8(0x10)
	struct FString BannerColorId; // 0xb8(0x10)
	bool bBattlePassPurchased; // 0xc8(0x01)
	char pad_C9[0x3]; // 0xc9(0x03)
	int32_t BattlePassLevel; // 0xcc(0x04)
	int32_t BattlePassSelfXpBoost; // 0xd0(0x04)
	int32_t BattlePassFriendXpBoost; // 0xd4(0x04)
	int32_t NumPlayersInParty; // 0xd8(0x04)
	int32_t PlayerIndex; // 0xdc(0x04)
	char TeamAffiliation; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
	struct FText HeroClass; // 0xe8(0x18)
	struct FText HeroLevel; // 0x100(0x18)
	int32_t HeroXP; // 0x118(0x04)
	char pad_11C[0x4]; // 0x11c(0x04)
	struct UFortItem* HeroItem; // 0x120(0x08)
	struct TArray<struct UFortItem*> SelectedGadgetItems; // 0x128(0x10)
	struct FSlateBrush HeroIcon; // 0x138(0x88)
	struct FFortHomeBaseInfo HomeBaseInfo; // 0x1c0(0x40)
};

// ScriptStruct FortniteGame.FortHomeBaseInfo
// Size: 0x40 (Inherited: 0x00)
struct FFortHomeBaseInfo {
	struct FString BannerIconId; // 0x00(0x10)
	struct FString BannerColorId; // 0x10(0x10)
	struct FText Name; // 0x20(0x18)
	bool ValidData; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// ScriptStruct FortniteGame.PurchasedItemInfo
// Size: 0x10 (Inherited: 0x00)
struct FPurchasedItemInfo {
	struct UFortItem* Item; // 0x00(0x08)
	int32_t Quantity; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortPublicAccountInfo
// Size: 0x34 (Inherited: 0x00)
struct FFortPublicAccountInfo {
	int32_t Level; // 0x00(0x04)
	int32_t MaxLevel; // 0x04(0x04)
	int32_t LevelXp; // 0x08(0x04)
	int32_t LevelXpForLevel; // 0x0c(0x04)
	struct FAthenaLevelInfo BattleRoyaleLevel; // 0x10(0x24)
};

// ScriptStruct FortniteGame.AthenaLevelInfo
// Size: 0x24 (Inherited: 0x00)
struct FAthenaLevelInfo {
	int32_t AccountLevel; // 0x00(0x04)
	int32_t Level; // 0x04(0x04)
	int32_t MaxLevel; // 0x08(0x04)
	int32_t LevelXp; // 0x0c(0x04)
	int32_t LevelXpForLevel; // 0x10(0x04)
	int32_t BookLevel; // 0x14(0x04)
	int32_t BookMaxLevel; // 0x18(0x04)
	int32_t BookLevelXp; // 0x1c(0x04)
	int32_t BookLevelXpForLevel; // 0x20(0x04)
};

// ScriptStruct FortniteGame.FortPrivateAccountInfo
// Size: 0x38 (Inherited: 0x34)
struct FFortPrivateAccountInfo : FFortPublicAccountInfo {
	int32_t MtxBalance; // 0x34(0x04)
};

// ScriptStruct FortniteGame.FortItemInstanceQuantityPair
// Size: 0x10 (Inherited: 0x00)
struct FFortItemInstanceQuantityPair {
	struct UFortItem* Item; // 0x00(0x08)
	enum class EFortInventoryType InventoryType; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	int32_t Quantity; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.McpPrivacySettings
// Size: 0x02 (Inherited: 0x00)
struct FMcpPrivacySettings {
	bool OptOutOfPublicLeaderboards; // 0x00(0x01)
	bool OptOutOfFriendsLeaderboards; // 0x01(0x01)
};

// ScriptStruct FortniteGame.McpBanInfo
// Size: 0x40 (Inherited: 0x00)
struct FMcpBanInfo {
	struct TArray<enum class EPlayerBanReasons> BanReasons; // 0x00(0x10)
	struct FString ExploitProgramName; // 0x10(0x10)
	struct FString AdditionalInfo; // 0x20(0x10)
	struct FDateTime BanStartTimeUtc; // 0x30(0x08)
	float BanDurationDays; // 0x38(0x04)
	enum class EPlayerCompetitiveBanReasons CompetitiveBanReason; // 0x3c(0x01)
	bool bRequiresUserAck; // 0x3d(0x01)
	bool bBanHasStarted; // 0x3e(0x01)
	char pad_3F[0x1]; // 0x3f(0x01)
};

// ScriptStruct FortniteGame.FortCampaignLoadout
// Size: 0x08 (Inherited: 0x00)
struct FFortCampaignLoadout {
	struct UFortPersonalVehicleItem* PersonalVehicle; // 0x00(0x08)
};

// ScriptStruct FortniteGame.FriendCode
// Size: 0x20 (Inherited: 0x00)
struct FFriendCode {
	struct FString Code; // 0x00(0x10)
	struct FString CodeType; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortAthenaLoadout
// Size: 0x140 (Inherited: 0x00)
struct FFortAthenaLoadout {
	struct FString BannerIconId; // 0x00(0x10)
	struct FString BannerColorId; // 0x10(0x10)
	struct UAthenaSkyDiveContrailItemDefinition* SkyDiveContrail; // 0x20(0x08)
	struct UAthenaGliderItemDefinition* Glider; // 0x28(0x08)
	struct UAthenaPickaxeItemDefinition* Pickaxe; // 0x30(0x08)
	bool bIsDefaultCharacter; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct UAthenaCharacterItemDefinition* Character; // 0x40(0x08)
	struct TArray<struct FMcpVariantChannelInfo> CharacterVariantChannels; // 0x48(0x10)
	bool bForceUpdateVariants; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
	struct UAthenaHatItemDefinition* Hat; // 0x60(0x08)
	struct UAthenaBackpackItemDefinition* Backpack; // 0x68(0x08)
	struct UAthenaLoadingScreenItemDefinition* LoadingScreen; // 0x70(0x08)
	struct UAthenaBattleBusItemDefinition* BattleBus; // 0x78(0x08)
	struct UAthenaVehicleCosmeticItemDefinition* VehicleDecoration; // 0x80(0x08)
	struct UAthenaCallingCardItemDefinition* CallingCard; // 0x88(0x08)
	struct UAthenaMapMarkerItemDefinition* MapMarker; // 0x90(0x08)
	struct TArray<struct UAthenaDanceItemDefinition*> Dances; // 0x98(0x10)
	struct UAthenaVictoryPoseItemDefinition* VictoryPose; // 0xa8(0x08)
	struct UAthenaMusicPackItemDefinition* MusicPack; // 0xb0(0x08)
	struct UAthenaItemWrapDefinition* ItemWrapOverride; // 0xb8(0x08)
	struct TArray<struct UAthenaItemWrapDefinition*> ItemWraps; // 0xc0(0x10)
	struct UAthenaCharmItemDefinition* CharmOverride; // 0xd0(0x08)
	struct TArray<struct UAthenaCharmItemDefinition*> Charms; // 0xd8(0x10)
	struct UAthenaPetItemDefinition* PetSkin; // 0xe8(0x08)
	char pad_F0[0x50]; // 0xf0(0x50)
};

// ScriptStruct FortniteGame.CosmeticVariantInfo
// Size: 0x10 (Inherited: 0x00)
struct FCosmeticVariantInfo {
	struct FGameplayTag VariantChannelTag; // 0x00(0x08)
	struct FGameplayTag ActiveVariantTag; // 0x08(0x08)
};

// ScriptStruct FortniteGame.McpVariantChannelInfo
// Size: 0x48 (Inherited: 0x10)
struct FMcpVariantChannelInfo : FCosmeticVariantInfo {
	struct FGameplayTagContainer OwnedVariantTags; // 0x10(0x20)
	struct UFortItemDefinition* ItemVariantIsUsedFor; // 0x30(0x08)
	struct FString CustomData; // 0x38(0x10)
};

// ScriptStruct FortniteGame.AthenaTravelLogEntry
// Size: 0xd0 (Inherited: 0x00)
struct FAthenaTravelLogEntry {
	float Time; // 0x00(0x04)
	struct FVector Position; // 0x04(0x0c)
	struct FRotator Rotation; // 0x10(0x0c)
	enum class EAthenaTravelEventType Type; // 0x1c(0x01)
	char pad_1D[0x3]; // 0x1d(0x03)
	struct FName InstigatorName; // 0x20(0x08)
	struct FUniqueNetIdRepl InstigatorId; // 0x28(0x28)
	enum class EAthenaTravelLogPlayerType InstigatorPlayerType; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	struct FName ReceiverName; // 0x54(0x08)
	char pad_5C[0x4]; // 0x5c(0x04)
	struct FUniqueNetIdRepl ReceiverId; // 0x60(0x28)
	enum class EAthenaTravelLogPlayerType ReceiverPlayerType; // 0x88(0x01)
	char pad_89[0x3]; // 0x89(0x03)
	float Value; // 0x8c(0x04)
	struct FJsonObjectWrapper Meta; // 0x90(0x20)
	struct FGameplayTagContainer LocationPOITags; // 0xb0(0x20)
};

// ScriptStruct FortniteGame.AthenaMatchLootReward
// Size: 0x18 (Inherited: 0x00)
struct FAthenaMatchLootReward {
	struct FString TemplateId; // 0x00(0x10)
	int32_t Amount; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.AthenaMatchXpReward
// Size: 0x20 (Inherited: 0x00)
struct FAthenaMatchXpReward {
	struct FText Text; // 0x00(0x18)
	int32_t Amount; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.AthenaTravelRecord
// Size: 0x10 (Inherited: 0x00)
struct FAthenaTravelRecord {
	struct TArray<struct FAthenaTravelLogEntry> Log; // 0x00(0x10)
};

// ScriptStruct FortniteGame.AthenaRewardResult
// Size: 0x40 (Inherited: 0x00)
struct FAthenaRewardResult {
	int32_t LevelsGained; // 0x00(0x04)
	int32_t BookLevelsGained; // 0x04(0x04)
	int32_t TotalSeasonXpGained; // 0x08(0x04)
	int32_t TotalBookXpGained; // 0x0c(0x04)
	int32_t PrePenaltySeasonXpGained; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct TArray<struct FAthenaMatchXpMultiplierGroup> XpMultipliers; // 0x18(0x10)
	struct TArray<struct FAthenaAwardGroup> Rewards; // 0x28(0x10)
	float AntiAddictionMultiplier; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.AthenaAwardGroup
// Size: 0x28 (Inherited: 0x00)
struct FAthenaAwardGroup {
	enum class ERewardSource RewardSource; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FMcpLootEntry> Items; // 0x08(0x10)
	int32_t Score; // 0x18(0x04)
	float SeasonXp; // 0x1c(0x04)
	int32_t BookXp; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.AthenaMatchXpMultiplierGroup
// Size: 0x08 (Inherited: 0x00)
struct FAthenaMatchXpMultiplierGroup {
	enum class EAthenaMatchXpMultiplierSource Source; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t Amount; // 0x04(0x04)
};

// ScriptStruct FortniteGame.AthenaMatchTeamStats
// Size: 0x08 (Inherited: 0x00)
struct FAthenaMatchTeamStats {
	int32_t Place; // 0x00(0x04)
	int32_t TotalPlayers; // 0x04(0x04)
};

// ScriptStruct FortniteGame.AthenaMatchStats
// Size: 0xc8 (Inherited: 0x00)
struct FAthenaMatchStats {
	struct FString StatBucket; // 0x00(0x10)
	struct FString MatchID; // 0x10(0x10)
	struct FString MatchEndTime; // 0x20(0x10)
	struct FString MatchPlatform; // 0x30(0x10)
	int32_t Stats[0x14]; // 0x40(0x50)
	struct TArray<struct FAthenaWeaponStats> WeaponStats; // 0x90(0x10)
	struct TArray<struct FAthenaXPStats> XPStats; // 0xa0(0x10)
	bool bIsValid; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)
	struct FString FactionTag; // 0xb8(0x10)
};

// ScriptStruct FortniteGame.AthenaXPStats
// Size: 0x14 (Inherited: 0x00)
struct FAthenaXPStats {
	struct FName Stat; // 0x00(0x08)
	int32_t Count; // 0x08(0x04)
	int32_t XP; // 0x0c(0x04)
	enum class EFortAccoladeSubtype Subtype; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
};

// ScriptStruct FortniteGame.AthenaWeaponStats
// Size: 0x58 (Inherited: 0x00)
struct FAthenaWeaponStats {
	struct FString WeaponId; // 0x00(0x10)
	int32_t Stats[0x11]; // 0x10(0x44)
	char pad_54[0x4]; // 0x54(0x04)
};

// ScriptStruct FortniteGame.AsyncTaskResult
// Size: 0x30 (Inherited: 0x00)
struct FAsyncTaskResult {
	bool bSucceeded; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FString ErrorCode; // 0x08(0x10)
	struct FText ErrorMessage; // 0x18(0x18)
};

// ScriptStruct FortniteGame.VolumePerformanceMetrics
// Size: 0x14 (Inherited: 0x00)
struct FVolumePerformanceMetrics {
	int32_t PerformanceValue; // 0x00(0x04)
	int32_t PerformanceMaxValue; // 0x04(0x04)
	int32_t PerformanceLowendThreshold; // 0x08(0x04)
	int32_t PreviewDeltaValue; // 0x0c(0x04)
	enum class EFortBudgetCategory Category; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
};

// ScriptStruct FortniteGame.AthenaGameMessageData
// Size: 0x40 (Inherited: 0x00)
struct FAthenaGameMessageData {
	enum class EAthenaGameMsgType MsgType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FText MsgText; // 0x08(0x18)
	struct USoundCue* MsgSound; // 0x20(0x08)
	float MsgDelay; // 0x28(0x04)
	bool bIsTeamBased; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
	int32_t TeamIndex; // 0x30(0x04)
	float DisplayTime; // 0x34(0x04)
	struct APlayerController* TargetPlayerController; // 0x38(0x08)
};

// ScriptStruct FortniteGame.HUDMessageData
// Size: 0x58 (Inherited: 0x40)
struct FHUDMessageData : FAthenaGameMessageData {
	enum class EHUDMessagePlacement Placement; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct APlayerState* PlayerState; // 0x48(0x08)
	int32_t MessageTargets; // 0x50(0x04)
	enum class ETextTransformPolicy TextTransformPolicy; // 0x54(0x01)
	char pad_55[0x3]; // 0x55(0x03)
};

// ScriptStruct FortniteGame.VolumeActorStats
// Size: 0x50 (Inherited: 0x00)
struct FVolumeActorStats {
	struct TMap<enum class EFortBuildingType, int32_t> BuildingTypeCounts; // 0x00(0x50)
};

// ScriptStruct FortniteGame.FortItemEntry
// Size: 0x190 (Inherited: 0x0c)
struct FFortItemEntry : FFastArraySerializerItem {
	int32_t Count; // 0x0c(0x04)
	int32_t PreviousCount; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct UFortItemDefinition* ItemDefinition; // 0x18(0x08)
	int16_t OrderIndex; // 0x20(0x02)
	char pad_22[0x2]; // 0x22(0x02)
	float Durability; // 0x24(0x04)
	int32_t Level; // 0x28(0x04)
	int32_t LoadedAmmo; // 0x2c(0x04)
	int32_t PhantomReserveAmmo; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct TArray<struct FString> AlterationDefinitions; // 0x38(0x10)
	struct TArray<struct FFortSavedWeaponModSlot> SavedWeaponModSlots; // 0x48(0x10)
	struct FString ItemSource; // 0x58(0x10)
	struct FGuid ItemGuid; // 0x68(0x10)
	struct FGuid TrackerGuid; // 0x78(0x10)
	int32_t ControlOverride; // 0x88(0x04)
	bool inventory_overflow_date; // 0x8c(0x01)
	bool bWasGifted; // 0x8d(0x01)
	bool bIsReplicatedCopy; // 0x8e(0x01)
	bool bIsDirty; // 0x8f(0x01)
	bool bUpdateStatsOnCollection; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
	struct FFortGiftingInfo GiftingInfo; // 0x98(0x28)
	struct TArray<struct FFortItemEntryStateValue> StateValues; // 0xc0(0x10)
	struct TWeakObjectPtr<struct AFortInventory> ParentInventory; // 0xd0(0x08)
	struct FGameplayAbilitySpecHandle GameplayAbilitySpecHandle; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct TArray<struct UFortAlterationItemDefinition*> AlterationInstances; // 0xe0(0x10)
	struct TArray<struct FFortWeaponModSlot> WeaponModSlots; // 0xf0(0x10)
	struct TSoftObjectPtr<struct UAthenaItemWrapDefinition> WrapOverride; // 0x100(0x28)
	struct TArray<float> GenericAttributeValues; // 0x128(0x10)
	char pad_138[0x50]; // 0x138(0x50)
	int32_t PickupVariantIndex; // 0x188(0x04)
	int32_t ItemVariantDataMappingIndex; // 0x18c(0x04)
};

// ScriptStruct FortniteGame.FortWeaponModSlot
// Size: 0x10 (Inherited: 0x00)
struct FFortWeaponModSlot {
	struct UFortWeaponModItemDefinition* WeaponMod; // 0x00(0x08)
	bool bIsDynamic; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
};

// ScriptStruct FortniteGame.FortItemEntryStateValue
// Size: 0x10 (Inherited: 0x00)
struct FFortItemEntryStateValue {
	int32_t IntValue; // 0x00(0x04)
	struct FName NameValue; // 0x04(0x08)
	enum class EFortItemEntryState StateType; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
};

// ScriptStruct FortniteGame.FortGiftingInfo
// Size: 0x28 (Inherited: 0x00)
struct FFortGiftingInfo {
	struct FString PlayerName; // 0x00(0x10)
	struct UFortHeroType* HeroType; // 0x10(0x08)
	char pad_18[0x10]; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortSavedWeaponModSlot
// Size: 0x18 (Inherited: 0x00)
struct FFortSavedWeaponModSlot {
	struct FString WeaponModTemplateID; // 0x00(0x10)
	bool bIsDynamic; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.ChoiceData
// Size: 0x30 (Inherited: 0x00)
struct FChoiceData {
	int32_t MenuIdentifier; // 0x00(0x04)
	bool bShowCloseButton; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
	struct FText Title; // 0x08(0x18)
	struct TArray<struct FChoiceDataEntry> Items; // 0x20(0x10)
};

// ScriptStruct FortniteGame.ChoiceDataEntry
// Size: 0x50 (Inherited: 0x00)
struct FChoiceDataEntry {
	struct FText ButtonText; // 0x00(0x18)
	struct FText ButtonDescription; // 0x18(0x18)
	struct FText ConfirmText; // 0x30(0x18)
	bool bEnabled; // 0x48(0x01)
	bool bRequireConfirmation; // 0x49(0x01)
	bool bCloseAfterSelection; // 0x4a(0x01)
	char pad_4B[0x5]; // 0x4b(0x05)
};

// ScriptStruct FortniteGame.AttributeModifierInfo
// Size: 0x20 (Inherited: 0x00)
struct FAttributeModifierInfo {
	char pad_0[0x8]; // 0x00(0x08)
	struct UGameplayEffect* InstantGEs; // 0x08(0x08)
	char pad_10[0x10]; // 0x10(0x10)
};

// ScriptStruct FortniteGame.BuildingWeakSpotData
// Size: 0x38 (Inherited: 0x00)
struct FBuildingWeakSpotData {
	struct TWeakObjectPtr<struct UObject> ParentObject; // 0x00(0x08)
	struct FVector_NetQuantizeNormal Normal; // 0x08(0x0c)
	struct FVector_NetQuantize10 Position; // 0x14(0x0c)
	int32_t HitCount; // 0x20(0x04)
	char pad_24[0x14]; // 0x24(0x14)
};

// ScriptStruct FortniteGame.FortRequirementsInfo
// Size: 0x60 (Inherited: 0x00)
struct FFortRequirementsInfo {
	int32_t CommanderLevel; // 0x00(0x04)
	int32_t PersonalPowerRating; // 0x04(0x04)
	int32_t MaxPersonalPowerRating; // 0x08(0x04)
	int32_t PartyPowerRating; // 0x0c(0x04)
	int32_t MaxPartyPowerRating; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct TArray<struct UFortQuestItemDefinition*> ActiveQuestDefinitions; // 0x18(0x10)
	struct UFortQuestItemDefinition* QuestDefinition; // 0x28(0x08)
	struct FDataTableRowHandle ObjectiveStatHandle; // 0x30(0x10)
	struct UFortQuestItemDefinition* UncompletedQuestDefinition; // 0x40(0x08)
	struct UFortItemDefinition* ItemDefinition; // 0x48(0x08)
	struct FString EventFlag; // 0x50(0x10)
};

// ScriptStruct FortniteGame.CreateBuildingActorData
// Size: 0x38 (Inherited: 0x00)
struct FCreateBuildingActorData {
	uint32_t BuildingClassHandle; // 0x00(0x04)
	struct FVector_NetQuantize10 BuildLoc; // 0x04(0x0c)
	struct FRotator BuildRot; // 0x10(0x0c)
	bool bMirrored; // 0x1c(0x01)
	char pad_1D[0x3]; // 0x1d(0x03)
	float SyncKey; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
	struct FBuildingClassData BuildingClassData; // 0x28(0x10)
};

// ScriptStruct FortniteGame.BuildingClassData
// Size: 0x10 (Inherited: 0x00)
struct FBuildingClassData {
	struct ABuildingActor* BuildingClass; // 0x00(0x08)
	int32_t PreviousBuildingLevel; // 0x08(0x04)
	char UpgradeLevel; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
};

// ScriptStruct FortniteGame.FortPickupTossOverrideData
// Size: 0x10 (Inherited: 0x00)
struct FFortPickupTossOverrideData {
	bool bIsValid; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float MinTossDist; // 0x04(0x04)
	float MaxTossDist; // 0x08(0x04)
	float SpawnDirectionConeHalfAngle; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortMcpCollectedItemProperties
// Size: 0x48 (Inherited: 0x00)
struct FFortMcpCollectedItemProperties {
	struct FString VariantTag; // 0x00(0x10)
	struct TArray<struct FString> ContextTags; // 0x10(0x10)
	struct FJsonObjectWrapper Properties; // 0x20(0x20)
	enum class EFortCollectedState SeenState; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	int32_t Count; // 0x44(0x04)
};

// ScriptStruct FortniteGame.LockOnInfo
// Size: 0x38 (Inherited: 0x00)
struct FLockOnInfo {
	enum class ELockOnState State; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct TWeakObjectPtr<struct AFortWeapon> Weapon; // 0x04(0x08)
	struct TWeakObjectPtr<struct AActor> LockOnTarget; // 0x0c(0x08)
	struct FRotator CamRotAtTargetAcquisiton; // 0x14(0x0c)
	struct FVector2D LockOnCoords; // 0x20(0x08)
	float TargetAcquisitionTime; // 0x28(0x04)
	float TargetLockOnTime; // 0x2c(0x04)
	float TargetOutOfSightTime; // 0x30(0x04)
	float CooldownStartTime; // 0x34(0x04)
};

// ScriptStruct FortniteGame.FortPersistentGameplayStatContainer
// Size: 0x10 (Inherited: 0x00)
struct FFortPersistentGameplayStatContainer {
	struct TArray<struct FFortPersistentGameplayStatValue> GameplayStats; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortPersistentGameplayStatValue
// Size: 0x18 (Inherited: 0x00)
struct FFortPersistentGameplayStatValue {
	struct FString StatName; // 0x00(0x10)
	int32_t StatValue; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortUpdatedObjectiveStat
// Size: 0x28 (Inherited: 0x00)
struct FFortUpdatedObjectiveStat {
	struct UFortQuestItemDefinition* Quest; // 0x00(0x08)
	struct FName BackendName; // 0x08(0x08)
	int32_t StatValue; // 0x10(0x04)
	int32_t ShadowStatValue; // 0x14(0x04)
	int32_t StatDelta; // 0x18(0x04)
	int32_t CurrentStage; // 0x1c(0x04)
	bool bSharedQuestUpdate; // 0x20(0x01)
	bool bShowToast; // 0x21(0x01)
	char pad_22[0x6]; // 0x22(0x06)
};

// ScriptStruct FortniteGame.FortRewardReport
// Size: 0x70 (Inherited: 0x00)
struct FFortRewardReport {
	struct FText MissionName; // 0x00(0x18)
	struct FText TheaterName; // 0x18(0x18)
	struct FText Difficulty; // 0x30(0x18)
	float DifficultyValue; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct TArray<struct FFortRewardActivity> RewardActivities; // 0x50(0x10)
	bool bIsFinalized; // 0x60(0x01)
	char pad_61[0xf]; // 0x61(0x0f)
};

// ScriptStruct FortniteGame.FortRewardActivity
// Size: 0x78 (Inherited: 0x00)
struct FFortRewardActivity {
	enum class EFortRewardActivityType ActivityType; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FGuid ActivityGuid; // 0x04(0x10)
	char pad_14[0x4]; // 0x14(0x04)
	struct FText TitleText; // 0x18(0x18)
	struct FText DescriptionText; // 0x30(0x18)
	float RewardDisplayTime; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct TArray<struct FFortItemEntry> RewardItems; // 0x50(0x10)
	struct TArray<struct FFortItemEntry> MissedRewardItems; // 0x60(0x10)
	enum class EFortCompletionResult ActivityCompletionResult; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	int32_t AdditionalCompletionMissionPoints; // 0x74(0x04)
};

// ScriptStruct FortniteGame.QueuedItemsToDropViaPickup
// Size: 0x20 (Inherited: 0x00)
struct FQueuedItemsToDropViaPickup {
	struct AFortPawn* DestructionPawn; // 0x00(0x08)
	int32_t TotalNumItemsToDrop; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct TArray<struct UFortWorldItem*> ItemsToDrop; // 0x10(0x10)
};

// ScriptStruct FortniteGame.DelayedQuickBarActionContainer
// Size: 0x120 (Inherited: 0x108)
struct FDelayedQuickBarActionContainer : FFastArraySerializer {
	struct TArray<struct FDelayedQuickBarAction> Items; // 0x108(0x10)
	char pad_118[0x8]; // 0x118(0x08)
};

// ScriptStruct FortniteGame.DelayedQuickBarAction
// Size: 0x40 (Inherited: 0x0c)
struct FDelayedQuickBarAction : FFastArraySerializerItem {
	uint32_t ActionId; // 0x0c(0x04)
	enum class EFortDelayedQuickBarAction Action; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
	struct FGuid ItemGuid; // 0x14(0x10)
	struct FPrimaryAssetId ItemDefinitionAssetId; // 0x24(0x10)
	enum class EFortQuickBars QuickBarType; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	int32_t QuickBarSlot; // 0x38(0x04)
	bool bForceExecution; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
};

// ScriptStruct FortniteGame.RecentlyRemovedQuickbarInfo
// Size: 0x20 (Inherited: 0x00)
struct FRecentlyRemovedQuickbarInfo {
	struct FGuid ItemGuid; // 0x00(0x10)
	int32_t RemovedFromSlot; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct UFortItemDefinition* ItemDefinition; // 0x18(0x08)
};

// ScriptStruct FortniteGame.FortDamageNumberInfo
// Size: 0x88 (Inherited: 0x00)
struct FFortDamageNumberInfo {
	struct FVector WorldLocation; // 0x00(0x0c)
	struct FVector HitNormal; // 0x0c(0x0c)
	bool bIsCriticalDamage; // 0x18(0x01)
	char pad_19[0x3]; // 0x19(0x03)
	int32_t Damage; // 0x1c(0x04)
	enum class EFortDamageNumberType DamageNumberType; // 0x20(0x01)
	char pad_21[0x3]; // 0x21(0x03)
	float VisualDamageScale; // 0x24(0x04)
	enum class EFortElementalDamageType ElementalDamageType; // 0x28(0x01)
	enum class EStatCategory ScoreType; // 0x29(0x01)
	bool bAttachScoreNumberToPlayer; // 0x2a(0x01)
	char pad_2B[0x5]; // 0x2b(0x05)
	struct UStaticMeshComponent* StaticMeshComponent; // 0x30(0x08)
	struct TArray<struct UMaterialInstanceDynamic*> MeshMIDs; // 0x38(0x10)
	struct TArray<int32_t> DamageNumberArray; // 0x48(0x10)
	struct FGameplayTagContainer DamagedActorTags; // 0x58(0x20)
	struct TWeakObjectPtr<struct AActor> DamagedActor; // 0x78(0x08)
	struct TWeakObjectPtr<struct APawn> DamageCauser; // 0x80(0x08)
};

// ScriptStruct FortniteGame.LastBuildableState
// Size: 0x10 (Inherited: 0x00)
struct FLastBuildableState {
	struct UBuildingEditModeMetadata* LastBuildableMetaData; // 0x00(0x08)
	bool LastBuildableMirrored; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	int32_t LastBuildableRotationIterations; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.AIDirectorDebugInfo
// Size: 0x28 (Inherited: 0x00)
struct FAIDirectorDebugInfo {
	float Timestamp; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct TArray<float> DebugGraphData; // 0x08(0x10)
	char pad_18[0x10]; // 0x18(0x10)
};

// ScriptStruct FortniteGame.VehicleDamageablePart
// Size: 0x10 (Inherited: 0x00)
struct FVehicleDamageablePart {
	int32_t ConfigIndex; // 0x00(0x04)
	int32_t BoneIndex; // 0x04(0x04)
	int32_t ShapeIndex; // 0x08(0x04)
	float Health; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.VehicleDamageablePartConfig
// Size: 0x18 (Inherited: 0x00)
struct FVehicleDamageablePartConfig {
	struct FName ShapeName; // 0x00(0x08)
	struct FName BoneName; // 0x08(0x08)
	float MaxHealth; // 0x10(0x04)
	bool bStartsDisabled; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
};

// ScriptStruct FortniteGame.FortEventName
// Size: 0x10 (Inherited: 0x00)
struct FFortEventName {
	struct FName CategoryName; // 0x00(0x08)
	struct FName EventName; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortClientEventName
// Size: 0x10 (Inherited: 0x10)
struct FFortClientEventName : FFortEventName {
};

// ScriptStruct FortniteGame.Voter
// Size: 0x38 (Inherited: 0x00)
struct FVoter {
	int32_t VoteDecision; // 0x00(0x04)
	int32_t LastVoteDecision; // 0x04(0x04)
	struct FUniqueNetIdRepl NetId; // 0x08(0x28)
	int32_t NumVotesCast; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// ScriptStruct FortniteGame.EndOfDayRecap
// Size: 0x20 (Inherited: 0x00)
struct FEndOfDayRecap {
	int32_t DayNumber; // 0x00(0x04)
	int32_t TeamScoreAtStartOfDay; // 0x04(0x04)
	int32_t TeamScoreAtEndOfDay; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct TArray<struct FFortPlayerScoreReport> ScoreReports; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortPlayerScoreReport
// Size: 0x2a8 (Inherited: 0x00)
struct FFortPlayerScoreReport {
	struct FUniqueNetIdRepl PlayerID; // 0x00(0x28)
	struct FString PlayerName; // 0x28(0x10)
	struct TWeakObjectPtr<struct AFortPlayerState> PlayerState; // 0x38(0x08)
	enum class EFortTeam PlayerTeam; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FReplicatedStatValues ReplicatedStats_Campaign[0x23]; // 0x44(0x118)
	struct FReplicatedStatValues ReplicatedStats_Zone[0x23]; // 0x15c(0x118)
	int32_t InitialLevel; // 0x274(0x04)
	int32_t InitialExperienceAmount; // 0x278(0x04)
	struct FFortExperienceDelta ExperienceInfoDelta; // 0x27c(0x24)
	int32_t LastExperienceDeltaAmount; // 0x2a0(0x04)
	int32_t LastScoreDeltaAmount; // 0x2a4(0x04)
};

// ScriptStruct FortniteGame.FortExperienceDelta
// Size: 0x24 (Inherited: 0x00)
struct FFortExperienceDelta {
	int32_t Level; // 0x00(0x04)
	int32_t XP; // 0x04(0x04)
	int32_t BaseXPEarned; // 0x08(0x04)
	int32_t BonusXPEarned; // 0x0c(0x04)
	int32_t BoostXPEarned; // 0x10(0x04)
	int32_t BoostXPMissed; // 0x14(0x04)
	int32_t RestXPEarned; // 0x18(0x04)
	int32_t GroupBoostXPEarned; // 0x1c(0x04)
	enum class EFortIsFinalXpUpdate IsFinalXpUpdate; // 0x20(0x01)
	char pad_21[0x3]; // 0x21(0x03)
};

// ScriptStruct FortniteGame.ReplicatedStatValues
// Size: 0x08 (Inherited: 0x00)
struct FReplicatedStatValues {
	int32_t StatValue; // 0x00(0x04)
	int32_t ScoreValue; // 0x04(0x04)
};

// ScriptStruct FortniteGame.BuildingContainerDebugInfo
// Size: 0x30 (Inherited: 0x00)
struct FBuildingContainerDebugInfo {
	struct FVector Location; // 0x00(0x0c)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FGameplayTagContainer LocationTags; // 0x10(0x20)
};

// ScriptStruct FortniteGame.GameStateLootInfo
// Size: 0x20 (Inherited: 0x00)
struct FGameStateLootInfo {
	struct TArray<struct FFortTreasureChestSpawnInfo> TreasureChestSpawnInfos; // 0x00(0x10)
	struct TArray<struct FFortAmmoBoxSpawnInfo> AmmoBoxSpawnInfos; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortAmmoBoxSpawnInfo
// Size: 0xa8 (Inherited: 0x00)
struct FFortAmmoBoxSpawnInfo {
	struct ABuildingContainer* AmmoBoxClass; // 0x00(0x08)
	struct FScalableFloat AmmoBoxMinSpawnPercent; // 0x08(0x28)
	struct FScalableFloat AmmoBoxMaxSpawnPercent; // 0x30(0x28)
	struct FScalableFloat GoldenPoiAmmoBoxMinSpawnPercent; // 0x58(0x28)
	struct FScalableFloat GoldenPoiAmmoBoxMaxSpawnPercent; // 0x80(0x28)
};

// ScriptStruct FortniteGame.FortTreasureChestSpawnInfo
// Size: 0xa8 (Inherited: 0x00)
struct FFortTreasureChestSpawnInfo {
	struct ABuildingContainer* TreasureChestClass; // 0x00(0x08)
	struct FScalableFloat TreasureChestMinSpawnPercent; // 0x08(0x28)
	struct FScalableFloat TreasureChestMaxSpawnPercent; // 0x30(0x28)
	struct FScalableFloat GoldenPoiTreasureChestMinSpawnPercent; // 0x58(0x28)
	struct FScalableFloat GoldenPoiTreasureChestMaxSpawnPercent; // 0x80(0x28)
};

// ScriptStruct FortniteGame.AppliedHomebaseData
// Size: 0x30 (Inherited: 0x00)
struct FAppliedHomebaseData {
	struct UAbilitySystemComponent* Source; // 0x00(0x08)
	struct UAbilitySystemComponent* Target; // 0x08(0x08)
	struct TArray<struct FActiveGameplayEffectHandle> AppliedEffects; // 0x10(0x10)
	struct TArray<struct FFortAbilitySetHandle> AppliedAbilitySets; // 0x20(0x10)
};

// ScriptStruct FortniteGame.FortAbilitySetHandle
// Size: 0x38 (Inherited: 0x00)
struct FFortAbilitySetHandle {
	struct TWeakObjectPtr<struct UAbilitySystemComponent> TargetAbilitySystemComponent; // 0x00(0x08)
	struct TArray<struct FGameplayAbilitySpecHandle> GrantedAbilityHandles; // 0x08(0x10)
	struct TArray<struct FActiveGameplayEffectHandle> AppliedEffectHandles; // 0x18(0x10)
	struct TArray<struct FGuid> ItemGuidsForAdditionalItems; // 0x28(0x10)
};

// ScriptStruct FortniteGame.TeamChangeRequest
// Size: 0x10 (Inherited: 0x00)
struct FTeamChangeRequest {
	struct AFortPlayerController* RequestingController; // 0x00(0x08)
	char DesiredTeam; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
};

// ScriptStruct FortniteGame.OnTimeHitInfo
// Size: 0x30 (Inherited: 0x00)
struct FOnTimeHitInfo {
	struct FDelegate TimeCallback; // 0x00(0x10)
	char pad_10[0x20]; // 0x10(0x20)
};

// ScriptStruct FortniteGame.AdditionalLevelStreamed
// Size: 0x0c (Inherited: 0x00)
struct FAdditionalLevelStreamed {
	struct FName LevelName; // 0x00(0x08)
	bool bIsServerOnly; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.TieredWaveSetData
// Size: 0x1d0 (Inherited: 0x00)
struct FTieredWaveSetData {
	int32_t EDOIdx; // 0x00(0x04)
	float BreatherBetweenWaves; // 0x04(0x04)
	enum class EWaveRules WaveRules; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	struct FGameplayTag EnemyTypeToKillMod; // 0x0c(0x08)
	char pad_14[0x4]; // 0x14(0x04)
	struct TArray<struct TSoftObjectPtr<struct UFortMissionInfo>> WaveMissions; // 0x18(0x10)
	float WaveLengthMod; // 0x28(0x04)
	float NumKillsMod; // 0x2c(0x04)
	float KillPointsMod; // 0x30(0x04)
	float DifficultyAddMod; // 0x34(0x04)
	bool bDeferTemporaryModifiers; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	SoftClassProperty OverrideSpawnPointsMultiplier; // 0x40(0x28)
	SoftClassProperty OverrideSpawnPointsCurve; // 0x68(0x28)
	SoftClassProperty OverrideSpawnProgression; // 0x90(0x28)
	SoftClassProperty OverrideUtilitiesAdjustment; // 0xb8(0x28)
	SoftClassProperty OverrideUtilitiesFree; // 0xe0(0x28)
	SoftClassProperty OverrideUtilitiesLocked; // 0x108(0x28)
	SoftClassProperty OverrideDistance; // 0x130(0x28)
	SoftClassProperty OverrideDirectionNumber; // 0x158(0x28)
	SoftClassProperty OverrideModifierTags; // 0x180(0x28)
	SoftClassProperty OverrideTimedModifierTags; // 0x1a8(0x28)
};

// ScriptStruct FortniteGame.ActiveGameplayModifierHandle
// Size: 0x04 (Inherited: 0x00)
struct FActiveGameplayModifierHandle {
	int32_t Handle; // 0x00(0x04)
};

// ScriptStruct FortniteGame.FortVoteConfig
// Size: 0x14 (Inherited: 0x00)
struct FFortVoteConfig {
	int32_t NumVoteOptions; // 0x00(0x04)
	float VoteDuration; // 0x04(0x04)
	float FailedVoteLockOutDuration; // 0x08(0x04)
	int32_t MaxVotesAllowedPerPlayer; // 0x0c(0x04)
	enum class EFortVoteArbitratorType VoteArbitratorType; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
};

// ScriptStruct FortniteGame.VoteData
// Size: 0x78 (Inherited: 0x00)
struct FVoteData {
	enum class EFortVoteType VoteType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FUniqueNetIdRepl VoteInstigatorNetId; // 0x08(0x28)
	struct FFortVoteConfig VoteConfig; // 0x30(0x14)
	float VoteStartTime; // 0x44(0x04)
	float VoteEndTime; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct TArray<struct FVoter> Voters; // 0x50(0x10)
	int32_t NumVotersWithMaxVotes; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
	struct FTimerHandle EndVoteTimerHandle; // 0x68(0x08)
	enum class EFortVoteStatus VoteStatus; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// ScriptStruct FortniteGame.PlayerBuildableClassContainer
// Size: 0x10 (Inherited: 0x00)
struct FPlayerBuildableClassContainer {
	struct TArray<struct ABuildingSMActor*> BuildingClasses; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortZoneMissionAlertData
// Size: 0x30 (Inherited: 0x00)
struct FFortZoneMissionAlertData {
	struct TArray<struct FFortItemQuantityPair> MissionAlertRewards; // 0x00(0x10)
	struct FString MissionAlertCategoryName; // 0x10(0x10)
	struct FString MissionAlertID; // 0x20(0x10)
};

// ScriptStruct FortniteGame.FortItemQuantityPair
// Size: 0x14 (Inherited: 0x00)
struct FFortItemQuantityPair {
	struct FPrimaryAssetId ItemPrimaryAssetId; // 0x00(0x10)
	int32_t Quantity; // 0x10(0x04)
};

// ScriptStruct FortniteGame.FortZoneDifficultyIncreaseRewardData
// Size: 0x10 (Inherited: 0x00)
struct FFortZoneDifficultyIncreaseRewardData {
	struct TArray<struct FFortItemQuantityPair> Rewards; // 0x00(0x10)
};

// ScriptStruct FortniteGame.ActiveGameplayModifierArray
// Size: 0x130 (Inherited: 0x108)
struct FActiveGameplayModifierArray : FFastArraySerializer {
	struct TArray<struct FActiveGameplayModifier> Items; // 0x108(0x10)
	struct TArray<struct FActiveGameplayModifier> DeferredGameplayModifiers; // 0x118(0x10)
	int32_t ModifierHandleGenerator; // 0x128(0x04)
	bool bSupportRuntimeModifierShutdown; // 0x12c(0x01)
	char pad_12D[0x3]; // 0x12d(0x03)
};

// ScriptStruct FortniteGame.ActiveGameplayModifier
// Size: 0xd8 (Inherited: 0x0c)
struct FActiveGameplayModifier : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct UFortGameplayModifierItemDefinition* ModifierDef; // 0x10(0x08)
	struct FActiveGameplayModifierHandle ModifierHandle; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct TArray<struct AFortGameplayMutator*> Mutators; // 0x20(0x10)
	int32_t Expiration; // 0x30(0x04)
	char pad_34[0xa4]; // 0x34(0xa4)
};

// ScriptStruct FortniteGame.ReplicatedMontageMap
// Size: 0x18 (Inherited: 0x00)
struct FReplicatedMontageMap {
	struct TArray<struct FReplicatedMontageIndexPair> Mappings; // 0x00(0x10)
	char pad_10[0x8]; // 0x10(0x08)
};

// ScriptStruct FortniteGame.ReplicatedMontageIndexPair
// Size: 0x10 (Inherited: 0x00)
struct FReplicatedMontageIndexPair {
	struct UAnimMontage* Montage; // 0x00(0x08)
	int32_t Index; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.EvaluationResult
// Size: 0x30 (Inherited: 0x00)
struct FEvaluationResult {
	bool bSucceeded; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FString ErrorCode; // 0x08(0x10)
	struct FText ErrorMessage; // 0x18(0x18)
};

// ScriptStruct FortniteGame.PlayersLeft
// Size: 0x0c (Inherited: 0x00)
struct FPlayersLeft {
	int32_t Humans; // 0x00(0x04)
	int32_t Bots; // 0x04(0x04)
	int32_t Total; // 0x08(0x04)
};

// ScriptStruct FortniteGame.TotalPlayers
// Size: 0x0c (Inherited: 0x00)
struct FTotalPlayers {
	int32_t Humans; // 0x00(0x04)
	int32_t Bots; // 0x04(0x04)
	int32_t Total; // 0x08(0x04)
};

// ScriptStruct FortniteGame.AthenaStreamIdOverride
// Size: 0x20 (Inherited: 0x00)
struct FAthenaStreamIdOverride {
	struct FString SourceName; // 0x00(0x10)
	struct FString OverriddenId; // 0x10(0x10)
};

// ScriptStruct FortniteGame.CosmeticUsageReport
// Size: 0x80 (Inherited: 0x00)
struct FCosmeticUsageReport {
	struct TArray<struct UAthenaCosmeticItemDefinition*> TrackedCosmetics; // 0x00(0x10)
	char pad_10[0x50]; // 0x10(0x50)
	struct TArray<struct FVariantUsageReport> VariantUsageByCosmetic; // 0x60(0x10)
	struct TArray<int32_t> PrioritizedCosmeticIndices; // 0x70(0x10)
};

// ScriptStruct FortniteGame.VariantUsageReport
// Size: 0x18 (Inherited: 0x00)
struct FVariantUsageReport {
	struct TArray<struct FVariantUsageReportInner> VariantUsage; // 0x00(0x10)
	int32_t TotalUses; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.VariantUsageReportInner
// Size: 0x14 (Inherited: 0x00)
struct FVariantUsageReportInner {
	struct FGameplayTag ChannelTag; // 0x00(0x08)
	struct FGameplayTag VariantTag; // 0x08(0x08)
	int32_t UseCount; // 0x10(0x04)
};

// ScriptStruct FortniteGame.SpawnMachineRepDataArray
// Size: 0x120 (Inherited: 0x108)
struct FSpawnMachineRepDataArray : FFastArraySerializer {
	struct TArray<struct FSpawnMachineRepData> SpawnMachineRepDataArray; // 0x108(0x10)
	struct AFortGameStateAthena* OwningGameState; // 0x118(0x08)
};

// ScriptStruct FortniteGame.SpawnMachineRepData
// Size: 0x28 (Inherited: 0x0c)
struct FSpawnMachineRepData : FFastArraySerializerItem {
	struct FVector Location; // 0x0c(0x0c)
	enum class ESpawnMachineState SpawnMachineState; // 0x18(0x01)
	char pad_19[0x3]; // 0x19(0x03)
	float SpawnMachineCooldownStartTime; // 0x1c(0x04)
	float SpawnMachineCooldownEndTime; // 0x20(0x04)
	int32_t SpawnMachineRepDataHandle; // 0x24(0x04)
};

// ScriptStruct FortniteGame.MeshNetworkStatus
// Size: 0x03 (Inherited: 0x00)
struct FMeshNetworkStatus {
	bool bEnabled; // 0x00(0x01)
	bool bConnectedToRoot; // 0x01(0x01)
	enum class EMeshNetworkNodeType GameServerNodeType; // 0x02(0x01)
};

// ScriptStruct FortniteGame.GameplayMutatorObjectDataArray
// Size: 0x118 (Inherited: 0x108)
struct FGameplayMutatorObjectDataArray : FFastArraySerializer {
	struct TArray<struct FGameplayMutatorObjectData> ObjectDataList; // 0x108(0x10)
};

// ScriptStruct FortniteGame.GameplayMutatorObjectData
// Size: 0x28 (Inherited: 0x0c)
struct FGameplayMutatorObjectData : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct UObject* TheObject; // 0x10(0x08)
	int32_t ObjectId; // 0x18(0x04)
	int32_t ObjectValue1; // 0x1c(0x04)
	int32_t ObjectValue2; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.GameplayMutatorEventData
// Size: 0x10 (Inherited: 0x00)
struct FGameplayMutatorEventData {
	int32_t EventId; // 0x00(0x04)
	int32_t EventParam1; // 0x04(0x04)
	int32_t EventParam2; // 0x08(0x04)
	int32_t EventParam3; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.PlaylistPropertyArray
// Size: 0x1e8 (Inherited: 0x108)
struct FPlaylistPropertyArray : FFastArraySerializer {
	struct TArray<struct FPropertyOverride> PropertyOverrides; // 0x108(0x10)
	int32_t PlaylistReplicationKey; // 0x118(0x04)
	char pad_11C[0x4]; // 0x11c(0x04)
	struct UFortPlaylistAthena* BasePlaylist; // 0x120(0x08)
	struct UFortPlaylistAthena* OverridePlaylist; // 0x128(0x08)
	struct TMap<struct FString, struct FPropertyOverrideScope> PropertyOverrideScopes; // 0x130(0x50)
	char pad_180[0x68]; // 0x180(0x68)
};

// ScriptStruct FortniteGame.PropertyOverrideScope
// Size: 0x10 (Inherited: 0x00)
struct FPropertyOverrideScope {
	struct TArray<struct FPropertyOverride> PropertyOverrides; // 0x00(0x10)
};

// ScriptStruct FortniteGame.PropertyOverride
// Size: 0x40 (Inherited: 0x0c)
struct FPropertyOverride : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct FString PropertyScope; // 0x10(0x10)
	struct FString PropertyName; // 0x20(0x10)
	struct FString PropertyData; // 0x30(0x10)
};

// ScriptStruct FortniteGame.AIPawnCustomizationPreloadData
// Size: 0x10 (Inherited: 0x00)
struct FAIPawnCustomizationPreloadData {
	float Priority; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct UFortAIPawnCustomizationDefinition* Customization; // 0x08(0x08)
};

// ScriptStruct FortniteGame.AICharacterPartsPreloadData
// Size: 0x10 (Inherited: 0x00)
struct FAICharacterPartsPreloadData {
	float Priority; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct UCustomCharacterPart* CharacterPart; // 0x08(0x08)
};

// ScriptStruct FortniteGame.DynamicLandData
// Size: 0xa0 (Inherited: 0x00)
struct FDynamicLandData {
	struct FName Name; // 0x00(0x08)
	struct FVector WorldPosition; // 0x08(0x0c)
	char pad_14[0x4]; // 0x14(0x04)
	struct FSlateBrush LandBrush; // 0x18(0x88)
};

// ScriptStruct FortniteGame.GameMemberInfoArray
// Size: 0x120 (Inherited: 0x108)
struct FGameMemberInfoArray : FFastArraySerializer {
	struct TArray<struct FGameMemberInfo> Members; // 0x108(0x10)
	struct AFortGameStateAthena* OwningGameState; // 0x118(0x08)
};

// ScriptStruct FortniteGame.GameMemberInfo
// Size: 0x38 (Inherited: 0x0c)
struct FGameMemberInfo : FFastArraySerializerItem {
	char SquadId; // 0x0c(0x01)
	char TeamIndex; // 0x0d(0x01)
	char pad_E[0x2]; // 0x0e(0x02)
	struct FUniqueNetIdRepl MemberUniqueId; // 0x10(0x28)
};

// ScriptStruct FortniteGame.AircraftFlightInfo
// Size: 0x28 (Inherited: 0x00)
struct FAircraftFlightInfo {
	struct FVector_NetQuantize100 FlightStartLocation; // 0x00(0x0c)
	struct FRotator FlightStartRotation; // 0x0c(0x0c)
	float FlightSpeed; // 0x18(0x04)
	float TimeTillFlightEnd; // 0x1c(0x04)
	float TimeTillDropStart; // 0x20(0x04)
	float TimeTillDropEnd; // 0x24(0x04)
};

// ScriptStruct FortniteGame.FortWinnerPlayerData
// Size: 0x04 (Inherited: 0x00)
struct FFortWinnerPlayerData {
	int32_t PlayerID; // 0x00(0x04)
};

// ScriptStruct FortniteGame.StormCapDamageThresholdInfo
// Size: 0x08 (Inherited: 0x00)
struct FStormCapDamageThresholdInfo {
	float ThresholdFloor; // 0x00(0x04)
	float ThresholdCeiling; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortPlayerAttributeSets
// Size: 0x50 (Inherited: 0x00)
struct FFortPlayerAttributeSets {
	struct UFortRegenHealthSet* HealthSet; // 0x00(0x08)
	struct UFortControlResistanceSet* ControlResistanceSet; // 0x08(0x08)
	struct UFortDamageSet* DamageSet; // 0x10(0x08)
	struct UFortMovementSet* MovementSet; // 0x18(0x08)
	struct UFortAdvancedMovementSet* AdvancedMovementSet; // 0x20(0x08)
	struct UFortConstructionSet* ConstructionSet; // 0x28(0x08)
	struct UFortPlayerAttrSet* PlayerAttrSet; // 0x30(0x08)
	struct UFortCharacterAttrSet* CharacterAttrSet; // 0x38(0x08)
	struct UFortWeaponAttrSet* WeaponAttrSet; // 0x40(0x08)
	struct UFortHomebaseSet* HomebaseSet; // 0x48(0x08)
};

// ScriptStruct FortniteGame.FortAppliedSwapItemAndVariantData
// Size: 0x28 (Inherited: 0x00)
struct FFortAppliedSwapItemAndVariantData {
	struct FGuid SwapId; // 0x00(0x10)
	enum class EFortAppliedSwapItemAndVariantState SwapState; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct TArray<struct FFortSwapItemAndVariantData> SwapData; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortSwapItemAndVariantData
// Size: 0x18 (Inherited: 0x00)
struct FFortSwapItemAndVariantData {
	struct UFortItemDefinition* Item; // 0x00(0x08)
	struct TArray<struct FMcpVariantChannelInfo> ChannelInfoList; // 0x08(0x10)
};

// ScriptStruct FortniteGame.CustomCharacterData
// Size: 0x78 (Inherited: 0x00)
struct FCustomCharacterData {
	char WasPartReplicatedFlags; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t RequiredVariantPartFlags; // 0x04(0x04)
	struct UCustomCharacterPart* Parts[0x7]; // 0x08(0x38)
	struct UAthenaCharmItemDefinition* Charms[0x4]; // 0x40(0x20)
	struct TArray<struct UCustomCharacterPart*> VariantRequiredCharacterParts; // 0x60(0x10)
	bool bReplicationFailed; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// ScriptStruct FortniteGame.PlayerBannerInfo
// Size: 0x28 (Inherited: 0x00)
struct FPlayerBannerInfo {
	struct FString IconId; // 0x00(0x10)
	struct FString ColorId; // 0x10(0x10)
	int32_t Level; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.SimulatedAttributeEntry
// Size: 0x40 (Inherited: 0x00)
struct FSimulatedAttributeEntry {
	struct FGameplayAttribute Attribute; // 0x00(0x38)
	float CurrentValue; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.AccumulatedItemEntry
// Size: 0x10 (Inherited: 0x00)
struct FAccumulatedItemEntry {
	struct UFortWorldItemDefinition* ItemDefinition; // 0x00(0x08)
	int32_t Quantity; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortSpectatorZoneArray
// Size: 0x120 (Inherited: 0x108)
struct FFortSpectatorZoneArray : FFastArraySerializer {
	struct TArray<struct FFortSpectatorZoneItem> SpectatorArray; // 0x108(0x10)
	struct AFortPlayerStateZone* OwningState; // 0x118(0x08)
};

// ScriptStruct FortniteGame.FortSpectatorZoneItem
// Size: 0x18 (Inherited: 0x0c)
struct FFortSpectatorZoneItem : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct AFortPlayerStateZone* PlayerState; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortCreativeMessageDispatcherErrorMessage
// Size: 0x30 (Inherited: 0x00)
struct FFortCreativeMessageDispatcherErrorMessage {
	enum class EMessageDispatcherErrorMessageType ErrorMessageType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FText MessageName; // 0x08(0x18)
	struct FGameplayTag ChannelId; // 0x20(0x08)
	int32_t LimitValue; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.EventTournamentIds
// Size: 0x40 (Inherited: 0x00)
struct FEventTournamentIds {
	struct FString EventId; // 0x00(0x10)
	struct FString WindowId; // 0x10(0x10)
	struct FString GroupId; // 0x20(0x10)
	struct FString SubGroupId; // 0x30(0x10)
};

// ScriptStruct FortniteGame.FortTournamentStatInfo
// Size: 0x20 (Inherited: 0x00)
struct FFortTournamentStatInfo {
	struct FString StatName; // 0x00(0x10)
	struct FName StatDisplayName; // 0x10(0x08)
	int32_t StatValue; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.DeathInfo
// Size: 0x90 (Inherited: 0x00)
struct FDeathInfo {
	struct AActor* FinisherOrDowner; // 0x00(0x08)
	struct AActor* Downer; // 0x08(0x08)
	bool bDBNO; // 0x10(0x01)
	enum class EDeathCause DeathCause; // 0x11(0x01)
	char DeathClassSlot; // 0x12(0x01)
	char pad_13[0x1]; // 0x13(0x01)
	float Distance; // 0x14(0x04)
	struct FVector DeathLocation; // 0x18(0x0c)
	bool bInitialized; // 0x24(0x01)
	char pad_25[0x3]; // 0x25(0x03)
	struct FGameplayTagContainer DeathTags; // 0x28(0x20)
	struct FGameplayTagContainer FinisherOrDownerTags; // 0x48(0x20)
	struct FGameplayTagContainer VictimTags; // 0x68(0x20)
	char pad_88[0x8]; // 0x88(0x08)
};

// ScriptStruct FortniteGame.DetailedMetricInformation
// Size: 0x10 (Inherited: 0x00)
struct FDetailedMetricInformation {
	struct TArray<struct FMetricStateInformation> MetricStates; // 0x00(0x10)
};

// ScriptStruct FortniteGame.MetricStateInformation
// Size: 0x30 (Inherited: 0x00)
struct FMetricStateInformation {
	struct FString Name; // 0x00(0x10)
	struct FString Description; // 0x10(0x10)
	enum class EFortBudgetCategory Category; // 0x20(0x01)
	char pad_21[0x3]; // 0x21(0x03)
	int32_t Cost; // 0x24(0x04)
	int32_t Budget; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.SimpleMetricInformation
// Size: 0x60 (Inherited: 0x00)
struct FSimpleMetricInformation {
	struct TArray<enum class EFortBudgetCategory> CategoryNames; // 0x00(0x10)
	struct TArray<int32_t> CategoryValues; // 0x10(0x10)
	struct TArray<int32_t> CategoryBudgets; // 0x20(0x10)
	struct FVector Location; // 0x30(0x0c)
	float NormalizedGroupBudgetValue; // 0x3c(0x04)
	int32_t GroupTotalBudget; // 0x40(0x04)
	struct FVector NeighbourGroupCenter; // 0x44(0x0c)
	struct TArray<char> NeighbourGroupBudgetValue; // 0x50(0x10)
};

// ScriptStruct FortniteGame.FortResurrectionData
// Size: 0x18 (Inherited: 0x00)
struct FFortResurrectionData {
	bool bResurrectionChipAvailable; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float ResurrectionExpirationTime; // 0x04(0x04)
	float ResurrectionExpirationLength; // 0x08(0x04)
	struct FVector WorldLocation; // 0x0c(0x0c)
};

// ScriptStruct FortniteGame.ChangeTeamInfo
// Size: 0x28 (Inherited: 0x00)
struct FChangeTeamInfo {
	struct AActor* Instigator; // 0x00(0x08)
	struct FGameplayTagContainer ChangeTeamTags; // 0x08(0x20)
};

// ScriptStruct FortniteGame.FortRespawnData
// Size: 0x20 (Inherited: 0x00)
struct FFortRespawnData {
	bool bRespawnDataAvailable; // 0x00(0x01)
	bool bClientIsReady; // 0x01(0x01)
	bool bServerIsReady; // 0x02(0x01)
	char pad_3[0x1]; // 0x03(0x01)
	struct FVector RespawnLocation; // 0x04(0x0c)
	struct FRotator RespawnRotation; // 0x10(0x0c)
	float RespawnCameraDistance; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.XPEventInfo
// Size: 0x50 (Inherited: 0x00)
struct FXPEventInfo {
	struct FName EventName; // 0x00(0x08)
	struct FText SimulatedText; // 0x08(0x18)
	struct UFortQuestItemDefinition* QuestDef; // 0x20(0x08)
	enum class EXPEventPriorityType Priority; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	int32_t EventXpValue; // 0x2c(0x04)
	int32_t TotalXpEarnedInMatch; // 0x30(0x04)
	struct FPrimaryAssetId Accolade; // 0x34(0x10)
	int32_t RestedValuePortion; // 0x44(0x04)
	int32_t SeasonBoostValuePortion; // 0x48(0x04)
	int32_t RestedXPRemaining; // 0x4c(0x04)
};

// ScriptStruct FortniteGame.VehicleTrickInfo
// Size: 0x140 (Inherited: 0x00)
struct FVehicleTrickInfo {
	float LastOnGroundTime; // 0x00(0x04)
	float mCreditDisabledTime; // 0x04(0x04)
	int32_t TrickScore; // 0x08(0x04)
	char pad_C[0x90]; // 0x0c(0x90)
	int32_t TrickAxisCount; // 0x9c(0x04)
	char pad_A0[0x18]; // 0xa0(0x18)
	float AirControlsAlpha; // 0xb8(0x04)
	float AirDistance; // 0xbc(0x04)
	float AirDistanceSqrd; // 0xc0(0x04)
	float AirTime; // 0xc4(0x04)
	float AirHeight; // 0xc8(0x04)
	float TimeAtLaunch; // 0xcc(0x04)
	struct FVector LocationAtLaunch; // 0xd0(0x0c)
	struct FVector ForwardVectorAtLaunch; // 0xdc(0x0c)
	struct FVector UpVectorAtLaunch; // 0xe8(0x0c)
	struct FVector FlatForwardVectorAtLaunch; // 0xf4(0x0c)
	struct FVector PrevForwardVec; // 0x100(0x0c)
	struct FVector PrevRightVec; // 0x10c(0x0c)
	struct FVector PrevUpVec; // 0x118(0x0c)
	int32_t PeterPanCount; // 0x124(0x04)
	int32_t StoopingSquirrelCount; // 0x128(0x04)
	char bDidPeterPan : 1; // 0x12c(0x01)
	char bDidStoopingSquirrel : 1; // 0x12c(0x01)
	char bInAirTrick : 1; // 0x12c(0x01)
	char bCreditTrick : 1; // 0x12c(0x01)
	char bTrickDeactivated : 1; // 0x12c(0x01)
	char bStuckLanding : 1; // 0x12c(0x01)
	char bDoingRotationTrick : 1; // 0x12c(0x01)
	char pad_12D[0x13]; // 0x12d(0x13)
};

// ScriptStruct FortniteGame.CreativeOptionVariableBase
// Size: 0x0c (Inherited: 0x00)
struct FCreativeOptionVariableBase {
	struct FGameplayTag VariableTag; // 0x00(0x08)
	int32_t Value; // 0x08(0x04)
};

// ScriptStruct FortniteGame.GhostModeRepData
// Size: 0x18 (Inherited: 0x00)
struct FGhostModeRepData {
	bool bInGhostMode; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct UFortWorldItemDefinition* GhostModeItemDef; // 0x08(0x08)
	int32_t PreviousFocusedSlot; // 0x10(0x04)
	float TimeExitedGhostMode; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortPlayerDeathReport
// Size: 0x78 (Inherited: 0x00)
struct FFortPlayerDeathReport {
	float ServerTimeForRespawn; // 0x00(0x04)
	float ServerTimeForResurrect; // 0x04(0x04)
	float LethalDamage; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct AFortPlayerState* KillerPlayerState; // 0x10(0x08)
	struct AFortPawn* KillerPawn; // 0x18(0x08)
	float KillerHealthPercent; // 0x20(0x04)
	float KillerShieldPercent; // 0x24(0x04)
	struct UFortWeaponItemDefinition* KillerWeapon; // 0x28(0x08)
	struct AActor* DamageCauser; // 0x30(0x08)
	char bDroppedBackpack : 1; // 0x38(0x01)
	char bNotifyUI : 1; // 0x38(0x01)
	char pad_38_2 : 6; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct FGameplayTagContainer Tags; // 0x40(0x20)
	struct FVector ViewLocationAtTimeOfDeath; // 0x60(0x0c)
	struct FRotator ViewRotationAtTimeOfDeath; // 0x6c(0x0c)
};

// ScriptStruct FortniteGame.FortDisplayQuestUpdateData
// Size: 0x38 (Inherited: 0x00)
struct FFortDisplayQuestUpdateData {
	struct FFortUpdatedObjectiveStat ObjectiveUpdated; // 0x00(0x28)
	struct AFortPlayerState* QuestOwner; // 0x28(0x08)
	struct AFortPlayerState* AssistingPlayer; // 0x30(0x08)
};

// ScriptStruct FortniteGame.GiftUINotificationInfo
// Size: 0x30 (Inherited: 0x00)
struct FGiftUINotificationInfo {
	struct TSoftObjectPtr<struct UFortItemDefinition> SoftItemPtr; // 0x00(0x28)
	int32_t Count; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.ProfileGoScenario
// Size: 0x50 (Inherited: 0x00)
struct FProfileGoScenario {
	struct FString Name; // 0x00(0x10)
	struct FVector Position; // 0x10(0x0c)
	struct FRotator Orientation; // 0x1c(0x0c)
	struct FString OnBegin; // 0x28(0x10)
	struct FString OnEnd; // 0x38(0x10)
	bool AutoGenerated; // 0x48(0x01)
	bool UseSetupCheats; // 0x49(0x01)
	char pad_4A[0x6]; // 0x4a(0x06)
};

// ScriptStruct FortniteGame.AthenaQuickChatActiveEntry
// Size: 0x14 (Inherited: 0x00)
struct FAthenaQuickChatActiveEntry {
	struct TWeakObjectPtr<struct UAthenaQuickChatBank> Bank; // 0x00(0x08)
	struct TWeakObjectPtr<struct UObject> ContextObject; // 0x08(0x08)
	int16_t ContextValue; // 0x10(0x02)
	int8_t Index; // 0x12(0x01)
	char pad_13[0x1]; // 0x13(0x01)
};

// ScriptStruct FortniteGame.PlayerStateEncryptionKey
// Size: 0x10 (Inherited: 0x00)
struct FPlayerStateEncryptionKey {
	struct TArray<char> Key; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortWorldMarkerData
// Size: 0x130 (Inherited: 0x0c)
struct FFortWorldMarkerData : FFastArraySerializerItem {
	struct FMarkerID MarkerID; // 0x0c(0x08)
	char pad_14[0x4]; // 0x14(0x04)
	struct AFortPlayerState* Owner; // 0x18(0x08)
	enum class EFortWorldMarkerType MarkerType; // 0x20(0x01)
	char pad_21[0x3]; // 0x21(0x03)
	struct FVector BasePosition; // 0x24(0x0c)
	struct FVector BasePositionOffset; // 0x30(0x0c)
	struct FVector WorldNormal; // 0x3c(0x0c)
	struct UFortItemDefinition* ItemDefinition; // 0x48(0x08)
	int32_t ItemCount; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct AActor* MarkedActor; // 0x58(0x08)
	SoftClassProperty MarkedActorClass; // 0x60(0x28)
	bool bIncludeSquad; // 0x88(0x01)
	bool bHasCustomDisplayInfo; // 0x89(0x01)
	bool bUseHoveredMarkerDetail; // 0x8a(0x01)
	char pad_8B[0x5]; // 0x8b(0x05)
	struct FMarkedActorDisplayInfo CustomDisplayInfo; // 0x90(0x98)
	struct UFortWorldMarker* MarkerInstance; // 0x128(0x08)
};

// ScriptStruct FortniteGame.MarkedActorDisplayInfo
// Size: 0x98 (Inherited: 0x08)
struct FMarkedActorDisplayInfo : FTableRowBase {
	struct FText DisplayName; // 0x08(0x18)
	struct TSoftObjectPtr<struct UTexture2D> Icon; // 0x20(0x28)
	struct UUserWidget* CustomIndicatorClass; // 0x48(0x08)
	SoftClassProperty CustomDetailsClass; // 0x50(0x28)
	struct FLinearColor PrimaryColor; // 0x78(0x10)
	struct USoundBase* sound; // 0x88(0x08)
	enum class EFortMarkedActorScreenClamping ScreenClamping; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
};

// ScriptStruct FortniteGame.MarkerID
// Size: 0x08 (Inherited: 0x00)
struct FMarkerID {
	int32_t PlayerID; // 0x00(0x04)
	int32_t InstanceID; // 0x04(0x04)
};

// ScriptStruct FortniteGame.CreativePublishOptions
// Size: 0x58 (Inherited: 0x00)
struct FCreativePublishOptions {
	struct FString UserTitle; // 0x00(0x10)
	struct FString UserDescription; // 0x10(0x10)
	struct FString UserYoutubeVideoId; // 0x20(0x10)
	struct TArray<struct FString> DescriptionTags; // 0x30(0x10)
	bool bActivateLink; // 0x40(0x01)
	bool bClearPersistentData; // 0x41(0x01)
	char pad_42[0x6]; // 0x42(0x06)
	struct FString UserLocale; // 0x48(0x10)
};

// ScriptStruct FortniteGame.TimeStampedPhysicsPawnState
// Size: 0x50 (Inherited: 0x00)
struct FTimeStampedPhysicsPawnState {
	float WorldTime; // 0x00(0x04)
	char pad_4[0xc]; // 0x04(0x0c)
	struct FReplicatedPhysicsPawnState PhysicsPawnState; // 0x10(0x40)
};

// ScriptStruct FortniteGame.ReplicatedPhysicsPawnState
// Size: 0x40 (Inherited: 0x00)
struct FReplicatedPhysicsPawnState {
	struct FVector_NetQuantize100 Translation; // 0x00(0x0c)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FQuat Rotation; // 0x10(0x10)
	struct FVector_NetQuantize10 LinearVelocity; // 0x20(0x0c)
	struct FVector_NetQuantize10 AngularVelocity; // 0x2c(0x0c)
	uint16_t SyncKey; // 0x38(0x02)
	char pad_3A[0x6]; // 0x3a(0x06)
};

// ScriptStruct FortniteGame.QuickBarEquippedItemGuids
// Size: 0xa4 (Inherited: 0x00)
struct FQuickBarEquippedItemGuids {
	struct FGuid EquippedItemGuids[0xa]; // 0x00(0xa0)
	int32_t NumEnabledSlots; // 0xa0(0x04)
};

// ScriptStruct FortniteGame.FortPlaysetStreamingData
// Size: 0x2c (Inherited: 0x00)
struct FFortPlaysetStreamingData {
	struct FName PackageName; // 0x00(0x08)
	struct FName UniquePackageName; // 0x08(0x08)
	struct FVector Location; // 0x10(0x0c)
	struct FRotator Rotation; // 0x1c(0x0c)
	char bValid : 1; // 0x28(0x01)
	char pad_28_1 : 7; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
};

// ScriptStruct FortniteGame.CreativeIslandInfo
// Size: 0x30 (Inherited: 0x00)
struct FCreativeIslandInfo {
	struct FString IslandTitle; // 0x00(0x10)
	struct FString IslandIntroduction; // 0x10(0x10)
	struct FString UserLocale; // 0x20(0x10)
};

// ScriptStruct FortniteGame.CompositeBool
// Size: 0x18 (Inherited: 0x00)
struct FCompositeBool {
	bool bDefaultValue; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct TSoftObjectPtr<struct UObject>> ModifyingObjects; // 0x08(0x10)
};

// ScriptStruct FortniteGame.ItemAndCount
// Size: 0x10 (Inherited: 0x00)
struct FItemAndCount {
	int32_t Count; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct UFortItemDefinition* Item; // 0x08(0x08)
};

// ScriptStruct FortniteGame.CreativePlotSessionData
// Size: 0x14 (Inherited: 0x00)
struct FCreativePlotSessionData {
	char pad_0[0x8]; // 0x00(0x08)
	int32_t TimesInventoryOpened; // 0x08(0x04)
	int32_t TimesIslandMenuOpened; // 0x0c(0x04)
	int32_t TimesGameStarted; // 0x10(0x04)
};

// ScriptStruct FortniteGame.BuildingEditAnalyticEvent
// Size: 0x10 (Inherited: 0x00)
struct FBuildingEditAnalyticEvent {
	enum class EFortBuildingType BuildingType; // 0x00(0x01)
	enum class EFortResourceType ResourceType; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	struct FVector Location; // 0x04(0x0c)
};

// ScriptStruct FortniteGame.BuildingStats
// Size: 0x20 (Inherited: 0x00)
struct FBuildingStats {
	int32_t BuildingsPlaced; // 0x00(0x04)
	int32_t WallsPlaced; // 0x04(0x04)
	int32_t StairsPlaced; // 0x08(0x04)
	int32_t FloorsPlaced; // 0x0c(0x04)
	int32_t RoofsPlaced; // 0x10(0x04)
	int32_t WoodBuildingsPlaced; // 0x14(0x04)
	int32_t StoneBuildingsPlaced; // 0x18(0x04)
	int32_t MetalBuildingsPlaced; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.QuickBarData
// Size: 0x10 (Inherited: 0x00)
struct FQuickBarData {
	struct TArray<struct FQuickBarSlotData> QuickbarSlots; // 0x00(0x10)
};

// ScriptStruct FortniteGame.QuickBarSlotData
// Size: 0x40 (Inherited: 0x00)
struct FQuickBarSlotData {
	struct TArray<enum class EFortItemType> AcceptedItemTypes; // 0x00(0x10)
	bool bStaticSlot; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct TSoftObjectPtr<struct UFortWorldItemDefinition> DefaultItem; // 0x18(0x28)
};

// ScriptStruct FortniteGame.CreativeIslandData
// Size: 0x58 (Inherited: 0x00)
struct FCreativeIslandData {
	struct FString McpId; // 0x00(0x10)
	struct FText IslandName; // 0x10(0x18)
	struct FString PublishedIslandCode; // 0x28(0x10)
	int32_t PublishedIslandVersion; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct FDateTime LastLoadedDate; // 0x40(0x08)
	struct FDateTime DeletedAt; // 0x48(0x08)
	bool bIsDeleted; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
};

// ScriptStruct FortniteGame.LevelStreamRequestHandshakeState
// Size: 0x01 (Inherited: 0x00)
struct FLevelStreamRequestHandshakeState {
	bool bLevelStreamingCompleted; // 0x00(0x01)
};

// ScriptStruct FortniteGame.CumulativeFrameTimeWithoutSleepLimits
// Size: 0x18 (Inherited: 0x00)
struct FCumulativeFrameTimeWithoutSleepLimits {
	double FrameTimeWithoutSleep; // 0x00(0x08)
	double MaxCumulativeFrameTimeAboveThreshold; // 0x08(0x08)
	double MaxNumberOfFramesAboveThreshold; // 0x10(0x08)
};

// ScriptStruct FortniteGame.HotfixVolumePlacement
// Size: 0x50 (Inherited: 0x00)
struct FHotfixVolumePlacement {
	struct FString Map; // 0x00(0x10)
	struct FVector Center; // 0x10(0x0c)
	struct FVector Extent; // 0x1c(0x0c)
	struct FString GameInclude; // 0x28(0x10)
	struct FString GameExclude; // 0x38(0x10)
	bool bNeededOnClient; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// ScriptStruct FortniteGame.FortSpawnActorData
// Size: 0x20 (Inherited: 0x00)
struct FFortSpawnActorData {
	struct UFortSpawnActorInfo* SpawnActorInfo; // 0x00(0x08)
	int32_t NumSpawnsRemaining; // 0x08(0x04)
	float TimeUntilNextSpawn; // 0x0c(0x04)
	struct TArray<struct AActor*> SpawnedFortSpawnActors; // 0x10(0x10)
};

// ScriptStruct FortniteGame.AthenaVehicleOverride
// Size: 0x60 (Inherited: 0x00)
struct FAthenaVehicleOverride {
	struct FString RequiredCalendarEvent; // 0x00(0x10)
	SoftClassProperty DefaultVehicleClass; // 0x10(0x28)
	SoftClassProperty OverrideVehicleClass; // 0x38(0x28)
};

// ScriptStruct FortniteGame.ExitCraftSpawnData
// Size: 0x08 (Inherited: 0x00)
struct FExitCraftSpawnData {
	struct UFortAthenaExitCraftInfo* ExitCraftInfo; // 0x00(0x08)
};

// ScriptStruct FortniteGame.BuildingGameplayActorSpawnData
// Size: 0x14 (Inherited: 0x00)
struct FBuildingGameplayActorSpawnData {
	int32_t BGAIndex; // 0x00(0x04)
	int32_t NumSpawnedBGAs; // 0x04(0x04)
	int32_t NumBGAsToSpawn; // 0x08(0x04)
	float NextSpawnTime; // 0x0c(0x04)
	enum class EBuildingGameplayActorAircraftSpawnSide LastSpawnSide; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
};

// ScriptStruct FortniteGame.SupplyDropSpawnData
// Size: 0x50 (Inherited: 0x00)
struct FSupplyDropSpawnData {
	struct UFortSupplyDropInfo* SupplyDropInfo; // 0x00(0x08)
	struct FSupplyDropZoneBasedSpawnData ZoneBasedData; // 0x08(0x28)
	struct FSupplyDropItemDeliverySpawnData ItemDeliveryData; // 0x30(0x20)
};

// ScriptStruct FortniteGame.SupplyDropItemDeliverySpawnData
// Size: 0x20 (Inherited: 0x00)
struct FSupplyDropItemDeliverySpawnData {
	int32_t NumItemsToDeliver; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct TArray<float> QueuedSpawnTimes; // 0x08(0x10)
	float NextSpawnTime; // 0x18(0x04)
	int32_t NumInitialSpawns; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.SupplyDropZoneBasedSpawnData
// Size: 0x28 (Inherited: 0x00)
struct FSupplyDropZoneBasedSpawnData {
	struct TArray<struct AFortAthenaSupplyDrop*> SpawnedSupplyDrops; // 0x00(0x10)
	int32_t NumDropsRemainingInWave; // 0x10(0x04)
	float NextWaveSpawnTime; // 0x14(0x04)
	float NextSpawnTime; // 0x18(0x04)
	enum class EAthenaGamePhase CurrGamePhase; // 0x1c(0x01)
	char pad_1D[0x3]; // 0x1d(0x03)
	int32_t CurrSubPhase; // 0x20(0x04)
	int32_t TotalSupplyDropsSpawnedInSubPhase; // 0x24(0x04)
};

// ScriptStruct FortniteGame.ScorePlacementTable
// Size: 0xe0 (Inherited: 0x00)
struct FScorePlacementTable {
	struct TArray<float> Solo; // 0x00(0x10)
	struct TArray<float> Duos; // 0x10(0x10)
	struct TArray<float> Squads; // 0x20(0x10)
	struct TArray<float> FiftyFifty; // 0x30(0x10)
	struct TArray<float> LargeTeam; // 0x40(0x10)
	struct TArray<float> MediumTeam; // 0x50(0x10)
	struct TArray<float> QuickSolo; // 0x60(0x10)
	struct TArray<float> QuickDuo; // 0x70(0x10)
	struct TArray<float> QuickSquad; // 0x80(0x10)
	struct TArray<float> QuickLargeTeam; // 0x90(0x10)
	struct TArray<float> QuickTwoTeam; // 0xa0(0x10)
	struct TArray<float> QuickMediumTeam; // 0xb0(0x10)
	struct TArray<float> SinglePlacement; // 0xc0(0x10)
	struct TArray<float> Default; // 0xd0(0x10)
};

// ScriptStruct FortniteGame.GCSettingsOverride
// Size: 0x10 (Inherited: 0x00)
struct FGCSettingsOverride {
	struct FName PlaylistName; // 0x00(0x08)
	bool bEnableGCOnServerDuringMatch; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	float GCFrequency; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.TimeOfDayOverride
// Size: 0x10 (Inherited: 0x00)
struct FTimeOfDayOverride {
	struct FName PlaylistName; // 0x00(0x08)
	float TimeOfDay; // 0x08(0x04)
	float TimeOfDaySpeed; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.AdHocSquad_InviteData
// Size: 0x20 (Inherited: 0x0c)
struct FAdHocSquad_InviteData : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct AFortPlayerStateAthena* InvitingPlayerState; // 0x10(0x08)
	enum class EAdHocSquads_InviteStatus InviteStatus; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
};

// ScriptStruct FortniteGame.UrgentQuestData
// Size: 0x130 (Inherited: 0x00)
struct FUrgentQuestData {
	struct FGameplayTag EventTag; // 0x00(0x08)
	float TotalEventTime; // 0x08(0x04)
	bool bQuestCompleteOnTimeExpiration; // 0x0c(0x01)
	bool bDisplayHUDData; // 0x0d(0x01)
	char pad_E[0x2]; // 0x0e(0x02)
	struct FText EventTitle; // 0x10(0x18)
	struct FText EventSubtitle; // 0x28(0x18)
	struct FText EventSubtitleSecondary; // 0x40(0x18)
	struct FText EventDescription; // 0x58(0x18)
	int32_t SortPriority; // 0x70(0x04)
	bool bReverseProgressBar; // 0x74(0x01)
	bool bShowBountyThreatInformation; // 0x75(0x01)
	bool bShowBountyPriceAndDistance; // 0x76(0x01)
	char pad_77[0x1]; // 0x77(0x01)
	struct AFortPlayerStateAthena* DisplayPlayer; // 0x78(0x08)
	struct AFortPlayerStateAthena* AcceptingPlayer; // 0x80(0x08)
	struct TSoftObjectPtr<struct UTexture2D> SocialAvatarBrushPtr; // 0x88(0x28)
	struct UObject* BountyPriceImage; // 0xb0(0x08)
	struct TSoftObjectPtr<struct UObject> AlertIcon; // 0xb8(0x28)
	struct TSoftObjectPtr<struct USoundBase> SpecialEventStartedSound; // 0xe0(0x28)
	struct FDateTime EventStartTime; // 0x108(0x08)
	struct FTimerHandle EventTimerHandle; // 0x110(0x08)
	struct FLinearColor AlertIconBorderColor; // 0x118(0x10)
	struct FVector2D AlertIconBrushSize; // 0x128(0x08)
};

// ScriptStruct FortniteGame.PropertyOverrideData
// Size: 0x50 (Inherited: 0x00)
struct FPropertyOverrideData {
	struct TArray<struct FPropertyOverrideMk2> PropertyOverrides; // 0x00(0x10)
	struct TArray<struct FPropertyOverrideId> SharedPropertyIds; // 0x10(0x10)
	struct TArray<struct FPropertyOverrideId> PendingPropertyIds; // 0x20(0x10)
	char pad_30[0x8]; // 0x30(0x08)
	enum class EPropertyOverrideTargetType OverrideMode; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct UObject* BaseObject; // 0x40(0x08)
	struct UObject* MutableObject; // 0x48(0x08)
};

// ScriptStruct FortniteGame.PropertyOverrideId
// Size: 0x08 (Inherited: 0x00)
struct FPropertyOverrideId {
	uint64_t PropertyHashes; // 0x00(0x08)
};

// ScriptStruct FortniteGame.PropertyOverrideMk2
// Size: 0x48 (Inherited: 0x00)
struct FPropertyOverrideMk2 {
	struct FString PropertyScope; // 0x00(0x10)
	struct FString PropertyName; // 0x10(0x10)
	struct FString PropertyData; // 0x20(0x10)
	struct FString DefaultPropertyData; // 0x30(0x10)
	char pad_40[0x8]; // 0x40(0x08)
};

// ScriptStruct FortniteGame.FortAttributeInitializationKey
// Size: 0x10 (Inherited: 0x00)
struct FFortAttributeInitializationKey {
	struct FName AttributeInitCategory; // 0x00(0x08)
	struct FName AttributeInitSubCategory; // 0x08(0x08)
};

// ScriptStruct FortniteGame.BuildingGameplayActorAbilityDeliveryInfo
// Size: 0xa0 (Inherited: 0x00)
struct FBuildingGameplayActorAbilityDeliveryInfo {
	struct TArray<struct FBuildingGameplayActorAbilityDeliveryBucket> DeliveryBuckets; // 0x00(0x10)
	struct FScalableFloat ProximityPulseInterval; // 0x10(0x28)
	struct FScalableFloat ProximityPrePulseTime; // 0x38(0x28)
	char bHasGEsToApplyOnTouch : 1; // 0x60(0x01)
	char bHasGEsToApplyOnExit : 1; // 0x60(0x01)
	char bHasGEsToApplyOnPulseTimer : 1; // 0x60(0x01)
	char bHasPersistentEffects : 1; // 0x60(0x01)
	char pad_60_4 : 4; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
	struct ABuildingGameplayActor* OwningActor; // 0x68(0x08)
	struct TArray<struct AActor*> DeferredTouchActorsToProcess; // 0x70(0x10)
	char pad_80[0x20]; // 0x80(0x20)
};

// ScriptStruct FortniteGame.BuildingGameplayActorAbilityDeliveryBucket
// Size: 0x90 (Inherited: 0x00)
struct FBuildingGameplayActorAbilityDeliveryBucket {
	struct FGameplayTag Tag; // 0x00(0x08)
	struct TArray<struct FProximityBasedGEDeliveryInfoHard> ProximityEffectBuckets; // 0x08(0x10)
	struct TArray<struct FFortAbilitySetDeliveryInfo> PawnPersistentAbilitySetBuckets; // 0x18(0x10)
	struct TArray<struct FFortAbilitySetHandle> PersistentlyAppliedAbilitySets; // 0x28(0x10)
	char bEnabled : 1; // 0x38(0x01)
	char bEnabledByDefault : 1; // 0x38(0x01)
	char bHasGEsToApplyOnTouch : 1; // 0x38(0x01)
	char bHasGEsToApplyOnExit : 1; // 0x38(0x01)
	char bHasGEsToApplyOnPulseTimer : 1; // 0x38(0x01)
	char bHasPersistentEffects : 1; // 0x38(0x01)
	char pad_38_6 : 2; // 0x38(0x01)
	char pad_39[0x57]; // 0x39(0x57)
};

// ScriptStruct FortniteGame.FortAbilitySetDeliveryInfo
// Size: 0xa8 (Inherited: 0x00)
struct FFortAbilitySetDeliveryInfo {
	struct FFortDeliveryInfoRequirementsFilter DeliveryRequirements; // 0x00(0x98)
	struct TArray<struct TSoftObjectPtr<struct UFortAbilitySet>> AbilitySets; // 0x98(0x10)
};

// ScriptStruct FortniteGame.FortDeliveryInfoRequirementsFilter
// Size: 0x98 (Inherited: 0x00)
struct FFortDeliveryInfoRequirementsFilter {
	struct FGameplayTagRequirements SourceTagRequirements; // 0x00(0x40)
	struct FGameplayTagRequirements TargetTagRequirements; // 0x40(0x40)
	enum class EFortTeamAffiliation ApplicableTeamAffiliation; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	char bConsiderTeamAffiliationToInstigator : 1; // 0x84(0x01)
	char pad_84_1 : 7; // 0x84(0x01)
	char pad_85[0x3]; // 0x85(0x03)
	enum class EFortTeam ApplicableTeam; // 0x88(0x01)
	char pad_89[0x3]; // 0x89(0x03)
	char bConsiderTeam : 1; // 0x8c(0x01)
	char bApplyToPlayerPawns : 1; // 0x8c(0x01)
	char bApplyToAIPawns : 1; // 0x8c(0x01)
	char bApplyToBuildingActors : 1; // 0x8c(0x01)
	char pad_8C_4 : 4; // 0x8c(0x01)
	char pad_8D[0x3]; // 0x8d(0x03)
	enum class EFortDeliveryInfoBuildingActorSpecification BuildingActorSpecification; // 0x90(0x01)
	char pad_91[0x3]; // 0x91(0x03)
	char bApplyToGlobalEnvironmentAbilityActor : 1; // 0x94(0x01)
	char pad_94_1 : 7; // 0x94(0x01)
	char pad_95[0x3]; // 0x95(0x03)
};

// ScriptStruct FortniteGame.ProximityBasedGEDeliveryInfoBase
// Size: 0xa8 (Inherited: 0x00)
struct FProximityBasedGEDeliveryInfoBase {
	char pad_0[0x8]; // 0x00(0x08)
	struct FFortDeliveryInfoRequirementsFilter DeliveryRequirements; // 0x08(0x98)
	enum class EFortProximityBasedGEApplicationType ProximityApplicationType; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// ScriptStruct FortniteGame.ProximityBasedGEDeliveryInfoHard
// Size: 0xb8 (Inherited: 0xa8)
struct FProximityBasedGEDeliveryInfoHard : FProximityBasedGEDeliveryInfoBase {
	struct TArray<struct FGameplayEffectApplicationInfoHard> EffectsToApply; // 0xa8(0x10)
};

// ScriptStruct FortniteGame.GameplayEffectApplicationInfoHard
// Size: 0x10 (Inherited: 0x00)
struct FGameplayEffectApplicationInfoHard {
	struct UGameplayEffect* GameplayEffect; // 0x00(0x08)
	float Level; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.TeamRoles
// Size: 0x02 (Inherited: 0x00)
struct FTeamRoles {
	char PusherTeam; // 0x00(0x01)
	char DefenderTeam; // 0x01(0x01)
};

// ScriptStruct FortniteGame.FortReplayFXState
// Size: 0x10 (Inherited: 0x00)
struct FFortReplayFXState {
	int32_t DefaultParticleLODBias; // 0x00(0x04)
	int32_t DefaultDepthOfFieldQuality; // 0x04(0x04)
	int32_t OverrideParticleLODBias; // 0x08(0x04)
	int32_t OverrideDepthOfFieldQuality; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.NotificationUISettings
// Size: 0x08 (Inherited: 0x00)
struct FNotificationUISettings {
	float DisplayTime; // 0x00(0x04)
	bool bShouldOverrideVisibilitySettings; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
};

// ScriptStruct FortniteGame.WeaponSeatDefinition
// Size: 0x40 (Inherited: 0x00)
struct FWeaponSeatDefinition {
	int32_t SeatIndex; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct UFortWeaponItemDefinition* VehicleWeapon; // 0x08(0x08)
	struct TArray<struct FActionDefForUI> WeaponActionDefForUI; // 0x10(0x10)
	struct UFortWeaponItemDefinition* VehicleWeaponOverride; // 0x20(0x08)
	struct UFortWeaponItemDefinition* LastEquippedVehicleWeapon; // 0x28(0x08)
	char pad_30[0x10]; // 0x30(0x10)
};

// ScriptStruct FortniteGame.ActionDefForUI
// Size: 0x28 (Inherited: 0x00)
struct FActionDefForUI {
	struct FName InputAction; // 0x00(0x08)
	struct FName GamepadInputAction; // 0x08(0x08)
	struct FText ActionLabel; // 0x10(0x18)
};

// ScriptStruct FortniteGame.VehicleWeapon_RetainedData
// Size: 0x0c (Inherited: 0x00)
struct FVehicleWeapon_RetainedData {
	int32_t AmmoInClip; // 0x00(0x04)
	float LastFireTime; // 0x04(0x04)
	bool bHasPrevious; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.FortCachedWeaponOverheatData
// Size: 0x18 (Inherited: 0x00)
struct FFortCachedWeaponOverheatData {
	float TimeWeaponWasUnequipped; // 0x00(0x04)
	float OverheatValueAtUneqip; // 0x04(0x04)
	float OverheatValue; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	float TimeOverheatedBegan; // 0x10(0x04)
	float TimeHeatWasLastAdded; // 0x14(0x04)
};

// ScriptStruct FortniteGame.CobaltWidgetRoundData
// Size: 0x28 (Inherited: 0x00)
struct FCobaltWidgetRoundData {
	int8_t RoundNumber; // 0x00(0x01)
	int8_t FirstRound; // 0x01(0x01)
	char pad_2[0x6]; // 0x02(0x06)
	struct TArray<struct FCobaltWidgetMatchData> CurrentRoundMatches; // 0x08(0x10)
	struct TArray<char> PreviousRoundWinners; // 0x18(0x10)
};

// ScriptStruct FortniteGame.CobaltWidgetMatchData
// Size: 0x18 (Inherited: 0x00)
struct FCobaltWidgetMatchData {
	struct TArray<char> Teams; // 0x00(0x10)
	struct FGameplayTag POITag; // 0x10(0x08)
};

// ScriptStruct FortniteGame.SafeZoneRoute
// Size: 0x108 (Inherited: 0x00)
struct FSafeZoneRoute {
	struct FScalableFloat bIsEnabled; // 0x00(0x28)
	struct FScalableFloat bUsePOIStartLocation; // 0x28(0x28)
	struct FScalableFloat bUsePOINameOverride; // 0x50(0x28)
	struct FText POINameOverride; // 0x78(0x18)
	struct FScalableFloat StartRadius; // 0x90(0x28)
	struct FScalableFloat EndRadius; // 0xb8(0x28)
	struct FGameplayTag StartPOITag; // 0xe0(0x08)
	struct FGameplayTag EndPOITag; // 0xe8(0x08)
	struct FVector StartLocation; // 0xf0(0x0c)
	struct FVector EndLocation; // 0xfc(0x0c)
};

// ScriptStruct FortniteGame.FortMutatorAudioStinger
// Size: 0x10 (Inherited: 0x00)
struct FFortMutatorAudioStinger {
	struct USoundCue* SoundCue; // 0x00(0x08)
	float LoopTimeBeforeFade; // 0x08(0x04)
	float FadeTime; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.UraniumRoundData
// Size: 0x18 (Inherited: 0x00)
struct FUraniumRoundData {
	int8_t CurrentRoundNumber; // 0x00(0x01)
	int8_t CurrentRoundCheckPoint; // 0x01(0x01)
	char pad_2[0x6]; // 0x02(0x06)
	struct TArray<struct FUraniumSingleRoundInfo> SingleRoundInfos; // 0x08(0x10)
};

// ScriptStruct FortniteGame.UraniumSingleRoundInfo
// Size: 0x30 (Inherited: 0x00)
struct FUraniumSingleRoundInfo {
	char RoundTeamWinner; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FText RoundName; // 0x08(0x18)
	struct USoundBase* RoundSound; // 0x20(0x08)
	int32_t PointsForWinning; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.UraniumPOIData
// Size: 0x18 (Inherited: 0x00)
struct FUraniumPOIData {
	struct FGameplayTag POITag; // 0x00(0x08)
	struct TWeakObjectPtr<struct AFortCheckPointSplineActor> SplineActor; // 0x08(0x08)
	struct TWeakObjectPtr<struct ACameraActor> CameraActor; // 0x10(0x08)
};

// ScriptStruct FortniteGame.CreativeLoadedLinkData
// Size: 0x150 (Inherited: 0x00)
struct FCreativeLoadedLinkData {
	struct FString CreatorName; // 0x00(0x10)
	struct FString SupportCode; // 0x10(0x10)
	struct FString Mnemonic; // 0x20(0x10)
	enum class EMMSPrivacy Privacy; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	int32_t Version; // 0x34(0x04)
	struct TArray<struct FLocalizedStringPair> LinkTitle; // 0x38(0x10)
	struct FText AltTitle; // 0x48(0x18)
	struct TArray<struct FLocalizedStringPair> LinkTagline; // 0x60(0x10)
	struct TArray<struct FString> DescriptionTags; // 0x70(0x10)
	struct TArray<struct FLocalizedStringPair> IslandIntroduction; // 0x80(0x10)
	struct FString LinkYoutubeId; // 0x90(0x10)
	struct FString ImageUrl; // 0xa0(0x10)
	struct FString IslandType; // 0xb0(0x10)
	struct FString QuestContextTag; // 0xc0(0x10)
	struct FString AccountId; // 0xd0(0x10)
	struct FCreativeIslandMatchmakingSettings MatchmakingSettings; // 0xe0(0x50)
	struct TArray<struct FString> PlaylistOptions; // 0x130(0x10)
	struct FString LinkType; // 0x140(0x10)
};

// ScriptStruct FortniteGame.CreativeIslandMatchmakingSettings
// Size: 0x50 (Inherited: 0x00)
struct FCreativeIslandMatchmakingSettings {
	int32_t MinimumNumberOfPlayers; // 0x00(0x04)
	int32_t MaximumNumberOfPlayers; // 0x04(0x04)
	struct FString MmsType; // 0x08(0x10)
	struct FString MmsPrivacy; // 0x18(0x10)
	struct FString Override_Playlist; // 0x28(0x10)
	int32_t PlayerCount; // 0x38(0x04)
	int32_t NumberOfTeams; // 0x3c(0x04)
	int32_t PlayersPerTeam; // 0x40(0x04)
	bool bAllowJoinInProgress; // 0x44(0x01)
	char pad_45[0x3]; // 0x45(0x03)
	enum class EJoinInProgress JoinInProgressType; // 0x48(0x04)
	char JoinInProgressTeam; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
};

// ScriptStruct FortniteGame.LocalizedStringPair
// Size: 0x20 (Inherited: 0x00)
struct FLocalizedStringPair {
	struct FString Locale; // 0x00(0x10)
	struct FString TextLiteral; // 0x10(0x10)
};

// ScriptStruct FortniteGame.CollisionResponseRestoreState
// Size: 0x02 (Inherited: 0x00)
struct FCollisionResponseRestoreState {
	char OverlapResponse; // 0x00(0x01)
	char BlockingResponse; // 0x01(0x01)
};

// ScriptStruct FortniteGame.HeldObjectMovementReplicatedData
// Size: 0x28 (Inherited: 0x00)
struct FHeldObjectMovementReplicatedData {
	char RepIncrement; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FVector DetachLocation; // 0x04(0x0c)
	struct FRotator DetachRotation; // 0x10(0x0c)
	struct FVector MovementVelocity; // 0x1c(0x0c)
};

// ScriptStruct FortniteGame.HeldObjectThrownData
// Size: 0x50 (Inherited: 0x00)
struct FHeldObjectThrownData {
	struct FScalableFloat MaxSpeed; // 0x00(0x28)
	struct FScalableFloat GravityScale; // 0x28(0x28)
};

// ScriptStruct FortniteGame.ProjectileHomingData
// Size: 0x3c (Inherited: 0x00)
struct FProjectileHomingData {
	enum class EFortHomingStyle HomingStyle; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float MinTurnSpeed; // 0x04(0x04)
	float MaxTurnSpeed; // 0x08(0x04)
	float RampTimeFromMinToMaxTurnSpeed; // 0x0c(0x04)
	float LockTargetDistanceThreshold; // 0x10(0x04)
	int32_t RandomSeed; // 0x14(0x04)
	struct TWeakObjectPtr<struct AActor> LockedOnTarget; // 0x18(0x08)
	struct FVector LockedOnTargetPosition; // 0x20(0x0c)
	struct FVector TargetOffset; // 0x2c(0x0c)
	bool ResetTurnSpeedTimer; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
};

// ScriptStruct FortniteGame.FortStopSimulatingRepData
// Size: 0x10 (Inherited: 0x00)
struct FFortStopSimulatingRepData {
	char RepIncrement; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FVector StopLocation; // 0x04(0x0c)
};

// ScriptStruct FortniteGame.FortReplicatedVelocityData
// Size: 0x10 (Inherited: 0x00)
struct FFortReplicatedVelocityData {
	char RepIncrement; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FVector ReplicatedVelocity; // 0x04(0x0c)
};

// ScriptStruct FortniteGame.ChaseExternalForce
// Size: 0x28 (Inherited: 0x00)
struct FChaseExternalForce {
	float Duration; // 0x00(0x04)
	struct FVector Direction; // 0x04(0x0c)
	float Magnitude; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct UCurveFloat* MagnitudeScaleCurve; // 0x18(0x08)
	char pad_20[0x8]; // 0x20(0x08)
};

// ScriptStruct FortniteGame.FortCurieCableSocketIdentifier
// Size: 0x0c (Inherited: 0x00)
struct FFortCurieCableSocketIdentifier {
	struct FGameplayTag Tag; // 0x00(0x08)
	int32_t Index; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortCurieCableSocket
// Size: 0xe0 (Inherited: 0x00)
struct FFortCurieCableSocket {
	struct FFortCurieCableSocketIdentifier SocketIdentifier; // 0x00(0x0c)
	struct FVector Location; // 0x0c(0x0c)
	struct FFortCurieCableSocketConnection SocketConnection; // 0x18(0x20)
	char bAutoSendSignalOnElementAttachment : 1; // 0x38(0x01)
	char bAutoSendSignalOnElementDetachment : 1; // 0x38(0x01)
	char bAutoRouteToCurieComponentOnReceive : 1; // 0x38(0x01)
	char bAutoCreateElectricLinksOnSend : 1; // 0x38(0x01)
	char pad_38_4 : 4; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct TMap<struct FGameplayTag, float> ReceivedElementToMagnitudeMap; // 0x40(0x50)
	char pad_90[0x50]; // 0x90(0x50)
};

// ScriptStruct FortniteGame.FortCurieCableSocketConnection
// Size: 0x20 (Inherited: 0x00)
struct FFortCurieCableSocketConnection {
	struct AActor* ConnectedActor; // 0x00(0x08)
	struct FFortCurieCableSocketIdentifier ConnectedSocketIdentifier; // 0x08(0x0c)
	char pad_14[0x4]; // 0x14(0x04)
	struct UFortCurieCableSocketComponent* ConnectedSocketComponent; // 0x18(0x08)
};

// ScriptStruct FortniteGame.MinigameScoreEntry
// Size: 0x60 (Inherited: 0x0c)
struct FMinigameScoreEntry : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct FUniqueNetIdRepl UniqueId; // 0x10(0x28)
	struct FString PlayerName; // 0x38(0x10)
	float Score; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct FDateTime TimeRecorded; // 0x50(0x08)
	char bHasScore : 1; // 0x58(0x01)
	char pad_58_1 : 7; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
};

// ScriptStruct FortniteGame.RemoteViewRotSnapshotManager
// Size: 0x48 (Inherited: 0x00)
struct FRemoteViewRotSnapshotManager {
	int32_t BufferSize; // 0x00(0x04)
	float TimeDelay; // 0x04(0x04)
	bool bUseVariableTimeDelay; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	float VariableTimeDelayMultiplier; // 0x0c(0x04)
	float TimeBeforeDormant; // 0x10(0x04)
	float InterpSpeedWhenNoSample; // 0x14(0x04)
	char pad_18[0x30]; // 0x18(0x30)
};

// ScriptStruct FortniteGame.SavedSpectatorCameras
// Size: 0x10 (Inherited: 0x00)
struct FSavedSpectatorCameras {
	struct TArray<struct FSavedSpectatorCameraShot> Shots; // 0x00(0x10)
};

// ScriptStruct FortniteGame.SavedSpectatorCameraShot
// Size: 0x1d0 (Inherited: 0x00)
struct FSavedSpectatorCameraShot {
	struct FSavedSpectatorCameraState CameraState; // 0x00(0x180)
	bool bIsShotStart; // 0x180(0x01)
	char pad_181[0x3]; // 0x181(0x03)
	float Timestamp; // 0x184(0x04)
	float ShotLength; // 0x188(0x04)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct FString Message; // 0x190(0x10)
	struct FText LocalisedMessage; // 0x1a0(0x18)
	enum class ECameraShotNotificationTypes NotificationType; // 0x1b8(0x01)
	char pad_1B9[0x3]; // 0x1b9(0x03)
	struct FNotificationUISettings MessageUISettings; // 0x1bc(0x08)
	char pad_1C4[0xc]; // 0x1c4(0x0c)
};

// ScriptStruct FortniteGame.SavedSpectatorCameraState
// Size: 0x180 (Inherited: 0x00)
struct FSavedSpectatorCameraState {
	bool bDataIsValid; // 0x00(0x01)
	enum class ESpectatorCameraType CameraType; // 0x01(0x01)
	char pad_2[0x6]; // 0x02(0x06)
	struct FUniqueNetIdRepl FollowedPlayerUniqueId; // 0x08(0x28)
	struct FCameraFilmbackSettings FilmbackSettings; // 0x30(0x0c)
	struct FCameraLensSettings LensSettings; // 0x3c(0x18)
	char pad_54[0x4]; // 0x54(0x04)
	struct FCameraFocusSettings FocusSettings; // 0x58(0x58)
	float CurrentFocalLength; // 0xb0(0x04)
	float CurrentAperture; // 0xb4(0x04)
	bool bAutoFocus; // 0xb8(0x01)
	char pad_B9[0x3]; // 0xb9(0x03)
	float CurrentFocusDistance; // 0xbc(0x04)
	bool bAutoExposure; // 0xc0(0x01)
	char pad_C1[0x3]; // 0xc1(0x03)
	float ManualExposureBias; // 0xc4(0x04)
	char pad_C8[0x8]; // 0xc8(0x08)
	struct FTransform Transform; // 0xd0(0x30)
	struct FRotator ControlRotation; // 0x100(0x0c)
	float ThirdPersonNormalizedDistance; // 0x10c(0x04)
	enum class EThirdPersonAutoFollowMode ThirdPersonAutoFollowMode; // 0x110(0x01)
	char pad_111[0x3]; // 0x111(0x03)
	float DroneSpeedIndex; // 0x114(0x04)
	float ReplayPlaybackSpeed; // 0x118(0x04)
	bool bNamePlatesEnabled; // 0x11c(0x01)
	bool bPlayerOutlinesEnabled; // 0x11d(0x01)
	bool bThirdPersonCamCollide; // 0x11e(0x01)
	bool bFollowDroneDoTest; // 0x11f(0x01)
	bool bBattleMapIsOnTimelineMode; // 0x120(0x01)
	char pad_121[0x7]; // 0x121(0x07)
	struct FNamePlateFilter NamePlatesFilter; // 0x128(0x58)
};

// ScriptStruct FortniteGame.NamePlateFilter
// Size: 0x58 (Inherited: 0x00)
struct FNamePlateFilter {
	bool bIsSet; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TSet<struct FUniqueNetIdRepl> NamePlatesToShow; // 0x08(0x50)
};

// ScriptStruct FortniteGame.SavedPlayerSpectatorCameraData
// Size: 0x50 (Inherited: 0x00)
struct FSavedPlayerSpectatorCameraData {
	struct TMap<struct FUniqueNetIdRepl, struct FSavedSpectatorCameraState> PlayerToCameraStateMap; // 0x00(0x50)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnswer
// Size: 0x20 (Inherited: 0x00)
struct FFortPlayerSurveyAnswer {
	char pad_0[0x20]; // 0x00(0x20)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnswerContainerChangeEventInfo
// Size: 0x01 (Inherited: 0x00)
struct FFortPlayerSurveyAnswerContainerChangeEventInfo {
	enum class EFortPlayerSurveyAnswerContainerChangeReason Reason; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortCollectionBookRewards
// Size: 0x68 (Inherited: 0x00)
struct FFortCollectionBookRewards {
	enum class ECollectionBookRewardType RewardType; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FName PageId; // 0x04(0x08)
	struct FName SectionId; // 0x0c(0x08)
	int32_t XpRequired; // 0x14(0x04)
	struct FText Description; // 0x18(0x18)
	bool bIsMajorReward; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FFortRewardInfo Rewards; // 0x38(0x30)
};

// ScriptStruct FortniteGame.FortRewardInfo
// Size: 0x30 (Inherited: 0x00)
struct FFortRewardInfo {
	struct TArray<struct FFortSelectableRewardOption> SelectableRewards; // 0x00(0x10)
	struct TArray<struct FFortItemQuantityPair> StandardRewards; // 0x10(0x10)
	struct TArray<struct FFortHiddenRewardQuantityPair> HiddenRewards; // 0x20(0x10)
};

// ScriptStruct FortniteGame.FortHiddenRewardQuantityPair
// Size: 0x0c (Inherited: 0x00)
struct FFortHiddenRewardQuantityPair {
	struct FName TemplateId; // 0x00(0x08)
	int32_t Quantity; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortSelectableRewardOption
// Size: 0x10 (Inherited: 0x00)
struct FFortSelectableRewardOption {
	struct TArray<struct FFortItemQuantityPair> Rewards; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortPendingSlottedItemOperation
// Size: 0x18 (Inherited: 0x00)
struct FFortPendingSlottedItemOperation {
	struct FString SlottedItemId; // 0x00(0x10)
	struct FName SlotRowName; // 0x10(0x08)
};

// ScriptStruct FortniteGame.McpVariantReader
// Size: 0x30 (Inherited: 0x00)
struct FMcpVariantReader {
	struct FString Channel; // 0x00(0x10)
	struct FString Active; // 0x10(0x10)
	struct TArray<struct FString> Owned; // 0x20(0x10)
};

// ScriptStruct FortniteGame.FortAthenaLoadoutData
// Size: 0x20 (Inherited: 0x00)
struct FFortAthenaLoadoutData {
	enum class EAthenaCustomizationCategory SlotName; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FString ItemToSlot; // 0x08(0x10)
	int32_t IndexWithinSlot; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortQuestObjectiveCompletion
// Size: 0x30 (Inherited: 0x00)
struct FFortQuestObjectiveCompletion {
	struct FString StatName; // 0x00(0x10)
	int32_t Count; // 0x10(0x04)
	int32_t TimestampOffset; // 0x14(0x04)
	char pad_18[0x18]; // 0x18(0x18)
};

// ScriptStruct FortniteGame.FortSubgameClientSettings
// Size: 0x10 (Inherited: 0x00)
struct FFortSubgameClientSettings {
	struct TArray<struct FString> PinnedQuestInstances; // 0x00(0x10)
};

// ScriptStruct FortniteGame.AccountIdAndScore
// Size: 0x20 (Inherited: 0x00)
struct FAccountIdAndScore {
	struct FString AccountId; // 0x00(0x10)
	int32_t TotalScore; // 0x10(0x04)
	int32_t IndividualContribution; // 0x14(0x04)
	bool bCriticalMatchBonus; // 0x18(0x01)
	bool bIsLeecherExempt; // 0x19(0x01)
	char pad_1A[0x6]; // 0x1a(0x06)
};

// ScriptStruct FortniteGame.AccountIdAndMatchEndData
// Size: 0x198 (Inherited: 0x00)
struct FAccountIdAndMatchEndData {
	struct FString AccountId; // 0x00(0x10)
	struct TArray<struct FFortQuestObjectiveCompletion> Advance; // 0x10(0x10)
	struct TArray<struct FFortQuestEarnedBadgeData> EarnedBadgeData; // 0x20(0x10)
	struct TArray<struct FString> EarnedItemCaches; // 0x30(0x10)
	int32_t TotalScore; // 0x40(0x04)
	bool bCriticalMatchBonus; // 0x44(0x01)
	bool bDidLeech; // 0x45(0x01)
	char pad_46[0x2]; // 0x46(0x02)
	int32_t NumMissionPoints; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct TArray<struct FString> ShuffledLoadoutUsed; // 0x50(0x10)
	int32_t ShuffledLockerUsedIndex; // 0x60(0x04)
	int32_t TheaterNum; // 0x64(0x04)
	struct FMcpProfileChangeRequest TheaterItemUpdate; // 0x68(0x58)
	int32_t OutpostNum; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct FMcpProfileChangeRequest OutpostItemUpdate; // 0xc8(0x58)
	struct FString OutpostId; // 0x120(0x10)
	struct FFortOutpostCoreInfo OutpostInfo; // 0x130(0x28)
	struct FString DeployableBaseItemId; // 0x158(0x10)
	struct FFortCloudSaveInfo CloudSaveInfo; // 0x168(0x18)
	struct FString LockCode; // 0x180(0x10)
	bool bAbandoning; // 0x190(0x01)
	char pad_191[0x3]; // 0x191(0x03)
	float MissionLeechScaling; // 0x194(0x04)
};

// ScriptStruct FortniteGame.FortCloudSaveInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortCloudSaveInfo {
	int32_t SaveCount; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct TArray<struct FFortCloudSaveRecordInfo> SavedRecords; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortCloudSaveRecordInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortCloudSaveRecordInfo {
	int32_t RecordIndex; // 0x00(0x04)
	int32_t ArchiveNumber; // 0x04(0x04)
	struct FString RecordFilename; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortOutpostCoreInfo
// Size: 0x28 (Inherited: 0x00)
struct FFortOutpostCoreInfo {
	struct TArray<struct FFortPlacedBuilding> PlacedBuildings; // 0x00(0x10)
	struct TArray<struct FString> AccountsWithEditPermission; // 0x10(0x10)
	uint32_t HighestEnduranceWaveReached; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.FortPlacedBuilding
// Size: 0x20 (Inherited: 0x00)
struct FFortPlacedBuilding {
	struct FString BuildingTag; // 0x00(0x10)
	struct FString PlacedTag; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortQuestEarnedBadgeData
// Size: 0x18 (Inherited: 0x00)
struct FFortQuestEarnedBadgeData {
	struct FString TemplateId; // 0x00(0x10)
	int32_t Count; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.EndZoneScoreAndAwards
// Size: 0x70 (Inherited: 0x00)
struct FEndZoneScoreAndAwards {
	bool bResultsPendingSave; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t TotalScore; // 0x04(0x04)
	bool bCriticalMatchBonus; // 0x08(0x01)
	bool bDidLeech; // 0x09(0x01)
	char pad_A[0x6]; // 0x0a(0x06)
	struct TArray<struct FFortQuestEarnedBadgeData> EarnedBadgeData; // 0x10(0x10)
	struct TArray<struct FString> EarnedItemCaches; // 0x20(0x10)
	int32_t NumMissionPoints; // 0x30(0x04)
	float MissionLeechScaling; // 0x34(0x04)
	char pad_38[0x38]; // 0x38(0x38)
};

// ScriptStruct FortniteGame.FortDialogDescription
// Size: 0x130 (Inherited: 0x00)
struct FFortDialogDescription {
	struct FSlateBrush Icon; // 0x00(0x88)
	struct FText MessageHeader; // 0x88(0x18)
	struct FText MessageBody; // 0xa0(0x18)
	struct FText AcceptButtonText; // 0xb8(0x18)
	struct FText IgnoreButtonText; // 0xd0(0x18)
	struct FText DismissButtonText; // 0xe8(0x18)
	float DisplayTime; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)
	struct UUserWidget* AdditionalContent; // 0x108(0x08)
	enum class EFortDialogFeedbackType FeedBackType; // 0x110(0x01)
	bool Dismissable; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)
	struct UFortNotificationHandler* NotificationHandler; // 0x118(0x08)
	char pad_120[0x10]; // 0x120(0x10)
};

// ScriptStruct FortniteGame.FortEncounterSettings
// Size: 0xb8 (Inherited: 0x00)
struct FFortEncounterSettings {
	struct TArray<enum class EFortEncounterDirection> ForbiddenSpawnDirections; // 0x00(0x10)
	bool bRiftsDestroyPlayerBuiltBuildings; // 0x10(0x01)
	bool bValidateIfPlayerIsAtSpawnLocation; // 0x11(0x01)
	bool bMustFindSpawnPoints; // 0x12(0x01)
	bool bStopIfCantFindSpawnPoint; // 0x13(0x01)
	bool bIgnoreCollisionWhenSpawningAI; // 0x14(0x01)
	bool bTrackCombatParticipation; // 0x15(0x01)
	bool bDisplayThreatVisuals; // 0x16(0x01)
	char pad_17[0x1]; // 0x17(0x01)
	float BurstSpawnThreatVisualsEndDelayOverride; // 0x18(0x04)
	int32_t NumRiftsToUseOverride; // 0x1c(0x04)
	char bUseEQSQueryToFindAISpawnLocations : 1; // 0x20(0x01)
	char bRelevantForTotalAICap : 1; // 0x20(0x01)
	char bEnableRecreateRift : 1; // 0x20(0x01)
	char bRespawnRiftWhenRiftDead : 1; // 0x20(0x01)
	char bRandomiseQueryRiftLocations : 1; // 0x20(0x01)
	char bOverrideEqsFallback : 1; // 0x20(0x01)
	char pad_20_6 : 2; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
	struct FEncounterEnvironmentQueryInfo EqsFallbackOverride; // 0x28(0x28)
	float PreSpawnRequeryTime; // 0x50(0x04)
	float SpawnAIIntervalTime; // 0x54(0x04)
	float SpawnRiftIntervalTime; // 0x58(0x04)
	bool bSpawnFirstRiftNoDelay; // 0x5c(0x01)
	char pad_5D[0x3]; // 0x5d(0x03)
	struct UEnvQuery* RiftSelectionQuery; // 0x60(0x08)
	struct UEnvQuery* RiftSlotsEQSQueryOverride; // 0x68(0x08)
	struct TArray<struct AActor*> ScriptedSpawnPoints; // 0x70(0x10)
	struct ABuildingRift* RiftClassOverride; // 0x80(0x08)
	struct TArray<struct AActor*> WorkingScriptedSpawnPoints; // 0x88(0x10)
	int32_t EncounterGroupID; // 0x98(0x04)
	int32_t ZoneIndex; // 0x9c(0x04)
	int32_t DifficultyIndex; // 0xa0(0x04)
	float AIDespawnDistanceOverride; // 0xa4(0x04)
	struct TArray<struct UFortDifficultyOptionCategoryEncounter*> InjectedOverrideCategories; // 0xa8(0x10)
};

// ScriptStruct FortniteGame.EncounterEnvironmentQueryInfo
// Size: 0x28 (Inherited: 0x00)
struct FEncounterEnvironmentQueryInfo {
	struct UEnvQuery* EnvironmentQuery; // 0x00(0x08)
	struct TArray<struct FEnvNamedValue> QueryParams; // 0x08(0x10)
	char pad_18[0x8]; // 0x18(0x08)
	bool bIsDirectional; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
};

// ScriptStruct FortniteGame.FortStatManagerTag
// Size: 0x08 (Inherited: 0x08)
struct FFortStatManagerTag : FGameplayTag {
};

// ScriptStruct FortniteGame.FortVehicleInPersistent
// Size: 0x138 (Inherited: 0x00)
struct FFortVehicleInPersistent {
	char pad_0[0x8]; // 0x00(0x08)
	struct UFortPhysicsVehicleConfigs* FortPhysicsVehicleConfigs; // 0x08(0x08)
	char bUseForceHeading : 1; // 0x10(0x01)
	char pad_10_1 : 7; // 0x10(0x01)
	char pad_11[0xf]; // 0x11(0x0f)
	char pad_20_0 : 2; // 0x20(0x01)
	char bHasDriver : 1; // 0x20(0x01)
	char bHasPassengers : 1; // 0x20(0x01)
	char bIsTouchingAnything : 1; // 0x20(0x01)
	char bAttemptAsyncOrientationCorrection : 1; // 0x20(0x01)
	char pad_20_6 : 2; // 0x20(0x01)
	char pad_21[0x3]; // 0x21(0x03)
	float WaterLevel; // 0x24(0x04)
	struct FVector LocalFrontFrictionPt; // 0x28(0x0c)
	struct FVector LocalRearFrictionPt; // 0x34(0x0c)
	float FrontMassRatio; // 0x40(0x04)
	float RearMassRatio; // 0x44(0x04)
	struct FReplicatedAthenaVehicleAttributes VehicleAttributes; // 0x48(0x1c)
	char pad_64[0xd4]; // 0x64(0xd4)
};

// ScriptStruct FortniteGame.ReplicatedAthenaVehicleAttributes
// Size: 0x1c (Inherited: 0x00)
struct FReplicatedAthenaVehicleAttributes {
	float FrontLateralFrictionScale; // 0x00(0x04)
	float RearLateralFrictionScale; // 0x04(0x04)
	float BrakeForceTractionScale; // 0x08(0x04)
	float ForwardForceTractionScale; // 0x0c(0x04)
	float SlopeAntigravityScale; // 0x10(0x04)
	float TopSpeedScale; // 0x14(0x04)
	float VehicleGravityScale; // 0x18(0x04)
};

// ScriptStruct FortniteGame.FortVehicleOutContinuous
// Size: 0x28 (Inherited: 0x00)
struct FFortVehicleOutContinuous {
	char pad_0[0x8]; // 0x00(0x08)
	float SteeringAngle; // 0x08(0x04)
	struct FVector AverageSpringNormal; // 0x0c(0x0c)
	char pad_18[0x10]; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortVehicleOutPersistent
// Size: 0x10 (Inherited: 0x00)
struct FFortVehicleOutPersistent {
	char pad_0[0x8]; // 0x00(0x08)
	char bCanDriveOnIncline : 1; // 0x08(0x01)
	char bWheelsOnGround : 1; // 0x08(0x01)
	char bAnyWheelsOnGround : 1; // 0x08(0x01)
	char bIsTouchingDrivableGround : 1; // 0x08(0x01)
	char bIsAsyncCorrectingOrientation : 1; // 0x08(0x01)
	char bIsTouchingGroundWithoutWheels : 1; // 0x08(0x01)
	char pad_8_6 : 2; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
};

// ScriptStruct FortniteGame.FortVehicleInternalPersistent
// Size: 0x50 (Inherited: 0x00)
struct FFortVehicleInternalPersistent {
	char pad_0[0x50]; // 0x00(0x50)
};

// ScriptStruct FortniteGame.SpecialActorRepData
// Size: 0x230 (Inherited: 0x0c)
struct FSpecialActorRepData : FFastArraySerializerItem {
	struct FName SpecialActorID; // 0x0c(0x08)
	struct FGameplayTag CategoryTag; // 0x14(0x08)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct AActor* SpecialActor; // 0x20(0x08)
	struct APlayerState* PlayerState; // 0x28(0x08)
	float ReplicationInterval; // 0x30(0x04)
	float ReplicationIntervalDeviation; // 0x34(0x04)
	float NextReplicationTime; // 0x38(0x04)
	float LastActorNotRelevantTime; // 0x3c(0x04)
	bool bActorIsRelevant; // 0x40(0x01)
	bool bWasActorRelevantLastUpdate; // 0x41(0x01)
	char pad_42[0x2]; // 0x42(0x02)
	struct FVector CurrentLocation; // 0x44(0x0c)
	float CurrentYaw; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct FSlateBrush MainIconBrush; // 0x58(0x88)
	struct FVector2D MinimapScale; // 0xe0(0x08)
	struct FSlateBrush CompassIconBrush; // 0xe8(0x88)
	struct FVector2D CompassScale; // 0x170(0x08)
	bool bDrawCompassIcon; // 0x178(0x01)
	char pad_179[0x3]; // 0x179(0x03)
	float CurrentHealth; // 0x17c(0x04)
	float MaxHealth; // 0x180(0x04)
	float CurrentShield; // 0x184(0x04)
	float MaxShield; // 0x188(0x04)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct FText DisplayName; // 0x190(0x18)
	float RenderDistance; // 0x1a8(0x04)
	char pad_1AC[0x4]; // 0x1ac(0x04)
	struct FGameplayTagContainer RenderTags; // 0x1b0(0x20)
	float AddedToClientTime; // 0x1d0(0x04)
	char pad_1D4[0x4]; // 0x1d4(0x04)
	struct TArray<struct FSpecialActorSingleStatData> TrackedStats; // 0x1d8(0x10)
	float LastLocationReplicationTime; // 0x1e8(0x04)
	float PrevLocationReplicatedTime; // 0x1ec(0x04)
	struct FVector_NetQuantize100 LastRepLocation; // 0x1f0(0x0c)
	struct FVector_NetQuantize100 PrevRepLocation; // 0x1fc(0x0c)
	struct FVector LerpStartLocation; // 0x208(0x0c)
	float LastYawReplicationTime; // 0x214(0x04)
	float PrevYawReplicatedTime; // 0x218(0x04)
	float LastRepYaw; // 0x21c(0x04)
	float PrevRepYaw; // 0x220(0x04)
	float LerpStartYaw; // 0x224(0x04)
	bool bReplicateHealth; // 0x228(0x01)
	bool bReplicateShield; // 0x229(0x01)
	char pad_22A[0x6]; // 0x22a(0x06)
};

// ScriptStruct FortniteGame.SpecialActorSingleStatData
// Size: 0x0c (Inherited: 0x00)
struct FSpecialActorSingleStatData {
	enum class ESpecialActorStatType StatType; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float Value; // 0x04(0x04)
	float StatLogicValue; // 0x08(0x04)
};

// ScriptStruct FortniteGame.DuelOverlayData
// Size: 0x88 (Inherited: 0x00)
struct FDuelOverlayData {
	struct FText ChallengerName; // 0x00(0x18)
	struct FText ChallengedNPCName; // 0x18(0x18)
	struct TSoftObjectPtr<struct UObject> ChallengerSocialAvatarBrushPtr; // 0x30(0x28)
	struct TSoftObjectPtr<struct UObject> ChallengedNPCSocialAvatarBrushPtr; // 0x58(0x28)
	struct UFortItemDefinition* ChallengedNPCLootDef; // 0x80(0x08)
};

// ScriptStruct FortniteGame.GameSummaryInfo
// Size: 0x18 (Inherited: 0x00)
struct FGameSummaryInfo {
	struct FString GameSessionId; // 0x00(0x10)
	bool Completed; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.FortHUDTagPromptData
// Size: 0x48 (Inherited: 0x00)
struct FFortHUDTagPromptData {
	struct FGameplayTag VolumeTag; // 0x00(0x08)
	struct FText Text_PromptTitle; // 0x08(0x18)
	struct FText Text_PromptDescription; // 0x20(0x18)
	bool bIsEnterData; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct UUserWidget* WidgetClass; // 0x40(0x08)
};

// ScriptStruct FortniteGame.Recipe
// Size: 0x58 (Inherited: 0x08)
struct FRecipe : FTableRowBase {
	struct TArray<struct FFortItemQuantityPair> RecipeResults; // 0x08(0x10)
	bool bIsConsumed; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
	struct TArray<struct FFortItemQuantityPair> RecipeCosts; // 0x20(0x10)
	struct FGameplayTagContainer RequiredCatalysts; // 0x30(0x20)
	int32_t Score; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// ScriptStruct FortniteGame.FortSpecializationSlot
// Size: 0x88 (Inherited: 0x00)
struct FFortSpecializationSlot {
	struct TSoftObjectPtr<struct UFortAbilityKit> GrantedAbilityKit; // 0x00(0x28)
	struct TSoftObjectPtr<struct UFortAbilityKit> RemovedAbilityKit; // 0x28(0x28)
	struct TArray<struct FHeroSpecializationAttributeRequirement> AttributeRequirements; // 0x50(0x10)
	struct FGameplayTagContainer RequiredTags; // 0x60(0x20)
	int32_t MinimumHeroLevel; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
};

// ScriptStruct FortniteGame.HeroSpecializationAttributeRequirement
// Size: 0x40 (Inherited: 0x00)
struct FHeroSpecializationAttributeRequirement {
	struct FGameplayAttribute Attribute; // 0x00(0x38)
	float MinimumValue; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.TransmogSacrifice
// Size: 0x10 (Inherited: 0x08)
struct FTransmogSacrifice : FTableRowBase {
	int32_t TransmogSacrificePoints; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortMultiSizeBrush
// Size: 0x330 (Inherited: 0x00)
struct FFortMultiSizeBrush {
	struct FSlateBrush Brush_XXS; // 0x00(0x88)
	struct FSlateBrush Brush_XS; // 0x88(0x88)
	struct FSlateBrush Brush_S; // 0x110(0x88)
	struct FSlateBrush Brush_M; // 0x198(0x88)
	struct FSlateBrush Brush_L; // 0x220(0x88)
	struct FSlateBrush Brush_XL; // 0x2a8(0x88)
};

// ScriptStruct FortniteGame.FortItemViewSettings
// Size: 0x34 (Inherited: 0x00)
struct FFortItemViewSettings {
	bool UsesPlacementActor; // 0x00(0x01)
	bool UsesFixedCamera; // 0x01(0x01)
	bool SupportsZooming; // 0x02(0x01)
	char pad_3[0x1]; // 0x03(0x01)
	float DefaultZoomLevel; // 0x04(0x04)
	struct FFloatRange ZoomRange; // 0x08(0x10)
	enum class EFortItemViewRotationMode RotationMode; // 0x18(0x01)
	char pad_19[0x3]; // 0x19(0x03)
	struct FRotator CameraRotationOffset; // 0x1c(0x0c)
	struct FVector MeshBoundsCenterOffset; // 0x28(0x0c)
};

// ScriptStruct FortniteGame.FortDialogDescription_NUI
// Size: 0x118 (Inherited: 0x00)
struct FFortDialogDescription_NUI {
	struct FSlateBrush Icon; // 0x00(0x88)
	struct FText MessageHeader; // 0x88(0x18)
	struct FText MessageBody; // 0xa0(0x18)
	struct TArray<struct FConfirmationDialogAction> ConfirmButtonInputActions; // 0xb8(0x10)
	struct FName DeclineButtonInputAction; // 0xc8(0x08)
	struct UWidget* AdditionalContent; // 0xd0(0x08)
	struct UWidget* LeftAdditionalContent; // 0xd8(0x08)
	float DisplayTime; // 0xe0(0x04)
	bool Dismissable; // 0xe4(0x01)
	bool Cancelable; // 0xe5(0x01)
	bool bShouldWaitForLatentActionOnConfirmAction; // 0xe6(0x01)
	char pad_E7[0x1]; // 0xe7(0x01)
	struct UFortNotificationHandler* NotificationHandler; // 0xe8(0x08)
	struct USoundBase* ShowSound; // 0xf0(0x08)
	char pad_F8[0x20]; // 0xf8(0x20)
};

// ScriptStruct FortniteGame.ConfirmationDialogAction
// Size: 0xb0 (Inherited: 0x00)
struct FConfirmationDialogAction {
	struct FText DisplayName; // 0x00(0x18)
	struct FName ResultName; // 0x18(0x08)
	struct FSlateBrush Icon; // 0x20(0x88)
	struct FName ActionName; // 0xa8(0x08)
};

// ScriptStruct FortniteGame.FortDialogExternalLatentActionHandle
// Size: 0x04 (Inherited: 0x00)
struct FFortDialogExternalLatentActionHandle {
	int32_t Handle; // 0x00(0x04)
};

// ScriptStruct FortniteGame.FortClientAnnouncementData
// Size: 0x01 (Inherited: 0x00)
struct FFortClientAnnouncementData {
	char pad_0[0x1]; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortClientAnnouncementData_Basic
// Size: 0xe8 (Inherited: 0x01)
struct FFortClientAnnouncementData_Basic : FFortClientAnnouncementData {
	struct FSlateBrush Icon; // 0x00(0x88)
	struct FText TitleText; // 0x88(0x18)
	struct FText DetailText; // 0xa0(0x18)
	struct FText GamepadDetailText; // 0xb8(0x18)
	int32_t Priority; // 0xd0(0x04)
	char pad_D5[0x3]; // 0xd5(0x03)
	float DisplayTime; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct USoundBase* OnStartSound; // 0xe0(0x08)
};

// ScriptStruct FortniteGame.FortClientAnnouncementData_Tutorial
// Size: 0x138 (Inherited: 0xe8)
struct FFortClientAnnouncementData_Tutorial : FFortClientAnnouncementData_Basic {
	float AutoContinueDelay; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct FText NameText; // 0xf0(0x18)
	struct FText SystemText; // 0x108(0x18)
	bool bButtonEnabled; // 0x120(0x01)
	bool bLightboxEnabled; // 0x121(0x01)
	bool bLightboxDisableInputOnly; // 0x122(0x01)
	char pad_123[0x1]; // 0x123(0x01)
	struct FMargin Padding; // 0x124(0x10)
	enum class EVerticalAlignment VAlign; // 0x134(0x01)
	enum class EHorizontalAlignment HAlign; // 0x135(0x01)
	char pad_136[0x2]; // 0x136(0x02)
};

// ScriptStruct FortniteGame.FortGlobalActionDetailsFunctionContext
// Size: 0x01 (Inherited: 0x00)
struct FFortGlobalActionDetailsFunctionContext {
	enum class ECommonInputType OverrideInputType; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortItemHeaderInformation
// Size: 0x98 (Inherited: 0x00)
struct FFortItemHeaderInformation {
	char pad_0[0x98]; // 0x00(0x98)
};

// ScriptStruct FortniteGame.FortCollectionBookSlotData
// Size: 0x50 (Inherited: 0x08)
struct FFortCollectionBookSlotData : FTableRowBase {
	struct FName SlotXpWeightName; // 0x08(0x08)
	struct FName SlotSourceId; // 0x10(0x08)
	struct FName SlotSourceId2; // 0x18(0x08)
	struct TArray<struct TSoftObjectPtr<struct UFortItemDefinition>> AllowedItems; // 0x20(0x10)
	struct TArray<struct FGameplayTag> AllowedWorkerPersonalities; // 0x30(0x10)
	struct FDataTableRowHandle PurchaseCosts; // 0x40(0x10)
};

// ScriptStruct FortniteGame.HomebaseSquadSlot
// Size: 0x68 (Inherited: 0x00)
struct FHomebaseSquadSlot {
	struct FText DisplayName; // 0x00(0x18)
	struct TArray<enum class EFortItemType> ValidSlottableItemTypes; // 0x18(0x10)
	struct FGameplayTagContainer TagFilter; // 0x28(0x20)
	struct TArray<struct FHomebaseSquadAttributeBonus> SlottingBonuses; // 0x48(0x10)
	struct UCurveTable* PersonalityMatchBonusTable; // 0x58(0x08)
	enum class ESquadSlotType SlotType; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
};

// ScriptStruct FortniteGame.HomebaseSquadAttributeBonus
// Size: 0x48 (Inherited: 0x00)
struct FHomebaseSquadAttributeBonus {
	struct FGameplayAttribute AttributeGranted; // 0x00(0x38)
	struct FCurveTableRowHandle BonusCurve; // 0x38(0x10)
};

// ScriptStruct FortniteGame.HomebaseSquad
// Size: 0x88 (Inherited: 0x08)
struct FHomebaseSquad : FTableRowBase {
	struct FText DisplayName; // 0x08(0x18)
	struct FText ShortDisplayName; // 0x20(0x18)
	enum class EFortHomebaseSquadType SquadType; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	struct FGameplayTag ManagerSynergyTag; // 0x3c(0x08)
	char pad_44[0x4]; // 0x44(0x04)
	struct TArray<struct FHomebaseSquadSlot> CrewSlots; // 0x48(0x10)
	struct FGameplayTagContainer RequiredTheaterTags; // 0x58(0x20)
	int32_t MaxNumDefendersAllowedInLevel; // 0x78(0x04)
	int32_t MaxNumDefendersAllowedInGroupLevel; // 0x7c(0x04)
	bool bConsiderNumPlayersForMaxNumDefenders; // 0x80(0x01)
	bool bAlwaysRemoveOldestDefenderWhenReplacing; // 0x81(0x01)
	char pad_82[0x6]; // 0x82(0x06)
};

// ScriptStruct FortniteGame.FortSpatialGrid
// Size: 0x70 (Inherited: 0x00)
struct FFortSpatialGrid {
	char pad_0[0x70]; // 0x00(0x70)
};

// ScriptStruct FortniteGame.FortReleaseVersion
// Size: 0x08 (Inherited: 0x00)
struct FFortReleaseVersion {
	struct FName VersionName; // 0x00(0x08)
};

// ScriptStruct FortniteGame.FortClientObservedStatArray
// Size: 0x138 (Inherited: 0x108)
struct FFortClientObservedStatArray : FFastArraySerializer {
	struct UStatManager* MyStatManager; // 0x108(0x08)
	struct TArray<struct FFortClientObservedStat> ObservedStats; // 0x110(0x10)
	char pad_120[0x18]; // 0x120(0x18)
};

// ScriptStruct FortniteGame.FortClientObservedStat
// Size: 0x20 (Inherited: 0x0c)
struct FFortClientObservedStat : FFastArraySerializerItem {
	struct FName StatName; // 0x0c(0x08)
	int32_t StatValue; // 0x14(0x04)
	char pad_18[0x8]; // 0x18(0x08)
};

// ScriptStruct FortniteGame.AIHotSpotSlotConfig
// Size: 0x1c (Inherited: 0x00)
struct FAIHotSpotSlotConfig {
	struct FVector Offset; // 0x00(0x0c)
	struct FVector Direction; // 0x0c(0x0c)
	enum class EFortHotSpotSlot SlotType; // 0x18(0x01)
	char pad_19[0x3]; // 0x19(0x03)
};

// ScriptStruct FortniteGame.AIHotSpotSlotInfo
// Size: 0x10 (Inherited: 0x00)
struct FAIHotSpotSlotInfo {
	struct AAIHotSpot* HotSpot; // 0x00(0x08)
	int32_t SlotIndex; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.DataIntegrityPair
// Size: 0x28 (Inherited: 0x00)
struct FDataIntegrityPair {
	struct AFortAthenaMutator_Bots* BotMutator; // 0x00(0x08)
	struct UFortAthenaMutator_PlayerBotSpawningPolicyData* BotPolicyData; // 0x08(0x08)
	struct APawn* MutatorPawn; // 0x10(0x08)
	struct UFortAthenaAISpawnerData* AISpawnerData; // 0x18(0x08)
	struct APawn* AISpawnerPawn; // 0x20(0x08)
};

// ScriptStruct FortniteGame.ClientAILODSettings
// Size: 0x88 (Inherited: 0x00)
struct FClientAILODSettings {
	struct FScalableFloat ScoreMultiplier; // 0x00(0x28)
	struct FScalableFloat PreloadingPriorityOverride; // 0x28(0x28)
	struct FScalableFloat bSupportCharacterMovementOptimization; // 0x50(0x28)
	char pad_78[0x10]; // 0x78(0x10)
};

// ScriptStruct FortniteGame.DroppingAgentData
// Size: 0x18 (Inherited: 0x00)
struct FDroppingAgentData {
	struct AAthenaAIController* AIController; // 0x00(0x08)
	struct ABuildingActor* MovementBase; // 0x08(0x08)
	char pad_10[0x8]; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortServerBotInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortServerBotInfo {
	struct AFortAthenaAIBotController* BotController; // 0x00(0x08)
	struct AFortPoiVolume* SelectedPoiVolume; // 0x08(0x08)
	char pad_10[0x8]; // 0x10(0x08)
};

// ScriptStruct FortniteGame.AIPopulationCountSnapshot
// Size: 0x14 (Inherited: 0x00)
struct FAIPopulationCountSnapshot {
	int32_t NumTotalSpawnedBots; // 0x00(0x04)
	int32_t NumAliveBots; // 0x04(0x04)
	int32_t NumAlivePlayerBots; // 0x08(0x04)
	int32_t NumAliveNPCBots; // 0x0c(0x04)
	int32_t NumAliveAIPawns; // 0x10(0x04)
};

// ScriptStruct FortniteGame.MovingLootInfo
// Size: 0x0c (Inherited: 0x00)
struct FMovingLootInfo {
	struct FVector LastLocationInOctree; // 0x00(0x0c)
};

// ScriptStruct FortniteGame.CachedSupplyDrop
// Size: 0x18 (Inherited: 0x00)
struct FCachedSupplyDrop {
	struct AFortAthenaSupplyDrop* supplydrop; // 0x00(0x08)
	bool bInOctree; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	struct FVector LastLocation; // 0x0c(0x0c)
};

// ScriptStruct FortniteGame.BarrierFlagDisplayData
// Size: 0x248 (Inherited: 0x00)
struct FBarrierFlagDisplayData {
	struct UStaticMesh* HeadMesh; // 0x00(0x08)
	struct FSlateBrush MiniMap_EnabledBrush; // 0x08(0x88)
	struct FSlateBrush MiniMap_DisabledBrush; // 0x90(0x88)
	struct FSlateBrush Compass_EnabledBrush; // 0x118(0x88)
	struct FSlateBrush Compass_DisabledBrush; // 0x1a0(0x88)
	struct FVector2D MapSize; // 0x228(0x08)
	struct FVector2D CompassSize; // 0x230(0x08)
	struct FVector MeshScale; // 0x238(0x0c)
	char pad_244[0x4]; // 0x244(0x04)
};

// ScriptStruct FortniteGame.BarrierObjectiveDisplayData
// Size: 0x30 (Inherited: 0x00)
struct FBarrierObjectiveDisplayData {
	struct UStaticMesh* HeadMesh; // 0x00(0x08)
	struct FVector MeshScale; // 0x08(0x0c)
	struct FVector MeshRelativeOffset; // 0x14(0x0c)
	struct TArray<struct UMaterialInterface*> MaterialsToSwap; // 0x20(0x10)
};

// ScriptStruct FortniteGame.AthenaBroadcastKillFeedEntryInfo
// Size: 0x28 (Inherited: 0x00)
struct FAthenaBroadcastKillFeedEntryInfo {
	struct FString InstigatorPlayerName; // 0x00(0x10)
	struct FString VictimPlayerName; // 0x10(0x10)
	enum class EAthenaBroadcastKillFeedEntryType EntryType; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
};

// ScriptStruct FortniteGame.AthenaCharacterTaggedPartsList
// Size: 0x10 (Inherited: 0x00)
struct FAthenaCharacterTaggedPartsList {
	struct TArray<struct TSoftObjectPtr<struct UCustomCharacterPart>> Parts; // 0x00(0x10)
};

// ScriptStruct FortniteGame.CharmSoundAssetEntry
// Size: 0x30 (Inherited: 0x00)
struct FCharmSoundAssetEntry {
	struct TSoftObjectPtr<struct USoundBase> sound; // 0x00(0x28)
	struct FName Desc; // 0x28(0x08)
};

// ScriptStruct FortniteGame.ApplyVariantsAdditionalParams
// Size: 0x60 (Inherited: 0x00)
struct FApplyVariantsAdditionalParams {
	struct TWeakObjectPtr<struct AFortPlayerPawn> WeakPlayerPawn; // 0x00(0x08)
	struct TArray<struct UActorComponent*> AdditionalVariantComponents; // 0x08(0x10)
	bool bApplyToAdditionalVariantComponentsOnly; // 0x18(0x01)
	bool bDeriveMIDNameFromParent; // 0x19(0x01)
	bool bShouldResetOverrideMaterialsOnMeshSwap; // 0x1a(0x01)
	char pad_1B[0x5]; // 0x1b(0x05)
	struct TArray<struct FCosmeticVariantInfo> PreviouslyActiveVariants; // 0x20(0x10)
	bool bBackpackReliesOnVariantsFromCID; // 0x30(0x01)
	bool bGliderReliesOnVariantsFromCID; // 0x31(0x01)
	bool bForbidParticleSwapping; // 0x32(0x01)
	char pad_33[0xd]; // 0x33(0x0d)
	struct FGameplayTagContainer MetaTags; // 0x40(0x20)
};

// ScriptStruct FortniteGame.FortCosmeticAdaptiveStatPreview
// Size: 0x28 (Inherited: 0x00)
struct FFortCosmeticAdaptiveStatPreview {
	struct FText UnlockCondition; // 0x00(0x18)
	struct TArray<struct FFortCosmeticAdaptiveStatPair> StatValues; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortCosmeticAdaptiveStatPair
// Size: 0x0c (Inherited: 0x00)
struct FFortCosmeticAdaptiveStatPair {
	struct FFortStatManagerTag StatTag; // 0x00(0x08)
	int32_t StatValue; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortCosmeticVariantPreview
// Size: 0x40 (Inherited: 0x00)
struct FFortCosmeticVariantPreview {
	struct FText UnlockCondition; // 0x00(0x18)
	float PreviewTime; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct TArray<struct FMcpVariantChannelInfo> VariantOptions; // 0x20(0x10)
	struct TArray<struct FFortCosmeticVariantPreviewElement> AdditionalItems; // 0x30(0x10)
};

// ScriptStruct FortniteGame.FortCosmeticVariantPreviewElement
// Size: 0x18 (Inherited: 0x00)
struct FFortCosmeticVariantPreviewElement {
	struct TArray<struct FMcpVariantChannelInfo> VariantOptions; // 0x00(0x10)
	struct UAthenaCosmeticItemDefinition* Item; // 0x10(0x08)
};

// ScriptStruct FortniteGame.AthenaCosmeticMaterialOverride
// Size: 0x38 (Inherited: 0x00)
struct FAthenaCosmeticMaterialOverride {
	struct FName ComponentName; // 0x00(0x08)
	int32_t MaterialOverrideIndex; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct TSoftObjectPtr<struct UMaterialInterface> OverrideMaterial; // 0x10(0x28)
};

// ScriptStruct FortniteGame.VariantSwapMontageData
// Size: 0x10 (Inherited: 0x00)
struct FVariantSwapMontageData {
	struct FGameplayTag VariantMetaTagRequired; // 0x00(0x08)
	struct FName MontageSectionName; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortGliderLayeredAudioFloatParam
// Size: 0x28 (Inherited: 0x00)
struct FFortGliderLayeredAudioFloatParam {
	enum class ELayeredAudioInterpolationType InterpType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct UCurveFloat* Curve; // 0x08(0x08)
	float AttackSpeed; // 0x10(0x04)
	float ReleaseSpeed; // 0x14(0x04)
	struct TArray<struct FFortGliderLayeredAudioOneshotGate> Oneshots; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortGliderLayeredAudioOneshotGate
// Size: 0x38 (Inherited: 0x00)
struct FFortGliderLayeredAudioOneshotGate {
	struct TSoftObjectPtr<struct USoundBase> SoundRef; // 0x00(0x28)
	float GateValue; // 0x28(0x04)
	enum class ELayeredAudioTriggerDir Direction; // 0x2c(0x01)
	bool FadeWhenOutsideGate; // 0x2d(0x01)
	char pad_2E[0x2]; // 0x2e(0x02)
	float MinTimeSinceTrigger; // 0x30(0x04)
	float InterruptFadeTime; // 0x34(0x04)
};

// ScriptStruct FortniteGame.IgnoredPlayerPawnArray
// Size: 0x120 (Inherited: 0x108)
struct FIgnoredPlayerPawnArray : FFastArraySerializer {
	struct AAthenaHoldingArea* OwningHoldingArea; // 0x108(0x08)
	struct TArray<struct FIgnoredPlayerPawnDataEntry> IgnorePawnEntries; // 0x110(0x10)
};

// ScriptStruct FortniteGame.IgnoredPlayerPawnDataEntry
// Size: 0x18 (Inherited: 0x0c)
struct FIgnoredPlayerPawnDataEntry : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct AFortPlayerPawnAthena* IgnoredPawn; // 0x10(0x08)
};

// ScriptStruct FortniteGame.PlayerWithIndicatorState
// Size: 0x0c (Inherited: 0x00)
struct FPlayerWithIndicatorState {
	struct TWeakObjectPtr<struct AFortPlayerStateAthena> PlayerState; // 0x00(0x08)
	enum class EPlayerIndicatorFlags IndicatorState; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.FortFrontEndMarkerData
// Size: 0x38 (Inherited: 0x00)
struct FFortFrontEndMarkerData {
	struct FUniqueNetIdRepl PlayerID; // 0x00(0x28)
	struct FVector CurrentLocation; // 0x28(0x0c)
	char pad_34[0x4]; // 0x34(0x04)
};

// ScriptStruct FortniteGame.TotalResKBIncAssetCostPair
// Size: 0x18 (Inherited: 0x00)
struct FTotalResKBIncAssetCostPair {
	struct FString AssetName; // 0x00(0x10)
	uint32_t CostKBInc; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.NavDataSetVariantSettings
// Size: 0x30 (Inherited: 0x00)
struct FNavDataSetVariantSettings {
	struct TSoftObjectPtr<struct UWorld> Level; // 0x00(0x28)
	uint32_t OceanFloodLevel; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.BoxNavInvoker
// Size: 0x20 (Inherited: 0x00)
struct FBoxNavInvoker {
	struct AAthenaNavInvokerBox* Invoker; // 0x00(0x08)
	char pad_8[0x18]; // 0x08(0x18)
};

// ScriptStruct FortniteGame.PetStimuliResponse
// Size: 0x10 (Inherited: 0x00)
struct FPetStimuliResponse {
	struct FGameplayTag ResponseTag; // 0x00(0x08)
	float ResponseDuration; // 0x08(0x04)
	float ResponseWeight; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.AthenaQuickChatLeafEntry
// Size: 0xd8 (Inherited: 0x00)
struct FAthenaQuickChatLeafEntry {
	struct FText Label; // 0x00(0x18)
	struct FText FullChatMessage; // 0x18(0x18)
	struct FSlateBrush Brush; // 0x30(0x88)
	bool bPopulateBrushFromContextObject; // 0xb8(0x01)
	enum class EAthenaQuickChatFilteringType FilterType; // 0xb9(0x01)
	char pad_BA[0x6]; // 0xba(0x06)
	struct UAthenaEmojiItemDefinition* EmojiItemDefinition; // 0xc0(0x08)
	enum class ETeamMemberState TeamCommType; // 0xc8(0x01)
	char pad_C9[0x3]; // 0xc9(0x03)
	struct FGameplayTag OptionGameplayTag; // 0xcc(0x08)
	char pad_D4[0x4]; // 0xd4(0x04)
};

// ScriptStruct FortniteGame.CloneMachineRepData
// Size: 0x18 (Inherited: 0x00)
struct FCloneMachineRepData {
	struct ABuildingGameplayActorCloneMachine* CloneMachine; // 0x00(0x08)
	struct FVector Location; // 0x08(0x0c)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.RewardNode
// Size: 0xe0 (Inherited: 0x00)
struct FRewardNode {
	struct TSoftObjectPtr<struct UFortTokenType> RequiredKey; // 0x00(0x28)
	int32_t KeyCount; // 0x28(0x04)
	int32_t MinKeyCountToUnlock; // 0x2c(0x04)
	int32_t DaysFromEventStartToUnlock; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct FGameplayTagContainer ChildNodes; // 0x38(0x20)
	struct FGameplayTagContainer ParentNodes; // 0x58(0x20)
	struct FGameplayTag NodeTag; // 0x78(0x08)
	bool bGrantedAtGraphDestruction; // 0x80(0x01)
	bool bRequiredOwnership; // 0x81(0x01)
	char pad_82[0x6]; // 0x82(0x06)
	struct TArray<struct FAthenaRewardItemReference> Rewards; // 0x88(0x10)
	struct FString RewardOperation; // 0x98(0x10)
	struct TSoftObjectPtr<struct UFortItemDefinition> RewardContextItem; // 0xa8(0x28)
	struct TArray<struct FCosmeticVariantInfo> HardDefinedVisuals; // 0xd0(0x10)
};

// ScriptStruct FortniteGame.AthenaRewardItemReference
// Size: 0x80 (Inherited: 0x00)
struct FAthenaRewardItemReference {
	struct TSoftObjectPtr<struct UFortItemDefinition> ItemDefinition; // 0x00(0x28)
	struct FString TemplateId; // 0x28(0x10)
	int32_t Quantity; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct FChallengeGiftBoxData RewardGiftBox; // 0x40(0x38)
	bool IsChaseReward; // 0x78(0x01)
	enum class EAthenaRewardItemType RewardType; // 0x79(0x01)
	enum class EAthenaRewardVisualImportanceType RewardVisualImportanceType; // 0x7a(0x01)
	char pad_7B[0x5]; // 0x7b(0x05)
};

// ScriptStruct FortniteGame.ChallengeGiftBoxData
// Size: 0x38 (Inherited: 0x00)
struct FChallengeGiftBoxData {
	struct TSoftObjectPtr<struct UFortGiftBoxItemDefinition> GiftBoxToUse; // 0x00(0x28)
	struct TArray<struct FFortGiftBoxFortmatData> GiftBoxFormatData; // 0x28(0x10)
};

// ScriptStruct FortniteGame.FortGiftBoxFortmatData
// Size: 0x20 (Inherited: 0x00)
struct FFortGiftBoxFortmatData {
	struct FString StringAssetType; // 0x00(0x10)
	struct FString StringData; // 0x10(0x10)
};

// ScriptStruct FortniteGame.RewardKeyData
// Size: 0x68 (Inherited: 0x00)
struct FRewardKeyData {
	struct TSoftObjectPtr<struct UFortTokenType> Key; // 0x00(0x28)
	struct FGameplayTag NodeTagMatchReq; // 0x28(0x08)
	int32_t RewardKeyMaxCount; // 0x30(0x04)
	int32_t RewardKeyInitialCount; // 0x34(0x04)
	struct TSoftObjectPtr<struct UFortAccountItemDefinition> UnlockingItemDef; // 0x38(0x28)
	bool bUseUnlockingItemDisplayName; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
};

// ScriptStruct FortniteGame.RewardKeyState
// Size: 0x18 (Inherited: 0x00)
struct FRewardKeyState {
	struct FString static_key_template_id; // 0x00(0x10)
	int32_t unlock_keys_used; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.AthenaSeasonRewardLevelInfo
// Size: 0x20 (Inherited: 0x00)
struct FAthenaSeasonRewardLevelInfo {
	enum class EAthenaSeasonRewardTrack Track; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t Level; // 0x04(0x04)
	int32_t XpToNextLevel; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct TArray<struct FAthenaRewardItemReference> Rewards; // 0x10(0x10)
};

// ScriptStruct FortniteGame.AthenaSeasonBannerLevelSchedule
// Size: 0x10 (Inherited: 0x00)
struct FAthenaSeasonBannerLevelSchedule {
	struct TArray<struct FAthenaSeasonBannerLevel> Levels; // 0x00(0x10)
};

// ScriptStruct FortniteGame.AthenaSeasonBannerLevel
// Size: 0x50 (Inherited: 0x00)
struct FAthenaSeasonBannerLevel {
	struct TSoftObjectPtr<struct UTexture2D> SurroundImage; // 0x00(0x28)
	struct TSoftObjectPtr<struct UMaterialInterface> BannerMaterial; // 0x28(0x28)
};

// ScriptStruct FortniteGame.AthenaRewardSchedule
// Size: 0x10 (Inherited: 0x00)
struct FAthenaRewardSchedule {
	struct TArray<struct FAthenaRewardScheduleLevel> Levels; // 0x00(0x10)
};

// ScriptStruct FortniteGame.AthenaRewardScheduleLevel
// Size: 0x10 (Inherited: 0x00)
struct FAthenaRewardScheduleLevel {
	struct TArray<struct FAthenaRewardItemReference> Rewards; // 0x00(0x10)
};

// ScriptStruct FortniteGame.AthenaDynamicRestedXpProgression
// Size: 0x18 (Inherited: 0x08)
struct FAthenaDynamicRestedXpProgression : FTableRowBase {
	float PctOfGoldenPath; // 0x08(0x04)
	float CalculatedDynamicRestMult; // 0x0c(0x04)
	float RestXPPoolExchangeRate; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.AthenaDynamicRestedXpGoldenPath
// Size: 0x10 (Inherited: 0x08)
struct FAthenaDynamicRestedXpGoldenPath : FTableRowBase {
	int32_t Day; // 0x08(0x04)
	int32_t XP; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.AthenaExtendedXPCurveEntry
// Size: 0x40 (Inherited: 0x08)
struct FAthenaExtendedXPCurveEntry : FTableRowBase {
	int32_t XpPerLevel; // 0x08(0x04)
	int32_t UntilLevel; // 0x0c(0x04)
	struct TSoftObjectPtr<struct UFortItemDefinition> RewardItemAssetPerLevel; // 0x10(0x28)
	int32_t RewardItemCountPerLevel; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.AthenaSeasonalXPCurveEntry
// Size: 0x48 (Inherited: 0x08)
struct FAthenaSeasonalXPCurveEntry : FTableRowBase {
	int32_t Level; // 0x08(0x04)
	int32_t XpToNextLevel; // 0x0c(0x04)
	int32_t XpTotal; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct TSoftObjectPtr<struct UFortItemDefinition> RewardItemAsset; // 0x18(0x28)
	int32_t RewardItemCount; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// ScriptStruct FortniteGame.AthenaBattlePassOffer
// Size: 0xb0 (Inherited: 0x00)
struct FAthenaBattlePassOffer {
	struct FString OfferId; // 0x00(0x10)
	struct FAthenaRewardItemReference RewardItem; // 0x10(0x80)
	struct TArray<struct FAthenaRewardItemReference> ChainedRewardItemList; // 0x90(0x10)
	struct FDataTableRowHandle OfferPriceRowHandle; // 0xa0(0x10)
};

// ScriptStruct FortniteGame.AthenaBattlePassOfferPriceRow
// Size: 0x38 (Inherited: 0x08)
struct FAthenaBattlePassOfferPriceRow : FTableRowBase {
	int32_t Cost; // 0x08(0x04)
	struct FPrimaryAssetId CurrencyItemTemplate; // 0x0c(0x10)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct FSoftObjectPath CurrencyItem_IconPath; // 0x20(0x18)
};

// ScriptStruct FortniteGame.AthenaSeasonItemCustomSkinCategoryData
// Size: 0x38 (Inherited: 0x00)
struct FAthenaSeasonItemCustomSkinCategoryData {
	struct FText Name; // 0x00(0x18)
	struct TArray<struct UAthenaSeasonItemEntryReward*> Entries; // 0x18(0x10)
	int32_t RequiredRewardsToUnlock; // 0x28(0x04)
	float ZoomLevel; // 0x2c(0x04)
	float Rotation; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// ScriptStruct FortniteGame.BattlePassOfferSectionData
// Size: 0x28 (Inherited: 0x00)
struct FBattlePassOfferSectionData {
	int32_t CategoryIndex; // 0x00(0x04)
	int32_t SectionIndex; // 0x04(0x04)
	int32_t SectionRewardCount; // 0x08(0x04)
	int32_t CategoryRewardCount; // 0x0c(0x04)
	int32_t NumLevelsNeededForSectionUnlock; // 0x10(0x04)
	int32_t NumCategoryRewardsNeededForSectionUnlock; // 0x14(0x04)
	struct TArray<struct FBattlePassOfferData> SectionOfferList; // 0x18(0x10)
};

// ScriptStruct FortniteGame.BattlePassOfferData
// Size: 0x50 (Inherited: 0x00)
struct FBattlePassOfferData {
	struct FString OfferId; // 0x00(0x10)
	struct TArray<struct FItemQuantity> RewardItemQuantity; // 0x10(0x10)
	bool bIsFreePassReward; // 0x20(0x01)
	char pad_21[0x3]; // 0x21(0x03)
	int32_t Cost; // 0x24(0x04)
	struct FString CurrencyId; // 0x28(0x10)
	int32_t SectionOffersNeededForUnlock; // 0x38(0x04)
	int32_t CategoryOffersNeededForUnlock; // 0x3c(0x04)
	struct TArray<struct FString> RequiredItemsForUnlock; // 0x40(0x10)
};

// ScriptStruct FortniteGame.BattlePassLevelReward
// Size: 0x98 (Inherited: 0x00)
struct FBattlePassLevelReward {
	struct FString OfferId; // 0x00(0x10)
	bool bHideFromGiftBox; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
	int32_t GrantedOnLevel; // 0x14(0x04)
	struct FAthenaRewardItemReference Reward; // 0x18(0x80)
};

// ScriptStruct FortniteGame.TrackCategory
// Size: 0x48 (Inherited: 0x00)
struct FTrackCategory {
	struct TSoftObjectPtr<struct UObject> CategoryIcon; // 0x00(0x28)
	struct FText CategoryName; // 0x28(0x18)
	int32_t CategoryStartingLevel; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// ScriptStruct FortniteGame.XpDisplayConversion
// Size: 0x30 (Inherited: 0x00)
struct FXpDisplayConversion {
	struct TSoftObjectPtr<struct UFortItemDefinition> XpItemDef; // 0x00(0x28)
	int32_t ValueToReplaceAt; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.AthenaMidSeasonUpdate
// Size: 0x50 (Inherited: 0x00)
struct FAthenaMidSeasonUpdate {
	int32_t SeasonLevelRequirement; // 0x00(0x04)
	int32_t BookLevelRequirement; // 0x04(0x04)
	bool SeasonPurchasedRequirement; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct TArray<struct FAthenaMidSeasonUpdateItemReq> ItemRequirements; // 0x10(0x10)
	struct TArray<struct FAthenaMidSeasonUpdateQuestReq> QuestRequirements; // 0x20(0x10)
	struct FAthenaRewardScheduleLevel Grants; // 0x30(0x10)
	struct TArray<struct TSoftObjectPtr<struct UFortItemDefinition>> Removals; // 0x40(0x10)
};

// ScriptStruct FortniteGame.AthenaMidSeasonUpdateQuestReq
// Size: 0x30 (Inherited: 0x00)
struct FAthenaMidSeasonUpdateQuestReq {
	struct TSoftObjectPtr<struct UFortQuestItemDefinition> Quest; // 0x00(0x28)
	bool bCompletionRequired; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// ScriptStruct FortniteGame.AthenaMidSeasonUpdateItemReq
// Size: 0x30 (Inherited: 0x00)
struct FAthenaMidSeasonUpdateItemReq {
	struct TSoftObjectPtr<struct UFortItemDefinition> Item; // 0x00(0x28)
	int32_t Count; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.BattlePassRewardInfo
// Size: 0x20 (Inherited: 0x00)
struct FBattlePassRewardInfo {
	struct UFortItemDefinition* ItemDef; // 0x00(0x08)
	int32_t Level; // 0x08(0x04)
	bool bIsFree; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
	int32_t QuantityRewarded; // 0x10(0x04)
	enum class EBattlePassRewardSource UnlockableSource; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
	struct UFortItemDefinition* UnlockableSourceItemDef; // 0x18(0x08)
};

// ScriptStruct FortniteGame.AthenaSeasonPageGrid
// Size: 0x20 (Inherited: 0x00)
struct FAthenaSeasonPageGrid {
	int32_t LevelsNeededForUnlock; // 0x00(0x04)
	int32_t RewardsNeededForUnlock; // 0x04(0x04)
	struct FIntPoint GridSize; // 0x08(0x08)
	struct TArray<struct UAthenaSeasonItemEntryBase*> RewardEntryList; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FloatParticleParameter
// Size: 0x0c (Inherited: 0x00)
struct FFloatParticleParameter {
	float Value; // 0x00(0x04)
	struct FName ParameterName; // 0x04(0x08)
};

// ScriptStruct FortniteGame.VectorParticleParameter
// Size: 0x14 (Inherited: 0x00)
struct FVectorParticleParameter {
	struct FVector Value; // 0x00(0x0c)
	struct FName ParameterName; // 0x0c(0x08)
};

// ScriptStruct FortniteGame.TrapDetectionState
// Size: 0x08 (Inherited: 0x00)
struct FTrapDetectionState {
	char pad_0[0x8]; // 0x00(0x08)
};

// ScriptStruct FortniteGame.TrapPerceptionSettings
// Size: 0x14 (Inherited: 0x00)
struct FTrapPerceptionSettings {
	char pad_0[0x14]; // 0x00(0x14)
};

// ScriptStruct FortniteGame.TraversePointSpawnData
// Size: 0x20 (Inherited: 0x00)
struct FTraversePointSpawnData {
	struct AAthenaTraversePoint* PointClass; // 0x00(0x08)
	struct FVector Location; // 0x08(0x0c)
	struct FRotator Rotation; // 0x14(0x0c)
};

// ScriptStruct FortniteGame.XPDisplayData
// Size: 0x40 (Inherited: 0x00)
struct FXPDisplayData {
	struct FName XPType; // 0x00(0x08)
	struct FText TitleText; // 0x08(0x18)
	struct FText DisplayText; // 0x20(0x18)
	struct UMaterialInterface* IconMaterial; // 0x38(0x08)
};

// ScriptStruct FortniteGame.BacchusActionIconMapping
// Size: 0x10 (Inherited: 0x00)
struct FBacchusActionIconMapping {
	struct FName Action; // 0x00(0x08)
	struct UPaperSprite* Sprite; // 0x08(0x08)
};

// ScriptStruct FortniteGame.BattleMapSharedData
// Size: 0x28 (Inherited: 0x00)
struct FBattleMapSharedData {
	char pad_0[0x28]; // 0x00(0x28)
};

// ScriptStruct FortniteGame.BoneSet
// Size: 0x10 (Inherited: 0x00)
struct FBoneSet {
	struct TArray<struct FBoneReference> Bones; // 0x00(0x10)
};

// ScriptStruct FortniteGame.BuildingActorClassData
// Size: 0x04 (Inherited: 0x00)
struct FBuildingActorClassData {
	int32_t MaximumBuildingLevel; // 0x00(0x04)
};

// ScriptStruct FortniteGame.BuildingActorHotSpotDirection
// Size: 0x20 (Inherited: 0x00)
struct FBuildingActorHotSpotDirection {
	struct UAIHotSpotConfig* HotSpotConfig; // 0x00(0x08)
	struct FVector Offset; // 0x08(0x0c)
	char bMirrorX : 1; // 0x14(0x01)
	char bMirrorY : 1; // 0x14(0x01)
	char pad_14_2 : 6; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
	enum class EFortHotSpotDirection Direction; // 0x18(0x01)
	enum class EHotspotTypeConfigMode TypeConfigUsage; // 0x19(0x01)
	char pad_1A[0x6]; // 0x1a(0x06)
};

// ScriptStruct FortniteGame.BuildingSMActorClassData
// Size: 0xb8 (Inherited: 0x04)
struct FBuildingSMActorClassData : FBuildingActorClassData {
	char pad_4[0x4]; // 0x04(0x04)
	struct TArray<struct FTierMeshSets> AlternateMeshes; // 0x08(0x10)
	struct FVector2D RandomScaleRange; // 0x18(0x08)
	struct FName DestructionLootTierGroup; // 0x20(0x08)
	struct TSoftObjectPtr<struct UCurveLinearColor> WindSpeedCurveSoftPtr; // 0x28(0x28)
	struct TSoftObjectPtr<struct UCurveLinearColor> WindPannerSpeedCurveSoftPtr; // 0x50(0x28)
	struct TSoftObjectPtr<struct USoundBase> WindAudioSoftPtr; // 0x78(0x28)
	float ShieldBuffMaterialParamValue1; // 0xa0(0x04)
	float ShieldBuffMaterialParamValue2; // 0xa4(0x04)
	float AnimatingDistanceFieldSelfShadowBias; // 0xa8(0x04)
	float AnimatingSubObjects; // 0xac(0x04)
	float PlayerGridSnapSize; // 0xb0(0x04)
	char NumFrameSubObjects; // 0xb4(0x01)
	char bForceReplicateSubObjects : 1; // 0xb5(0x01)
	char bNoPhysicsCollision : 1; // 0xb5(0x01)
	char bNoCameraCollision : 1; // 0xb5(0x01)
	char bNoPawnCollision : 1; // 0xb5(0x01)
	char bNoAIPawnCollision : 1; // 0xb5(0x01)
	char bBlocksCeilingPlacement : 1; // 0xb5(0x01)
	char bBlocksAttachmentPlacement : 1; // 0xb5(0x01)
	char bUsePhysicalSurfaceForFootstep : 1; // 0xb5(0x01)
	char bRandomYawOnPlacement : 1; // 0xb6(0x01)
	char bRandomScaleOnPlacement : 1; // 0xb6(0x01)
	char bClearMIDWhenReturningToUndamagedState : 1; // 0xb6(0x01)
	char pad_B6_3 : 5; // 0xb6(0x01)
	char pad_B7[0x1]; // 0xb7(0x01)
};

// ScriptStruct FortniteGame.TierMeshSets
// Size: 0x18 (Inherited: 0x00)
struct FTierMeshSets {
	int32_t Tier; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct TArray<struct FMeshSet> MeshSets; // 0x08(0x10)
};

// ScriptStruct FortniteGame.MeshSet
// Size: 0xe0 (Inherited: 0x00)
struct FMeshSet {
	float Weight; // 0x00(0x04)
	enum class EFortResourceType ResourceType; // 0x04(0x01)
	char bDoNotBlockBuildings : 1; // 0x05(0x01)
	char bDestroyOnPlayerBuildingPlacement : 1; // 0x05(0x01)
	char bNeedsDamageOverlay : 1; // 0x05(0x01)
	char pad_5_3 : 5; // 0x05(0x01)
	char pad_6[0x2]; // 0x06(0x02)
	struct UStaticMesh* BaseMesh; // 0x08(0x08)
	struct UParticleSystem* BreakEffect; // 0x10(0x08)
	struct UParticleSystem* DeathParticles; // 0x18(0x08)
	struct FName DeathParticleSocketName; // 0x20(0x08)
	struct USoundBase* DeathSound; // 0x28(0x08)
	struct UParticleSystem* ConstructedEffect; // 0x30(0x08)
	struct TArray<struct FTaggedParticleSubstitution> SwapInParticles; // 0x38(0x10)
	struct TArray<struct FTaggedSoundSubstitution> SwapInSounds; // 0x48(0x10)
	struct TArray<struct FTaggedStaticMeshSubstitution> SwapInMeshes; // 0x58(0x10)
	struct TArray<struct FTaggedInLightProperties> SwapInLightProperties; // 0x68(0x10)
	struct FAddOrRemoveGameplayTags BuildingOwnedTagDelta; // 0x78(0x40)
	struct UStaticMesh* SearchedMesh; // 0xb8(0x08)
	struct FCurveTableRowHandle SearchSpeed; // 0xc0(0x10)
	float LootNoiseRange; // 0xd0(0x04)
	struct FVector LootSpawnLocation; // 0xd4(0x0c)
};

// ScriptStruct FortniteGame.AddOrRemoveGameplayTags
// Size: 0x40 (Inherited: 0x00)
struct FAddOrRemoveGameplayTags {
	struct FGameplayTagContainer Added; // 0x00(0x20)
	struct FGameplayTagContainer Removed; // 0x20(0x20)
};

// ScriptStruct FortniteGame.TaggedInLightProperties
// Size: 0x20 (Inherited: 0x00)
struct FTaggedInLightProperties {
	struct FName Tag; // 0x00(0x08)
	struct FLightProperty_Color ColorSubstitute; // 0x08(0x18)
};

// ScriptStruct FortniteGame.LightProperty_Color
// Size: 0x18 (Inherited: 0x00)
struct FLightProperty_Color {
	bool bEnabled; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FLinearColor Color; // 0x04(0x10)
	bool bUsingSRGB; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
};

// ScriptStruct FortniteGame.TaggedStaticMeshSubstitution
// Size: 0x10 (Inherited: 0x00)
struct FTaggedStaticMeshSubstitution {
	struct FName Tag; // 0x00(0x08)
	struct UStaticMesh* Substitute; // 0x08(0x08)
};

// ScriptStruct FortniteGame.TaggedSoundSubstitution
// Size: 0x10 (Inherited: 0x00)
struct FTaggedSoundSubstitution {
	struct FName Tag; // 0x00(0x08)
	struct USoundBase* Substitute; // 0x08(0x08)
};

// ScriptStruct FortniteGame.TaggedParticleSubstitution
// Size: 0x10 (Inherited: 0x00)
struct FTaggedParticleSubstitution {
	struct FName Tag; // 0x00(0x08)
	struct UParticleSystem* Substitute; // 0x08(0x08)
};

// ScriptStruct FortniteGame.BuildingAutoNavClassData
// Size: 0xc0 (Inherited: 0xb8)
struct FBuildingAutoNavClassData : FBuildingSMActorClassData {
	char bAutoAssignNavProperties : 1; // 0xb8(0x01)
	char pad_B8_1 : 7; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
};

// ScriptStruct FortniteGame.LootTierGroupTagOverride
// Size: 0x78 (Inherited: 0x00)
struct FLootTierGroupTagOverride {
	struct FScalableFloat IsEnabled; // 0x00(0x28)
	struct FName OverrideLootTierGroup; // 0x28(0x08)
	struct FGameplayTagQuery PlayerTagQuery; // 0x30(0x48)
};

// ScriptStruct FortniteGame.RandomUpgradeData
// Size: 0x90 (Inherited: 0x00)
struct FRandomUpgradeData {
	struct FName LootTierGroupIfApplied; // 0x00(0x08)
	struct FScalableFloat ChanceToApplyPerContainer; // 0x08(0x28)
	struct FScalableFloat Enabled; // 0x30(0x28)
	struct TArray<struct FRandomUpgradeCalendarData> CalendarDrivenEnableState; // 0x58(0x10)
	struct TArray<struct FMarkedActorDisplayInfo> MarkerDisplayInfoOverride; // 0x68(0x10)
	struct UTexture* SoundIndicatorIconOverride; // 0x78(0x08)
	struct FLinearColor SoundIndicatorTintOverride; // 0x80(0x10)
};

// ScriptStruct FortniteGame.RandomUpgradeCalendarData
// Size: 0x18 (Inherited: 0x00)
struct FRandomUpgradeCalendarData {
	enum class ECalendarDrivenState ReactionWhenEventIsPresent; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FString EventName; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortSearchBounceData
// Size: 0x18 (Inherited: 0x00)
struct FFortSearchBounceData {
	struct FVector BounceNormal; // 0x00(0x0c)
	uint32_t SearchAnimationCount; // 0x0c(0x04)
	struct AFortPlayerPawn* SearchingPawn; // 0x10(0x08)
};

// ScriptStruct FortniteGame.ConnectivityCube
// Size: 0xc0 (Inherited: 0x00)
struct FConnectivityCube {
	char pad_0[0xc0]; // 0x00(0xc0)
};

// ScriptStruct FortniteGame.AuxiliaryEditTileMeshData
// Size: 0x20 (Inherited: 0x00)
struct FAuxiliaryEditTileMeshData {
	struct UStaticMesh* TileMesh; // 0x00(0x08)
	struct UTexture2D* TileTexture; // 0x08(0x08)
	struct FRotator RelativeRot; // 0x10(0x0c)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.EditModeState
// Size: 0x10 (Inherited: 0x00)
struct FEditModeState {
	struct ABuildingSMActor* EditClass; // 0x00(0x08)
	int32_t RotationIterations; // 0x08(0x04)
	bool bMirrored; // 0x0c(0x01)
	bool bCurrentlyValid; // 0x0d(0x01)
	char pad_E[0x2]; // 0x0e(0x02)
};

// ScriptStruct FortniteGame.TileCompInterpData
// Size: 0x18 (Inherited: 0x00)
struct FTileCompInterpData {
	struct FVector InitialTranslation; // 0x00(0x0c)
	struct FVector DesiredTranslation; // 0x0c(0x0c)
};

// ScriptStruct FortniteGame.FillFloorPositionData
// Size: 0x80 (Inherited: 0x00)
struct FFillFloorPositionData {
	struct FScalableFloat MoveTime; // 0x00(0x28)
	struct FScalableFloat Height; // 0x28(0x28)
	struct FScalableFloat PostMoveDelay; // 0x50(0x28)
	char pad_78[0x8]; // 0x78(0x08)
};

// ScriptStruct FortniteGame.QueuedFlushNetDormancyInfo
// Size: 0x10 (Inherited: 0x00)
struct FQueuedFlushNetDormancyInfo {
	struct AActor* Actor; // 0x00(0x08)
	char pad_8[0x8]; // 0x08(0x08)
};

// ScriptStruct FortniteGame.BuildingFoundationLODActorData
// Size: 0x28 (Inherited: 0x00)
struct FBuildingFoundationLODActorData {
	char pad_0[0x18]; // 0x00(0x18)
	struct UMaterialInstanceDynamic* VisibilityMaterial; // 0x18(0x08)
	struct UTexture2DDynamic* VisibilityTexture; // 0x20(0x08)
};

// ScriptStruct FortniteGame.DynamicBuildingFoundationRepData
// Size: 0x1c (Inherited: 0x00)
struct FDynamicBuildingFoundationRepData {
	struct FRotator Rotation; // 0x00(0x0c)
	struct FVector Translation; // 0x0c(0x0c)
	enum class EDynamicFoundationEnabledState EnabledState; // 0x18(0x01)
	char pad_19[0x3]; // 0x19(0x03)
};

// ScriptStruct FortniteGame.BuildingFoundationStreamingData
// Size: 0x80 (Inherited: 0x00)
struct FBuildingFoundationStreamingData {
	struct FName FoundationName; // 0x00(0x08)
	struct FVector FoundationLocation; // 0x08(0x0c)
	struct FBox BoundingBox; // 0x14(0x1c)
	struct FGameplayTagContainer GameplayTags; // 0x30(0x20)
	struct FIntPoint GridCoordinates; // 0x50(0x08)
	struct TArray<LazyObjectProperty> ProxyInfo; // 0x58(0x10)
	struct TArray<int32_t> ChildStreamingDataIndices; // 0x68(0x10)
	char PersistentHLODLevelIndex; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// ScriptStruct FortniteGame.ChaserPatrolTurnData
// Size: 0x20 (Inherited: 0x00)
struct FChaserPatrolTurnData {
	bool bPatrolTurning; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FVector PatrolTurnStartDirection; // 0x04(0x0c)
	struct FVector PatrolTurnEndDirection; // 0x10(0x0c)
	float PatrolMoveSpeed; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.ChaserMarkerPosition
// Size: 0x04 (Inherited: 0x00)
struct FChaserMarkerPosition {
	float MarkerPosition; // 0x00(0x04)
};

// ScriptStruct FortniteGame.SplatterCellIndex
// Size: 0x0c (Inherited: 0x00)
struct FSplatterCellIndex {
	int32_t X; // 0x00(0x04)
	int32_t Y; // 0x04(0x04)
	int32_t Z; // 0x08(0x04)
};

// ScriptStruct FortniteGame.RebootCardReplicatedState
// Size: 0x10 (Inherited: 0x00)
struct FRebootCardReplicatedState {
	float ChipExpirationServerStartTime; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct AFortPlayerStateAthena* PlayerState; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortMapData
// Size: 0x50 (Inherited: 0x00)
struct FFortMapData {
	struct TSoftObjectPtr<struct UWorld> BuildingWorld; // 0x00(0x28)
	struct FGameplayTagContainer BuildingLevelTags; // 0x28(0x20)
	float SelectionWeight; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// ScriptStruct FortniteGame.ItemCollectorOverrideItemRow
// Size: 0x20 (Inherited: 0x08)
struct FItemCollectorOverrideItemRow : FTableRowBase {
	struct FPrimaryAssetId ItemPrimaryAssetId; // 0x08(0x10)
	int32_t Quantity; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.ItemCollectorRow
// Size: 0x20 (Inherited: 0x08)
struct FItemCollectorRow : FTableRowBase {
	struct UDataTable* OverrideItemsTable; // 0x08(0x08)
	enum class EFortRarity OverrideRarity; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
	int32_t OverrideGoal; // 0x14(0x04)
	int32_t bOverrideLootRules; // 0x18(0x04)
	int32_t bUseOverrideRarity; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.CollectorTrackedData
// Size: 0x20 (Inherited: 0x00)
struct FCollectorTrackedData {
	char Team; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct AFortPlayerState* Player; // 0x08(0x08)
	char pad_10[0x10]; // 0x10(0x10)
};

// ScriptStruct FortniteGame.CollectedItemValue
// Size: 0x18 (Inherited: 0x00)
struct FCollectedItemValue {
	struct UFortWorldItemDefinition* CollectedItem; // 0x00(0x08)
	int32_t DepositAmount; // 0x08(0x04)
	int32_t DepositGoal; // 0x0c(0x04)
	int32_t CaptureCount; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.CollectorUnitInfo
// Size: 0x110 (Inherited: 0x00)
struct FCollectorUnitInfo {
	struct UFortWorldItemDefinition* InputItem; // 0x00(0x08)
	struct FScalableFloat InputCount; // 0x08(0x28)
	struct UTexture* OverrideInputItemTexture; // 0x30(0x08)
	char bUseDefinedOutputItem : 1; // 0x38(0x01)
	char pad_38_1 : 7; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct UFortWorldItemDefinition* OutputItem; // 0x40(0x08)
	struct TArray<struct FFortItemEntry> OutputItemEntry; // 0x48(0x10)
	struct FName OverrideOutputItemLootTierGroupName; // 0x58(0x08)
	struct FFortGameplayEffectDeliveryInfo OutputGameplayEffect; // 0x60(0xa8)
	struct UTexture* OverrideOutputItemTexture; // 0x108(0x08)
};

// ScriptStruct FortniteGame.FortGameplayEffectDeliveryInfo
// Size: 0xa8 (Inherited: 0x00)
struct FFortGameplayEffectDeliveryInfo {
	struct FFortDeliveryInfoRequirementsFilter DeliveryRequirements; // 0x00(0x98)
	struct TArray<struct FGameplayEffectApplicationInfo> GameplayEffects; // 0x98(0x10)
};

// ScriptStruct FortniteGame.GameplayEffectApplicationInfo
// Size: 0x30 (Inherited: 0x00)
struct FGameplayEffectApplicationInfo {
	SoftClassProperty GameplayEffect; // 0x00(0x28)
	float Level; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.PlayerWeaponUpgradeHoldData
// Size: 0x10 (Inherited: 0x00)
struct FPlayerWeaponUpgradeHoldData {
	struct AFortPlayerController* InteractingPC; // 0x00(0x08)
	struct TWeakObjectPtr<struct AFortWeapon> UpgradeTargetWeapon; // 0x08(0x08)
};

// ScriptStruct FortniteGame.BuildingPropClassData
// Size: 0xc0 (Inherited: 0xc0)
struct FBuildingPropClassData : FBuildingAutoNavClassData {
};

// ScriptStruct FortniteGame.CaptureAreaTeamInfo
// Size: 0x18 (Inherited: 0x00)
struct FCaptureAreaTeamInfo {
	struct TArray<struct AFortPlayerController*> Players; // 0x00(0x10)
	char InsideTeamIndex; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.CaptureHandle
// Size: 0x08 (Inherited: 0x00)
struct FCaptureHandle {
	char pad_0[0x8]; // 0x00(0x08)
};

// ScriptStruct FortniteGame.SpawnGroupVisuals
// Size: 0x78 (Inherited: 0x00)
struct FSpawnGroupVisuals {
	SoftClassProperty SpawnGroup; // 0x00(0x28)
	SoftClassProperty AIPawn; // 0x28(0x28)
	struct TSoftObjectPtr<struct UPhysicsAsset> PhysicsAsset; // 0x50(0x28)
};

// ScriptStruct FortniteGame.MusicTrackData
// Size: 0x50 (Inherited: 0x08)
struct FMusicTrackData : FTableRowBase {
	bool Enabled; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct TSoftObjectPtr<struct USoundBase> MusicTrackPath; // 0x10(0x28)
	struct FText TrackName; // 0x38(0x18)
};

// ScriptStruct FortniteGame.MusicPlayerData
// Size: 0x08 (Inherited: 0x00)
struct FMusicPlayerData {
	int32_t SongIndex; // 0x00(0x04)
	float ServerTimeSongStarted; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortRiftReservation
// Size: 0x08 (Inherited: 0x00)
struct FFortRiftReservation {
	char bDesiredVisible : 1; // 0x00(0x01)
	char bDesiredActive : 1; // 0x00(0x01)
	char pad_0_2 : 6; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FFortRiftReservationHandle ReservationHandle; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortRiftReservationHandle
// Size: 0x04 (Inherited: 0x00)
struct FFortRiftReservationHandle {
	int32_t RiftReservationID; // 0x00(0x04)
};

// ScriptStruct FortniteGame.FortSpawnSlotData
// Size: 0x20 (Inherited: 0x00)
struct FFortSpawnSlotData {
	struct FVector SpawnSlotLocation; // 0x00(0x0c)
	char pad_C[0x4]; // 0x0c(0x04)
	struct AFortAIPawn* OccupyingAI; // 0x10(0x08)
	enum class EFortRiftSlotStatus SlotStatus; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
};

// ScriptStruct FortniteGame.ProxyGameplayCueDamage
// Size: 0x20 (Inherited: 0x00)
struct FProxyGameplayCueDamage {
	struct FGameplayEffectContextHandle EffectContext; // 0x00(0x18)
	uint32_t ProxyGameplayCueDamageMagnitude; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.BuildingActorMinimalReplicationProxy
// Size: 0x04 (Inherited: 0x00)
struct FBuildingActorMinimalReplicationProxy {
	int16_t Health; // 0x00(0x02)
	int16_t MaxHealth; // 0x02(0x02)
};

// ScriptStruct FortniteGame.BuildingDuplicationData
// Size: 0x28 (Inherited: 0x00)
struct FBuildingDuplicationData {
	struct UObject* ClassData; // 0x00(0x08)
	struct UBuildingTextureData* TextureData[0x4]; // 0x08(0x20)
};

// ScriptStruct FortniteGame.EditorOnlyBuildingInstanceMaterialParameters
// Size: 0x30 (Inherited: 0x00)
struct FEditorOnlyBuildingInstanceMaterialParameters {
	struct TArray<struct FScalarParameterValue> ScalarParams; // 0x00(0x10)
	struct TArray<struct FVectorParameterValue> VectorParams; // 0x10(0x10)
	struct TArray<struct FTextureParameterValue> TextureParams; // 0x20(0x10)
};

// ScriptStruct FortniteGame.RandomDayphaseFX
// Size: 0x40 (Inherited: 0x00)
struct FRandomDayphaseFX {
	struct UParticleSystem* ParticleSystem; // 0x00(0x08)
	struct TArray<struct UParticleSystem*> AltParticleSystems; // 0x08(0x10)
	struct TArray<enum class EFortDayPhase> RequiredDayphases; // 0x18(0x10)
	float ChanceToSpawnFX; // 0x28(0x04)
	enum class EDetailMode DetailMode; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
	float MaxDrawDistance; // 0x30(0x04)
	bool bRandomSelectionAlreadyHappened; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	struct UParticleSystemComponent* SpawnedComponent; // 0x38(0x08)
};

// ScriptStruct FortniteGame.BuildingNavObstacle
// Size: 0x20 (Inherited: 0x00)
struct FBuildingNavObstacle {
	struct FBox LocalBounds; // 0x00(0x1c)
	enum class EBuildingNavObstacleType ObstacleType; // 0x1c(0x01)
	char pad_1D[0x3]; // 0x1d(0x03)
};

// ScriptStruct FortniteGame.ChosenQuotaInfo
// Size: 0x0c (Inherited: 0x00)
struct FChosenQuotaInfo {
	int32_t LootTier; // 0x00(0x04)
	struct FName LootTierKey; // 0x04(0x08)
};

// ScriptStruct FortniteGame.AnimatingMaterialPair
// Size: 0x10 (Inherited: 0x00)
struct FAnimatingMaterialPair {
	struct UMaterialInterface* Original; // 0x00(0x08)
	struct UMaterialInterface* Override; // 0x08(0x08)
};

// ScriptStruct FortniteGame.LogicalBuilding
// Size: 0xa8 (Inherited: 0x00)
struct FLogicalBuilding {
	char pad_0[0xa8]; // 0x00(0xa8)
};

// ScriptStruct FortniteGame.BuildingNavigationCellInfo
// Size: 0x01 (Inherited: 0x00)
struct FBuildingNavigationCellInfo {
	char pad_0[0x1]; // 0x00(0x01)
};

// ScriptStruct FortniteGame.BuildingNeighboringActorInfo
// Size: 0x30 (Inherited: 0x00)
struct FBuildingNeighboringActorInfo {
	struct TArray<struct FNeighboringWallInfo> NeighboringWallInfos; // 0x00(0x10)
	struct TArray<struct FNeighboringFloorInfo> NeighboringFloorInfos; // 0x10(0x10)
	struct TArray<struct FNeighboringCenterCellInfo> NeighboringCenterCellInfos; // 0x20(0x10)
};

// ScriptStruct FortniteGame.NeighboringCenterCellInfo
// Size: 0x14 (Inherited: 0x00)
struct FNeighboringCenterCellInfo {
	struct TWeakObjectPtr<struct ABuildingSMActor> NeighboringActor; // 0x00(0x08)
	struct FBuildingSupportCellIndex NeighboringCellIdx; // 0x08(0x0c)
};

// ScriptStruct FortniteGame.BuildingSupportCellIndex
// Size: 0x0c (Inherited: 0x00)
struct FBuildingSupportCellIndex {
	int32_t X; // 0x00(0x04)
	int32_t Y; // 0x04(0x04)
	int32_t Z; // 0x08(0x04)
};

// ScriptStruct FortniteGame.NeighboringFloorInfo
// Size: 0x18 (Inherited: 0x00)
struct FNeighboringFloorInfo {
	struct TWeakObjectPtr<struct ABuildingSMActor> NeighboringActor; // 0x00(0x08)
	struct FBuildingSupportCellIndex NeighboringCellIdx; // 0x08(0x0c)
	enum class EStructuralFloorPosition FloorPosition; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
};

// ScriptStruct FortniteGame.NeighboringWallInfo
// Size: 0x18 (Inherited: 0x00)
struct FNeighboringWallInfo {
	struct TWeakObjectPtr<struct ABuildingSMActor> NeighboringActor; // 0x00(0x08)
	struct FBuildingSupportCellIndex NeighboringCellIdx; // 0x08(0x0c)
	enum class EStructuralWallPosition WallPosition; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
};

// ScriptStruct FortniteGame.BuildingGridActorFilter
// Size: 0x04 (Inherited: 0x00)
struct FBuildingGridActorFilter {
	bool bIncludeWalls; // 0x00(0x01)
	bool bIncludeFloors; // 0x01(0x01)
	bool bIncludeFloorInTop; // 0x02(0x01)
	bool bIncludeCenterCell; // 0x03(0x01)
};

// ScriptStruct FortniteGame.BuildingValueRules
// Size: 0x1c (Inherited: 0x00)
struct FBuildingValueRules {
	int32_t CellsAbove; // 0x00(0x04)
	int32_t CellsBelow; // 0x04(0x04)
	int32_t CellHorizontalRadius; // 0x08(0x04)
	float DistanceFromObjectiveWeight; // 0x0c(0x04)
	float AttackWeight; // 0x10(0x04)
	float StructuralWeight; // 0x14(0x04)
	float TrapWeight; // 0x18(0x04)
};

// ScriptStruct FortniteGame.TimeOfDayBlueprintDefaultVariables
// Size: 0x10 (Inherited: 0x00)
struct FTimeOfDayBlueprintDefaultVariables {
	struct UStaticMesh* AlternateShadowStaticMesh; // 0x00(0x08)
	float VolumetricLightScatteringIntensity; // 0x08(0x04)
	bool bDisableTODLightsAndMaterialEmissiveValues; // 0x0c(0x01)
	bool bDisableStaticMeshShadowCastingWhenLightsAreActive; // 0x0d(0x01)
	bool bUseAnAlternateShadowMeshWhenTheLightIsOff; // 0x0e(0x01)
	bool bCastVolumetricShadows; // 0x0f(0x01)
};

// ScriptStruct FortniteGame.BuildingTrapClassData
// Size: 0xb8 (Inherited: 0xb8)
struct FBuildingTrapClassData : FBuildingSMActorClassData {
};

// ScriptStruct FortniteGame.PointConfiguration
// Size: 0x10 (Inherited: 0x00)
struct FPointConfiguration {
	struct TArray<struct FVector> PointLocations; // 0x00(0x10)
};

// ScriptStruct FortniteGame.WaypointIndex
// Size: 0x08 (Inherited: 0x00)
struct FWaypointIndex {
	int32_t WaypointGroup; // 0x00(0x04)
	int32_t WaypointIndex; // 0x04(0x04)
};

// ScriptStruct FortniteGame.MOBATurretPrioritySetting
// Size: 0x0c (Inherited: 0x00)
struct FMOBATurretPrioritySetting {
	int32_t AIPriority; // 0x00(0x04)
	int32_t PlayerPriority; // 0x04(0x04)
	int32_t BuildingPriority; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortBounceData
// Size: 0x30 (Inherited: 0x00)
struct FFortBounceData {
	float StartTime; // 0x00(0x04)
	float BounceValue; // 0x04(0x04)
	float Radius; // 0x08(0x04)
	struct FLinearColor DeformationVector; // 0x0c(0x10)
	struct FLinearColor DeformationCenter; // 0x1c(0x10)
	enum class EFortBounceType BounceType; // 0x2c(0x01)
	bool bLocalInstigator; // 0x2d(0x01)
	bool bIsPlaying; // 0x2e(0x01)
	char pad_2F[0x1]; // 0x2f(0x01)
};

// ScriptStruct FortniteGame.BulletWhipTrackerData
// Size: 0x50 (Inherited: 0x00)
struct FBulletWhipTrackerData {
	char bAttachSoundToOwner : 1; // 0x00(0x01)
	char pad_0_1 : 7; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float PassByRadiusMax; // 0x04(0x04)
	float PassByRadiusMin; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct USoundBase* PassByFarSound; // 0x10(0x08)
	struct USoundBase* PassByCloseSound; // 0x18(0x08)
	float MinimumTriggerDistance; // 0x20(0x04)
	float TriggerAheadDistance; // 0x24(0x04)
	struct UAudioComponent* CurrentAudioComp; // 0x28(0x08)
	float PreviousPlaneDotProd; // 0x30(0x04)
	float CachedPassDistance; // 0x34(0x04)
	struct FVector CachedPassLocation; // 0x38(0x0c)
	float PassByClosenessIntensity; // 0x44(0x04)
	bool bActive; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// ScriptStruct FortniteGame.ClimbLinkData
// Size: 0x28 (Inherited: 0x00)
struct FClimbLinkData {
	char pad_0[0x20]; // 0x00(0x20)
	uint32_t UniqueLinkId; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.CombatThresholdData
// Size: 0x70 (Inherited: 0x00)
struct FCombatThresholdData {
	struct FScalableFloat HeatLevel; // 0x00(0x28)
	struct FScalableFloat ExitHeatLevel; // 0x28(0x28)
	struct FString ThresholdName; // 0x50(0x10)
	struct FLinearColor DebugGraphColor; // 0x60(0x10)
};

// ScriptStruct FortniteGame.CombatFactorData
// Size: 0x38 (Inherited: 0x00)
struct FCombatFactorData {
	struct TArray<struct FCombatEventMultiplier> ContributingCombatEvents; // 0x00(0x10)
	float MaxValue; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct FString DebugFactorName; // 0x18(0x10)
	struct FLinearColor DebugGraphColor; // 0x28(0x10)
};

// ScriptStruct FortniteGame.CombatEventMultiplier
// Size: 0x08 (Inherited: 0x00)
struct FCombatEventMultiplier {
	enum class EFortCombatEvents CombatEvent; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float MaxContribution; // 0x04(0x04)
};

// ScriptStruct FortniteGame.CombatEventData
// Size: 0x38 (Inherited: 0x00)
struct FCombatEventData {
	float Heat; // 0x00(0x04)
	float MaxHeatContribution; // 0x04(0x04)
	float CoolDownRate; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FString EventName; // 0x10(0x10)
	struct FLinearColor DebugGraphColor; // 0x20(0x10)
	enum class EFortCombatEventContribution ContributionType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// ScriptStruct FortniteGame.PlayerBindTracking
// Size: 0x0c (Inherited: 0x00)
struct FPlayerBindTracking {
	struct TWeakObjectPtr<struct AFortPlayerController> PlayerController; // 0x00(0x08)
	char pad_8[0x4]; // 0x08(0x04)
};

// ScriptStruct FortniteGame.ReplicatedVkResolvedModule
// Size: 0x50 (Inherited: 0x00)
struct FReplicatedVkResolvedModule {
	struct FVkResolvedModule ResolvedModule; // 0x00(0x48)
	bool bShouldBeInstalled; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// ScriptStruct FortniteGame.ContentMessageArray
// Size: 0x128 (Inherited: 0x108)
struct FContentMessageArray : FFastArraySerializer {
	struct TArray<struct FContentMessageItemEntry> Items; // 0x108(0x10)
	char pad_118[0x10]; // 0x118(0x10)
};

// ScriptStruct FortniteGame.ContentMessageItemEntry
// Size: 0x20 (Inherited: 0x0c)
struct FContentMessageItemEntry : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct FString ContentMessage; // 0x10(0x10)
};

// ScriptStruct FortniteGame.ModuleTracker
// Size: 0xb8 (Inherited: 0x00)
struct FModuleTracker {
	struct FString ContentTrackerID; // 0x00(0x10)
	char pad_10[0x90]; // 0x10(0x90)
	bool bShouldBeInstalled; // 0xa0(0x01)
	bool bHasAttemptedActivation; // 0xa1(0x01)
	char pad_A2[0x16]; // 0xa2(0x16)
};

// ScriptStruct FortniteGame.FortCreativeAnimateFloatCurveResult
// Size: 0x08 (Inherited: 0x00)
struct FFortCreativeAnimateFloatCurveResult {
	float Value; // 0x00(0x04)
	bool bComplete; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
};

// ScriptStruct FortniteGame.DeferredCreativeTask
// Size: 0x50 (Inherited: 0x00)
struct FDeferredCreativeTask {
	struct AActor* ActorPtr; // 0x00(0x08)
	char pad_8[0x48]; // 0x08(0x48)
};

// ScriptStruct FortniteGame.CreativeDeviceExportData
// Size: 0xe8 (Inherited: 0x00)
struct FCreativeDeviceExportData {
	char pad_0[0xe8]; // 0x00(0xe8)
};

// ScriptStruct FortniteGame.CreativeMiniMapComponentIconData
// Size: 0x08 (Inherited: 0x00)
struct FCreativeMiniMapComponentIconData {
	int32_t IconIndex; // 0x00(0x04)
	enum class ECreativeMinimapComponentIconColorType IconColor; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
};

// ScriptStruct FortniteGame.FortMiniMapIndicatorTextProperties
// Size: 0x70 (Inherited: 0x00)
struct FFortMiniMapIndicatorTextProperties {
	struct FSlateFontInfo DisplayTextFont; // 0x00(0x58)
	struct FLinearColor DisplayTextColor; // 0x58(0x10)
	struct FVector2D DisplayTextOffset; // 0x68(0x08)
};

// ScriptStruct FortniteGame.CreativeQuestData
// Size: 0x10 (Inherited: 0x00)
struct FCreativeQuestData {
	struct APlayerState* PlayerState; // 0x00(0x08)
	int32_t Progress; // 0x08(0x04)
	bool bActive; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
};

// ScriptStruct FortniteGame.CreativeItemInfo
// Size: 0x20 (Inherited: 0x00)
struct FCreativeItemInfo {
	struct UFortItemDefinition* ItemDefinition; // 0x00(0x08)
	struct FGuid Guid; // 0x08(0x10)
	int32_t DesiredSlot; // 0x18(0x04)
	bool bUseVolumeToSpawn; // 0x1c(0x01)
	char pad_1D[0x3]; // 0x1d(0x03)
};

// ScriptStruct FortniteGame.CreativeThumbnailCacheData
// Size: 0x78 (Inherited: 0x00)
struct FCreativeThumbnailCacheData {
	char pad_0[0x78]; // 0x00(0x78)
};

// ScriptStruct FortniteGame.CustomAccessoryMorphs
// Size: 0x08 (Inherited: 0x00)
struct FCustomAccessoryMorphs {
	char pad_0[0x8]; // 0x00(0x08)
};

// ScriptStruct FortniteGame.CustomAccessoryHatReactiveMorphs
// Size: 0x48 (Inherited: 0x08)
struct FCustomAccessoryHatReactiveMorphs : FCustomAccessoryMorphs {
	struct TArray<struct FName> CapMorphTargets; // 0x08(0x10)
	struct TArray<struct FName> HelmetMorphTargets; // 0x18(0x10)
	struct TArray<struct FName> MaskMorphTargets; // 0x28(0x10)
	struct TArray<struct FName> HatMorphTargets; // 0x38(0x10)
};

// ScriptStruct FortniteGame.CustomPartMaterialOverrideData
// Size: 0x30 (Inherited: 0x00)
struct FCustomPartMaterialOverrideData {
	int32_t MaterialOverrideIndex; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct TSoftObjectPtr<struct UMaterialInterface> OverrideMaterial; // 0x08(0x28)
};

// ScriptStruct FortniteGame.CustomPartVectorParameter
// Size: 0x1c (Inherited: 0x00)
struct FCustomPartVectorParameter {
	int32_t MaterialIndexForVectorParameter; // 0x00(0x04)
	struct FName VectorParameterNameForMaterial; // 0x04(0x08)
	struct FLinearColor VectorOverride; // 0x0c(0x10)
};

// ScriptStruct FortniteGame.CustomPartScalarParameter
// Size: 0x10 (Inherited: 0x00)
struct FCustomPartScalarParameter {
	int32_t MaterialIndexForScalarParameter; // 0x00(0x04)
	struct FName ScalarParameterNameForMaterial; // 0x04(0x08)
	float ScalarOverride; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.CustomPartTextureParameter
// Size: 0x38 (Inherited: 0x00)
struct FCustomPartTextureParameter {
	int32_t MaterialIndexForTextureParameter; // 0x00(0x04)
	struct FName TextureParameterNameForMaterial; // 0x04(0x08)
	char pad_C[0x4]; // 0x0c(0x04)
	struct TSoftObjectPtr<struct UTexture> TextureOverride; // 0x10(0x28)
};

// ScriptStruct FortniteGame.GameplayTagAnimations
// Size: 0x10 (Inherited: 0x00)
struct FGameplayTagAnimations {
	struct TArray<struct FGameplayTagAnimationData> GameplayTagAnimData; // 0x00(0x10)
};

// ScriptStruct FortniteGame.GameplayTagAnimationData
// Size: 0x50 (Inherited: 0x00)
struct FGameplayTagAnimationData {
	struct FGameplayTagContainer GameplayTags; // 0x00(0x20)
	enum class EFortCustomGender ValidGenders; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
	struct TSoftObjectPtr<struct UAnimMontage> AnimMontage; // 0x28(0x28)
};

// ScriptStruct FortniteGame.BlackWidowLegSinAnimationRotator
// Size: 0x60 (Inherited: 0x00)
struct FBlackWidowLegSinAnimationRotator {
	struct FBlackWidowLegSinAnimationScalar RollAnimation; // 0x00(0x20)
	struct FBlackWidowLegSinAnimationScalar PitchAnimation; // 0x20(0x20)
	struct FBlackWidowLegSinAnimationScalar YawAnimation; // 0x40(0x20)
};

// ScriptStruct FortniteGame.BlackWidowLegSinAnimationScalar
// Size: 0x20 (Inherited: 0x00)
struct FBlackWidowLegSinAnimationScalar {
	bool bUseConstantValue; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float ConstantValue; // 0x04(0x04)
	float TimeOffset; // 0x08(0x04)
	float FrequencyOffset; // 0x0c(0x04)
	float SinOffset; // 0x10(0x04)
	float ResultMultiplier; // 0x14(0x04)
	struct FVector2D MappedRangeOutput; // 0x18(0x08)
};

// ScriptStruct FortniteGame.SlurpLegendSwapToVariantData
// Size: 0x50 (Inherited: 0x00)
struct FSlurpLegendSwapToVariantData {
	float DelayBeforeSwitching; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FMcpVariantChannelInfo VariantData; // 0x08(0x48)
};

// ScriptStruct FortniteGame.ColorSwatchPair
// Size: 0x30 (Inherited: 0x00)
struct FColorSwatchPair {
	struct FName ColorName; // 0x00(0x08)
	struct FLinearColor ColorValue; // 0x08(0x10)
	struct FText ColorDisplayName; // 0x18(0x18)
};

// ScriptStruct FortniteGame.DAD_CosmeticItemUserOption
// Size: 0x98 (Inherited: 0x00)
struct FDAD_CosmeticItemUserOption {
	struct FString Name; // 0x00(0x10)
	struct FText DisplayName; // 0x10(0x18)
	struct TSoftObjectPtr<struct UFortItemDefinition> CosmeticItemAsset; // 0x28(0x28)
	struct FGameplayTag GameplayTag; // 0x50(0x08)
	struct FGameplayTagContainer DefaultVariants; // 0x58(0x20)
	struct FLinearColor VFXColor; // 0x78(0x10)
	struct FString StoreLink; // 0x88(0x10)
};

// ScriptStruct FortniteGame.DAD_Island
// Size: 0x48 (Inherited: 0x00)
struct FDAD_Island {
	struct FString IslandName; // 0x00(0x10)
	struct FString IslandCode; // 0x10(0x10)
	struct FString MetricName; // 0x20(0x10)
	struct FString MetricInterval; // 0x30(0x10)
	bool bLowestToHighest; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	int32_t Nth; // 0x44(0x04)
};

// ScriptStruct FortniteGame.DeferredActorData
// Size: 0x40 (Inherited: 0x00)
struct FDeferredActorData {
	struct ABuildingActor* BuildingActor; // 0x00(0x08)
	int32_t ActorRecordIndex; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FTransform BuildingTransform; // 0x10(0x30)
};

// ScriptStruct FortniteGame.EarnedBadgeEntryArray
// Size: 0x118 (Inherited: 0x108)
struct FEarnedBadgeEntryArray : FFastArraySerializer {
	struct TArray<struct FEarnedBadgeEntry> Items; // 0x108(0x10)
};

// ScriptStruct FortniteGame.EarnedBadgeEntry
// Size: 0x30 (Inherited: 0x0c)
struct FEarnedBadgeEntry : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct UFortBadgeItemDefinition* Badge; // 0x10(0x08)
	struct TArray<struct FEarnedBadgePlayerData> PlayerData; // 0x18(0x10)
	enum class EFortRewardType RewardType; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// ScriptStruct FortniteGame.EarnedBadgePlayerData
// Size: 0x30 (Inherited: 0x00)
struct FEarnedBadgePlayerData {
	struct FUniqueNetIdRepl PlayerID; // 0x00(0x28)
	int32_t Count; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.ViewOffsetData
// Size: 0x24 (Inherited: 0x00)
struct FViewOffsetData {
	struct FVector OffsetHigh; // 0x00(0x0c)
	struct FVector OffsetMid; // 0x0c(0x0c)
	struct FVector OffsetLow; // 0x18(0x0c)
};

// ScriptStruct FortniteGame.PenetrationAvoidanceFeeler
// Size: 0x20 (Inherited: 0x00)
struct FPenetrationAvoidanceFeeler {
	struct FRotator AdjustmentRot; // 0x00(0x0c)
	float WorldWeight; // 0x0c(0x04)
	float PawnWeight; // 0x10(0x04)
	float Extent; // 0x14(0x04)
	int32_t TraceInterval; // 0x18(0x04)
	int32_t FramesUntilNextTrace; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.AbilityToolSpawnParameters
// Size: 0x28 (Inherited: 0x00)
struct FAbilityToolSpawnParameters {
	struct ABuildingActor* SpawnClass; // 0x00(0x08)
	struct FVector Location; // 0x08(0x0c)
	struct FRotator Rotation; // 0x14(0x0c)
	struct ABuildingSMActor* AttachedToActor; // 0x20(0x08)
};

// ScriptStruct FortniteGame.AbilityKitItem
// Size: 0x10 (Inherited: 0x00)
struct FAbilityKitItem {
	struct UFortItemDefinition* Item; // 0x00(0x08)
	int32_t Quantity; // 0x08(0x04)
	enum class EFortReplenishmentType Replenishment; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
};

// ScriptStruct FortniteGame.AbilityActivatedByInputData
// Size: 0x50 (Inherited: 0x00)
struct FAbilityActivatedByInputData {
	struct UFortGameplayAbility* Ability; // 0x00(0x08)
	struct FGameplayTagQuery ActivationTagQuery; // 0x08(0x48)
};

// ScriptStruct FortniteGame.DebugNativeActionInfo
// Size: 0x18 (Inherited: 0x00)
struct FDebugNativeActionInfo {
	char pad_0[0x18]; // 0x00(0x18)
};

// ScriptStruct FortniteGame.GameplayAbilityRepSharedAnim_Base
// Size: 0x02 (Inherited: 0x00)
struct FGameplayAbilityRepSharedAnim_Base {
	enum class EFortSharedAnimationState AnimState; // 0x00(0x01)
	char MontageSectionToPlay; // 0x01(0x01)
};

// ScriptStruct FortniteGame.GameplayAbilityRepSharedAnim_Index
// Size: 0x08 (Inherited: 0x02)
struct FGameplayAbilityRepSharedAnim_Index : FGameplayAbilityRepSharedAnim_Base {
	char pad_2[0x2]; // 0x02(0x02)
	int32_t MontageIndex; // 0x04(0x04)
};

// ScriptStruct FortniteGame.GameplayAbilityRepSharedAnim
// Size: 0x10 (Inherited: 0x02)
struct FGameplayAbilityRepSharedAnim : FGameplayAbilityRepSharedAnim_Base {
	char pad_2[0x6]; // 0x02(0x06)
	struct UAnimMontage* AnimMontage; // 0x08(0x08)
};

// ScriptStruct FortniteGame.ReplicatedMontagePair
// Size: 0x28 (Inherited: 0x00)
struct FReplicatedMontagePair {
	struct UAnimMontage* Montage1; // 0x00(0x08)
	struct UAnimMontage* Montage2; // 0x08(0x08)
	struct FName Section1; // 0x10(0x08)
	struct FName Section2; // 0x18(0x08)
	int8_t RepIndex; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
};

// ScriptStruct FortniteGame.AttributeInfo
// Size: 0x10 (Inherited: 0x00)
struct FAttributeInfo {
	char pad_0[0x10]; // 0x00(0x10)
};

// ScriptStruct FortniteGame.TokenAttributePair
// Size: 0x40 (Inherited: 0x00)
struct FTokenAttributePair {
	struct FGameplayTag Token; // 0x00(0x08)
	struct FGameplayAttribute Attribute; // 0x08(0x38)
};

// ScriptStruct FortniteGame.FortGameplayEffectDescription
// Size: 0x50 (Inherited: 0x00)
struct FFortGameplayEffectDescription {
	struct FText EffectDisplayName; // 0x00(0x18)
	struct FText EffectWrittenDescription; // 0x18(0x18)
	struct TArray<struct FFortGameplayEffectModifierDescription> ModDescriptions; // 0x30(0x10)
	struct TArray<struct FText> GrantedTagDescriptions; // 0x40(0x10)
};

// ScriptStruct FortniteGame.FortGameplayEffectModifierDescription
// Size: 0x58 (Inherited: 0x00)
struct FFortGameplayEffectModifierDescription {
	struct FGameplayAttribute ModAttribute; // 0x00(0x38)
	struct FText ModDescription; // 0x38(0x18)
	bool bIsBuff; // 0x50(0x01)
	enum class EFortAttributeDisplay MagnitudeFormat; // 0x51(0x01)
	enum class EFortStatDisplayType DisplayType; // 0x52(0x01)
	char pad_53[0x1]; // 0x53(0x01)
	float Magnitude; // 0x54(0x04)
};

// ScriptStruct FortniteGame.FortAbilityTagRelationship
// Size: 0x48 (Inherited: 0x00)
struct FFortAbilityTagRelationship {
	struct FGameplayTag AbilityTag; // 0x00(0x08)
	struct FGameplayTagContainer AbilityTagsToBlock; // 0x08(0x20)
	struct FGameplayTagContainer AbilityTagsToCancel; // 0x28(0x20)
};

// ScriptStruct FortniteGame.FortAbilityTargetSelectionList
// Size: 0x48 (Inherited: 0x00)
struct FFortAbilityTargetSelectionList {
	struct TArray<struct FFortAbilityTargetSelection> List; // 0x00(0x10)
	char bStopAtFirstSuccess : 1; // 0x10(0x01)
	char bKeepCheckingListOnIndestructibleHit : 1; // 0x10(0x01)
	char pad_10_2 : 6; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct FGameplayTagContainer AbilityTargetBlockedGameplayTags; // 0x18(0x20)
	char bUseWeaponRanges : 1; // 0x38(0x01)
	char bUseMaxYawAngleToTarget : 1; // 0x38(0x01)
	char pad_38_2 : 6; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float MaxYawAngleToTarget; // 0x3c(0x04)
	char pad_40[0x8]; // 0x40(0x08)
};

// ScriptStruct FortniteGame.FortAbilityTargetSelection
// Size: 0x118 (Inherited: 0x00)
struct FFortAbilityTargetSelection {
	enum class EFortTargetSelectionShape Shape; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FString CustomShapeComponentName; // 0x08(0x10)
	enum class EFortTargetSelectionTestType TestType; // 0x18(0x01)
	enum class EFortAbilityTargetingSource PrimarySource; // 0x19(0x01)
	enum class EFortAbilityTargetingSource SecondarySource; // 0x1a(0x01)
	char pad_1B[0x5]; // 0x1b(0x05)
	struct FScalableFloat Range; // 0x20(0x28)
	struct FVector HalfExtents; // 0x48(0x0c)
	bool bAlignShapeEdgeToSourceLocation; // 0x54(0x01)
	char pad_55[0x3]; // 0x55(0x03)
	struct FScalableFloat ConeYawAngle; // 0x58(0x28)
	struct FScalableFloat ConePitchAngle; // 0x80(0x28)
	struct FScalableFloat ConeMinRadius; // 0xa8(0x28)
	struct FFortTargetFilter TargetFilter; // 0xd0(0x38)
	bool bExcludeObstructedByWorld; // 0x108(0x01)
	bool bShouldAttachedActorsObstructTarget; // 0x109(0x01)
	bool bCreateHitResultWhenNoTargetsFound; // 0x10a(0x01)
	bool bUseProjectileRotationForDamageZones; // 0x10b(0x01)
	enum class EFortAbilityTargetSelectionUsage TargetSelectionUsage; // 0x10c(0x01)
	char pad_10D[0x3]; // 0x10d(0x03)
	int32_t MaxTargets; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
};

// ScriptStruct FortniteGame.FortTargetFilter
// Size: 0x38 (Inherited: 0x00)
struct FFortTargetFilter {
	enum class EFortTargetSelectionFilter ActorTypeFilter; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct UObject* ActorClassFilter; // 0x08(0x08)
	char bExcludeInstigator : 1; // 0x10(0x01)
	char bUseTrapsOwningPawnAsInstigator : 1; // 0x10(0x01)
	char bExcludeRequester : 1; // 0x10(0x01)
	char bExcludeAllAttachedToInstigator : 1; // 0x10(0x01)
	char bExcludeAthenaVehicleOfInstigator : 1; // 0x10(0x01)
	char bExcludeAllAttachedToRequester : 1; // 0x10(0x01)
	char bExcludePawnFriends : 1; // 0x10(0x01)
	char bExcludeFriendlyAI : 1; // 0x10(0x01)
	char bExcludeAllAI : 1; // 0x11(0x01)
	char bExcludePawnNeutrals : 1; // 0x11(0x01)
	char bExcludePawnEnemies : 1; // 0x11(0x01)
	char bExcludeNonPawnFriends : 1; // 0x11(0x01)
	char bExcludeNonPawnEnemies : 1; // 0x11(0x01)
	char bConsiderFriendlyFireWhenExcludingFriends : 1; // 0x11(0x01)
	char bExcludeDBNOPawns : 1; // 0x11(0x01)
	char bExcludeWaterVolumes : 1; // 0x11(0x01)
	char bExcludeWaterBodies : 1; // 0x12(0x01)
	char bExcludeAthenaVehicleOccupiedBySource : 1; // 0x12(0x01)
	char bExcludeAthenaVehicleUnoccupied : 1; // 0x12(0x01)
	char bExcludeAthenaVehicleOccupied : 1; // 0x12(0x01)
	char bExcludeAthenaVehicleFromObstructionChecks : 1; // 0x12(0x01)
	char bExcludeWithoutNavigationCorridor : 1; // 0x12(0x01)
	char bExcludeNonPlayerBuiltPieces : 1; // 0x12(0x01)
	char bExcludePlayerBuiltPieces : 1; // 0x12(0x01)
	char bExcludeNonBGABuildings : 1; // 0x13(0x01)
	char bExcludeNonBlockingHits : 1; // 0x13(0x01)
	char bExcludeProjectiles : 1; // 0x13(0x01)
	char bTraceComplexCollision : 1; // 0x13(0x01)
	char bExcludeLandscape : 1; // 0x13(0x01)
	char bConsiderPhysicsPawnsAsNonPlayerPawns : 1; // 0x13(0x01)
	char pad_13_6 : 2; // 0x13(0x01)
	char pad_14[0x4]; // 0x14(0x04)
	struct FGameplayTagContainer ExclusionGameplayTags; // 0x18(0x20)
};

// ScriptStruct FortniteGame.VisibilityTestPoint
// Size: 0x18 (Inherited: 0x00)
struct FVisibilityTestPoint {
	struct FVector Location; // 0x00(0x0c)
	char pad_C[0x4]; // 0x0c(0x04)
	struct UPrimitiveComponent* Component; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortAbilityCanHitParameters
// Size: 0x18 (Inherited: 0x00)
struct FFortAbilityCanHitParameters {
	char pad_0[0x18]; // 0x00(0x18)
};

// ScriptStruct FortniteGame.FortRootMotionSource_FallingBoost
// Size: 0xe0 (Inherited: 0xa0)
struct FFortRootMotionSource_FallingBoost : FRootMotionSource {
	struct FVector StartLocation; // 0x98(0x0c)
	struct FVector StartVelocity; // 0xa4(0x0c)
	struct FVector LastDesiredVelocity; // 0xb0(0x0c)
	float VerticalImpulse; // 0xbc(0x04)
	float GravityScalar; // 0xc0(0x04)
	float MaxAcceleration; // 0xc4(0x04)
	float LateralFriction; // 0xc8(0x04)
	float MaxLateralSpeed; // 0xcc(0x04)
	bool bHasAppliedVerticalImpulse; // 0xd0(0x01)
	struct FVector LatestRepMovementLocation; // 0xd4(0x0c)
};

// ScriptStruct FortniteGame.RootMotionSource_FollowCharacterRotation
// Size: 0xd0 (Inherited: 0xb0)
struct FRootMotionSource_FollowCharacterRotation : FRootMotionSource_ConstantForce {
	char pad_B0[0x4]; // 0xb0(0x04)
	float ConstantStrength; // 0xb4(0x04)
	bool bWasWalkingLastFrame; // 0xb8(0x01)
	bool bWasFallingLastFrame; // 0xb9(0x01)
	char pad_BA[0x2]; // 0xba(0x02)
	float WalkingAccumulatedTime; // 0xbc(0x04)
	float FallingAccumulatedTime; // 0xc0(0x04)
	char pad_C4[0xc]; // 0xc4(0x0c)
};

// ScriptStruct FortniteGame.AbilityTrackedActorSettings
// Size: 0x28 (Inherited: 0x00)
struct FAbilityTrackedActorSettings {
	struct FScalableFloat MaximumTrackedActors; // 0x00(0x28)
};

// ScriptStruct FortniteGame.AbilityTrackedActorEntry
// Size: 0x0c (Inherited: 0x00)
struct FAbilityTrackedActorEntry {
	char pad_0[0xc]; // 0x00(0x0c)
};

// ScriptStruct FortniteGame.FortGameplayAbilityTargetData_SingleTargetHit
// Size: 0xa8 (Inherited: 0x98)
struct FFortGameplayAbilityTargetData_SingleTargetHit : FGameplayAbilityTargetData_SingleTargetHit {
	int32_t CartridgeID; // 0x98(0x04)
	char pad_9C[0xc]; // 0x9c(0x0c)
};

// ScriptStruct FortniteGame.ProximityBasedGEDeliveryInfo
// Size: 0xb8 (Inherited: 0xa8)
struct FProximityBasedGEDeliveryInfo : FProximityBasedGEDeliveryInfoBase {
	struct TArray<struct FGameplayEffectApplicationInfo> EffectsToApply; // 0xa8(0x10)
};

// ScriptStruct FortniteGame.FortConditionalIncludeTags
// Size: 0x40 (Inherited: 0x00)
struct FFortConditionalIncludeTags {
	struct FGameplayTagContainer ConditionTags; // 0x00(0x20)
	struct FGameplayTagContainer IncludeTags; // 0x20(0x20)
};

// ScriptStruct FortniteGame.FortGameplayEffectContext
// Size: 0xd8 (Inherited: 0x70)
struct FFortGameplayEffectContext : FGameplayEffectContext {
	bool bIsFatalHit; // 0x70(0x01)
	bool bIsCriticalHit; // 0x71(0x01)
	bool bIsDiceCritical; // 0x72(0x01)
	bool bIsFullBodyHit; // 0x73(0x01)
	float KnockbackMagnitude; // 0x74(0x04)
	float KnockbackZAngle; // 0x78(0x04)
	float StunTime; // 0x7c(0x04)
	float TotalChargeTime; // 0x80(0x04)
	float ChargeMagnitude; // 0x84(0x04)
	float EffectDirectionX; // 0x88(0x04)
	float EffectDirectionY; // 0x8c(0x04)
	struct FGameplayTagContainer TooltipTags; // 0x90(0x20)
	int32_t CartridgeID; // 0xb0(0x04)
	struct FGuid ItemGuid; // 0xb4(0x10)
	struct TWeakObjectPtr<struct UObject> DamageSourceObject; // 0xc4(0x08)
	float SourceLevel; // 0xcc(0x04)
	float UnmodifiedDamage; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
};

// ScriptStruct FortniteGame.AccoladeSecondaryXpType
// Size: 0x30 (Inherited: 0x00)
struct FAccoladeSecondaryXpType {
	struct FGameplayTag Type; // 0x00(0x08)
	struct FScalableFloat XpAmount; // 0x08(0x28)
};

// ScriptStruct FortniteGame.PlaylistToActivityMapping
// Size: 0x18 (Inherited: 0x00)
struct FPlaylistToActivityMapping {
	struct FName PlaylistName; // 0x00(0x08)
	struct FString ActivityId; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortAffiliationComponentSpecificRelations
// Size: 0x20 (Inherited: 0x00)
struct FFortAffiliationComponentSpecificRelations {
	struct FFortAffiliationActorIdentifierList Identifiers; // 0x00(0x10)
	struct TArray<struct UFortActorComponent_Affiliation*> Components; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortAffiliationActorIdentifierList
// Size: 0x10 (Inherited: 0x00)
struct FFortAffiliationActorIdentifierList {
	struct TArray<uint32_t> AffiliationComponentUIDs; // 0x00(0x10)
};

// ScriptStruct FortniteGame.PendingRequestManager
// Size: 0x30 (Inherited: 0x00)
struct FPendingRequestManager {
	char pad_0[0x30]; // 0x00(0x30)
};

// ScriptStruct FortniteGame.GoalSelectionQueryInfo
// Size: 0x28 (Inherited: 0x00)
struct FGoalSelectionQueryInfo {
	struct UEnvQuery* GoalSelectionQuery; // 0x00(0x08)
	struct FGameplayTagContainer RequiredGameplayTags; // 0x08(0x20)
};

// ScriptStruct FortniteGame.FortBuddyTagListener
// Size: 0x18 (Inherited: 0x00)
struct FFortBuddyTagListener {
	struct AActor* Actor; // 0x00(0x08)
	char pad_8[0x10]; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortAIEncounterQueryData
// Size: 0x20 (Inherited: 0x00)
struct FFortAIEncounterQueryData {
	struct TArray<struct FVector> QueryLocations; // 0x00(0x10)
	struct TArray<struct AActor*> QueryActors; // 0x10(0x10)
};

// ScriptStruct FortniteGame.LODAIUpdateInfo
// Size: 0x18 (Inherited: 0x00)
struct FLODAIUpdateInfo {
	char pad_0[0x18]; // 0x00(0x18)
};

// ScriptStruct FortniteGame.FortAILootDropModifiers
// Size: 0x60 (Inherited: 0x00)
struct FFortAILootDropModifiers {
	struct FFortAIEncounterRequirements Requirements; // 0x00(0x50)
	struct TArray<struct FDataTableRowHandle> LootDropModifierRows; // 0x50(0x10)
};

// ScriptStruct FortniteGame.FortAIEncounterRequirements
// Size: 0x50 (Inherited: 0x00)
struct FFortAIEncounterRequirements {
	enum class EFortMissionType AssociatedMissionType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FGameplayTagQuery TagQuery; // 0x08(0x48)
};

// ScriptStruct FortniteGame.FortAILootDropModifierRow
// Size: 0x38 (Inherited: 0x08)
struct FFortAILootDropModifierRow : FTableRowBase {
	int32_t Priority; // 0x08(0x04)
	float ItemDropChanceMultiplier; // 0x0c(0x04)
	struct FName WorldItemLootTierGroup; // 0x10(0x08)
	struct FGameplayTagContainer AITagsContainer; // 0x18(0x20)
};

// ScriptStruct FortniteGame.FortAIBaseLootDropRow
// Size: 0x48 (Inherited: 0x08)
struct FFortAIBaseLootDropRow : FTableRowBase {
	int32_t Priority; // 0x08(0x04)
	float ItemDropChance; // 0x0c(0x04)
	struct FName WorldItemLootTierGroup; // 0x10(0x08)
	struct FName WorldItemInstancedLootTierGroup; // 0x18(0x08)
	struct FName AccountItemLootTierGroup; // 0x20(0x08)
	struct FGameplayTagContainer AITagsContainer; // 0x28(0x20)
};

// ScriptStruct FortniteGame.FortEncounterGroupLimitData
// Size: 0x0c (Inherited: 0x00)
struct FFortEncounterGroupLimitData {
	int32_t DesiredPawnNumCap; // 0x00(0x04)
	int32_t RemainingDesiredLimit; // 0x04(0x04)
	int32_t CurrentEncounterLimit; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortPendingStoppedEncounterData
// Size: 0x10 (Inherited: 0x00)
struct FFortPendingStoppedEncounterData {
	struct UFortAIEncounterInfo* Encounter; // 0x00(0x08)
	enum class EFortObjectiveStatus ObjectiveStatus; // 0x08(0x01)
	bool bForceDestroyAI; // 0x09(0x01)
	bool bEncounterCompletedSuccessfully; // 0x0a(0x01)
	char pad_B[0x5]; // 0x0b(0x05)
};

// ScriptStruct FortniteGame.FortAIEncounterPawnDifficultyLevelModifier
// Size: 0x58 (Inherited: 0x00)
struct FFortAIEncounterPawnDifficultyLevelModifier {
	struct FGameplayTagQuery EncounterTagRequirementsQuery; // 0x00(0x48)
	struct FCurveTableRowHandle DifficultyLevelModifierCurve; // 0x48(0x10)
};

// ScriptStruct FortniteGame.FortAISpawnGroupUpgradeData
// Size: 0x60 (Inherited: 0x00)
struct FFortAISpawnGroupUpgradeData {
	struct UFortAISpawnGroupUpgrade* SpawnGroupUpgrade; // 0x00(0x08)
	struct UFortAISpawnGroupUpgradeProbabilities* UpgradeProbabilities; // 0x08(0x08)
	struct UFortAISpawnGroupCapsCategorySet* SpawnGroupCapsCategories; // 0x10(0x08)
	struct FGameplayTagQuery EncounterTagRequirementsQuery; // 0x18(0x48)
};

// ScriptStruct FortniteGame.FortAIPawnUpgradeProbability
// Size: 0x58 (Inherited: 0x00)
struct FFortAIPawnUpgradeProbability {
	struct FGameplayTagQuery TagQuery; // 0x00(0x48)
	struct FCurveTableRowHandle UpgradeProbability; // 0x48(0x10)
};

// ScriptStruct FortniteGame.FortAIEncounterSpawnPointsProfile
// Size: 0x40 (Inherited: 0x00)
struct FFortAIEncounterSpawnPointsProfile {
	struct FGameplayTagContainer EncounterTypeTags; // 0x00(0x20)
	struct TArray<struct FCurveTableRowHandle> MaxSpawnPointsPerPlayerCount; // 0x20(0x10)
	struct TArray<struct FCurveTableRowHandle> MinSpawnPointsPerPlayerCount; // 0x30(0x10)
};

// ScriptStruct FortniteGame.FortAIEncounterSpawnGroupCapsProfile
// Size: 0x30 (Inherited: 0x00)
struct FFortAIEncounterSpawnGroupCapsProfile {
	struct FGameplayTagContainer EncounterTypeTags; // 0x00(0x20)
	struct TArray<struct FFortAIEncounterSpawnGroupCapsCategory> PopulationCategories; // 0x20(0x10)
};

// ScriptStruct FortniteGame.FortAIEncounterSpawnGroupCapsCategory
// Size: 0x140 (Inherited: 0x00)
struct FFortAIEncounterSpawnGroupCapsCategory {
	struct FGameplayTagQuery TagQuery; // 0x00(0x48)
	bool bApplyGroupPopulationCurveToCategoryMax; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct FCurveTableRowHandle InitialSpawnGroupAvailabilityDelaySeconds; // 0x50(0x10)
	struct FCurveTableRowHandle SpawnGroupAvailabilityDelaySeconds; // 0x60(0x10)
	struct FGameplayTagQuery UnlockingTagQuery; // 0x70(0x48)
	struct TArray<struct FFortAIEncounterSpawnGroupCap> SpawnGroupCapsPerPlayerCount; // 0xb8(0x10)
	float InitialSpawnGroupAvailabilityTime; // 0xc8(0x04)
	float NumActiveCategorySpawnGroups; // 0xcc(0x04)
	struct TArray<float> SpawnGroupAvailabilityTimes; // 0xd0(0x10)
	int32_t NumSpawnGroupAvailable; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct UObject* CategorySource; // 0xe8(0x08)
	char pad_F0[0x50]; // 0xf0(0x50)
};

// ScriptStruct FortniteGame.FortAIEncounterSpawnGroupCap
// Size: 0x20 (Inherited: 0x00)
struct FFortAIEncounterSpawnGroupCap {
	struct FCurveTableRowHandle MinSpawnGroupNumberCap; // 0x00(0x10)
	struct FCurveTableRowHandle MaxSpawnGroupNumberCap; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortEncounterPawnNumberCaps
// Size: 0x18 (Inherited: 0x00)
struct FFortEncounterPawnNumberCaps {
	bool bApplyPawnNumberCaps; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FCurveTableRowHandle> PawnCapsPerPlayerCount; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortPlayerPerformanceEstimateSettings
// Size: 0x40 (Inherited: 0x00)
struct FFortPlayerPerformanceEstimateSettings {
	struct FCurveTableRowHandle PlayerPerformanceEstimateTransformMin; // 0x00(0x10)
	struct FCurveTableRowHandle PlayerPerformanceEstimateTransformOrigin; // 0x10(0x10)
	struct FCurveTableRowHandle PlayerPerformanceEstimateTransformMax; // 0x20(0x10)
	float EncounterPlayerPerformanceWeight; // 0x30(0x04)
	float PreviousWavePlayerPerformanceWeight; // 0x34(0x04)
	float CampaignPlayerPerformanceWeight; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.FortAIEncounterPIDController
// Size: 0x68 (Inherited: 0x00)
struct FFortAIEncounterPIDController {
	float ProportionalGain; // 0x00(0x04)
	float IntegralGain; // 0x04(0x04)
	float DerivativeGain; // 0x08(0x04)
	char pad_C[0x5c]; // 0x0c(0x5c)
};

// ScriptStruct FortniteGame.FortAIEncounterPIDControllerSettings
// Size: 0x30 (Inherited: 0x00)
struct FFortAIEncounterPIDControllerSettings {
	struct FCurveTableRowHandle ProportionalGain; // 0x00(0x10)
	struct FCurveTableRowHandle IntegralGain; // 0x10(0x10)
	struct FCurveTableRowHandle DerivativeGain; // 0x20(0x10)
};

// ScriptStruct FortniteGame.UtilityData
// Size: 0x40 (Inherited: 0x00)
struct FUtilityData {
	struct TArray<struct FUtilityContribution> ContributingFactors; // 0x00(0x10)
	float ContributionsTotal; // 0x10(0x04)
	bool bApplyRecentSelectionPenalty; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
	float RecentlySelectedPenaltyPercentage; // 0x18(0x04)
	float PenaltyFallOffRate; // 0x1c(0x04)
	struct FString DebugGraphName; // 0x20(0x10)
	struct FLinearColor DebugGraphColor; // 0x30(0x10)
};

// ScriptStruct FortniteGame.UtilityContribution
// Size: 0x08 (Inherited: 0x00)
struct FUtilityContribution {
	float MaxContribution; // 0x00(0x04)
	enum class EFortCombatFactors ContributingFactor; // 0x04(0x01)
	enum class EFortAIDirectorFactor ContributingAIDirectorFactor; // 0x05(0x01)
	enum class EFortFactorContributionType ContributionType; // 0x06(0x01)
	char pad_7[0x1]; // 0x07(0x01)
};

// ScriptStruct FortniteGame.UtilityTypeFloatPair
// Size: 0x08 (Inherited: 0x00)
struct FUtilityTypeFloatPair {
	enum class EFortAIUtility Utility; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float Value; // 0x04(0x04)
};

// ScriptStruct FortniteGame.IntensityData
// Size: 0x30 (Inherited: 0x00)
struct FIntensityData {
	struct TArray<struct FIntensityContribution> ContributingFactors; // 0x00(0x10)
	float ContributionsTotal; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct TArray<struct UBuildingEditModeMetadata*> ExceptionEditModes; // 0x18(0x10)
	float ExceptionEditModeWeight; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.IntensityContribution
// Size: 0x48 (Inherited: 0x00)
struct FIntensityContribution {
	enum class EFortCombatFactors CombatFactor; // 0x00(0x01)
	enum class EFortAIDirectorFactor ContributingAIDirectorFactor; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	float MaxContribution; // 0x04(0x04)
	bool bModifyContributionByCompletionPercentage; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct FCurveTableRowHandle CompletionPercentageInitialMultiplier; // 0x10(0x10)
	struct FCurveTableRowHandle CompletionPercentageToStartReducingMultiplier; // 0x20(0x10)
	struct FCurveTableRowHandle CompletionPercentageToStopReducingMultiplier; // 0x30(0x10)
	bool bModifyByNumberOfCriticalEncounterGoals; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// ScriptStruct FortniteGame.PendingSpawnInfo
// Size: 0x158 (Inherited: 0x00)
struct FPendingSpawnInfo {
	struct AFortAIPawn* PawnClassToSpawn; // 0x00(0x08)
	struct AActor* SpawnPoint; // 0x08(0x08)
	struct FVector SpawnLocation; // 0x10(0x0c)
	struct FRotator SpawnRotation; // 0x1c(0x0c)
	struct AActor* SpawnSource; // 0x28(0x08)
	bool bSpawnedFromExternalSpawner; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	int32_t SpawnSetIndex; // 0x34(0x04)
	enum class EFortressAIType AIType; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct AFortPlayerController* TargetPlayer; // 0x40(0x08)
	struct UFortAIEncounterInfo* EncounterInfo; // 0x48(0x08)
	float DifficultyLevel; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct UFortAISpawnGroup* SpawnGroup; // 0x58(0x08)
	struct FGuid SpawnGroupGuid; // 0x60(0x10)
	int32_t EnemyIndexInSpawnGroup; // 0x70(0x04)
	float TimeToSpawn; // 0x74(0x04)
	struct FGuid PendingSpawnInfoGuid; // 0x78(0x10)
	bool bIgnoreCollision; // 0x88(0x01)
	bool bKillBuildingActorsAtSpawnLocation; // 0x89(0x01)
	char pad_8A[0x2]; // 0x8a(0x02)
	float EncounterAILifespan; // 0x8c(0x04)
	float ScoreMultiplier; // 0x90(0x04)
	bool bDebugSpawnedAI; // 0x94(0x01)
	char pad_95[0x3]; // 0x95(0x03)
	struct TArray<struct UFortAbilitySet*> AbilitySetsToGrantOnSpawn; // 0x98(0x10)
	struct TArray<struct UFortGameplayModifierItemDefinition*> ModifiersToApplyOnSpawn; // 0xa8(0x10)
	struct FFortAISpawnGroupUpgradeUIData UpgradeUIData; // 0xb8(0x80)
	struct FFortAIPawnLootDropData LootDropData; // 0x138(0x1c)
	char pad_154[0x4]; // 0x154(0x04)
};

// ScriptStruct FortniteGame.FortAIPawnLootDropData
// Size: 0x1c (Inherited: 0x00)
struct FFortAIPawnLootDropData {
	float LootDropChance; // 0x00(0x04)
	struct FName WorldItemTierGroup; // 0x04(0x08)
	struct FName WorldItemInstancedTierGroup; // 0x0c(0x08)
	struct FName AccountItemTierGroup; // 0x14(0x08)
};

// ScriptStruct FortniteGame.FortAISpawnGroupUpgradeUIData
// Size: 0x80 (Inherited: 0x00)
struct FFortAISpawnGroupUpgradeUIData {
	bool bAlwaysDisplayHealthBar; // 0x00(0x01)
	bool bOverrideHealthBarColor; // 0x01(0x01)
	char pad_2[0x6]; // 0x02(0x06)
	struct TSoftObjectPtr<struct UTexture2D> UpgradeIconImage; // 0x08(0x28)
	struct FSlateColor UpgradeIconTintColor; // 0x30(0x28)
	struct FLinearColor HealthBarColorOverride; // 0x58(0x10)
	struct FText UpgradeName; // 0x68(0x18)
};

// ScriptStruct FortniteGame.FortAIDirectorPerLODConfig
// Size: 0x30 (Inherited: 0x00)
struct FFortAIDirectorPerLODConfig {
	struct FScalableFloat MaxNPCCosts; // 0x00(0x28)
	enum class EFortAILODLevel FortAILODLevel; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// ScriptStruct FortniteGame.PlayerLODViewConeHysteresisConfig
// Size: 0x50 (Inherited: 0x00)
struct FPlayerLODViewConeHysteresisConfig {
	struct FScalableFloat AdditionalObserverVisionAngleDeg; // 0x00(0x28)
	struct FScalableFloat AdditionalRadius; // 0x28(0x28)
};

// ScriptStruct FortniteGame.PlayerLODViewConeConfig
// Size: 0x80 (Inherited: 0x00)
struct FPlayerLODViewConeConfig {
	struct FScalableFloat ObserverVisionAngleDeg; // 0x00(0x28)
	struct FScalableFloat ViewConeMaxRadius; // 0x28(0x28)
	struct FScalableFloat AlwaysVisibleRadius; // 0x50(0x28)
	enum class EFortAILODLevel FortAILODLevel; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// ScriptStruct FortniteGame.FortAIDirectorFactorData
// Size: 0x20 (Inherited: 0x00)
struct FFortAIDirectorFactorData {
	enum class EFortAIDirectorFactor AIDirectorFactor; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FFortAIDirectorFactorContribution> ContributingEvents; // 0x08(0x10)
	float MaxValue; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortAIDirectorFactorContribution
// Size: 0x0c (Inherited: 0x00)
struct FFortAIDirectorFactorContribution {
	enum class EFortAIDirectorEvent AIDirectorEvent; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float MaxContribution; // 0x04(0x04)
	enum class EFortAIDirectorFactorContribution ContributionType; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.AIDirectorEventData
// Size: 0x30 (Inherited: 0x00)
struct FAIDirectorEventData {
	enum class EFortAIDirectorEvent event; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FCurveTableRowHandle DataMax; // 0x08(0x10)
	struct FCurveTableRowHandle CoolDownRate; // 0x18(0x10)
	enum class EFortAIDirectorEventContribution ContributionType; // 0x28(0x01)
	enum class EFortAIDirectorEventParticipant OwnerParticipantType; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
};

// ScriptStruct FortniteGame.FortGoalActorEncounterDataManagerPair
// Size: 0x10 (Inherited: 0x00)
struct FFortGoalActorEncounterDataManagerPair {
	struct AActor* GoalActor; // 0x00(0x08)
	struct AFortAIDirectorDataManager* EncounterDataManager; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortAIEncounterWaveProgressEstimation
// Size: 0x1c (Inherited: 0x00)
struct FFortAIEncounterWaveProgressEstimation {
	float SectionProgressEstimate; // 0x00(0x04)
	float SectionStartTime; // 0x04(0x04)
	float LastWaveProgressUpdateTime; // 0x08(0x04)
	float PeakAndFadeWavePercentage; // 0x0c(0x04)
	float MaxAdjustmentPerSecond; // 0x10(0x04)
	enum class EFortAIWaveProgressSection CurrentSection; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
	int32_t NumberOfWaveSegments; // 0x18(0x04)
};

// ScriptStruct FortniteGame.EncounterEnvironmentQueryInstance
// Size: 0x58 (Inherited: 0x00)
struct FEncounterEnvironmentQueryInstance {
	struct FEncounterEnvironmentQueryInfo EnvironmentQueryInfo; // 0x00(0x28)
	int32_t QueryID; // 0x28(0x04)
	bool bIsWaitingForQueryResults; // 0x2c(0x01)
	enum class EFortEncounterDirection ChosenDirection; // 0x2d(0x01)
	char pad_2E[0x2]; // 0x2e(0x02)
	struct TArray<struct FVector> QueryLocations; // 0x30(0x10)
	struct TArray<struct ABuildingRift*> FoundRifts; // 0x40(0x10)
	int32_t NumTimesUsed; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// ScriptStruct FortniteGame.FortEncounterAIDirectorFactor
// Size: 0x0c (Inherited: 0x00)
struct FFortEncounterAIDirectorFactor {
	float CurrentValue; // 0x00(0x04)
	float AccumulatedPeriodValue; // 0x04(0x04)
	float TotalPeriodTime; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortAISpawnerData
// Size: 0x60 (Inherited: 0x00)
struct FFortAISpawnerData {
	struct FGuid SpawnGroupInstanceGuid; // 0x00(0x10)
	struct FFortSpawnAIRequest ReservedSpawnRequest; // 0x10(0x50)
};

// ScriptStruct FortniteGame.FortSpawnAIRequest
// Size: 0x50 (Inherited: 0x00)
struct FFortSpawnAIRequest {
	struct FGuid SpawnGroupInstanceGuid; // 0x00(0x10)
	int32_t EnemyIndex; // 0x10(0x04)
	struct FVector SpawnLocation; // 0x14(0x0c)
	struct FRotator SpawnRotation; // 0x20(0x0c)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct AActor* SpawnPoint; // 0x30(0x08)
	struct TArray<struct UFortAbilitySet*> AbilitySetsToGrantOnSpawn; // 0x38(0x10)
	bool bIgnoreCollisionWhenSpawning; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// ScriptStruct FortniteGame.SpawnGroupInstanceInfo
// Size: 0x108 (Inherited: 0x00)
struct FSpawnGroupInstanceInfo {
	struct UFortAISpawnGroup* SpawnGroup; // 0x00(0x08)
	int32_t NumActiveAlive; // 0x08(0x04)
	int32_t TotalGroupCost; // 0x0c(0x04)
	int32_t SpawnPointsUsed; // 0x10(0x04)
	int32_t NumEngaged; // 0x14(0x04)
	bool bReadyToSpawn; // 0x18(0x01)
	bool bFinishedSpawning; // 0x19(0x01)
	char pad_1A[0x2]; // 0x1a(0x02)
	struct FGuid GroupGuid; // 0x1c(0x10)
	int32_t EnemySpawnDataIndex; // 0x2c(0x04)
	float TimeSelected; // 0x30(0x04)
	int32_t NextEnemyToSpawnIndex; // 0x34(0x04)
	struct FGameplayTagContainer UpgradeTags; // 0x38(0x20)
	struct FFortAISpawnGroupUpgradeUIData UpgradeUIData; // 0x58(0x80)
	struct TArray<struct FFortAIPawnUpgradeData> PawnUpgrades; // 0xd8(0x10)
	struct TArray<struct UFortGameplayModifierItemDefinition*> ModifiersForAllPawns; // 0xe8(0x10)
	struct TArray<struct AFortAIPawn*> PawnList; // 0xf8(0x10)
};

// ScriptStruct FortniteGame.FortAIPawnUpgradeData
// Size: 0x48 (Inherited: 0x00)
struct FFortAIPawnUpgradeData {
	struct FCurveTableRowHandle SpawnPointsMultiplierCurve; // 0x00(0x10)
	struct FCurveTableRowHandle LifespanMultiplierCurve; // 0x10(0x10)
	struct FCurveTableRowHandle ScoreMultiplierCurve; // 0x20(0x10)
	struct UFortGameplayModifierItemDefinition* ModifierDefinition; // 0x30(0x08)
	struct TArray<struct UFortGameplayModifierItemDefinition*> AdditionalModifiers; // 0x38(0x10)
};

// ScriptStruct FortniteGame.FortCurveSequenceInstanceInfo
// Size: 0x04 (Inherited: 0x00)
struct FFortCurveSequenceInstanceInfo {
	char pad_0[0x4]; // 0x00(0x04)
};

// ScriptStruct FortniteGame.FortIntensityCurveSequenceInstanceInfo
// Size: 0x10 (Inherited: 0x04)
struct FFortIntensityCurveSequenceInstanceInfo : FFortCurveSequenceInstanceInfo {
	char pad_4[0x4]; // 0x04(0x04)
	struct UFortIntensityCurveSequence* IntensityCurveSequence; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortSpawnPointsPercentageCurveSequenceInstanceInfo
// Size: 0x10 (Inherited: 0x04)
struct FFortSpawnPointsPercentageCurveSequenceInstanceInfo : FFortCurveSequenceInstanceInfo {
	char pad_4[0x4]; // 0x04(0x04)
	struct UFortSpawnPointsPercentageCurveSequence* SpawnPointsPercentageCurveSequence; // 0x08(0x08)
};

// ScriptStruct FortniteGame.CurrentIntensityAnalyticsBucket
// Size: 0x38 (Inherited: 0x00)
struct FCurrentIntensityAnalyticsBucket {
	char pad_0[0x38]; // 0x00(0x38)
};

// ScriptStruct FortniteGame.FortIntensityCurve
// Size: 0x40 (Inherited: 0x08)
struct FFortIntensityCurve : FTableRowBase {
	struct UCurveTable* IntensityCurveTable; // 0x08(0x08)
	struct FName IntensityCurveTableRow; // 0x10(0x08)
	float LowPlayerPerformancePeakIntensityThreshold; // 0x18(0x04)
	float NormalPlayerPerformancePeakIntensityThreshold; // 0x1c(0x04)
	float HighPlayerPerformancePeakIntensityThreshold; // 0x20(0x04)
	float MaxRampTime; // 0x24(0x04)
	float FadeEndIntensityThreshold; // 0x28(0x04)
	float StartIntensityOffsetFloor; // 0x2c(0x04)
	float EndIntensityOffsetFloor; // 0x30(0x04)
	float StartIntensityOffsetCeiling; // 0x34(0x04)
	float EndIntensityOffsetCeiling; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.FortSpawnPointsPercentageCurve
// Size: 0x20 (Inherited: 0x08)
struct FFortSpawnPointsPercentageCurve : FTableRowBase {
	struct UCurveTable* SpawnPointsPercentageCurveTable; // 0x08(0x08)
	struct FName SpawnPointsPercentageCurveTableRow; // 0x10(0x08)
	float MaxRampTime; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.AIEncounterSpawnGroupWeights
// Size: 0x18 (Inherited: 0x00)
struct FAIEncounterSpawnGroupWeights {
	char pad_0[0x18]; // 0x00(0x18)
};

// ScriptStruct FortniteGame.SpawnGroupProgression
// Size: 0x08 (Inherited: 0x00)
struct FSpawnGroupProgression {
	struct UFortAISpawnGroup* SpawnGroup; // 0x00(0x08)
};

// ScriptStruct FortniteGame.FortAIEncounterQueryDirectionTracker
// Size: 0x48 (Inherited: 0x00)
struct FFortAIEncounterQueryDirectionTracker {
	bool bHasTriedPreviousDirections; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<enum class EFortEncounterDirection> PreviousQueryDirections; // 0x08(0x10)
	struct TArray<enum class EFortEncounterDirection> ChosenDirections; // 0x18(0x10)
	struct TArray<enum class EFortEncounterDirection> FailedDirections; // 0x28(0x10)
	struct TArray<enum class EFortEncounterDirection> AvailableDirections; // 0x38(0x10)
};

// ScriptStruct FortniteGame.FortAIEncounterRiftManagerInitializationData
// Size: 0x128 (Inherited: 0x00)
struct FFortAIEncounterRiftManagerInitializationData {
	struct UFortAIEncounterInfo* EncounterInfo; // 0x00(0x08)
	struct FFortEncounterSettings EncounterSettings; // 0x08(0xb8)
	struct FEncounterEnvironmentQueryInfo CurrentEnvironmentQueryInfo; // 0xc0(0x28)
	struct FEncounterEnvironmentQueryInfo FallbackEnvironmentQueryInfo; // 0xe8(0x28)
	struct ABuildingRift* RiftClassTemplate; // 0x110(0x08)
	int32_t NumRiftsToUse; // 0x118(0x04)
	int32_t MinRiftsToUse; // 0x11c(0x04)
	float UpdateIntervalTimeSeconds; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
};

// ScriptStruct FortniteGame.FortAIEncounterSpawnArea
// Size: 0x48 (Inherited: 0x00)
struct FFortAIEncounterSpawnArea {
	struct TArray<struct FEncounterEnvironmentQueryInstance> QueryInstances; // 0x00(0x10)
	struct TArray<struct FFortAIEncounterRift> PendingRifts; // 0x10(0x10)
	struct TArray<struct FFortAIEncounterRift> Rifts; // 0x20(0x10)
	struct TArray<struct UFortPathCostEstimator*> PathEstimators; // 0x30(0x10)
	bool bIsActive; // 0x40(0x01)
	bool bUsingFallbackQuery; // 0x41(0x01)
	enum class EFortEncounterSpawnLocationManagementMode SpawnLocationManagementMode; // 0x42(0x01)
	char pad_43[0x5]; // 0x43(0x05)
};

// ScriptStruct FortniteGame.FortAIEncounterRift
// Size: 0x20 (Inherited: 0x00)
struct FFortAIEncounterRift {
	int32_t QueryID; // 0x00(0x04)
	struct FVector RiftLocation; // 0x04(0x0c)
	struct ABuildingRift* RiftActor; // 0x10(0x08)
	struct FFortRiftReservationHandle RiftReservationHandle; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortAIGoalInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortAIGoalInfo {
	struct TWeakObjectPtr<struct AActor> Actor; // 0x00(0x08)
	struct FVector Location; // 0x08(0x0c)
	bool bActorAlwaysPerceived; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
};

// ScriptStruct FortniteGame.FortAIGoal
// Size: 0x28 (Inherited: 0x18)
struct FFortAIGoal : FFortAIGoalInfo {
	struct TArray<struct UAIGoalComponent*> GoalComponentsAssignedToGoal; // 0x18(0x10)
};

// ScriptStruct FortniteGame.AIAssignmentInfo
// Size: 0x80 (Inherited: 0x00)
struct FAIAssignmentInfo {
	struct TWeakObjectPtr<struct UFortAIAssignment> CurrentAssignment; // 0x00(0x08)
	struct FFortAIGoalInfo CurrentGoal; // 0x08(0x18)
	float TimeCurrentGoalWasChosen; // 0x20(0x04)
	float TimeExitedLastAssignmentOfType[0x4]; // 0x24(0x10)
	struct TWeakObjectPtr<struct UFortAIAssignment> PreviousAssignment; // 0x34(0x08)
	struct FFortAIGoalInfo PreviousGoal; // 0x3c(0x18)
	bool bWaitingForQueryResponse; // 0x54(0x01)
	bool bSuppressGoalUpdates; // 0x55(0x01)
	bool bReportEnemyGoalSelection; // 0x56(0x01)
	char pad_57[0x29]; // 0x57(0x29)
};

// ScriptStruct FortniteGame.AIDiscouragedGoalTimer
// Size: 0x28 (Inherited: 0x00)
struct FAIDiscouragedGoalTimer {
	struct FFortAIGoalInfo DiscouragedGoalInfo; // 0x00(0x18)
	double ExpirationTime; // 0x18(0x08)
	uint32_t NumberOfTimesMarkedForDiscouragement; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.PawnGoalSelectionTableEntry
// Size: 0x70 (Inherited: 0x00)
struct FPawnGoalSelectionTableEntry {
	struct FGameplayTagContainer RequiredGameplayTags; // 0x00(0x20)
	struct FPawnGoalSelectionCriteria PawnGoalSelectionCriteria; // 0x20(0x50)
};

// ScriptStruct FortniteGame.PawnGoalSelectionCriteria
// Size: 0x50 (Inherited: 0x00)
struct FPawnGoalSelectionCriteria {
	struct FGameplayTagContainer IncludeEnemiesWithTags; // 0x00(0x20)
	struct FGameplayTagContainer ExcludeEnemiesWithTags; // 0x20(0x20)
	struct TArray<struct FGoalSelectionCriteria> GoalSelectionCriteria; // 0x40(0x10)
};

// ScriptStruct FortniteGame.GoalSelectionCriteria
// Size: 0x08 (Inherited: 0x00)
struct FGoalSelectionCriteria {
	struct UEnvQuery* GoalSelectionQuery; // 0x00(0x08)
};

// ScriptStruct FortniteGame.EncounterGoalSelectionTableEntry
// Size: 0x28 (Inherited: 0x00)
struct FEncounterGoalSelectionTableEntry {
	struct FGameplayTagContainer RequiredGameplayTags; // 0x00(0x20)
	struct FGoalSelectionCriteria GoalSelectionCriteria; // 0x20(0x08)
};

// ScriptStruct FortniteGame.AutoAcquireSlot
// Size: 0x20 (Inherited: 0x10)
struct FAutoAcquireSlot : FAIHotSpotSlotInfo {
	char pad_10[0x10]; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortAimAssist2D
// Size: 0x250 (Inherited: 0x00)
struct FFortAimAssist2D {
	struct FFortAimAssist2D_InputParams InputParams; // 0x00(0x48)
	char pad_48[0x8]; // 0x48(0x08)
	struct FFortAimAssist2D_OwnerInfo OwnerInfo; // 0x50(0x150)
	struct TArray<struct FFortAimAssist2D_Target> TargetCache0; // 0x1a0(0x10)
	struct TArray<struct FFortAimAssist2D_Target> TargetCache1; // 0x1b0(0x10)
	char pad_1C0[0x90]; // 0x1c0(0x90)
};

// ScriptStruct FortniteGame.FortAimAssist2D_Target
// Size: 0x58 (Inherited: 0x00)
struct FFortAimAssist2D_Target {
	struct AActor* Actor; // 0x00(0x08)
	char pad_8[0x50]; // 0x08(0x50)
};

// ScriptStruct FortniteGame.FortAimAssist2D_OwnerInfo
// Size: 0x150 (Inherited: 0x00)
struct FFortAimAssist2D_OwnerInfo {
	struct AFortPlayerController* FortPC; // 0x00(0x08)
	struct UFortPlayerInput* FortPI; // 0x08(0x08)
	struct AFortPlayerPawn* FortPawn; // 0x10(0x08)
	char pad_18[0x138]; // 0x18(0x138)
};

// ScriptStruct FortniteGame.FortAimAssist2D_InputParams
// Size: 0x48 (Inherited: 0x00)
struct FFortAimAssist2D_InputParams {
	char pad_0[0x48]; // 0x00(0x48)
};

// ScriptStruct FortniteGame.FortAimAssist2D_Settings
// Size: 0x3b0 (Inherited: 0x00)
struct FFortAimAssist2D_Settings {
	struct FScalableFloat AssistInnerReticleWidth; // 0x00(0x28)
	struct FScalableFloat AssistInnerReticleHeight; // 0x28(0x28)
	struct FScalableFloat AssistOuterReticleWidth; // 0x50(0x28)
	struct FScalableFloat AssistOuterReticleHeight; // 0x78(0x28)
	struct FScalableFloat TargetingReticleWidth; // 0xa0(0x28)
	struct FScalableFloat TargetingReticleHeight; // 0xc8(0x28)
	struct FScalableFloat TargetRange; // 0xf0(0x28)
	struct UCurveFloat* TargetWeightCurve; // 0x118(0x08)
	struct FScalableFloat TargetWeightDBNOScale; // 0x120(0x28)
	struct FFortTargetFilter TargetFilter; // 0x148(0x38)
	struct FScalableFloat PullInnerStrengthHip; // 0x180(0x28)
	struct FScalableFloat PullOuterStrengthHip; // 0x1a8(0x28)
	struct FScalableFloat PullInnerStrengthAds; // 0x1d0(0x28)
	struct FScalableFloat PullOuterStrengthAds; // 0x1f8(0x28)
	struct FScalableFloat PullLerpInRate; // 0x220(0x28)
	struct FScalableFloat PullLerpOutRate; // 0x248(0x28)
	struct FScalableFloat PullMaxRotationRate; // 0x270(0x28)
	struct FScalableFloat SlowInnerStrengthHip; // 0x298(0x28)
	struct FScalableFloat SlowOuterStrengthHip; // 0x2c0(0x28)
	struct FScalableFloat SlowInnerStrengthAds; // 0x2e8(0x28)
	struct FScalableFloat SlowOuterStrengthAds; // 0x310(0x28)
	struct FScalableFloat SlowLerpInRate; // 0x338(0x28)
	struct FScalableFloat SlowLerpOutRate; // 0x360(0x28)
	struct FScalableFloat SlowMinRotationRate; // 0x388(0x28)
};

// ScriptStruct FortniteGame.FortAIPawnSkeletalMeshAsyncLoadData
// Size: 0x60 (Inherited: 0x00)
struct FFortAIPawnSkeletalMeshAsyncLoadData {
	struct TSoftObjectPtr<struct USkeletalMesh> SkeletalMesh; // 0x00(0x28)
	struct TArray<struct FFortAIPawnSkeletalMeshAsyncMaterialLoadData> OverrideMaterials; // 0x28(0x10)
	SoftClassProperty AnimationBP; // 0x38(0x28)
};

// ScriptStruct FortniteGame.FortAIPawnSkeletalMeshAsyncMaterialLoadData
// Size: 0x30 (Inherited: 0x00)
struct FFortAIPawnSkeletalMeshAsyncMaterialLoadData {
	struct TSoftObjectPtr<struct UMaterialInterface> Material; // 0x00(0x28)
	bool bRequireDynamicInstance; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// ScriptStruct FortniteGame.FortAISharedRepMovement
// Size: 0x44 (Inherited: 0x00)
struct FFortAISharedRepMovement {
	struct FRepMovement RepMovement; // 0x00(0x34)
	float RepTimeStamp; // 0x34(0x04)
	char RepMovementMode; // 0x38(0x01)
	enum class EFortAILODLevel RepCurrentFortAILODLevel; // 0x39(0x01)
	char pad_3A[0x2]; // 0x3a(0x02)
	struct FGameplayAbilityRepSharedAnim_Index RepSharedAnimInfo; // 0x3c(0x08)
};

// ScriptStruct FortniteGame.FortAIBatchedDamageCues
// Size: 0x20 (Inherited: 0x00)
struct FFortAIBatchedDamageCues {
	bool bImpact; // 0x00(0x01)
	bool bImpactWeapon; // 0x01(0x01)
	bool bDamage; // 0x02(0x01)
	bool bDamageShields; // 0x03(0x01)
	bool bDamageWeapon; // 0x04(0x01)
	bool bFatal; // 0x05(0x01)
	bool bWeaponActivated; // 0x06(0x01)
	char pad_7[0x1]; // 0x07(0x01)
	struct FVector_NetQuantize10 HitLocation; // 0x08(0x0c)
	char pad_14[0x4]; // 0x14(0x04)
	struct AActor* TargetActor; // 0x18(0x08)
};

// ScriptStruct FortniteGame.FortAIAttributeReplicationProxy
// Size: 0x08 (Inherited: 0x00)
struct FFortAIAttributeReplicationProxy {
	uint32_t Health; // 0x00(0x04)
	uint32_t MaxHealth; // 0x04(0x04)
};

// ScriptStruct FortniteGame.DamagerInfoAnalytics
// Size: 0x18 (Inherited: 0x00)
struct FDamagerInfoAnalytics {
	struct FString DamageCauser; // 0x00(0x10)
	int32_t DamageAmount; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortPawnStats
// Size: 0xb8 (Inherited: 0x08)
struct FFortPawnStats : FTableRowBase {
	float MaximumHealth; // 0x08(0x04)
	float SpeedWalk; // 0x0c(0x04)
	float SpeedRun; // 0x10(0x04)
	float SpeedSprint; // 0x14(0x04)
	float SpeedFly; // 0x18(0x04)
	float SpeedCrouchedRun; // 0x1c(0x04)
	float SpeedCrouchedSprint; // 0x20(0x04)
	float SpeedBackwardsMultiplier; // 0x24(0x04)
	float SpeedDBNO; // 0x28(0x04)
	float AccelerationStrafeMultiplierSprint; // 0x2c(0x04)
	float MinAnalogWalkSpeed; // 0x30(0x04)
	float GroundFriction; // 0x34(0x04)
	float BrakingDecelerationWalking; // 0x38(0x04)
	float BrakingDecelerationFalling; // 0x3c(0x04)
	float BrakingDecelerationFlying; // 0x40(0x04)
	float BrakingFrictionFactor; // 0x44(0x04)
	float MaxAcceleration; // 0x48(0x04)
	float MaxAccelerationFlying; // 0x4c(0x04)
	float JumpZVelocity; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct UCurveTable* FallingDamageTable; // 0x58(0x08)
	struct FName FallingDamageTableRow; // 0x60(0x08)
	struct UCurveTable* VehicleEjectDamageTable; // 0x68(0x08)
	float HealthRegenRate; // 0x70(0x04)
	float HealthRegenDelay; // 0x74(0x04)
	float HealthRegenThreshold; // 0x78(0x04)
	float MaxShield; // 0x7c(0x04)
	float ShieldRegenRate; // 0x80(0x04)
	float ShieldRegenDelay; // 0x84(0x04)
	float ShieldRegenThreshold; // 0x88(0x04)
	float MaxControlResistance; // 0x8c(0x04)
	float ControlResistanceRegenRate; // 0x90(0x04)
	float ControlResistanceRegenDelay; // 0x94(0x04)
	float ControlResistanceRegenThreshold; // 0x98(0x04)
	float KnockbackMultiplier; // 0x9c(0x04)
	float KnockbackThreshold; // 0xa0(0x04)
	float PawnDamagedTeamNotificationDistance; // 0xa4(0x04)
	bool bAllowChainStun; // 0xa8(0x01)
	enum class EFortControlRecoveryBehavior ControlRecoveryBehavior; // 0xa9(0x01)
	char pad_AA[0x2]; // 0xaa(0x02)
	struct FGameplayTag CurieMaterialIdentifier; // 0xac(0x08)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// ScriptStruct FortniteGame.FortAIPawnStats
// Size: 0x110 (Inherited: 0xb8)
struct FFortAIPawnStats : FFortPawnStats {
	int32_t ScoreValue; // 0xb8(0x04)
	float DormantSightRadius; // 0xbc(0x04)
	float DormantHearingThreshold; // 0xc0(0x04)
	float DormantLOSHearingThreshold; // 0xc4(0x04)
	float DormantPeripheralVisionAngle; // 0xc8(0x04)
	float AlertSightRadius; // 0xcc(0x04)
	float AlertHearingThreshold; // 0xd0(0x04)
	float AlertLOSHearingThreshold; // 0xd4(0x04)
	float AlertPeripheralVisionAngle; // 0xd8(0x04)
	float AutoSuccessRangeFromLastSeenLocation; // 0xdc(0x04)
	struct UCurveTable* HealthScalingTable; // 0xe0(0x08)
	struct FName HealthScalingTableRow; // 0xe8(0x08)
	struct UCurveTable* ControlResistanceScalingTable; // 0xf0(0x08)
	struct FName ControlResistanceScalingTableRow; // 0xf8(0x08)
	struct UCurveTable* DifficultyRatingTable; // 0x100(0x08)
	struct FName DifficultyRatingTableRow; // 0x108(0x08)
};

// ScriptStruct FortniteGame.FortAIAppearanceOverrideEntry
// Size: 0x60 (Inherited: 0x00)
struct FFortAIAppearanceOverrideEntry {
	struct FName AppearanceName; // 0x00(0x08)
	bool bIsFemale; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct TSoftObjectPtr<struct USkeletalMesh> SkeletalMesh; // 0x10(0x28)
	struct TSoftObjectPtr<struct UFortFeedbackBank> FeedbackBank; // 0x38(0x28)
};

// ScriptStruct FortniteGame.MinimapGoalByTagColorsData
// Size: 0x30 (Inherited: 0x00)
struct FMinimapGoalByTagColorsData {
	struct FGameplayTagContainer GoalTags; // 0x00(0x20)
	struct FLinearColor MinimapColor; // 0x20(0x10)
};

// ScriptStruct FortniteGame.RunVariationData
// Size: 0x0c (Inherited: 0x00)
struct FRunVariationData {
	struct TWeakObjectPtr<struct AFortAIPawn> FortAIPawn; // 0x00(0x08)
	float Distance; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortAIPawnMaterialDefinition
// Size: 0x30 (Inherited: 0x00)
struct FFortAIPawnMaterialDefinition {
	struct TSoftObjectPtr<struct UMaterialInterface> Material; // 0x00(0x28)
	bool bRequireDynamicInstance; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// ScriptStruct FortniteGame.FortVariantSpawnPoints
// Size: 0x10 (Inherited: 0x08)
struct FFortVariantSpawnPoints : FTableRowBase {
	int32_t BudgetPoints; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortAIPawnVariantDefinition
// Size: 0x68 (Inherited: 0x00)
struct FFortAIPawnVariantDefinition {
	struct AFortAIPawn* PawnClass; // 0x00(0x08)
	struct FCurveTableRowHandle VariantWeightCurve; // 0x08(0x10)
	float CurrentWeight; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct FGameplayTagQuery RequiredTagsQuery; // 0x20(0x48)
};

// ScriptStruct FortniteGame.FortSpawnGroupEncounterTypeData
// Size: 0x40 (Inherited: 0x00)
struct FFortSpawnGroupEncounterTypeData {
	struct FGameplayTagContainer EncounterTypeTags; // 0x00(0x20)
	struct FCurveTableRowHandle MaxGroupCategoryPopulationDensityCurve; // 0x20(0x10)
	struct FCurveTableRowHandle RespawnDelayCurve; // 0x30(0x10)
};

// ScriptStruct FortniteGame.SpawnGroupEnemy
// Size: 0x10 (Inherited: 0x00)
struct FSpawnGroupEnemy {
	struct UFortAIPawnVariant* EnemyVariantClass; // 0x00(0x08)
	bool bOverrideVariantSpawnPointValue; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	int32_t SpawnValue; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortAIPawnUpgrade
// Size: 0x58 (Inherited: 0x00)
struct FFortAIPawnUpgrade {
	struct FGameplayTagQuery TagQuery; // 0x00(0x48)
	struct TArray<struct FFortAIPawnUpgradeData> PawnUpgradeDataPerPlayerCount; // 0x48(0x10)
};

// ScriptStruct FortniteGame.FortMoveConfig
// Size: 0x28 (Inherited: 0x00)
struct FFortMoveConfig {
	char pad_0[0x18]; // 0x00(0x18)
	struct AActor* FocusTarget; // 0x18(0x08)
	struct AFortPawn* PushPawnClassOnBump; // 0x20(0x08)
};

// ScriptStruct FortniteGame.AIScalableFloat
// Size: 0x38 (Inherited: 0x00)
struct FAIScalableFloat {
	struct FScalableFloat ScalableFloat; // 0x00(0x28)
	enum class EAIScalableFloatScalingType ScalingType; // 0x28(0x04)
	char pad_2C[0xc]; // 0x2c(0x0c)
};

// ScriptStruct FortniteGame.DistanceToTargetComparison
// Size: 0x30 (Inherited: 0x00)
struct FDistanceToTargetComparison {
	bool bUseOverriddenValue; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float OverriddenValue; // 0x04(0x04)
	struct FGameplayTagContainer DistanceDataTags; // 0x08(0x20)
	enum class EArithmeticKeyOperation Operator; // 0x28(0x01)
	enum class ETargetDistanceComparisonType ComparisonType; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
};

// ScriptStruct FortniteGame.AIHotSpotUseInfo
// Size: 0x18 (Inherited: 0x10)
struct FAIHotSpotUseInfo : FAIHotSpotSlotInfo {
	char pad_10[0x8]; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortNavLinkPattern
// Size: 0x08 (Inherited: 0x00)
struct FFortNavLinkPattern {
	int32_t PatternBits; // 0x00(0x04)
	int32_t WildcardBits; // 0x04(0x04)
};

// ScriptStruct FortniteGame.BuildingActorNavArea
// Size: 0x04 (Inherited: 0x00)
struct FBuildingActorNavArea {
	int32_t AreaBits; // 0x00(0x04)
};

// ScriptStruct FortniteGame.FortAIAssignmentIdentifier
// Size: 0x30 (Inherited: 0x00)
struct FFortAIAssignmentIdentifier {
	enum class EAssignmentType AssignmentType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FGameplayTagContainer AssignmentGameplayTags; // 0x08(0x20)
	enum class EFortTeam AssignmentTeam; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// ScriptStruct FortniteGame.AlterationOption
// Size: 0x38 (Inherited: 0x00)
struct FAlterationOption {
	struct TSoftObjectPtr<struct UFortAlterationItemDefinition> AlterationDef; // 0x00(0x28)
	struct TArray<struct FFortItemQuantityPair> Costs; // 0x28(0x10)
};

// ScriptStruct FortniteGame.AlterationSlotsLoadout
// Size: 0x18 (Inherited: 0x08)
struct FAlterationSlotsLoadout : FTableRowBase {
	struct TArray<struct FAlterationSlot> AlterationSlots; // 0x08(0x10)
};

// ScriptStruct FortniteGame.AlterationSlot
// Size: 0x24 (Inherited: 0x00)
struct FAlterationSlot {
	int32_t UnlockLevel; // 0x00(0x04)
	enum class EFortRarity UnlockRarity; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
	struct FName SlotDefinitionRow; // 0x08(0x08)
	bool bRespeccable; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
	struct FName SlotRarityInitRow; // 0x14(0x08)
	enum class EFortRarity SlotInitMin; // 0x1c(0x01)
	enum class EFortRarity SlotInitMax; // 0x1d(0x01)
	char pad_1E[0x2]; // 0x1e(0x02)
	int32_t SlotInitIndex; // 0x20(0x04)
};

// ScriptStruct FortniteGame.AlterationSlotRarity
// Size: 0x58 (Inherited: 0x08)
struct FAlterationSlotRarity : FTableRowBase {
	struct TMap<enum class EFortRarity, int32_t> RarityWeights; // 0x08(0x50)
};

// ScriptStruct FortniteGame.AlterationSlotDefinition
// Size: 0x20 (Inherited: 0x08)
struct FAlterationSlotDefinition : FTableRowBase {
	struct FName InitTierGroup; // 0x08(0x08)
	struct TArray<struct FFortItemQuantityPair> BaseRespecCosts; // 0x10(0x10)
};

// ScriptStruct FortniteGame.AlterationGroup
// Size: 0x58 (Inherited: 0x08)
struct FAlterationGroup : FTableRowBase {
	struct TMap<enum class EFortRarity, struct FAlterationWeightSet> RarityMapping; // 0x08(0x50)
};

// ScriptStruct FortniteGame.AlterationWeightSet
// Size: 0x10 (Inherited: 0x00)
struct FAlterationWeightSet {
	struct TArray<struct FAlterationWeightData> WeightData; // 0x00(0x10)
};

// ScriptStruct FortniteGame.AlterationWeightData
// Size: 0x28 (Inherited: 0x00)
struct FAlterationWeightData {
	struct FString AID; // 0x00(0x10)
	int32_t InitialRollWeight; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct TArray<struct FString> ExclusionNames; // 0x18(0x10)
};

// ScriptStruct FortniteGame.AlterationNamedExclusions
// Size: 0x18 (Inherited: 0x08)
struct FAlterationNamedExclusions : FTableRowBase {
	struct TArray<struct FString> ExclusionNames; // 0x08(0x10)
};

// ScriptStruct FortniteGame.AlterationIntrinsicMapping
// Size: 0x18 (Inherited: 0x08)
struct FAlterationIntrinsicMapping : FTableRowBase {
	struct FString NewAlteration; // 0x08(0x10)
};

// ScriptStruct FortniteGame.AlterationMapping
// Size: 0x28 (Inherited: 0x08)
struct FAlterationMapping : FTableRowBase {
	struct FString NewAlteration; // 0x08(0x10)
	struct FString AdditionalAlteration; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortConditionalCosmeticModification
// Size: 0x600 (Inherited: 0x00)
struct FFortConditionalCosmeticModification {
	struct FFortCosmeticModification CosmeticModification; // 0x00(0x5e0)
	struct FGameplayTagContainer ConditionalTags; // 0x5e0(0x20)
};

// ScriptStruct FortniteGame.FortCosmeticModification
// Size: 0x5e0 (Inherited: 0x00)
struct FFortCosmeticModification {
	struct TSoftObjectPtr<struct UMaterialInterface> CosmeticMaterial; // 0x00(0x28)
	struct TSoftObjectPtr<struct UParticleSystem> AmbientParticleSystem; // 0x28(0x28)
	struct TSoftObjectPtr<struct UParticleSystem> MuzzleParticleSystem; // 0x50(0x28)
	struct TSoftObjectPtr<struct UNiagaraSystem> MuzzleNiagaraSystem; // 0x78(0x28)
	struct TSoftObjectPtr<struct UParticleSystem> ReloadParticleSystem; // 0xa0(0x28)
	struct TSoftObjectPtr<struct UParticleSystem> BeamParticleSystem; // 0xc8(0x28)
	struct TSoftObjectPtr<struct UNiagaraSystem> BeamNiagaraSystem; // 0xf0(0x28)
	struct TSoftObjectPtr<struct UParticleSystem> ImpactPhysicalSurfaceEffects[0x1b]; // 0x118(0x438)
	struct TArray<struct TSoftObjectPtr<struct UNiagaraSystem>> ImpactNiagaraPhysicalSurfaceEffects; // 0x550(0x10)
	SoftClassProperty TracerTemplate; // 0x560(0x28)
	bool bModifyColor; // 0x588(0x01)
	char pad_589[0x3]; // 0x589(0x03)
	struct FLinearColor ColorAlteration; // 0x58c(0x10)
	struct FName ColorParameterName; // 0x59c(0x08)
	bool bModifyDecalColour; // 0x5a4(0x01)
	char pad_5A5[0x3]; // 0x5a5(0x03)
	struct FLinearColor DecalColourAlterationStart; // 0x5a8(0x10)
	struct FLinearColor DecalColourAlterationEnd; // 0x5b8(0x10)
	bool bModifyShellColour; // 0x5c8(0x01)
	char pad_5C9[0x3]; // 0x5c9(0x03)
	struct FLinearColor ShellColourAlteration; // 0x5cc(0x10)
	char pad_5DC[0x4]; // 0x5dc(0x04)
};

// ScriptStruct FortniteGame.FortAnalyticsClientEngagement
// Size: 0x2d8 (Inherited: 0x00)
struct FFortAnalyticsClientEngagement {
	char pad_0[0x2d8]; // 0x00(0x2d8)
};

// ScriptStruct FortniteGame.FortAnalyticsEventBlacklistEntry
// Size: 0x28 (Inherited: 0x00)
struct FFortAnalyticsEventBlacklistEntry {
	enum class EFortAnalyticsEventBlacklistPlaylistKey Type; // 0x00(0x04)
	struct FName PlaylistKey; // 0x04(0x08)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FString EventName; // 0x10(0x10)
	double Probability; // 0x20(0x08)
};

// ScriptStruct FortniteGame.CapMipsTextureGroup
// Size: 0x08 (Inherited: 0x00)
struct FCapMipsTextureGroup {
	enum class TextureGroup Group; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t MaxLODMipCount; // 0x04(0x04)
};

// ScriptStruct FortniteGame.AnimSpinner
// Size: 0x2c (Inherited: 0x00)
struct FAnimSpinner {
	struct FRotator Rotation; // 0x00(0x0c)
	struct FVector RotationAxis; // 0x0c(0x0c)
	float BaseRotationSpeed; // 0x18(0x04)
	float RotationRate; // 0x1c(0x04)
	float InterpolationRateSpeedUp; // 0x20(0x04)
	float InterpolationRateSlowDown; // 0x24(0x04)
	float RotationAngle; // 0x28(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_AdjustedAim
// Size: 0x240 (Inherited: 0x00)
struct FFortAnimInput_AdjustedAim {
	struct FFortAnimInput_AdjustedAimOffset WeaponOffsets[0x22]; // 0x00(0x220)
	float YawOffset; // 0x220(0x04)
	float PitchOffset; // 0x224(0x04)
	float YawScale; // 0x228(0x04)
	float PitchScale; // 0x22c(0x04)
	float ResultingYaw; // 0x230(0x04)
	float ResultingPitch; // 0x234(0x04)
	struct FName ZeroOutPitchWeightCurveName; // 0x238(0x08)
};

// ScriptStruct FortniteGame.FortAnimInput_AdjustedAimOffset
// Size: 0x10 (Inherited: 0x00)
struct FFortAnimInput_AdjustedAimOffset {
	float YawOffset; // 0x00(0x04)
	float PitchOffset; // 0x04(0x04)
	float TargetingYawOffset; // 0x08(0x04)
	float TargetingPitchOffset; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_AimScrambleDataHelper
// Size: 0x0c (Inherited: 0x00)
struct FFortAnimInput_AimScrambleDataHelper {
	float AimPitch; // 0x00(0x04)
	float AimYaw; // 0x04(0x04)
	char bIsAimDataScambled : 1; // 0x08(0x01)
	char pad_8_1 : 7; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.FortAnimInput_DBNOCarried
// Size: 0xc8 (Inherited: 0x00)
struct FFortAnimInput_DBNOCarried {
	struct FCachedAnimStateData DropStateData; // 0x00(0x1c)
	struct FFloatSpringState CarrierYawSpringState; // 0x1c(0x08)
	struct FFloatSpringState CarrierSpinePitchSpringState; // 0x24(0x08)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct UAnimMontage* CarrierDropMontage; // 0x30(0x08)
	struct UAnimMontage* CarrierPickupMontage; // 0x38(0x08)
	struct AFortPlayerPawn* CarrierPawn; // 0x40(0x08)
	struct UFortPlayerAnimInstance* CarrierAnimBP; // 0x48(0x08)
	struct UAnimMontage* CarrierInterrogationMontage; // 0x50(0x08)
	struct FVector LHandIKLocation; // 0x58(0x0c)
	struct FRotator LHandIKRotation; // 0x64(0x0c)
	struct FVector TempAttachLocation; // 0x70(0x0c)
	struct FRotator TempAttachRotation; // 0x7c(0x0c)
	float SubAnimPhysicsWeight; // 0x88(0x04)
	float DropMontagePosition; // 0x8c(0x04)
	float PickupMontagePosition; // 0x90(0x04)
	float InterrogationMontagePosition; // 0x94(0x04)
	float PickupToIdleTransitionPosition; // 0x98(0x04)
	float CarrierPawnVelocityZ; // 0x9c(0x04)
	float CarrierYawDeltaSmoothed; // 0xa0(0x04)
	float CarriedJogNAnimPosition; // 0xa4(0x04)
	float CarriedJogSAnimPosition; // 0xa8(0x04)
	float CarriedCrouchNAnimPosition; // 0xac(0x04)
	float CarriedCrouchSAnimPosition; // 0xb0(0x04)
	float CarriedSprintAnimPosition; // 0xb4(0x04)
	float CarriedCrouchSprintAnimPosition; // 0xb8(0x04)
	float CarrierSpinePitch; // 0xbc(0x04)
	float DropStateWeight; // 0xc0(0x04)
	char bBeingCarried : 1; // 0xc4(0x01)
	char bIsBeingPickedUp : 1; // 0xc4(0x01)
	char bIsBeingDropped : 1; // 0xc4(0x01)
	char bCarrierIsCrouching : 1; // 0xc4(0x01)
	char bCarrierIsMovingBackward : 1; // 0xc4(0x01)
	char bCarrierHasSyncMarkers : 1; // 0xc4(0x01)
	char bTransitionFromPickupToIdle : 1; // 0xc4(0x01)
	char bTransitionFromIdleToJogging : 1; // 0xc4(0x01)
	char bTransitionFromJoggingToSprinting : 1; // 0xc5(0x01)
	char bTransitionFromInAirToLanding : 1; // 0xc5(0x01)
	char bJackalPlayJumpTrickVertical : 1; // 0xc5(0x01)
	char pad_C5_3 : 5; // 0xc5(0x01)
	char pad_C6[0x2]; // 0xc6(0x02)
};

// ScriptStruct FortniteGame.FortAnimInput_PatrolAnimSet
// Size: 0x40 (Inherited: 0x00)
struct FFortAnimInput_PatrolAnimSet {
	struct UAnimSequence* PatrolIdlePose; // 0x00(0x08)
	struct UAnimSequence* PatrolIdleAdditive; // 0x08(0x08)
	struct UAnimMontage* AdditiveHitReactMontage; // 0x10(0x08)
	struct UAnimMontage* FullBodyHitReactMontage; // 0x18(0x08)
	struct UAnimMontage* PatrolToAlertMontage; // 0x20(0x08)
	struct UAnimMontage* AlertToCombatMontage; // 0x28(0x08)
	struct UBlendSpaceBase* WalkBlendSpaceCore; // 0x30(0x08)
	struct UBlendSpaceBase* WalkBlendSpaceAdditive; // 0x38(0x08)
};

// ScriptStruct FortniteGame.FortAnimInput_StandingPawnAnimAsset
// Size: 0x28 (Inherited: 0x00)
struct FFortAnimInput_StandingPawnAnimAsset {
	char pad_0[0x8]; // 0x00(0x08)
	struct UAnimSequence* UpperBodyAdditivePoseOffset; // 0x08(0x08)
	struct UAnimSequence* IdleNoise; // 0x10(0x08)
	struct UAnimSequence* TargetingPose; // 0x18(0x08)
	struct UAnimSequence* NonTargetingPose; // 0x20(0x08)
};

// ScriptStruct FortniteGame.FortAnimInput_PlayerAnimAsset
// Size: 0x2c0 (Inherited: 0x28)
struct FFortAnimInput_PlayerAnimAsset : FFortAnimInput_StandingPawnAnimAsset {
	bool bPlayUpperBodySlotOnFullBodyInAir; // 0x28(0x01)
	bool bDisableFullBodyAimOffsetDuringMelee; // 0x29(0x01)
	bool bShouldApplyAimOffsetFullBody; // 0x2a(0x01)
	char pad_2B[0x1]; // 0x2b(0x01)
	float FullBodyAimOffsetAlpha; // 0x2c(0x04)
	float UpperBodyAimOffsetAlpha; // 0x30(0x04)
	bool bOverrideDisableArmsHeadAdditive; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	float DisableArmsHeadAdditiveOverride; // 0x38(0x04)
	struct FFortAnimPlayrateRange SprintPlayrateClampRange; // 0x3c(0x08)
	struct FFortAnimPlayrateRange SprintTargetingPlayrateClampRange; // 0x44(0x08)
	struct FFortAnimPlayrateRange CrouchSprintPlayrateClampRange; // 0x4c(0x08)
	struct FFortAnimPlayrateRange CrouchSprintTargetingPlayrateClampRange; // 0x54(0x08)
	char pad_5C[0x4]; // 0x5c(0x04)
	struct UAimOffsetBlendSpace* TargetingAimOffset; // 0x60(0x08)
	struct UAimOffsetBlendSpace* NonTargetingAimOffset; // 0x68(0x08)
	struct UAnimSequence* RelaxedPose; // 0x70(0x08)
	struct UAnimSequence* RelaxedPoseLevel2; // 0x78(0x08)
	struct UAimOffsetBlendSpace* RelaxedAimOffset; // 0x80(0x08)
	struct UBlendSpaceBase* JogAdditiveBlendSpace; // 0x88(0x08)
	struct UBlendSpaceBase* JogAdditiveBlendSpaceRelaxed; // 0x90(0x08)
	struct UBlendSpaceBase* JogAdditiveBlendSpaceRelaxedLevel2; // 0x98(0x08)
	struct UBlendSpaceBase* JogAdditiveBlendSpaceMeleeGuarding; // 0xa0(0x08)
	struct UAnimSequence* JogAdditive_N; // 0xa8(0x08)
	struct UAnimSequence* JogAdditive_E; // 0xb0(0x08)
	struct UAnimSequence* JogAdditive_S; // 0xb8(0x08)
	struct UAnimSequence* JogAdditive_W; // 0xc0(0x08)
	struct UAnimSequence* JogAdditiveRelaxed_N; // 0xc8(0x08)
	struct UAnimSequence* JogAdditiveRelaxed_E; // 0xd0(0x08)
	struct UAnimSequence* JogAdditiveRelaxed_S; // 0xd8(0x08)
	struct UAnimSequence* JogAdditiveRelaxed_W; // 0xe0(0x08)
	struct UAnimSequence* JogAdditiveRelaxedLevel2_N; // 0xe8(0x08)
	struct UAnimSequence* JogAdditiveRelaxedLevel2_E; // 0xf0(0x08)
	struct UAnimSequence* JogAdditiveRelaxedLevel2_S; // 0xf8(0x08)
	struct UAnimSequence* JogAdditiveRelaxedLevel2_W; // 0x100(0x08)
	struct UAnimSequence* SprintAnimation; // 0x108(0x08)
	struct UAnimSequence* SprintTargetingAnimation; // 0x110(0x08)
	struct UAnimSequence* CrouchTargetingPose; // 0x118(0x08)
	struct UAnimSequence* CrouchNonTargetingPose; // 0x120(0x08)
	struct UAnimSequence* CrouchRelaxedPose; // 0x128(0x08)
	struct UBlendSpaceBase* CrouchCoreTargetingBlendSpace; // 0x130(0x08)
	struct UBlendSpaceBase* CrouchCoreNonTargetingBlendSpace; // 0x138(0x08)
	struct UBlendSpaceBase* CrouchWalkAdditiveBlendSpace; // 0x140(0x08)
	struct UBlendSpaceBase* CrouchJogAdditiveBlendSpace; // 0x148(0x08)
	struct UBlendSpaceBase* CrouchJogAdditiveBlendSpaceRelaxed; // 0x150(0x08)
	struct UAnimSequence* CrouchWalkAdditive_N; // 0x158(0x08)
	struct UAnimSequence* CrouchWalkAdditive_E; // 0x160(0x08)
	struct UAnimSequence* CrouchWalkAdditive_S; // 0x168(0x08)
	struct UAnimSequence* CrouchWalkAdditive_W; // 0x170(0x08)
	struct UAnimSequence* CrouchJogAdditive_N; // 0x178(0x08)
	struct UAnimSequence* CrouchJogAdditive_E; // 0x180(0x08)
	struct UAnimSequence* CrouchJogAdditive_S; // 0x188(0x08)
	struct UAnimSequence* CrouchJogAdditive_W; // 0x190(0x08)
	struct UAnimSequence* CrouchJogAdditiveRelaxed_N; // 0x198(0x08)
	struct UAnimSequence* CrouchJogAdditiveRelaxed_E; // 0x1a0(0x08)
	struct UAnimSequence* CrouchJogAdditiveRelaxed_S; // 0x1a8(0x08)
	struct UAnimSequence* CrouchJogAdditiveRelaxed_W; // 0x1b0(0x08)
	struct UAnimSequence* CrouchSprintAnimation; // 0x1b8(0x08)
	struct UAnimSequence* CrouchSprintTargetingAnimation; // 0x1c0(0x08)
	struct UAnimSequence* SwimRelaxedPose; // 0x1c8(0x08)
	struct UAnimSequence* SwimTargetingPose; // 0x1d0(0x08)
	struct UAnimSequence* SwimNonTargetingPose; // 0x1d8(0x08)
	struct UBlendSpaceBase* SwimJogAdditiveBlendSpace; // 0x1e0(0x08)
	struct UBlendSpaceBase* SwimJogAdditiveBlendSpaceRelaxed; // 0x1e8(0x08)
	struct UAnimSequence* SwimSprintAnimation; // 0x1f0(0x08)
	struct UAimOffsetBlendSpace* SwimTargetingAimOffset; // 0x1f8(0x08)
	struct UAnimSequence* SwimIdleNoise; // 0x200(0x08)
	struct UAnimSequence* IdleNoise_AR_DownSights; // 0x208(0x08)
	struct UAnimSequence* SwimJumpSurfaceEndAdditve; // 0x210(0x08)
	struct UAnimSequence* SwimJumpSurfaceLoopAdditve; // 0x218(0x08)
	struct UAnimSequence* SwimJumpFallLoopAdditve; // 0x220(0x08)
	struct UAnimSequence* SwimJumpStartLoopAdditve; // 0x228(0x08)
	struct UAnimSequence* SwimJumpStartAdditve; // 0x230(0x08)
	struct UAnimSequence* FlyModeLoopAdditive; // 0x238(0x08)
	struct UAnimSequence* FlyModeStartAdditive; // 0x240(0x08)
	struct UAnimSequence* ZipLineStartAdditve; // 0x248(0x08)
	struct UAnimSequence* JetPackJumpAdditve; // 0x250(0x08)
	struct UAnimSequence* JetPackStartAdditve; // 0x258(0x08)
	struct UAnimSequence* FallAdditive; // 0x260(0x08)
	struct UAnimSequence* JumpLoopAdditive; // 0x268(0x08)
	struct UAnimSequence* JumpUpAdditive; // 0x270(0x08)
	struct UAnimSequence* WeaponChargeLoop; // 0x278(0x08)
	struct UAnimSequence* SwimUpperBodyAdditivePoseOffset; // 0x280(0x08)
	struct UAnimSequence* WeaponInspectAnimation; // 0x288(0x08)
	bool bOverridePitchAndYawOffsets; // 0x290(0x01)
	char pad_291[0x3]; // 0x291(0x03)
	struct FFortAnimInput_AdjustedAimOffset AnimSetOffsets; // 0x294(0x10)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct TArray<struct FName> BonesToHide; // 0x2a8(0x10)
	bool bOverrideHandIKRetargetingWeight; // 0x2b8(0x01)
	char pad_2B9[0x3]; // 0x2b9(0x03)
	float HandIKRetargetingWeight; // 0x2bc(0x04)
};

// ScriptStruct FortniteGame.FortAnimPlayrateRange
// Size: 0x08 (Inherited: 0x00)
struct FFortAnimPlayrateRange {
	float MinPlayrate; // 0x00(0x04)
	float MaxPlayrate; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_PlayerGliderAnimAsset
// Size: 0x240 (Inherited: 0x00)
struct FFortAnimInput_PlayerGliderAnimAsset {
	struct UBlendSpaceBase* Default_Base_BS; // 0x00(0x08)
	struct UBlendSpaceBase* Default_BodyAdditive_MaleMedium_BS; // 0x08(0x08)
	struct UBlendSpaceBase* Default_BodyAdditive_MaleLarge_BS; // 0x10(0x08)
	struct UBlendSpaceBase* Default_BodyAdditive_FemaleSmall_BS; // 0x18(0x08)
	struct UBlendSpaceBase* Default_BodyAdditive_FemaleMedium_BS; // 0x20(0x08)
	struct UBlendSpaceBase* Default_BodyAdditive_FemaleLarge_BS; // 0x28(0x08)
	struct UBlendSpaceBase* Default_TurnAdditive_MaleMedium_BS; // 0x30(0x08)
	struct UBlendSpaceBase* Default_TurnAdditive_MaleLarge_BS; // 0x38(0x08)
	struct UBlendSpaceBase* Default_TurnAdditive_FemaleSmall_BS; // 0x40(0x08)
	struct UBlendSpaceBase* Default_TurnAdditive_FemaleMedium_BS; // 0x48(0x08)
	struct UBlendSpaceBase* Default_TurnAdditive_FemaleLarge_BS; // 0x50(0x08)
	struct UBlendSpaceBase* Into_Base_BS; // 0x58(0x08)
	struct UBlendSpaceBase* Into_BodyAdditive_MaleMedium_BS; // 0x60(0x08)
	struct UBlendSpaceBase* Into_BodyAdditive_MaleLarge_BS; // 0x68(0x08)
	struct UBlendSpaceBase* Into_BodyAdditive_FemaleSmall_BS; // 0x70(0x08)
	struct UBlendSpaceBase* Into_BodyAdditive_FemaleMedium_BS; // 0x78(0x08)
	struct UBlendSpaceBase* Into_BodyAdditive_FemaleLarge_BS; // 0x80(0x08)
	struct UBlendSpaceBase* Into_TurnAdditive_MaleMedium_BS; // 0x88(0x08)
	struct UBlendSpaceBase* Into_TurnAdditive_MaleLarge_BS; // 0x90(0x08)
	struct UBlendSpaceBase* Into_TurnAdditive_FemaleSmall_BS; // 0x98(0x08)
	struct UBlendSpaceBase* Into_TurnAdditive_FemaleMedium_BS; // 0xa0(0x08)
	struct UBlendSpaceBase* Into_TurnAdditive_FemaleLarge_BS; // 0xa8(0x08)
	struct UBlendSpaceBase* Lean_MaleMedium_BS; // 0xb0(0x08)
	struct UBlendSpaceBase* Lean_MaleLarge_BS; // 0xb8(0x08)
	struct UBlendSpaceBase* Lean_FemaleSmall_BS; // 0xc0(0x08)
	struct UBlendSpaceBase* Lean_FemaleMedium_BS; // 0xc8(0x08)
	struct UBlendSpaceBase* Lean_FemaleLarge_BS; // 0xd0(0x08)
	struct UAnimSequence* LeanAdditive_Center_MaleMedium_Pose; // 0xd8(0x08)
	struct UAnimSequence* LeanAdditive_Center_MaleLarge_Pose; // 0xe0(0x08)
	struct UAnimSequence* LeanAdditive_Center_FemaleSmall_Pose; // 0xe8(0x08)
	struct UAnimSequence* LeanAdditive_Center_FemaleMedium_Pose; // 0xf0(0x08)
	struct UAnimSequence* LeanAdditive_Center_FemaleLarge_Pose; // 0xf8(0x08)
	struct UBlendSpaceBase* LeanAdditive_Into_BS; // 0x100(0x08)
	struct UAnimSequence* LeanAdditive_ForwardInto_Anim; // 0x108(0x08)
	struct UAnimSequence* LeanAdditive_ForwardInto_FromDeploy_Anim; // 0x110(0x08)
	struct UAnimSequence* LeanAdditive_BackInto_Anim; // 0x118(0x08)
	struct UAnimSequence* LeanAdditive_LeftInto_Anim; // 0x120(0x08)
	struct UAnimSequence* LeanAdditive_RightInto_Anim; // 0x128(0x08)
	struct UAnimSequence* LeanAdditive_ForwardOut_Anim; // 0x130(0x08)
	struct UAnimSequence* LeanAdditive_BackOut_Anim; // 0x138(0x08)
	struct UAnimSequence* LeanAdditive_LeftOut_Anim; // 0x140(0x08)
	struct UAnimSequence* LeanAdditive_RightOut_Anim; // 0x148(0x08)
	struct UBlendSpaceBase* ToGlide_BS; // 0x150(0x08)
	struct UBlendSpaceBase* ToGlide_Lean_BS; // 0x158(0x08)
	struct UBlendSpaceBase* ToDive_BS; // 0x160(0x08)
	struct UBlendSpaceBase* ToDive_Lean_BS; // 0x168(0x08)
	struct UBlendSpaceBase* Dive_WeaponR_Additive_BS; // 0x170(0x08)
	struct UAnimSequence* Glide_WeaponR_Additive_Anim; // 0x178(0x08)
	struct UBlendSpaceBase* GenericAdditive_Male_BS; // 0x180(0x08)
	struct UBlendSpaceBase* GenericAdditive_Female_BS; // 0x188(0x08)
	float RootModPitchMin; // 0x190(0x04)
	float RootModPitchMax; // 0x194(0x04)
	float RootModYOffsetMin; // 0x198(0x04)
	float RootModYOffsetMax; // 0x19c(0x04)
	struct FPelvisMod_VerticalInput_Spring PelvisModVertical; // 0x1a0(0x14)
	struct FPelvisMod_LateralInput_Spring PelvisModLateral; // 0x1b4(0x1c)
	struct FPelvisMod_BankAngleInput_Spring PelvisModBankAngle; // 0x1d0(0x24)
	struct FThighMod_LegAngleInput ThighModLegAngle; // 0x1f4(0x18)
	struct FThighMod_LegPitchSpring ThighModLegPitch; // 0x20c(0x14)
	struct FThighMod_LegBankSpring ThighModLegBank; // 0x220(0x14)
	struct FThighMod_LeftLegDrag ThighModLeftLegDrag; // 0x234(0x08)
	enum class EGliderType PlayerGliderType; // 0x23c(0x01)
	bool bEnableSpringMods; // 0x23d(0x01)
	bool bAllowPlayerDeployRootMod; // 0x23e(0x01)
	bool bUseSurfStyle; // 0x23f(0x01)
};

// ScriptStruct FortniteGame.ThighMod_LeftLegDrag
// Size: 0x08 (Inherited: 0x00)
struct FThighMod_LeftLegDrag {
	float LeftLegBankSpeed; // 0x00(0x04)
	float LeftLegPitchSpeed; // 0x04(0x04)
};

// ScriptStruct FortniteGame.ThighMod_LegBankSpring
// Size: 0x14 (Inherited: 0x00)
struct FThighMod_LegBankSpring {
	float LegBankStiffness; // 0x00(0x04)
	float LegBankDampening; // 0x04(0x04)
	float LegBankMass; // 0x08(0x04)
	float LegBankClampMin; // 0x0c(0x04)
	float LegBankClampMax; // 0x10(0x04)
};

// ScriptStruct FortniteGame.ThighMod_LegPitchSpring
// Size: 0x14 (Inherited: 0x00)
struct FThighMod_LegPitchSpring {
	float LegPitchStiffness; // 0x00(0x04)
	float LegPitchDampening; // 0x04(0x04)
	float LegPitchMass; // 0x08(0x04)
	float LegPitchClampMin; // 0x0c(0x04)
	float LegPitchClampMax; // 0x10(0x04)
};

// ScriptStruct FortniteGame.ThighMod_LegAngleInput
// Size: 0x18 (Inherited: 0x00)
struct FThighMod_LegAngleInput {
	float LegBankPitchForwardA; // 0x00(0x04)
	float LegBankPitchForwardB; // 0x04(0x04)
	float LegBankPitchLeanStrafeA; // 0x08(0x04)
	float LegBankPitchLeanStrafeB; // 0x0c(0x04)
	float LegBankPitchTurnA; // 0x10(0x04)
	float LegBankPitchTurnB; // 0x14(0x04)
};

// ScriptStruct FortniteGame.PelvisMod_BankAngleInput_Spring
// Size: 0x24 (Inherited: 0x00)
struct FPelvisMod_BankAngleInput_Spring {
	float BankLeanStrafeA; // 0x00(0x04)
	float BankLeanStrafeB; // 0x04(0x04)
	float BankTurnA; // 0x08(0x04)
	float BankTurnB; // 0x0c(0x04)
	float BankStiffness; // 0x10(0x04)
	float BankDampening; // 0x14(0x04)
	float BankMass; // 0x18(0x04)
	float BankClampMin; // 0x1c(0x04)
	float BankClampMax; // 0x20(0x04)
};

// ScriptStruct FortniteGame.PelvisMod_LateralInput_Spring
// Size: 0x1c (Inherited: 0x00)
struct FPelvisMod_LateralInput_Spring {
	float LateralLeanStrafeA; // 0x00(0x04)
	float LateralLeanStrafeB; // 0x04(0x04)
	float LateralTurnA; // 0x08(0x04)
	float LateralTurnB; // 0x0c(0x04)
	float LateralStiffness; // 0x10(0x04)
	float LateralDamping; // 0x14(0x04)
	float LateralMass; // 0x18(0x04)
};

// ScriptStruct FortniteGame.PelvisMod_VerticalInput_Spring
// Size: 0x14 (Inherited: 0x00)
struct FPelvisMod_VerticalInput_Spring {
	float VerticalLeanForwardA; // 0x00(0x04)
	float VerticalLeanForwardB; // 0x04(0x04)
	float VerticalLeanForwardStiffness; // 0x08(0x04)
	float VerticalLeanForwardDamping; // 0x0c(0x04)
	float VerticalLeanForwardMass; // 0x10(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_RandomizeMontageSection
// Size: 0x18 (Inherited: 0x00)
struct FFortAnimInput_RandomizeMontageSection {
	struct UAnimSequenceBase* CurrentAnimation; // 0x00(0x08)
	struct FName MontageSectionName; // 0x08(0x08)
	float TimeUntilNextSectionChange; // 0x10(0x04)
	int32_t CurrentSectionParamIndex; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_SlopeInfo
// Size: 0x30 (Inherited: 0x00)
struct FFortAnimInput_SlopeInfo {
	struct FVector RootSlopeTranslation; // 0x00(0x0c)
	struct FVector LeftFootSlopeTranslation; // 0x0c(0x0c)
	struct FVector RightFootSlopeTranslation; // 0x18(0x0c)
	struct FRotator SlopeRotation; // 0x24(0x0c)
};

// ScriptStruct FortniteGame.FortAnimInput_SpringGlider
// Size: 0x74 (Inherited: 0x00)
struct FFortAnimInput_SpringGlider {
	struct FFloatSpringState GliderXRotationRightSpringLeg; // 0x00(0x08)
	struct FFloatSpringState GliderYRotationRightSpringLeg; // 0x08(0x08)
	struct FFloatSpringState GliderZLocationSpring; // 0x10(0x08)
	struct FFloatSpringState GliderXLocationSpring; // 0x18(0x08)
	struct FFloatSpringState GliderYLocationSpring; // 0x20(0x08)
	struct FRotator GliderOffsetRotator; // 0x28(0x0c)
	struct FRotator GliderOffsetRotationRightLeg; // 0x34(0x0c)
	struct FRotator GliderOffsetRotationLeftLeg; // 0x40(0x0c)
	struct FVector GliderOffsetLocation; // 0x4c(0x0c)
	float GliderYOffsetRotationRightLeg; // 0x58(0x04)
	float GliderYOffsetRotationLeftLeg; // 0x5c(0x04)
	float GliderXOffsetRotationRightLeg; // 0x60(0x04)
	float GliderXOffsetRotationLeftLeg; // 0x64(0x04)
	float GliderZOffset; // 0x68(0x04)
	float GliderXOffset; // 0x6c(0x04)
	float GliderYOffset; // 0x70(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_STWHoverBoard
// Size: 0x60 (Inherited: 0x00)
struct FFortAnimInput_STWHoverBoard {
	struct UCurveFloat* HoverCycleVelocityCurve; // 0x00(0x08)
	struct UCurveFloat* HoverHeightCurve; // 0x08(0x08)
	struct UCurveFloat* HoverLeanCurve; // 0x10(0x08)
	struct UCurveFloat* HoverPitchCurve; // 0x18(0x08)
	struct FRotator HoverTransformRotation; // 0x20(0x0c)
	struct FVector HoverTransformTranslation; // 0x2c(0x0c)
	float HoverTransformAlpha; // 0x38(0x04)
	float HoverCycle; // 0x3c(0x04)
	float HoverHeight; // 0x40(0x04)
	float HoverLeanAngle; // 0x44(0x04)
	float HoverPitchAngle; // 0x48(0x04)
	float HoverYaw; // 0x4c(0x04)
	float HoverYawCurrent; // 0x50(0x04)
	float HoverIdleLeanAlpha; // 0x54(0x04)
	bool bIsUsingHoverboard; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
};

// ScriptStruct FortniteGame.FortAnimInput_TransitionProperties
// Size: 0x01 (Inherited: 0x00)
struct FFortAnimInput_TransitionProperties {
	char bTransition_DoubleJump_Fast : 1; // 0x00(0x01)
	char bTransition_DoubleJump : 1; // 0x00(0x01)
	char pad_0_2 : 6; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortAnimInput_VehicleDriverAnimAsset
// Size: 0xb0 (Inherited: 0x00)
struct FFortAnimInput_VehicleDriverAnimAsset {
	struct UAnimSequence* DriveNPose; // 0x00(0x08)
	struct UAnimSequence* DriveEPose; // 0x08(0x08)
	struct UAnimSequence* DriveWPose; // 0x10(0x08)
	struct UAnimSequence* DriveNAdditivePose; // 0x18(0x08)
	struct UAnimSequence* DriveFastAdditivePose; // 0x20(0x08)
	struct UAnimSequence* OverrideDriverPose; // 0x28(0x08)
	struct UAnimSequence* DriveIdle; // 0x30(0x08)
	struct UAnimSequence* DriveIdleFastAdditive; // 0x38(0x08)
	struct UAimOffsetBlendSpace* DriverHeadAimOffset; // 0x40(0x08)
	struct UAnimSequence* DriveNStart; // 0x48(0x08)
	struct UAnimSequence* Braking; // 0x50(0x08)
	struct UAnimSequence* BoostStart; // 0x58(0x08)
	struct UAnimSequence* BoostLoop; // 0x60(0x08)
	struct UAnimSequence* ReverseStart; // 0x68(0x08)
	struct UAnimSequence* ReverseLoop; // 0x70(0x08)
	struct UAnimSequence* ReverseEnd; // 0x78(0x08)
	struct UAnimSequence* ReturnToIdleTransition; // 0x80(0x08)
	struct UAnimSequence* PoseCorrectionAdditive; // 0x88(0x08)
	struct UAnimSequence* CollisionN; // 0x90(0x08)
	struct UAnimSequence* CollisionS; // 0x98(0x08)
	struct UAnimSequence* CollisionE; // 0xa0(0x08)
	struct UAnimSequence* CollisionW; // 0xa8(0x08)
};

// ScriptStruct FortniteGame.FortAnimInput_WeaponAdditiveAnimAsset
// Size: 0x30 (Inherited: 0x00)
struct FFortAnimInput_WeaponAdditiveAnimAsset {
	char pad_0[0x8]; // 0x00(0x08)
	struct UAnimSequence* TargetingAdditivePoseOffset; // 0x08(0x08)
	struct UAnimSequence* NonTargetedAdditivePoseOffset; // 0x10(0x08)
	struct UAnimSequence* RelaxedAdditivePoseOffset; // 0x18(0x08)
	struct UAnimSequence* RelaxedWhileSprintingAdditiveAnim; // 0x20(0x08)
	struct UAnimSequence* RelaxedWhileCrouchSprintingAdditiveAnim; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortAnimInput_SocketBasedIKTarget
// Size: 0x2c (Inherited: 0x00)
struct FFortAnimInput_SocketBasedIKTarget {
	struct FName SocketName; // 0x00(0x08)
	struct FName AlphaCurveName; // 0x08(0x08)
	struct FRotator TargetRotation; // 0x10(0x0c)
	struct FVector TargetLocation; // 0x1c(0x0c)
	float Alpha; // 0x28(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_PelvisAdjustment
// Size: 0x40 (Inherited: 0x00)
struct FFortAnimInput_PelvisAdjustment {
	struct USkeletalMeshComponent* PawnMesh; // 0x00(0x08)
	float DistanceToFeet; // 0x08(0x04)
	float LegLength; // 0x0c(0x04)
	float DesiredLegLengthTreshold; // 0x10(0x04)
	float DotProductBetweenUpVectorsTreshold; // 0x14(0x04)
	float PelvisInterpSpeed; // 0x18(0x04)
	float EmotePelvisOffsetInterpSpeed; // 0x1c(0x04)
	float EmotePelvisOffsetAlpha; // 0x20(0x04)
	struct FVector CurrentEmotePelvisOffset; // 0x24(0x0c)
	int32_t PelvisBoneIndex; // 0x30(0x04)
	int32_t FootLeftBoneIndex; // 0x34(0x04)
	int32_t FootRightBoneIndex; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_HandIK
// Size: 0x1c (Inherited: 0x00)
struct FFortAnimInput_HandIK {
	float IKAlphaOverrideInterpSpeed; // 0x00(0x04)
	float IKSpaceSwitchOverrideInterpSpeed; // 0x04(0x04)
	float HandIKRetargetingWeight; // 0x08(0x04)
	float HandsInRootSpaceAlpha; // 0x0c(0x04)
	float LeftHandIKAlpha; // 0x10(0x04)
	float RightHandIKAlpha; // 0x14(0x04)
	enum class EFortHandIKOverrideType LeftHandIKOverrideType; // 0x18(0x01)
	enum class EFortHandIKOverrideType RightHandIKOverrideType; // 0x19(0x01)
	char pad_1A[0x2]; // 0x1a(0x02)
};

// ScriptStruct FortniteGame.FortAnimInput_SkydivingExternalForce
// Size: 0x84 (Inherited: 0x00)
struct FFortAnimInput_SkydivingExternalForce {
	bool bUseSkydivingVectorForce; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FVector SkydivingVectorForce; // 0x04(0x0c)
	struct FVector HeadToPelvisDirection; // 0x10(0x0c)
	struct FVector FloatingMultiplier; // 0x1c(0x0c)
	struct FVector FloatingAdditive; // 0x28(0x0c)
	struct FVector DivingMultiplier; // 0x34(0x0c)
	struct FVector DivingAdditive; // 0x40(0x0c)
	struct FVector ParachutingMultiplier; // 0x4c(0x0c)
	struct FVector ParachutingAdditive; // 0x58(0x0c)
	bool bUseNoisyClothGravity; // 0x64(0x01)
	bool bApplyNoiseInActorSpace; // 0x65(0x01)
	char pad_66[0x2]; // 0x66(0x02)
	float PerlinRangedOutMinX; // 0x68(0x04)
	float PerlinRangedOutMaxX; // 0x6c(0x04)
	float PerlinRangedOutMinY; // 0x70(0x04)
	float PerlinRangedOutMaxY; // 0x74(0x04)
	float PerlinRangedOutMinZ; // 0x78(0x04)
	float PerlinRangedOutMaxZ; // 0x7c(0x04)
	char pad_80[0x4]; // 0x80(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_Skydiving
// Size: 0x60 (Inherited: 0x00)
struct FFortAnimInput_Skydiving {
	struct FVector ParaGilderRootOffset; // 0x00(0x0c)
	struct FRotator ParaGliderRootRotationOverride; // 0x0c(0x0c)
	char bUseParaGlideRootModifier : 1; // 0x18(0x01)
	char bIsSkydivingFromLaunchPad : 1; // 0x18(0x01)
	char bIsSkydivingFromBus : 1; // 0x18(0x01)
	char bIsInVortex : 1; // 0x18(0x01)
	char bIsUsingUmbrella : 1; // 0x18(0x01)
	char bIsActivelyStrafingInAir : 1; // 0x18(0x01)
	char bIsDiving : 1; // 0x18(0x01)
	char bIsDivingUpInVortex : 1; // 0x18(0x01)
	char bIsParachuteOpen : 1; // 0x19(0x01)
	char bIsSkydiving : 1; // 0x19(0x01)
	char bIsParachuteLeaning : 1; // 0x19(0x01)
	char bIsSkydiveLeaning : 1; // 0x19(0x01)
	char bIsLeaning : 1; // 0x19(0x01)
	char bIsSkydiveDiveMode : 1; // 0x19(0x01)
	char bParachuteLeanTransition : 1; // 0x19(0x01)
	char bPlayedParachuteLeanTransition : 1; // 0x19(0x01)
	char bPlaySkydiveDrift : 1; // 0x1a(0x01)
	char bSkydiveDriftDelayActive : 1; // 0x1a(0x01)
	char bSkydiveDriftAnimAllowed : 1; // 0x1a(0x01)
	char bIsGliderRight : 1; // 0x1a(0x01)
	char bIsGliderCenter : 1; // 0x1a(0x01)
	char bIsGliderLeft : 1; // 0x1a(0x01)
	char bIsGliderForward : 1; // 0x1a(0x01)
	char bIsGliderBack : 1; // 0x1a(0x01)
	char pad_1B[0x1]; // 0x1b(0x01)
	float LocalAccelForward; // 0x1c(0x04)
	float LocalAccelRight; // 0x20(0x04)
	float LocalVelocityRight; // 0x24(0x04)
	float SkydiveAimPitch; // 0x28(0x04)
	float SkydiveAimPitchInterpSpeed; // 0x2c(0x04)
	float SkydiveAimYaw; // 0x30(0x04)
	float DeployChuteAnimRate; // 0x34(0x04)
	float SkydiveDriftAnimRate; // 0x38(0x04)
	float SkydiveDriftAnimRateCurrent; // 0x3c(0x04)
	float SkydiveFidgetAnimRate; // 0x40(0x04)
	float SkydiveFidgetAnimRateCurrent; // 0x44(0x04)
	float SkydiveAdditiveAlpha; // 0x48(0x04)
	float SkydiveDriftDelay; // 0x4c(0x04)
	int32_t SkydiveDriftAnim; // 0x50(0x04)
	int32_t SkydiveDriftAnimMax; // 0x54(0x04)
	int32_t LaunchpadAnim; // 0x58(0x04)
	enum class ESkydivingDirection LocalAccelDir; // 0x5c(0x01)
	enum class ESkydivingDirection DirectionLast; // 0x5d(0x01)
	char pad_5E[0x2]; // 0x5e(0x02)
};

// ScriptStruct FortniteGame.FortAnimInput_TurnInPlace
// Size: 0x70 (Inherited: 0x00)
struct FFortAnimInput_TurnInPlace {
	struct FCachedAnimStateArray TurnInitiatingStates; // 0x00(0x18)
	struct FCachedAnimStateArray TurnTransitionStates; // 0x18(0x18)
	struct FName TurnRotationAmountCurveName; // 0x30(0x08)
	struct FName AllowTurnInPlaceCurveName; // 0x38(0x08)
	struct FVector2D EmoteYawOffsetSofteningInputRange; // 0x40(0x08)
	struct FVector2D EmoteYawOffsetSofteningOutputRange; // 0x48(0x08)
	float TurnThreshold90; // 0x50(0x04)
	float InitialTurnCurveValue; // 0x54(0x04)
	float MaxAllowedRootYawOffset; // 0x58(0x04)
	float RootYawOffset; // 0x5c(0x04)
	float RootYawOffsetAlpha; // 0x60(0x04)
	char bWantsToTurn : 1; // 0x64(0x01)
	char bWantsToTurnInVehicle : 1; // 0x64(0x01)
	char bWantsToTurnAgain : 1; // 0x64(0x01)
	char bTurningLeft : 1; // 0x64(0x01)
	char pad_64_4 : 4; // 0x64(0x01)
	char pad_65[0x3]; // 0x65(0x03)
	float LastTurnRotationAmount; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_SpeedWarping
// Size: 0x20 (Inherited: 0x00)
struct FFortAnimInput_SpeedWarping {
	struct UCurveFloat* PlayRateAdjustmentCurve; // 0x00(0x08)
	struct FVector2D SpeedWarpingLimits; // 0x08(0x08)
	struct FVector2D SpeedWarpingLimitsAddlRateScale; // 0x10(0x08)
	float SpeedWarpingAmount; // 0x18(0x04)
	float PlayRate; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_BowWeapon
// Size: 0xa0 (Inherited: 0x00)
struct FFortAnimInput_BowWeapon {
	struct UCurveFloat* BowChargeSpeedModifierCurve; // 0x00(0x08)
	char pad_8[0x8]; // 0x08(0x08)
	struct FTransform RightHandIKExtraOffset; // 0x10(0x30)
	struct FVector RightHandIKOffsetLocation; // 0x40(0x0c)
	struct FRotator RightHandIKOffsetRotation; // 0x4c(0x0c)
	struct FName WeaponAttachmentSocketName; // 0x58(0x08)
	struct FName ArrowNockSocketName; // 0x60(0x08)
	float BowAimYaw; // 0x68(0x04)
	float BowAimPitch; // 0x6c(0x04)
	float ChargeBlendSpaceCrouchSpeed; // 0x70(0x04)
	float ChargeBlendSpaceCrouchSpeedInterpRate; // 0x74(0x04)
	float ChargeBlendSpaceCrouchSpeedTarget; // 0x78(0x04)
	float ChargePlayRate; // 0x7c(0x04)
	float ChargeBlendInTime; // 0x80(0x04)
	float FastChargeThreshold; // 0x84(0x04)
	float ChargeBlendInTimeDefault; // 0x88(0x04)
	float ChargeBlendInTimeFastCharge; // 0x8c(0x04)
	float WeaponRaisedAdditiveLeanMultiplier; // 0x90(0x04)
	char bIsBowEquipped : 1; // 0x94(0x01)
	char bIsBowCharging : 1; // 0x94(0x01)
	char bIsBowAtMaxCharge : 1; // 0x94(0x01)
	char bEnableRightHandIK : 1; // 0x94(0x01)
	char pad_94_4 : 4; // 0x94(0x01)
	char pad_95[0xb]; // 0x95(0x0b)
};

// ScriptStruct FortniteGame.FortAnimInput_CommonWeapon
// Size: 0x02 (Inherited: 0x00)
struct FFortAnimInput_CommonWeapon {
	char bIsWeaponEquipped : 1; // 0x00(0x01)
	char bForceUpperBodyTargeting : 1; // 0x00(0x01)
	char pad_0_2 : 6; // 0x00(0x01)
	char pad_1[0x1]; // 0x01(0x01)
};

// ScriptStruct FortniteGame.FortAnimInput_CommonVehicle
// Size: 0x0c (Inherited: 0x00)
struct FFortAnimInput_CommonVehicle {
	char bIsUsingVehicle : 1; // 0x00(0x01)
	char bIsJumpingVehicle : 1; // 0x00(0x01)
	char bCanChargeJump : 1; // 0x00(0x01)
	char bIsChargingJump : 1; // 0x00(0x01)
	char pad_0_4 : 4; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	char bIsJumping : 1; // 0x08(0x01)
	char bIsOnGround : 1; // 0x08(0x01)
	char bCanDriverAimWeapon : 1; // 0x08(0x01)
	char pad_8_3 : 5; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.FortAnimInput_ShoppingCart
// Size: 0x5c (Inherited: 0x00)
struct FFortAnimInput_ShoppingCart {
	char bIsUsingShoppingCart : 1; // 0x00(0x01)
	char bIsUsingVehicle : 1; // 0x00(0x01)
	char pad_0_2 : 6; // 0x00(0x01)
	enum class ECoastState CoastState; // 0x01(0x01)
	char bIsCoastStatePedaling : 1; // 0x02(0x01)
	char bIsCoastStateCoasting : 1; // 0x02(0x01)
	char bIsCoastStateDismount : 1; // 0x02(0x01)
	char bIsCoastStateIdle : 1; // 0x02(0x01)
	char bIsInAir : 1; // 0x02(0x01)
	char bIsCoasting : 1; // 0x02(0x01)
	char bIsPedaling : 1; // 0x02(0x01)
	char bIsReadyToPedal : 1; // 0x02(0x01)
	char pad_3[0x1]; // 0x03(0x01)
	float IsReadyToPedal; // 0x04(0x04)
	char bWantsToCoast : 1; // 0x08(0x01)
	char bIsCoastIdling : 1; // 0x08(0x01)
	char bIsStartCoasting : 1; // 0x08(0x01)
	char bIsEndCoasting : 1; // 0x08(0x01)
	char bIsDismountingFromCoast : 1; // 0x08(0x01)
	char bIsCoastingOrDismountingFromCoast : 1; // 0x08(0x01)
	char bIsStandingInPlace : 1; // 0x08(0x01)
	char bIsSprinting : 1; // 0x08(0x01)
	char bIsSprintingAndMovingForward : 1; // 0x09(0x01)
	char bIsMovingForwardNotSprinting : 1; // 0x09(0x01)
	char bIsBraking : 1; // 0x09(0x01)
	char bIsReversing : 1; // 0x09(0x01)
	char bIsMoving : 1; // 0x09(0x01)
	char bIsMovingForward : 1; // 0x09(0x01)
	char bIsMovingBackwards : 1; // 0x09(0x01)
	char bIsMovingOrTurningInPlace : 1; // 0x09(0x01)
	char bIsInAirSteady : 1; // 0x0a(0x01)
	char bIsOnSlope : 1; // 0x0a(0x01)
	char bAimFWD : 1; // 0x0a(0x01)
	char bAimBWD : 1; // 0x0a(0x01)
	char bAimLFT : 1; // 0x0a(0x01)
	char bAimRGT : 1; // 0x0a(0x01)
	char pad_A_6 : 2; // 0x0a(0x01)
	char pad_B[0x1]; // 0x0b(0x01)
	float ForwardVelocity; // 0x0c(0x04)
	float ForwardSpeedKmH; // 0x10(0x04)
	float CurrentBrakeForce; // 0x14(0x04)
	float RunForwardAlpha; // 0x18(0x04)
	char bIsAcceleratingForward : 1; // 0x1c(0x01)
	char bIsAccelBreakingOrReversing : 1; // 0x1c(0x01)
	char pad_1C_2 : 6; // 0x1c(0x01)
	char pad_1D[0x3]; // 0x1d(0x03)
	float SteerAngle; // 0x20(0x04)
	float SteerAngleInterpSpeed; // 0x24(0x04)
	float CoastSteerAngleInterpSpeed; // 0x28(0x04)
	float IsReadyToPedalInterpSpeed; // 0x2c(0x04)
	float StandingInPlaceSteerAngle; // 0x30(0x04)
	float SlopePitchDegreeAngle; // 0x34(0x04)
	float SlopeRollDegreeAngle; // 0x38(0x04)
	float PawnToVehicleDeltaYawAngleDegrees; // 0x3c(0x04)
	float AimCardDirDeadZoneAngleDegrees; // 0x40(0x04)
	float AimCardDirAngleOffsetDegrees; // 0x44(0x04)
	float AimFWDDeltaAngleDegrees; // 0x48(0x04)
	float AimBWDDeltaAngleDegrees; // 0x4c(0x04)
	float AimLFTDeltaAngleDegrees; // 0x50(0x04)
	float AimRGTDeltaAngleDegrees; // 0x54(0x04)
	int32_t LastCardDirIndex; // 0x58(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_FerretVehicle
// Size: 0x64 (Inherited: 0x00)
struct FFortAnimInput_FerretVehicle {
	char bIsUsingFerretVehicle : 1; // 0x00(0x01)
	char bIsDriver : 1; // 0x00(0x01)
	char bIsFrontPassenger : 1; // 0x00(0x01)
	char bIsBackLeftPassenger : 1; // 0x00(0x01)
	char bIsBackRightPassenger : 1; // 0x00(0x01)
	char bIsFrontPassengerAndLeaning : 1; // 0x00(0x01)
	char bIsBackPassengerAndLeaning : 1; // 0x00(0x01)
	char bIsDrifting : 1; // 0x00(0x01)
	char bIsBoosting : 1; // 0x01(0x01)
	char bIsReversing : 1; // 0x01(0x01)
	char bIsBraking : 1; // 0x01(0x01)
	char bIsMoving : 1; // 0x01(0x01)
	char bIsMovingForward : 1; // 0x01(0x01)
	char bIsLeaning : 1; // 0x01(0x01)
	char bIsLeaningOrBouncing : 1; // 0x01(0x01)
	char bIsBounceCrouching : 1; // 0x01(0x01)
	char bIsBounceCrouched : 1; // 0x02(0x01)
	char bIsBounceJumping : 1; // 0x02(0x01)
	char bIsBounceRecoiling : 1; // 0x02(0x01)
	char pad_2_3 : 5; // 0x02(0x01)
	char bIsSteeringRight; // 0x03(0x01)
	char bIsSteeringLeft; // 0x04(0x01)
	char bIsShooting; // 0x05(0x01)
	char bIsFerretPassengerRotating; // 0x06(0x01)
	char pad_7[0x1]; // 0x07(0x01)
	float RunForwardAlpha; // 0x08(0x04)
	float BounceCompression; // 0x0c(0x04)
	struct FVector LeanPosition; // 0x10(0x0c)
	float LeanPositionX; // 0x1c(0x04)
	float LeanPositionY; // 0x20(0x04)
	float LeanPositionZ; // 0x24(0x04)
	char bAimFWD : 1; // 0x28(0x01)
	char bAimBWD : 1; // 0x28(0x01)
	char bAimLFT : 1; // 0x28(0x01)
	char bAimRGT : 1; // 0x28(0x01)
	char pad_28_4 : 4; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	float PawnToVehicleDeltaYawAngleDegrees; // 0x2c(0x04)
	float AimCardDirDeadZoneAngleDegrees; // 0x30(0x04)
	float AimCardDirAngleOffsetDegrees; // 0x34(0x04)
	int32_t LastCardDirIndex; // 0x38(0x04)
	float AimFWDDeltaAngleDegrees; // 0x3c(0x04)
	float AimBWDDeltaAngleDegrees; // 0x40(0x04)
	float AimLFTDeltaAngleDegrees; // 0x44(0x04)
	float AimRGTDeltaAngleDegrees; // 0x48(0x04)
	float SlopePitchDegreeAngle; // 0x4c(0x04)
	float SlopeRollDegreeAngle; // 0x50(0x04)
	float SteerAngle; // 0x54(0x04)
	struct FVector SeatSwitchDirection; // 0x58(0x0c)
};

// ScriptStruct FortniteGame.FortAnimInput_MountedTurret
// Size: 0x10 (Inherited: 0x00)
struct FFortAnimInput_MountedTurret {
	bool bIsUsingMountedTurret; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float AimingYaw; // 0x04(0x04)
	float AimingPitch; // 0x08(0x04)
	float PedalScaler; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_Quad
// Size: 0x70 (Inherited: 0x00)
struct FFortAnimInput_Quad {
	char bIsUsingQuad : 1; // 0x00(0x01)
	char bIsDriver : 1; // 0x00(0x01)
	char bIsFrontPassenger : 1; // 0x00(0x01)
	char bIsBackPassenger : 1; // 0x00(0x01)
	char bIsBackPassengerAndLeaning : 1; // 0x00(0x01)
	char bIsDrifting : 1; // 0x00(0x01)
	char bIsBoosting : 1; // 0x00(0x01)
	char bIsReversing : 1; // 0x00(0x01)
	char bIsBraking : 1; // 0x01(0x01)
	char bIsMoving : 1; // 0x01(0x01)
	char bIsMovingForward : 1; // 0x01(0x01)
	char bIsLeaning : 1; // 0x01(0x01)
	char bIsLeaningOrBouncing : 1; // 0x01(0x01)
	char bIsBounceCrouching : 1; // 0x01(0x01)
	char bIsBounceCrouched : 1; // 0x01(0x01)
	char bIsBounceJumping : 1; // 0x01(0x01)
	char bIsBounceRecoiling : 1; // 0x02(0x01)
	char bIsSteeringRight : 1; // 0x02(0x01)
	char bIsSteeringLeft : 1; // 0x02(0x01)
	char pad_2_3 : 5; // 0x02(0x01)
	char pad_3[0x1]; // 0x03(0x01)
	float RunForwardAlpha; // 0x04(0x04)
	float BounceCompression; // 0x08(0x04)
	struct FVector LeanPosition; // 0x0c(0x0c)
	float LeanPositionX; // 0x18(0x04)
	float LeanPositionY; // 0x1c(0x04)
	float LeanPositionZ; // 0x20(0x04)
	float VerticalVelocity; // 0x24(0x04)
	float VerticalAcceleration; // 0x28(0x04)
	char bAimFWD : 1; // 0x2c(0x01)
	char bAimBWD : 1; // 0x2c(0x01)
	char bAimLFT : 1; // 0x2c(0x01)
	char bAimRGT : 1; // 0x2c(0x01)
	char pad_2C_4 : 4; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
	float PawnToVehicleDeltaYawAngleDegrees; // 0x30(0x04)
	float AimCardDirDeadZoneAngleDegrees; // 0x34(0x04)
	float AimCardDirAngleOffsetDegrees; // 0x38(0x04)
	int32_t LastCardDirIndex; // 0x3c(0x04)
	float AimFWDDeltaAngleDegrees; // 0x40(0x04)
	float AimBWDDeltaAngleDegrees; // 0x44(0x04)
	float AimLFTDeltaAngleDegrees; // 0x48(0x04)
	float AimRGTDeltaAngleDegrees; // 0x4c(0x04)
	float SlopePitchDegreeAngle; // 0x50(0x04)
	float SlopeRollDegreeAngle; // 0x54(0x04)
	float SteerAngle; // 0x58(0x04)
	float SteerAlpha; // 0x5c(0x04)
	float SteerAngleDeadZoneDegrees; // 0x60(0x04)
	float SteeringRotation; // 0x64(0x04)
	float VehiclePitch; // 0x68(0x04)
	float VehicleRoll; // 0x6c(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_GolfCart
// Size: 0x54 (Inherited: 0x00)
struct FFortAnimInput_GolfCart {
	char bIsUsingGolfCart : 1; // 0x00(0x01)
	char bIsDriver : 1; // 0x00(0x01)
	char bIsFrontPassenger : 1; // 0x00(0x01)
	char bIsBackLeftPassenger : 1; // 0x00(0x01)
	char bIsBackRightPassenger : 1; // 0x00(0x01)
	char bIsFrontPassengerAndLeaning : 1; // 0x00(0x01)
	char bIsBackPassengerAndLeaning : 1; // 0x00(0x01)
	char bIsDrifting : 1; // 0x00(0x01)
	char bIsBoosting : 1; // 0x01(0x01)
	char bIsEBraking : 1; // 0x01(0x01)
	char bIsReversing : 1; // 0x01(0x01)
	char bIsBraking : 1; // 0x01(0x01)
	char bIsMoving : 1; // 0x01(0x01)
	char bIsMovingForward : 1; // 0x01(0x01)
	char bIsPowerSliding : 1; // 0x01(0x01)
	char bIsLeaning : 1; // 0x01(0x01)
	char bIsLeaningOrBouncing : 1; // 0x02(0x01)
	char bIsBounceCrouching : 1; // 0x02(0x01)
	char bIsBounceCrouched : 1; // 0x02(0x01)
	char bIsBounceJumping : 1; // 0x02(0x01)
	char bIsBounceRecoiling : 1; // 0x02(0x01)
	char bIsSteeringRight : 1; // 0x02(0x01)
	char bIsSteeringLeft : 1; // 0x02(0x01)
	char pad_3[0x1]; // 0x03(0x01)
	float RunForwardAlpha; // 0x04(0x04)
	float BounceCompression; // 0x08(0x04)
	struct FVector LeanPosition; // 0x0c(0x0c)
	float LeanPositionX; // 0x18(0x04)
	float LeanPositionY; // 0x1c(0x04)
	float LeanPositionZ; // 0x20(0x04)
	char bAimFWD : 1; // 0x24(0x01)
	char bAimBWD : 1; // 0x24(0x01)
	char bAimLFT : 1; // 0x24(0x01)
	char bAimRGT : 1; // 0x24(0x01)
	char pad_24_4 : 4; // 0x24(0x01)
	char pad_25[0x3]; // 0x25(0x03)
	float PawnToVehicleDeltaYawAngleDegrees; // 0x28(0x04)
	float AimCardDirDeadZoneAngleDegrees; // 0x2c(0x04)
	float AimCardDirAngleOffsetDegrees; // 0x30(0x04)
	int32_t LastCardDirIndex; // 0x34(0x04)
	float AimFWDDeltaAngleDegrees; // 0x38(0x04)
	float AimBWDDeltaAngleDegrees; // 0x3c(0x04)
	float AimLFTDeltaAngleDegrees; // 0x40(0x04)
	float AimRGTDeltaAngleDegrees; // 0x44(0x04)
	float SlopePitchDegreeAngle; // 0x48(0x04)
	float SlopeRollDegreeAngle; // 0x4c(0x04)
	float SteerAngle; // 0x50(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_SpaghettiVehicle
// Size: 0x01 (Inherited: 0x00)
struct FFortAnimInput_SpaghettiVehicle {
	char bIsUsingSpaghettiVehicle : 1; // 0x00(0x01)
	char pad_0_1 : 7; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortAnimInput_OctopusVehicle
// Size: 0x01 (Inherited: 0x00)
struct FFortAnimInput_OctopusVehicle {
	char bIsUsingOctopusVehicle : 1; // 0x00(0x01)
	char pad_0_1 : 7; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortAnimInput_JackalVehicle
// Size: 0x1ac (Inherited: 0x00)
struct FFortAnimInput_JackalVehicle {
	char bIsUsingJackalVehicle : 1; // 0x00(0x01)
	char bIsSteeringLeft : 1; // 0x00(0x01)
	char bIsSteeringRight : 1; // 0x00(0x01)
	char pad_0_3 : 5; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float SteerAngleDeadZoneDegrees; // 0x04(0x04)
	float SteerAngle; // 0x08(0x04)
	float LeanYaw; // 0x0c(0x04)
	float QuantizedSteerAngle; // 0x10(0x04)
	float SteerAlpha; // 0x14(0x04)
	float RunForwardAlpha; // 0x18(0x04)
	float SlopePitchDegreeAngle; // 0x1c(0x04)
	float SlopeRollDegreeAngle; // 0x20(0x04)
	float DistanceFromGround; // 0x24(0x04)
	float PivotPlayRate; // 0x28(0x04)
	char bIsReversing : 1; // 0x2c(0x01)
	char bIsBraking : 1; // 0x2c(0x01)
	char bIsMoving : 1; // 0x2c(0x01)
	char bIsMovingForward : 1; // 0x2c(0x01)
	char bIsSprinting : 1; // 0x2c(0x01)
	char bInAir : 1; // 0x2c(0x01)
	char bIsFalling : 1; // 0x2c(0x01)
	char bIsJumping : 1; // 0x2c(0x01)
	char bIsRelaxed : 1; // 0x2d(0x01)
	char bIsBoosting : 1; // 0x2d(0x01)
	char bHasReachedJumpChargeStartThreshold : 1; // 0x2d(0x01)
	char bHasReachedJumpChargeMidThreshold : 1; // 0x2d(0x01)
	char bHasReachedJumpChargeFullThreshold : 1; // 0x2d(0x01)
	char bAdjustRootForFemaleRider : 1; // 0x2d(0x01)
	char bIsPlayingEmoteOnHoverboard : 1; // 0x2d(0x01)
	char bShouldApplyAdditive : 1; // 0x2d(0x01)
	char bPlayPivotOnGroundAndNotBoosting : 1; // 0x2e(0x01)
	char bIsOnLowerHill : 1; // 0x2e(0x01)
	char bLowerBodyIdleToLoopTransition : 1; // 0x2e(0x01)
	char bInterruptHoverboardFullybody : 1; // 0x2e(0x01)
	char bEnterFullBodyHoverboardState : 1; // 0x2e(0x01)
	char bDefaultToJumpStartTransition : 1; // 0x2e(0x01)
	char bLocomotionPoseToJumpTransition : 1; // 0x2e(0x01)
	char bBoostingToBoostingJumpTransition : 1; // 0x2e(0x01)
	char bJumpToLocomotionPoseTransition : 1; // 0x2f(0x01)
	char bJumpApexToJumpFallTransition : 1; // 0x2f(0x01)
	char bIdleToMovementStartTransition : 1; // 0x2f(0x01)
	char bIdleToMovementLoopTransition : 1; // 0x2f(0x01)
	char bMovementLoopToMovementStopTransition : 1; // 0x2f(0x01)
	char bMovementLoopToPivotTransition : 1; // 0x2f(0x01)
	char bMovementLoopToIdleTransition : 1; // 0x2f(0x01)
	char bIdleAdditiveToCollisionNTransition : 1; // 0x2f(0x01)
	char bSplitBodyToHoverboardBRTransition : 1; // 0x30(0x01)
	char bHoverboardBRToSplitBodyTransition : 1; // 0x30(0x01)
	char bHoverboardBRMovementToJumpChargeTransition : 1; // 0x30(0x01)
	char bIdlesToJackalVehicleTransition : 1; // 0x30(0x01)
	char bPlayAdditiveLeans : 1; // 0x30(0x01)
	char bPlayBalloonLeans : 1; // 0x30(0x01)
	char bPlayJumpTrickVertical : 1; // 0x30(0x01)
	char bPlayJumpTrick : 1; // 0x30(0x01)
	char bPlayMovingFast : 1; // 0x31(0x01)
	char bPlayHipAdjustmentAdditive : 1; // 0x31(0x01)
	char bPlayDriveSouth : 1; // 0x31(0x01)
	char bPlayHeadAimOffset : 1; // 0x31(0x01)
	char bPlaySlopeAimOffset : 1; // 0x31(0x01)
	char pad_31_5 : 3; // 0x31(0x01)
	char pad_32[0x2]; // 0x32(0x02)
	float JumpCombatAdditiveWeight; // 0x34(0x04)
	float MeleeTwistIdle; // 0x38(0x04)
	float MeleeTwistLocomotionLoop; // 0x3c(0x04)
	struct FFortAnimInput_VelocityImpact VelocityImpact; // 0x40(0xbc)
	struct FVector ImpactDisplacement; // 0xfc(0x0c)
	char pad_108[0x8]; // 0x108(0x08)
	float SteerYaw; // 0x110(0x04)
	struct FVector EmoteHoverboardPosition; // 0x114(0x0c)
	struct FRotator EmoteHoverboardRotation; // 0x120(0x0c)
	char bShouldAttachFeetToHoverboard : 1; // 0x12c(0x01)
	char pad_12C_1 : 7; // 0x12c(0x01)
	char pad_12D[0x3]; // 0x12d(0x03)
	struct FVector FootLeftLocationOffset; // 0x130(0x0c)
	struct FRotator FootLeftRotationOffset; // 0x13c(0x0c)
	struct FVector FootRightLocationOffset; // 0x148(0x0c)
	struct FRotator FootRightRotationOffset; // 0x154(0x0c)
	float StoppedThreshold; // 0x160(0x04)
	float MovingForwardThreshold; // 0x164(0x04)
	float MovingFowardFastThreshold; // 0x168(0x04)
	float DefaultToJumpStartTransitionThreshold; // 0x16c(0x04)
	float JumpTrickAngularVelocityThreshold; // 0x170(0x04)
	float JumpDistanceFromGroundThreshold; // 0x174(0x04)
	float VelocityStartThreshold; // 0x178(0x04)
	float MovingFastThreshold; // 0x17c(0x04)
	float RelaxedSpeedThreshold; // 0x180(0x04)
	float JumpChargeStartThreshold; // 0x184(0x04)
	float JumpChargeMidThreshold; // 0x188(0x04)
	float JumpChargeFullThreshold; // 0x18c(0x04)
	float RotatingAngularVelocityThreshold; // 0x190(0x04)
	float IdleToLoopTransitionSpeedThreshold; // 0x194(0x04)
	float IdleToMovementLoopTransitionThreshold; // 0x198(0x04)
	float MeleeTwistIdleMultiplier; // 0x19c(0x04)
	float MeleeTwistLocomotionLoopMultiplier; // 0x1a0(0x04)
	float LeanYawForMaxPivotPlayRate; // 0x1a4(0x04)
	float SteerAlphaForMaxPivotPlayRate; // 0x1a8(0x04)
};

// ScriptStruct FortniteGame.FortAnimInput_VelocityImpact
// Size: 0xbc (Inherited: 0x00)
struct FFortAnimInput_VelocityImpact {
	struct FVector LastVelocity; // 0x00(0x0c)
	struct FVector DeltaVelocityThreshold; // 0x0c(0x0c)
	struct FVector ImpactScale; // 0x18(0x0c)
	struct FInputRange ImpactLimitX; // 0x24(0x08)
	struct FInputRange ImpactLimitY; // 0x2c(0x08)
	struct FInputRange ImpactLimitZ; // 0x34(0x08)
	struct FFloatRK4SpringInterpolator SpringInterpolatorX; // 0x3c(0x08)
	char pad_44[0x1c]; // 0x44(0x1c)
	struct FFloatRK4SpringInterpolator SpringInterpolatorY; // 0x60(0x08)
	char pad_68[0x1c]; // 0x68(0x1c)
	struct FFloatRK4SpringInterpolator SpringInterpolatorZ; // 0x84(0x08)
	char pad_8C[0x1c]; // 0x8c(0x1c)
	char bTestVelocity : 1; // 0xa8(0x01)
	char pad_A8_1 : 7; // 0xa8(0x01)
	char pad_A9[0x3]; // 0xa9(0x03)
	struct FVector TestVelocity; // 0xac(0x0c)
	char bIsForwardImpact : 1; // 0xb8(0x01)
	char bIsBackwardImpact : 1; // 0xb8(0x01)
	char bIsLeftImpact : 1; // 0xb8(0x01)
	char bIsRightImpact : 1; // 0xb8(0x01)
	char bIsUpImpact : 1; // 0xb8(0x01)
	char bIsDownImpact : 1; // 0xb8(0x01)
	char pad_B8_6 : 2; // 0xb8(0x01)
	char pad_B9[0x3]; // 0xb9(0x03)
};

// ScriptStruct FortniteGame.FortAnimInput_Vitality
// Size: 0x03 (Inherited: 0x00)
struct FFortAnimInput_Vitality {
	char bShieldsDecreased : 1; // 0x00(0x01)
	char bShieldsIncreased : 1; // 0x00(0x01)
	char bHealthDecreased : 1; // 0x00(0x01)
	char bHealthIncreased : 1; // 0x00(0x01)
	char bIsRagdolling : 1; // 0x00(0x01)
	char bGainedRagdolling : 1; // 0x00(0x01)
	char bLostRagdolling : 1; // 0x00(0x01)
	char pad_1[0x2]; // 0x01(0x02)
};

// ScriptStruct FortniteGame.FortAnimInput_Ragdoll
// Size: 0x18 (Inherited: 0x00)
struct FFortAnimInput_Ragdoll {
	char bIsRagdolling : 1; // 0x00(0x01)
	char bSliding : 1; // 0x00(0x01)
	char bTumbling : 1; // 0x00(0x01)
	char bStopped : 1; // 0x00(0x01)
	char pad_0_4 : 4; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FVector2D Impact; // 0x04(0x08)
	struct FVector Facing; // 0x0c(0x0c)
};

// ScriptStruct FortniteGame.FortAnimInput_Zipline
// Size: 0x20 (Inherited: 0x00)
struct FFortAnimInput_Zipline {
	char bIsZiplining : 1; // 0x00(0x01)
	char bShouldPlayPivotTransition : 1; // 0x00(0x01)
	char pad_0_2 : 6; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float LeanYaw; // 0x04(0x04)
	float PivotBlendDelayRemaining; // 0x08(0x04)
	float PivotBlendDelay; // 0x0c(0x04)
	enum class EFortCardinalDirection PivotCardinalDirection; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
	struct FVector WorldVelocityLastTick; // 0x14(0x0c)
};

// ScriptStruct FortniteGame.FortAnimInput_CreativeMoveTool
// Size: 0x01 (Inherited: 0x00)
struct FFortAnimInput_CreativeMoveTool {
	bool bIsFlying; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortAnimNode_AnimSetDrivenRandom
// Size: 0x88 (Inherited: 0x78)
struct FFortAnimNode_AnimSetDrivenRandom : FAnimNode_RandomPlayer {
	struct FGameplayTag RandomSlotName; // 0x78(0x08)
	struct UFortAnimSet* AnimSet; // 0x80(0x08)
};

// ScriptStruct FortniteGame.FortAnimNode_Flap
// Size: 0xf8 (Inherited: 0xc8)
struct FFortAnimNode_Flap : FAnimNode_SkeletalControlBase {
	struct TArray<struct FSourceDriver> SourceDrives; // 0xc8(0x10)
	struct FBoneReference TargetBone; // 0xd8(0x10)
	enum class EComponentType TargetComponent; // 0xe8(0x01)
	enum class ESourceSelectionMode SelectionMode; // 0xe9(0x01)
	bool bUseClamp; // 0xea(0x01)
	char pad_EB[0x1]; // 0xeb(0x01)
	float TargetClampMin; // 0xec(0x04)
	float TargetClampMax; // 0xf0(0x04)
	char pad_F4[0x4]; // 0xf4(0x04)
};

// ScriptStruct FortniteGame.SourceDriver
// Size: 0x38 (Inherited: 0x00)
struct FSourceDriver {
	struct FBoneReference SourceBone; // 0x00(0x10)
	enum class EComponentType SourceComponent; // 0x10(0x01)
	bool UseQuaternion; // 0x11(0x01)
	char pad_12[0x6]; // 0x12(0x06)
	struct UCurveFloat* DrivingCurve; // 0x18(0x08)
	float Multiplier; // 0x20(0x04)
	bool bUseRange; // 0x24(0x01)
	char pad_25[0x3]; // 0x25(0x03)
	float RangeMin; // 0x28(0x04)
	float RangeMax; // 0x2c(0x04)
	float RemappedMin; // 0x30(0x04)
	float RemappedMax; // 0x34(0x04)
};

// ScriptStruct FortniteGame.FortAnimNode_OrientationWarping
// Size: 0x130 (Inherited: 0xc8)
struct FFortAnimNode_OrientationWarping : FAnimNode_SkeletalControlBase {
	float LocomotionAngle; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
	struct FOrientationWarpingSettings Settings; // 0xd0(0x38)
	struct TArray<struct FOrientationWarpingSpineBoneData> SpineBoneDataArray; // 0x108(0x10)
	char pad_118[0x14]; // 0x118(0x14)
	float CachedDeltaTime; // 0x12c(0x04)
};

// ScriptStruct FortniteGame.OrientationWarpingSpineBoneData
// Size: 0x08 (Inherited: 0x00)
struct FOrientationWarpingSpineBoneData {
	char pad_0[0x8]; // 0x00(0x08)
};

// ScriptStruct FortniteGame.OrientationWarpingSettings
// Size: 0x38 (Inherited: 0x00)
struct FOrientationWarpingSettings {
	enum class EAxis YawRotationAxis; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float BodyOrientationAlpha; // 0x04(0x04)
	struct TArray<struct FOrientationWarpingSpineBoneSettings> SpineBones; // 0x08(0x10)
	struct FBoneReference IKFootRootBone; // 0x18(0x10)
	struct TArray<struct FBoneReference> IKFootBones; // 0x28(0x10)
};

// ScriptStruct FortniteGame.OrientationWarpingSpineBoneSettings
// Size: 0x10 (Inherited: 0x00)
struct FOrientationWarpingSpineBoneSettings {
	struct FBoneReference Bone; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortAnimNode_SlopeWarping
// Size: 0x228 (Inherited: 0xc8)
struct FFortAnimNode_SlopeWarping : FAnimNode_SkeletalControlBase {
	char pad_C8[0x18]; // 0xc8(0x18)
	struct FBoneReference PelvisBone; // 0xe0(0x10)
	struct FBoneReference IKFootRootBone; // 0xf0(0x10)
	struct TArray<struct FSlopeWarpingFootDefinition> FeetDefinitions; // 0x100(0x10)
	struct TArray<struct FSlopeWarpingFootData> FeetData; // 0x110(0x10)
	struct FVectorRK4SpringInterpolator PelvisOffsetInterpolator; // 0x120(0x08)
	char pad_128[0x34]; // 0x128(0x34)
	struct FVector GravityDir; // 0x15c(0x0c)
	struct FVector CustomFloorOffset; // 0x168(0x0c)
	float CachedDeltaTime; // 0x174(0x04)
	struct FVector TargetFloorNormalWorldSpace; // 0x178(0x0c)
	struct FVectorRK4SpringInterpolator FloorNormalInterpolator; // 0x184(0x08)
	char pad_18C[0x34]; // 0x18c(0x34)
	struct FVector TargetFloorOffsetLocalSpace; // 0x1c0(0x0c)
	struct FVectorRK4SpringInterpolator FloorOffsetInterpolator; // 0x1cc(0x08)
	char pad_1D4[0x34]; // 0x1d4(0x34)
	float MaxStepHeight; // 0x208(0x04)
	char bKeepMeshInsideOfCapsule : 1; // 0x20c(0x01)
	char bPullPelvisDown : 1; // 0x20c(0x01)
	char bUseCustomFloorOffset : 1; // 0x20c(0x01)
	char bWasOnGround : 1; // 0x20c(0x01)
	char bShowDebug : 1; // 0x20c(0x01)
	char bFloorSmoothingInitialized : 1; // 0x20c(0x01)
	char pad_20C_6 : 2; // 0x20c(0x01)
	char pad_20D[0x3]; // 0x20d(0x03)
	struct FVector ActorLocation; // 0x210(0x0c)
	struct FVector GravityDirCompSpace; // 0x21c(0x0c)
};

// ScriptStruct FortniteGame.SlopeWarpingFootData
// Size: 0x60 (Inherited: 0x00)
struct FSlopeWarpingFootData {
	char pad_0[0x60]; // 0x00(0x60)
};

// ScriptStruct FortniteGame.SlopeWarpingFootDefinition
// Size: 0x24 (Inherited: 0x00)
struct FSlopeWarpingFootDefinition {
	struct FBoneReference IKFootBone; // 0x00(0x10)
	struct FBoneReference FKFootBone; // 0x10(0x10)
	int32_t NumBonesInLimb; // 0x20(0x04)
};

// ScriptStruct FortniteGame.FortAnimNode_QuadrupedSlopeWarping
// Size: 0x408 (Inherited: 0x228)
struct FFortAnimNode_QuadrupedSlopeWarping : FFortAnimNode_SlopeWarping {
	struct FBoneReference SkeletonRootBone; // 0x228(0x10)
	struct FBoneReference ArmsRootBone; // 0x238(0x10)
	struct FBoneReference ArmsIKFootRootBone; // 0x248(0x10)
	struct TArray<struct FSlopeWarpingFootDefinition> ArmsFeetDefinitions; // 0x258(0x10)
	int32_t NumSpineBones; // 0x268(0x04)
	struct FVectorRK4SpringInterpolator ArmsRootBoneOffsetInterpolator; // 0x26c(0x08)
	char pad_274[0x34]; // 0x274(0x34)
	struct TArray<struct FSlopeWarpingFootData> ArmsFeetData; // 0x2a8(0x10)
	float MaxMovementDistBeforeNewTrace; // 0x2b8(0x04)
	char bUseMovementComponentFloorInfoInsteadOfTraces : 1; // 0x2bc(0x01)
	char bOnlyAffectSkeletonRootBone : 1; // 0x2bc(0x01)
	char pad_2BC_2 : 6; // 0x2bc(0x01)
	char pad_2BD[0x14b]; // 0x2bd(0x14b)
};

// ScriptStruct FortniteGame.FortAnimNode_ScaleCharacterBones
// Size: 0x40 (Inherited: 0x10)
struct FFortAnimNode_ScaleCharacterBones : FAnimNode_Base {
	struct FPoseLink PreScalePose; // 0x10(0x10)
	char pad_20[0x20]; // 0x20(0x20)
};

// ScriptStruct FortniteGame.FortAnimNode_ScaleHuskBones
// Size: 0x160 (Inherited: 0x10)
struct FFortAnimNode_ScaleHuskBones : FAnimNode_Base {
	struct FPoseLink PreScalePose; // 0x10(0x10)
	char pad_20[0x140]; // 0x20(0x140)
};

// ScriptStruct FortniteGame.FortAnimNode_SpeedWarping
// Size: 0x1b8 (Inherited: 0xc8)
struct FFortAnimNode_SpeedWarping : FAnimNode_SkeletalControlBase {
	char pad_C8[0x8]; // 0xc8(0x08)
	struct FBoneReference IKFootRootBone; // 0xd0(0x10)
	struct TArray<struct FSpeedWarpingFootDefinition> FeetDefinitions; // 0xe0(0x10)
	struct TArray<struct FSpeedWarpingFootData> FeetData; // 0xf0(0x10)
	struct FBoneReference PelvisBone; // 0x100(0x10)
	enum class ESpeedWarpingAxisMode SpeedWarpingAxisMode; // 0x110(0x01)
	enum class ESpeedWarpingAxisMode FloorNormalAxisMode; // 0x111(0x01)
	enum class ESpeedWarpingAxisMode GravityDirAxisMode; // 0x112(0x01)
	char pad_113[0x1]; // 0x113(0x01)
	float SpeedScaling; // 0x114(0x04)
	struct FInputScaleBiasClamp SpeedScalingScaleBiasClamp; // 0x118(0x30)
	struct FVector ManualSpeedWarpingDir; // 0x148(0x0c)
	struct FVector ManualFloorNormalInput; // 0x154(0x0c)
	struct FVector ManualGravityDirInput; // 0x160(0x0c)
	float PelvisPostAdjustmentAlpha; // 0x16c(0x04)
	int32_t PelvisAdjustmentMaxIter; // 0x170(0x04)
	struct FVectorRK4SpringInterpolator PelvisAdjustmentInterp; // 0x174(0x08)
	char pad_17C[0x34]; // 0x17c(0x34)
	char bAdjustThighBonesRotation : 1; // 0x1b0(0x01)
	char bClampIKUsingFKLeg : 1; // 0x1b0(0x01)
	char bOrientSpeedWarpingAxisBasedOnFloorNormal : 1; // 0x1b0(0x01)
	char pad_1B0_3 : 5; // 0x1b0(0x01)
	char pad_1B1[0x3]; // 0x1b1(0x03)
	float CachedDeltaTime; // 0x1b4(0x04)
};

// ScriptStruct FortniteGame.SpeedWarpingFootData
// Size: 0x40 (Inherited: 0x00)
struct FSpeedWarpingFootData {
	char pad_0[0x40]; // 0x00(0x40)
};

// ScriptStruct FortniteGame.SpeedWarpingFootDefinition
// Size: 0x24 (Inherited: 0x00)
struct FSpeedWarpingFootDefinition {
	struct FBoneReference IKFootBone; // 0x00(0x10)
	struct FBoneReference FKFootBone; // 0x10(0x10)
	int32_t NumBonesInLimb; // 0x20(0x04)
};

// ScriptStruct FortniteGame.FortAnimNode_WeightedLookAt
// Size: 0x1c0 (Inherited: 0x1b0)
struct FFortAnimNode_WeightedLookAt : FAnimNode_LookAt {
	struct TArray<struct FWeightedLookAtBoneWeightDefinition> BoneWeightsToApply; // 0x1b0(0x10)
};

// ScriptStruct FortniteGame.WeightedLookAtBoneWeightDefinition
// Size: 0x50 (Inherited: 0x00)
struct FWeightedLookAtBoneWeightDefinition {
	float Weight; // 0x00(0x04)
	char pad_4[0x4c]; // 0x04(0x4c)
};

// ScriptStruct FortniteGame.FortCosmeticVariantSwapData
// Size: 0x38 (Inherited: 0x00)
struct FFortCosmeticVariantSwapData {
	struct TSoftObjectPtr<struct UAthenaCosmeticItemDefinition> ItemToManage; // 0x00(0x28)
	struct TArray<struct FFortCosmeticVariantTransition> Transitions; // 0x28(0x10)
};

// ScriptStruct FortniteGame.FortCosmeticVariantTransition
// Size: 0x18 (Inherited: 0x00)
struct FFortCosmeticVariantTransition {
	struct FGameplayTag ChannelWithin; // 0x00(0x08)
	struct FGameplayTag VariantFrom; // 0x08(0x08)
	struct FGameplayTag VariantTo; // 0x10(0x08)
};

// ScriptStruct FortniteGame.EmoteRetargetingNotifyParameters
// Size: 0x03 (Inherited: 0x00)
struct FEmoteRetargetingNotifyParameters {
	enum class EFortPlayerAnimBodyType BodyTypeToAffect; // 0x00(0x01)
	enum class EFortHandIKOverrideType LeftHandIK; // 0x01(0x01)
	enum class EFortHandIKOverrideType RightHandIK; // 0x02(0x01)
};

// ScriptStruct FortniteGame.SyncedMontageParams
// Size: 0x18 (Inherited: 0x00)
struct FSyncedMontageParams {
	struct UAnimMontage* SyncedMontage; // 0x00(0x08)
	enum class EMontageSyncTargetType MontageTarget; // 0x08(0x01)
	enum class EFortCustomPartType PartType; // 0x09(0x01)
	char pad_A[0x2]; // 0x0a(0x02)
	float MontageStopBlendTime; // 0x0c(0x04)
	bool bSyncMontage; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.EmotePropMaterialScalarParam
// Size: 0x0c (Inherited: 0x00)
struct FEmotePropMaterialScalarParam {
	struct FName ParamName; // 0x00(0x08)
	float ParamValue; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortAnimSetRandomAnimation
// Size: 0x98 (Inherited: 0x00)
struct FFortAnimSetRandomAnimation {
	struct FGameplayTagQuery Requirements; // 0x00(0x48)
	struct FRandomPlayerSequenceEntry RandomEntry; // 0x48(0x50)
};

// ScriptStruct FortniteGame.FortDirectionalAnimRef
// Size: 0x28 (Inherited: 0x00)
struct FFortDirectionalAnimRef {
	struct UAnimSequenceBase* NorthAnim; // 0x00(0x08)
	struct UAnimSequenceBase* SouthAnimLeft; // 0x08(0x08)
	struct UAnimSequenceBase* SouthAnimRight; // 0x10(0x08)
	struct UAnimSequenceBase* EastAnim; // 0x18(0x08)
	struct UAnimSequenceBase* WestAnim; // 0x20(0x08)
};

// ScriptStruct FortniteGame.FortCachedFloatCurve
// Size: 0x0c (Inherited: 0x00)
struct FFortCachedFloatCurve {
	struct FName CurveName; // 0x00(0x08)
	char pad_8[0x4]; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortDistanceCurve
// Size: 0x0c (Inherited: 0x0c)
struct FFortDistanceCurve : FFortCachedFloatCurve {
};

// ScriptStruct FortniteGame.FortAnimInput_Facial
// Size: 0x0c (Inherited: 0x00)
struct FFortAnimInput_Facial {
	struct FLiveLinkSubjectName SubjectName; // 0x00(0x08)
	enum class EFortFacialAnimTypes CurrentAnimType; // 0x08(0x01)
	bool bCurvesOnly; // 0x09(0x01)
	char pad_A[0x2]; // 0x0a(0x02)
};

// ScriptStruct FortniteGame.AntelopeVehicleBoostLevel
// Size: 0x08 (Inherited: 0x00)
struct FAntelopeVehicleBoostLevel {
	float AccumulationPercent; // 0x00(0x04)
	float BoostTime; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortAppActivationSoundMixPair
// Size: 0x10 (Inherited: 0x00)
struct FFortAppActivationSoundMixPair {
	struct USoundMix* TrueMix; // 0x00(0x08)
	struct USoundMix* FalseMix; // 0x08(0x08)
};

// ScriptStruct FortniteGame.WorldHLODStreamingData
// Size: 0xb0 (Inherited: 0x00)
struct FWorldHLODStreamingData {
	struct TSet<struct FName> MediumLevelHLODPackageNames; // 0x00(0x50)
	struct TSet<struct FName> SplineHLODPackageNames; // 0x50(0x50)
	struct TArray<struct FName> MapsToRebuildHLODs; // 0xa0(0x10)
};

// ScriptStruct FortniteGame.LookAtSetting
// Size: 0xa0 (Inherited: 0x00)
struct FLookAtSetting {
	struct FScalableFloat LookAtDuration; // 0x00(0x28)
	struct FScalableFloat LookAtDurationDeviation; // 0x28(0x28)
	struct FScalableFloat LookAtDelay; // 0x50(0x28)
	struct FScalableFloat LookAtDelayDeviation; // 0x78(0x28)
};

// ScriptStruct FortniteGame.DigestedFocusSetting
// Size: 0x60 (Inherited: 0x00)
struct FDigestedFocusSetting {
	struct FGameplayTagQuery WeaponTagQuery; // 0x00(0x48)
	bool bRequireAmmoToMatch; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	float IgnoreThreatTimeWhenNotAttacking; // 0x4c(0x04)
	float IgnoreThreatDeviationWhenNotAttacking; // 0x50(0x04)
	float IgnoreThreatDuration; // 0x54(0x04)
	float IgnoreThreatDurationDeviation; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// ScriptStruct FortniteGame.FocusSetting
// Size: 0xf0 (Inherited: 0x00)
struct FFocusSetting {
	struct FGameplayTagQuery WeaponTagQuery; // 0x00(0x48)
	bool bRequireAmmoToMatch; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct FScalableFloat IgnoreThreatTimeWhenNotAttacking; // 0x50(0x28)
	struct FScalableFloat IgnoreThreatDeviationWhenNotAttacking; // 0x78(0x28)
	struct FScalableFloat IgnoreThreatDuration; // 0xa0(0x28)
	struct FScalableFloat IgnoreThreatDurationDeviation; // 0xc8(0x28)
};

// ScriptStruct FortniteGame.LookAtDigestedSetting
// Size: 0x10 (Inherited: 0x00)
struct FLookAtDigestedSetting {
	float LookAtDuration; // 0x00(0x04)
	float LookAtDurationDeviation; // 0x04(0x04)
	float LookAtDelay; // 0x08(0x04)
	float LookAtDelayDeviation; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.DigestedTrackingOffsetModifiers
// Size: 0x120 (Inherited: 0x00)
struct FDigestedTrackingOffsetModifiers {
	float CombatStartDuration; // 0x00(0x04)
	float TargetLowHealthThreshold; // 0x04(0x04)
	struct FDigestedTrackingOffsetModifierCurves Curves[0x3]; // 0x08(0x78)
	struct FDigestedTrackingOffsetModifierCurves DistanceCurves[0x3]; // 0x80(0x78)
	struct FDigestedTrackingOffsetModifierCurves InAirHeightCurve; // 0xf8(0x28)
};

// ScriptStruct FortniteGame.DigestedTrackingOffsetModifierCurves
// Size: 0x28 (Inherited: 0x00)
struct FDigestedTrackingOffsetModifierCurves {
	int32_t Values[0xa]; // 0x00(0x28)
};

// ScriptStruct FortniteGame.TrackingOffsetModifierInfo
// Size: 0x1b8 (Inherited: 0x00)
struct FTrackingOffsetModifierInfo {
	struct FScalableFloat MinSkill; // 0x00(0x28)
	struct FScalableFloat MaxSkill; // 0x28(0x28)
	struct FTrackingOffsetModifiers Modifiers; // 0x50(0x168)
};

// ScriptStruct FortniteGame.TrackingOffsetModifiers
// Size: 0x168 (Inherited: 0x00)
struct FTrackingOffsetModifiers {
	struct FScalableFloat CombatStartDuration; // 0x00(0x28)
	struct FScalableFloat TargetLowHealthThreshold; // 0x28(0x28)
	struct FScalableFloat Curves[0x3]; // 0x50(0x78)
	struct FScalableFloat DistanceCurves[0x3]; // 0xc8(0x78)
	struct FScalableFloat InAirHeightCurve; // 0x140(0x28)
};

// ScriptStruct FortniteGame.DigestedWeaponAccuracyCategory
// Size: 0x1e0 (Inherited: 0x00)
struct FDigestedWeaponAccuracyCategory {
	struct FGameplayTagContainer Tags; // 0x00(0x20)
	struct FDigestedWeaponAccuracy WeaponAccuracy; // 0x20(0x1b0)
	struct TArray<struct FDigestedWeaponAccuracyCategorySpecialization> Specializations; // 0x1d0(0x10)
};

// ScriptStruct FortniteGame.DigestedWeaponAccuracyCategorySpecialization
// Size: 0x1d0 (Inherited: 0x00)
struct FDigestedWeaponAccuracyCategorySpecialization {
	struct FGameplayTagContainer Tags; // 0x00(0x20)
	struct FDigestedWeaponAccuracy WeaponAccuracy; // 0x20(0x1b0)
};

// ScriptStruct FortniteGame.DigestedWeaponAccuracy
// Size: 0x1b0 (Inherited: 0x00)
struct FDigestedWeaponAccuracy {
	struct FScalableFloat TrackingOffsetError; // 0x00(0x28)
	struct FScalableFloat TargetingTrackingOffsetError; // 0x28(0x28)
	struct FScalableFloat TrackingDistanceFarError; // 0x50(0x28)
	struct FScalableFloat TargetingTrackingDistanceFarError; // 0x78(0x28)
	struct FScalableFloat TrackingDistanceNearError; // 0xa0(0x28)
	struct FScalableFloat TargetingTrackingDistanceNearError; // 0xc8(0x28)
	struct FScalableFloat TrackingDistanceNearErrorProbability; // 0xf0(0x28)
	struct FScalableFloat TargetingActivationProbability; // 0x118(0x28)
	struct FScalableFloat FiringRestrictedToTargetingActive; // 0x140(0x28)
	float IdealAttackRange; // 0x168(0x04)
	float TargetingIdealAttackRange; // 0x16c(0x04)
	float MaxAttackRange; // 0x170(0x04)
	float ChanceToAimAtTargetsFeet; // 0x174(0x04)
	struct FScalableFloat ShouldUseProjectileArcForAiming; // 0x178(0x28)
	bool bKeepAimingOnSameSideWhileFiring; // 0x1a0(0x01)
	char pad_1A1[0x3]; // 0x1a1(0x03)
	float MaxTrackingHeightOffsetError; // 0x1a4(0x04)
	float MinRotationInterpSpeed; // 0x1a8(0x04)
	float MaxRotationInterpSpeed; // 0x1ac(0x04)
};

// ScriptStruct FortniteGame.WeaponAccuracyCategory
// Size: 0x300 (Inherited: 0x00)
struct FWeaponAccuracyCategory {
	struct FGameplayTagContainer Tags; // 0x00(0x20)
	struct FWeaponAccuracy WeaponAccuracy; // 0x20(0x2d0)
	struct TArray<struct FWeaponAccuracyCategorySpecialization> Specializations; // 0x2f0(0x10)
};

// ScriptStruct FortniteGame.WeaponAccuracyCategorySpecialization
// Size: 0x2f0 (Inherited: 0x00)
struct FWeaponAccuracyCategorySpecialization {
	struct FGameplayTagContainer Tags; // 0x00(0x20)
	struct FWeaponAccuracy WeaponAccuracy; // 0x20(0x2d0)
};

// ScriptStruct FortniteGame.WeaponAccuracy
// Size: 0x2d0 (Inherited: 0x00)
struct FWeaponAccuracy {
	struct FScalableFloat MaxTrackingOffsetError; // 0x00(0x28)
	struct FScalableFloat TargetingMaxTrackingOffsetError; // 0x28(0x28)
	struct FScalableFloat MaxTrackingDistanceFarError; // 0x50(0x28)
	struct FScalableFloat TargetingMaxTrackingDistanceFarError; // 0x78(0x28)
	struct FScalableFloat MaxTrackingDistanceNearError; // 0xa0(0x28)
	struct FScalableFloat TargetingMaxTrackingDistanceNearError; // 0xc8(0x28)
	struct FScalableFloat TrackingDistanceNearErrorProbability; // 0xf0(0x28)
	struct FScalableFloat TargetingActivationProbability; // 0x118(0x28)
	struct FScalableFloat FiringRestrictedToTargetingActive; // 0x140(0x28)
	struct FScalableFloat IdealAttackRange; // 0x168(0x28)
	struct FScalableFloat TargetingIdealAttackRange; // 0x190(0x28)
	struct FScalableFloat MaxAttackRangeFactor; // 0x1b8(0x28)
	struct FScalableFloat ShouldAimAtTargetsFeet; // 0x1e0(0x28)
	struct FScalableFloat ShouldUseProjectileArcForAiming; // 0x208(0x28)
	struct FScalableFloat KeepAimingOnSameSideWhileFiring; // 0x230(0x28)
	struct FScalableFloat MaxTrackingHeightOffsetError; // 0x258(0x28)
	struct FScalableFloat MinRotationInterpSpeed; // 0x280(0x28)
	struct FScalableFloat MaxRotationInterpSpeed; // 0x2a8(0x28)
};

// ScriptStruct FortniteGame.DigestedTargetBasedAccuracyCategory
// Size: 0x40 (Inherited: 0x00)
struct FDigestedTargetBasedAccuracyCategory {
	struct FGameplayTagContainer Tags; // 0x00(0x20)
	struct FDigestedTargetBasedAccuracy TargetBasedAccuracy; // 0x20(0x1c)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.DigestedTargetBasedAccuracy
// Size: 0x1c (Inherited: 0x00)
struct FDigestedTargetBasedAccuracy {
	float AimTrackingOffsetErrorMultiplier; // 0x00(0x04)
	float AimTrackingHeightOffsetErrorMultiplier; // 0x04(0x04)
	float AimTrackingDistanceErrorMultiplier; // 0x08(0x04)
	float AimTrackingReactionTimeMultiplier; // 0x0c(0x04)
	float AimTrackingInterpTimeMultiplier; // 0x10(0x04)
	float AimTrackingInAirVelocityThresholdMultiplier; // 0x14(0x04)
	float AimTrackinginAirHeightDataThresholdMultiplier; // 0x18(0x04)
};

// ScriptStruct FortniteGame.TargetBasedAccuracyCategory
// Size: 0x138 (Inherited: 0x00)
struct FTargetBasedAccuracyCategory {
	struct FGameplayTagContainer Tags; // 0x00(0x20)
	struct FTargetBasedAccuracy TargetBasedAccuracy; // 0x20(0x118)
};

// ScriptStruct FortniteGame.TargetBasedAccuracy
// Size: 0x118 (Inherited: 0x00)
struct FTargetBasedAccuracy {
	struct FScalableFloat AimTrackingOffsetErrorMultiplier; // 0x00(0x28)
	struct FScalableFloat AimTrackingHeightOffsetErrorMultiplier; // 0x28(0x28)
	struct FScalableFloat AimTrackingDistanceErrorMultiplier; // 0x50(0x28)
	struct FScalableFloat AimTrackingReactionTimeMultiplier; // 0x78(0x28)
	struct FScalableFloat AimTrackingInterpTimeMultiplier; // 0xa0(0x28)
	struct FScalableFloat AimTrackingInAirVelocityThresholdMultiplier; // 0xc8(0x28)
	struct FScalableFloat AimTrackinginAirHeightDataThresholdMultiplier; // 0xf0(0x28)
};

// ScriptStruct FortniteGame.AthenaFortAIBotDigestedWeightedBuildingList
// Size: 0x18 (Inherited: 0x00)
struct FAthenaFortAIBotDigestedWeightedBuildingList {
	float Weight; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct TArray<struct FFortAthenaAIBotBuildDescriptor> BuildDescriptors; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortAthenaAIBotBuildDescriptor
// Size: 0x10 (Inherited: 0x00)
struct FFortAthenaAIBotBuildDescriptor {
	struct FIntVector Location; // 0x00(0x0c)
	enum class EOrientedConstructionBuildingType BuildingType; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
};

// ScriptStruct FortniteGame.AthenaFortAIBotWeightedBuildingList
// Size: 0x38 (Inherited: 0x00)
struct FAthenaFortAIBotWeightedBuildingList {
	struct FScalableFloat Weight; // 0x00(0x28)
	struct TArray<struct FFortAthenaAIBotBuildDescriptor> BuildDescriptors; // 0x28(0x10)
};

// ScriptStruct FortniteGame.DebugMinimapData
// Size: 0x128 (Inherited: 0x00)
struct FDebugMinimapData {
	bool bIsOverridden; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FSlateBrush DebugMinimapIconBrush; // 0x08(0x88)
	struct FVector2D DebugMinimapIconScale; // 0x90(0x08)
	struct FSlateBrush DebugCompassIconBrush; // 0x98(0x88)
	struct FVector2D DebugCompassIconScale; // 0x120(0x08)
};

// ScriptStruct FortniteGame.FortBotInventoryInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortBotInventoryInfo {
	struct UFortItemDefinition* ItemDefinition; // 0x00(0x08)
	struct UFortWorldItem* FortItem; // 0x08(0x08)
	char pad_10[0x8]; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortAthenaAIBotRunTimeCustomizationData
// Size: 0x10 (Inherited: 0x00)
struct FFortAthenaAIBotRunTimeCustomizationData {
	struct FGameplayTag PredefinedCosmeticSetTag; // 0x00(0x08)
	float CullDistanceSquared; // 0x08(0x04)
	bool bCheckForOverlaps; // 0x0c(0x01)
	bool bHasCustomSquadId; // 0x0d(0x01)
	char CustomSquadId; // 0x0e(0x01)
	char pad_F[0x1]; // 0x0f(0x01)
};

// ScriptStruct FortniteGame.MMRSpawningBracketBaseDataTableRow
// Size: 0x10 (Inherited: 0x08)
struct FMMRSpawningBracketBaseDataTableRow : FTableRowBase {
	int32_t MMRBracketLow; // 0x08(0x04)
	int32_t MMRBracketHigh; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.MMRSpawningBracketNPCDataTableRow
// Size: 0x18 (Inherited: 0x10)
struct FMMRSpawningBracketNPCDataTableRow : FMMRSpawningBracketBaseDataTableRow {
	float Skill; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortBotDigestedHealingItemsSpec
// Size: 0x58 (Inherited: 0x00)
struct FFortBotDigestedHealingItemsSpec {
	struct FGameplayTagQuery TagQuery; // 0x00(0x48)
	struct FFortBotDigestedHealingItemsList HealthItemsList; // 0x48(0x10)
};

// ScriptStruct FortniteGame.FortBotDigestedHealingItemsList
// Size: 0x10 (Inherited: 0x00)
struct FFortBotDigestedHealingItemsList {
	struct TArray<struct FFortBotDigestedHealingItems> HealthItems; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortBotDigestedHealingItems
// Size: 0x28 (Inherited: 0x00)
struct FFortBotDigestedHealingItems {
	float UseItemResourceThreshold; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FGameplayTagContainer ItemTags; // 0x08(0x20)
};

// ScriptStruct FortniteGame.FortBotHealingItemsSpec
// Size: 0x58 (Inherited: 0x00)
struct FFortBotHealingItemsSpec {
	struct FGameplayTagQuery TagQuery; // 0x00(0x48)
	struct FFortBotHealingItemsList HealthItemsList; // 0x48(0x10)
};

// ScriptStruct FortniteGame.FortBotHealingItemsList
// Size: 0x10 (Inherited: 0x00)
struct FFortBotHealingItemsList {
	struct TArray<struct FFortBotHealingItems> HealthItems; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortBotHealingItems
// Size: 0x48 (Inherited: 0x00)
struct FFortBotHealingItems {
	struct FScalableFloat UseItemResourceThreshold; // 0x00(0x28)
	struct FGameplayTagContainer ItemTags; // 0x28(0x20)
};

// ScriptStruct FortniteGame.WeaponAmmoCheat
// Size: 0x58 (Inherited: 0x00)
struct FWeaponAmmoCheat {
	struct FGameplayTag WeaponTag; // 0x00(0x08)
	struct FScalableFloat HasInfiniteAmmo; // 0x08(0x28)
	struct FScalableFloat CheckLoadedAmmoForInfiniteAmmo; // 0x30(0x28)
};

// ScriptStruct FortniteGame.DigestedBotEquipWeaponInfo
// Size: 0x98 (Inherited: 0x00)
struct FDigestedBotEquipWeaponInfo {
	struct FGameplayTagQuery TagQuery; // 0x00(0x48)
	struct FScalableFloat DistanceEffectivenessWithThreat; // 0x48(0x28)
	struct FScalableFloat DistanceEffectivenessNoThreat; // 0x70(0x28)
};

// ScriptStruct FortniteGame.BotEquipWeaponInfo
// Size: 0x98 (Inherited: 0x00)
struct FBotEquipWeaponInfo {
	struct FGameplayTagQuery TagQuery; // 0x00(0x48)
	struct FScalableFloat DistanceEffectivenessWithThreat; // 0x48(0x28)
	struct FScalableFloat DistanceEffectivenessNoThreat; // 0x70(0x28)
};

// ScriptStruct FortniteGame.DigestedBotKnockbackSettings
// Size: 0x50 (Inherited: 0x00)
struct FDigestedBotKnockbackSettings {
	struct FGameplayTagQuery TagQuery; // 0x00(0x48)
	bool bShouldAllowCharacterToBeLaunched; // 0x48(0x01)
	bool bShouldStopActiveMovement; // 0x49(0x01)
	char pad_4A[0x2]; // 0x4a(0x02)
	float IgnoreMoveInputDuration; // 0x4c(0x04)
};

// ScriptStruct FortniteGame.BotKnockbackSettings
// Size: 0xc0 (Inherited: 0x00)
struct FBotKnockbackSettings {
	struct FGameplayTagQuery TagQuery; // 0x00(0x48)
	struct FScalableFloat ShouldAllowCharacterToBeLaunched; // 0x48(0x28)
	struct FScalableFloat ShouldStopActiveMovement; // 0x70(0x28)
	struct FScalableFloat IgnoreMoveInputDuration; // 0x98(0x28)
};

// ScriptStruct FortniteGame.FortAthenaAIBotNameRegionData
// Size: 0x38 (Inherited: 0x00)
struct FFortAthenaAIBotNameRegionData {
	struct FString RegionId; // 0x00(0x10)
	struct TSoftObjectPtr<struct UDataTable> NameDataTable; // 0x10(0x28)
};

// ScriptStruct FortniteGame.FortAthenaAIBotNameDataTableRow
// Size: 0x28 (Inherited: 0x08)
struct FFortAthenaAIBotNameDataTableRow : FTableRowBase {
	struct FString Name; // 0x08(0x10)
	struct FString UniqueId; // 0x18(0x10)
};

// ScriptStruct FortniteGame.SoundPerceptionSetting
// Size: 0x78 (Inherited: 0x00)
struct FSoundPerceptionSetting {
	struct FScalableFloat Loudness; // 0x00(0x28)
	struct FScalableFloat IgnoreTime; // 0x28(0x28)
	struct FScalableFloat OverrideReactionDistance; // 0x50(0x28)
};

// ScriptStruct FortniteGame.PerceptionStateSettings
// Size: 0xc8 (Inherited: 0x00)
struct FPerceptionStateSettings {
	struct FScalableFloat ForgetTime; // 0x00(0x28)
	struct FScalableFloat ForgetTimeDeviation; // 0x28(0x28)
	struct FScalableFloat ForgetDistance; // 0x50(0x28)
	struct FScalableFloat ForgetDistanceDeviation; // 0x78(0x28)
	struct FScalableFloat ThreatDistanceWeight; // 0xa0(0x28)
};

// ScriptStruct FortniteGame.DigestedSightReactionSpecialization
// Size: 0x70 (Inherited: 0x00)
struct FDigestedSightReactionSpecialization {
	struct FGameplayTagContainer Tags; // 0x00(0x20)
	struct FScalableFloat SightMinAdditionTime; // 0x20(0x28)
	struct FScalableFloat SightMaxAdditionTime; // 0x48(0x28)
};

// ScriptStruct FortniteGame.SightReactionSpecialization
// Size: 0x70 (Inherited: 0x00)
struct FSightReactionSpecialization {
	struct FGameplayTagContainer Tags; // 0x00(0x20)
	struct FScalableFloat SightMinAdditionTime; // 0x20(0x28)
	struct FScalableFloat SightMaxAdditionTime; // 0x48(0x28)
};

// ScriptStruct FortniteGame.SoundPerceptionDigestedSetting
// Size: 0x0c (Inherited: 0x00)
struct FSoundPerceptionDigestedSetting {
	float Loudness; // 0x00(0x04)
	float IgnoreTime; // 0x04(0x04)
	float OverrideReactionDistanceSq; // 0x08(0x04)
};

// ScriptStruct FortniteGame.DigestedPerceptionStateSettings
// Size: 0x38 (Inherited: 0x00)
struct FDigestedPerceptionStateSettings {
	float ForgetTime; // 0x00(0x04)
	float ForgetTimeDeviation; // 0x04(0x04)
	float ForgetDistance; // 0x08(0x04)
	float ForgetDistanceDeviation; // 0x0c(0x04)
	char pad_10[0x28]; // 0x10(0x28)
};

// ScriptStruct FortniteGame.AlertLevelInfo
// Size: 0x10 (Inherited: 0x00)
struct FAlertLevelInfo {
	struct TArray<struct UAISenseConfig*> SensesConfig; // 0x00(0x10)
};

// ScriptStruct FortniteGame.PlaystyleSwitchToAggressiveData
// Size: 0xe8 (Inherited: 0x00)
struct FPlaystyleSwitchToAggressiveData {
	struct FGameplayTagQuery TagQueryToMatch; // 0x00(0x48)
	struct FScalableFloat TurnToAggressiveMinimumDistance; // 0x48(0x28)
	struct FScalableFloat TurnToAggressiveTime; // 0x70(0x28)
	struct FScalableFloat SwitchBackToDefensivePreventionTime; // 0x98(0x28)
	struct FScalableFloat DamageThresholdToSwitchToAggressive; // 0xc0(0x28)
};

// ScriptStruct FortniteGame.PlaystyleSwitchToAggressiveDataDigested
// Size: 0x58 (Inherited: 0x00)
struct FPlaystyleSwitchToAggressiveDataDigested {
	struct FGameplayTagQuery TagQueryToMatch; // 0x00(0x48)
	float TurnToAggressiveMinimumDistanceSquared; // 0x48(0x04)
	float TurnToAggressiveTime; // 0x4c(0x04)
	float DamageThresholdToSwitchToAggressive; // 0x50(0x04)
	float SwitchBackToDefensivePreventionTime; // 0x54(0x04)
};

// ScriptStruct FortniteGame.DigestedRangedWeaponSkillCategory
// Size: 0x48 (Inherited: 0x00)
struct FDigestedRangedWeaponSkillCategory {
	struct FGameplayTagContainer Tags; // 0x00(0x20)
	struct FDigestedRangedWeaponSkill WeaponSkill; // 0x20(0x18)
	struct TArray<struct FDigestedRangedWeaponSkillCategorySpecialization> Specializations; // 0x38(0x10)
};

// ScriptStruct FortniteGame.DigestedRangedWeaponSkillCategorySpecialization
// Size: 0x38 (Inherited: 0x00)
struct FDigestedRangedWeaponSkillCategorySpecialization {
	struct FGameplayTagContainer Tags; // 0x00(0x20)
	struct FDigestedRangedWeaponSkill WeaponSkill; // 0x20(0x18)
};

// ScriptStruct FortniteGame.DigestedRangedWeaponSkill
// Size: 0x18 (Inherited: 0x00)
struct FDigestedRangedWeaponSkill {
	float DelayBetweenShots; // 0x00(0x04)
	float DelayDeviationTimeBetweenShots; // 0x04(0x04)
	float TriggerHoldDuration; // 0x08(0x04)
	float TriggerHoldDeviationTime; // 0x0c(0x04)
	float DelayBeforeFirstShot; // 0x10(0x04)
	float ShotDelayAfterTargeting; // 0x14(0x04)
};

// ScriptStruct FortniteGame.RangedWeaponSkillCategory
// Size: 0x120 (Inherited: 0x00)
struct FRangedWeaponSkillCategory {
	struct FGameplayTagContainer Tags; // 0x00(0x20)
	struct FRangedWeaponSkill WeaponSkill; // 0x20(0xf0)
	struct TArray<struct FRangedWeaponSkillCategorySpecialization> Specializations; // 0x110(0x10)
};

// ScriptStruct FortniteGame.RangedWeaponSkillCategorySpecialization
// Size: 0x110 (Inherited: 0x00)
struct FRangedWeaponSkillCategorySpecialization {
	struct FGameplayTagContainer Tags; // 0x00(0x20)
	struct FRangedWeaponSkill WeaponSkill; // 0x20(0xf0)
};

// ScriptStruct FortniteGame.RangedWeaponSkill
// Size: 0xf0 (Inherited: 0x00)
struct FRangedWeaponSkill {
	struct FScalableFloat DelayBetweenShots; // 0x00(0x28)
	struct FScalableFloat DelayDeviationTimeBetweenShots; // 0x28(0x28)
	struct FScalableFloat TriggerHoldDuration; // 0x50(0x28)
	struct FScalableFloat TriggerHoldDeviationTime; // 0x78(0x28)
	struct FScalableFloat DelayBeforeFirstShot; // 0xa0(0x28)
	struct FScalableFloat ShotDelayAfterTargeting; // 0xc8(0x28)
};

// ScriptStruct FortniteGame.FortAthenaAILODSetting
// Size: 0x01 (Inherited: 0x00)
struct FFortAthenaAILODSetting {
	bool bIsValid; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortAILODSetting_AIEvaluator
// Size: 0x68 (Inherited: 0x01)
struct FFortAILODSetting_AIEvaluator : FFortAthenaAILODSetting {
	char pad_1[0x7]; // 0x01(0x07)
	struct FScalableFloat IntervalMultiplier; // 0x08(0x28)
	char pad_30[0x8]; // 0x30(0x08)
	struct FScalableFloat RandomDeviationMultiplier; // 0x38(0x28)
	char pad_60[0x8]; // 0x60(0x08)
};

// ScriptStruct FortniteGame.FortAILODSetting_CharacterMovement
// Size: 0x188 (Inherited: 0x01)
struct FFortAILODSetting_CharacterMovement : FFortAthenaAILODSetting {
	char pad_1[0x7]; // 0x01(0x07)
	struct FScalableFloat Interval; // 0x08(0x28)
	struct FScalableFloat RandomDeviation; // 0x30(0x28)
	struct FScalableFloat MinimumDynamicInterval; // 0x58(0x28)
	struct FScalableFloat MaximumDotDifferenceBetweenInputVectors; // 0x80(0x28)
	struct FScalableFloat bDisableAvoidance; // 0xa8(0x28)
	struct FScalableFloat bBotsEnableNavWalkingMode; // 0xd0(0x28)
	struct FScalableFloat bBotsEnablePhysNavWalkingPathFollowingMode; // 0xf8(0x28)
	struct FScalableFloat bSweepWhileNavWalking; // 0x120(0x28)
	struct FScalableFloat bGenerateOverlapInNavWalking; // 0x148(0x28)
	char pad_170[0x18]; // 0x170(0x18)
};

// ScriptStruct FortniteGame.FortAILODSetting_FortWeaponRanged
// Size: 0x68 (Inherited: 0x01)
struct FFortAILODSetting_FortWeaponRanged : FFortAthenaAILODSetting {
	char pad_1[0x7]; // 0x01(0x07)
	struct FScalableFloat Interval; // 0x08(0x28)
	char pad_30[0x8]; // 0x30(0x08)
	struct FScalableFloat RandomDeviation; // 0x38(0x28)
	char pad_60[0x8]; // 0x60(0x08)
};

// ScriptStruct FortniteGame.AITrackedObjectsSet
// Size: 0xd0 (Inherited: 0x00)
struct FAITrackedObjectsSet {
	char pad_0[0xd0]; // 0x00(0xd0)
};

// ScriptStruct FortniteGame.SpawnerDataComponentAffiliationSharedBBConfiguration
// Size: 0x40 (Inherited: 0x00)
struct FSpawnerDataComponentAffiliationSharedBBConfiguration {
	struct FGameplayTag FactionTag; // 0x00(0x08)
	struct FScalableFloat MaximumDistance; // 0x08(0x28)
	struct FGameplayTag SharedBlackboardTag; // 0x30(0x08)
	struct UBlackboardData* SharedBlackboard; // 0x38(0x08)
};

// ScriptStruct FortniteGame.FortBotPassiveHealerActivityDataTableRow
// Size: 0x40 (Inherited: 0x08)
struct FFortBotPassiveHealerActivityDataTableRow : FTableRowBase {
	struct FPrimaryAssetId EmotePrimaryAssetId; // 0x08(0x10)
	struct FText InteractText; // 0x18(0x18)
	struct TArray<struct FText> GreetingTexts; // 0x30(0x10)
};

// ScriptStruct FortniteGame.ConstructionBuildingList
// Size: 0x90 (Inherited: 0x00)
struct FConstructionBuildingList {
	struct FConstructionBuildingInfo BuildingList[0x6]; // 0x00(0x90)
};

// ScriptStruct FortniteGame.ConstructionBuildingInfo
// Size: 0x18 (Inherited: 0x00)
struct FConstructionBuildingInfo {
	struct ABuildingSMActor* BuildingActorClass[0x3]; // 0x00(0x18)
};

// ScriptStruct FortniteGame.InitialGameplayEffectInfo
// Size: 0x10 (Inherited: 0x00)
struct FInitialGameplayEffectInfo {
	struct UGameplayEffect* GameplayEffect; // 0x00(0x08)
	float Level; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortAthenaAILootInfoDataTableRow
// Size: 0x18 (Inherited: 0x08)
struct FFortAthenaAILootInfoDataTableRow : FTableRowBase {
	struct TArray<struct FAILootInfoRowEntry> LootDroppingBehaviors; // 0x08(0x10)
};

// ScriptStruct FortniteGame.AILootInfoRowEntry
// Size: 0x60 (Inherited: 0x00)
struct FAILootInfoRowEntry {
	struct FGameplayTagQuery OptionalTagQuery; // 0x00(0x48)
	char bShouldDropInventoryOnDeath : 1; // 0x48(0x01)
	char bShouldDropLootOnDeath : 1; // 0x48(0x01)
	char pad_48_2 : 6; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct TArray<struct FName> LootTiers; // 0x50(0x10)
};

// ScriptStruct FortniteGame.WeightedAIInventoryLoadout
// Size: 0x38 (Inherited: 0x00)
struct FWeightedAIInventoryLoadout {
	struct FScalableFloat Weight; // 0x00(0x28)
	struct TArray<struct FItemAndCount> Items; // 0x28(0x10)
};

// ScriptStruct FortniteGame.BotPerceivedSound
// Size: 0x18 (Inherited: 0x00)
struct FBotPerceivedSound {
	struct AActor* SourceActor; // 0x00(0x08)
	char pad_8[0x10]; // 0x08(0x10)
};

// ScriptStruct FortniteGame.BotDelayedStimulus
// Size: 0x38 (Inherited: 0x00)
struct FBotDelayedStimulus {
	struct AActor* SourceActor; // 0x00(0x08)
	char pad_8[0x30]; // 0x08(0x30)
};

// ScriptStruct FortniteGame.FortBotTargetHandler
// Size: 0x28 (Inherited: 0x00)
struct FFortBotTargetHandler {
	char pad_0[0x18]; // 0x00(0x18)
	struct TArray<struct FFortBotTargetInfo> Targets; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortBotTargetInfo
// Size: 0xc8 (Inherited: 0x00)
struct FFortBotTargetInfo {
	struct AActor* SourceActor; // 0x00(0x08)
	struct AActor* SupportingActor; // 0x08(0x08)
	char pad_10[0x10]; // 0x10(0x10)
	struct ABuildingActor* AlternateTargetingActor; // 0x20(0x08)
	char pad_28[0xa0]; // 0x28(0xa0)
};

// ScriptStruct FortniteGame.FortBotThreatActorInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortBotThreatActorInfo {
	struct AActor* ThreatActor; // 0x00(0x08)
	char pad_8[0x10]; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortAthenaCompassIcon
// Size: 0xa0 (Inherited: 0x00)
struct FFortAthenaCompassIcon {
	struct FSlateBrush Brush; // 0x00(0x88)
	float Scale; // 0x88(0x04)
	float MaxPawnDistanceForScaling; // 0x8c(0x04)
	float DistanceForScalingMultiplier_Min; // 0x90(0x04)
	float DistanceForScalingMultiplier_Max; // 0x94(0x04)
	float YOffset; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// ScriptStruct FortniteGame.BiplaneAsyncOutPersistent
// Size: 0x1d0 (Inherited: 0x10)
struct FBiplaneAsyncOutPersistent : FFortVehicleOutPersistent {
	bool bIsEngineOn; // 0x10(0x01)
	bool bIsFlying; // 0x11(0x01)
	bool bAutoStartEngineInAir; // 0x12(0x01)
	bool bEngineStartIsBeingHeld; // 0x13(0x01)
	char pad_14[0x4]; // 0x14(0x04)
	struct FAileronRoll AileronRoll; // 0x18(0xe0)
	struct FFortRechargingActionTimer BoostAction; // 0xf8(0xd8)
};

// ScriptStruct FortniteGame.FortRechargingActionTimer
// Size: 0xd8 (Inherited: 0x00)
struct FFortRechargingActionTimer {
	char pad_0[0xa8]; // 0x00(0xa8)
	float ChargeRate; // 0xa8(0x04)
	float ActiveExpenseRate; // 0xac(0x04)
	float PassiveExpenseRate; // 0xb0(0x04)
	float MinActiveDuration; // 0xb4(0x04)
	float MinActivationCharge; // 0xb8(0x04)
	float ActiveCooldownTime; // 0xbc(0x04)
	float ChargeThreshold; // 0xc0(0x04)
	float Charge; // 0xc4(0x04)
	bool bIsActive; // 0xc8(0x01)
	bool bIsCharging; // 0xc9(0x01)
	bool bIsPassive; // 0xca(0x01)
	char pad_CB[0xd]; // 0xcb(0x0d)
};

// ScriptStruct FortniteGame.AileronRoll
// Size: 0xe0 (Inherited: 0x00)
struct FAileronRoll {
	struct FFortRechargingActionTimer Action; // 0x00(0xd8)
	enum class EAileronRollDirection Direction; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)
};

// ScriptStruct FortniteGame.BiplaneAsyncInPersistent
// Size: 0x168 (Inherited: 0x138)
struct FBiplaneAsyncInPersistent : FFortVehicleInPersistent {
	char pad_138[0x8]; // 0x138(0x08)
	struct UFortDoghouseVehicleConfigs* FortAirVehicleConfigs; // 0x140(0x08)
	char pad_148[0x20]; // 0x148(0x20)
};

// ScriptStruct FortniteGame.FlightControlSurfaces
// Size: 0x10 (Inherited: 0x00)
struct FFlightControlSurfaces {
	float RudderAngle; // 0x00(0x04)
	float AileronAngle; // 0x04(0x04)
	float ElevatorAngle; // 0x08(0x04)
	float FlapAngle; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.ReplicatedControlState
// Size: 0x1c (Inherited: 0x00)
struct FReplicatedControlState {
	struct FVector_NetQuantizeNormal Up; // 0x00(0x0c)
	struct FVector_NetQuantizeNormal Forward; // 0x0c(0x0c)
	char bIsEngineOn : 1; // 0x18(0x01)
	char pad_18_1 : 7; // 0x18(0x01)
	char pad_19[0x3]; // 0x19(0x03)
};

// ScriptStruct FortniteGame.RotationLerpData
// Size: 0x50 (Inherited: 0x00)
struct FRotationLerpData {
	struct FQuat RotationLerp_Start; // 0x00(0x10)
	struct FQuat RotationLerp_End; // 0x10(0x10)
	struct FQuat RotationLerp_Target; // 0x20(0x10)
	float TotalLerpTime; // 0x30(0x04)
	char pad_34[0x1c]; // 0x34(0x1c)
};

// ScriptStruct FortniteGame.LocationLerpData
// Size: 0x38 (Inherited: 0x00)
struct FLocationLerpData {
	struct FVector PositionLerp_Start; // 0x00(0x0c)
	struct FVector PositionLerp_End; // 0x0c(0x0c)
	struct FVector PositionLerp_Target; // 0x18(0x0c)
	float TotalLerpTime; // 0x24(0x04)
	char pad_28[0x10]; // 0x28(0x10)
};

// ScriptStruct FortniteGame.ExitCraftInfo
// Size: 0x1e8 (Inherited: 0x00)
struct FExitCraftInfo {
	struct FGameplayTag RequiredExitCraftTag; // 0x00(0x08)
	struct FScalableFloat ExitCraftSpawnerZOffset; // 0x08(0x28)
	struct FScalableFloat ExitCraftSpawnDelay; // 0x30(0x28)
	struct FScalableFloat SpawnDestructionInitialDelay; // 0x58(0x28)
	struct FScalableFloat SpawnDestructionDelayBetweenPieces; // 0x80(0x28)
	struct FScalableFloat ExitCraftZOffset; // 0xa8(0x28)
	struct FScalableFloat ExitCraftTargetZOffset; // 0xd0(0x28)
	struct FScalableFloat ExitCraftTimeToHoverLocation; // 0xf8(0x28)
	struct FScalableFloat ExitCraftTimeToHoverRotation; // 0x120(0x28)
	struct FScalableFloat MinLandingSpeed; // 0x148(0x28)
	struct FScalableFloat ExitZOffset; // 0x170(0x28)
	struct FScalableFloat ExitTime; // 0x198(0x28)
	struct FScalableFloat InteractionTime; // 0x1c0(0x28)
};

// ScriptStruct FortniteGame.FortAthenaTeamHUDInfo
// Size: 0x28 (Inherited: 0x00)
struct FFortAthenaTeamHUDInfo {
	struct FText DisplayName; // 0x00(0x18)
	struct FLinearColor Color; // 0x18(0x10)
};

// ScriptStruct FortniteGame.AthenaLoadoutEntry
// Size: 0x38 (Inherited: 0x00)
struct FAthenaLoadoutEntry {
	struct UFortWorldItemDefinition* ItemToGrant; // 0x00(0x08)
	struct FScalableFloat NumberOfItemsToGrant; // 0x08(0x28)
	int32_t DesiredSlot; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// ScriptStruct FortniteGame.JackalOutPersistent
// Size: 0x18 (Inherited: 0x10)
struct FJackalOutPersistent : FFortVehicleOutPersistent {
	bool bShouldCorrectYaw; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.JackalOutContinuous
// Size: 0x38 (Inherited: 0x28)
struct FJackalOutContinuous : FFortVehicleOutContinuous {
	char pad_28[0x10]; // 0x28(0x10)
};

// ScriptStruct FortniteGame.JackalInPersistent
// Size: 0x158 (Inherited: 0x138)
struct FJackalInPersistent : FFortVehicleInPersistent {
	struct UFortAthenaJackalVehicleConfigs* FortJackalVehicleConfigs; // 0x138(0x08)
	bool bBoosting; // 0x140(0x01)
	char pad_141[0x3]; // 0x141(0x03)
	float PendingJumpCharge; // 0x144(0x04)
	float FrontLateralFrictionRuntimeMultiplier; // 0x148(0x04)
	float TopSpeedCurrentMultiplier; // 0x14c(0x04)
	float PushForceCurrentMultiplier; // 0x150(0x04)
	char pad_154[0x4]; // 0x154(0x04)
};

// ScriptStruct FortniteGame.BuildingGameplayActorSpawnDetails
// Size: 0x1a0 (Inherited: 0x00)
struct FBuildingGameplayActorSpawnDetails {
	struct ABuildingGameplayActor* BuildingGameplayActorClass; // 0x00(0x08)
	struct AActor* TargetActorClass; // 0x08(0x08)
	struct FScalableFloat SpawnHeight; // 0x10(0x28)
	struct FScalableFloat GlobalMaxBGAs; // 0x38(0x28)
	struct FScalableFloat MinNumToSpawnPerPhase; // 0x60(0x28)
	struct FScalableFloat MaxNumToSpawnPerPhase; // 0x88(0x28)
	struct FScalableFloat MinTimeToStartSpawnningBGAs; // 0xb0(0x28)
	struct FScalableFloat MaxTimeToStartSpawnningBGAs; // 0xd8(0x28)
	struct FScalableFloat MinTimeBetweenBGASpawns; // 0x100(0x28)
	struct FScalableFloat MaxTimeBetweenBGASpawns; // 0x128(0x28)
	struct FScalableFloat MinTimeToRepeatSpawningBGAs; // 0x150(0x28)
	struct FScalableFloat MaxTimeToRepeatSpawningBGAs; // 0x178(0x28)
};

// ScriptStruct FortniteGame.FortRespawnLogicData
// Size: 0x140 (Inherited: 0x00)
struct FFortRespawnLogicData {
	struct FScalableFloat DirectionDeviation; // 0x00(0x28)
	struct FScalableFloat MinDistFromCenterPercent; // 0x28(0x28)
	struct FScalableFloat MaxDistFromCenterPercent; // 0x50(0x28)
	struct FScalableFloat SingleBusRespawnNearDeathLocation; // 0x78(0x28)
	struct FScalableFloat MinHeightFromGround; // 0xa0(0x28)
	struct FScalableFloat MinHeightFromZero; // 0xc8(0x28)
	struct FScalableFloat CameraDistance; // 0xf0(0x28)
	struct FScalableFloat RespawnTraceHeight; // 0x118(0x28)
};

// ScriptStruct FortniteGame.FortRespawnLogicData_Teams
// Size: 0x1e0 (Inherited: 0x140)
struct FFortRespawnLogicData_Teams : FFortRespawnLogicData {
	struct FScalableFloat TryPlaceByTeammates; // 0x140(0x28)
	struct FScalableFloat AlsoPlaceBehindTeammates; // 0x168(0x28)
	struct FScalableFloat MaxDistanceFromTeammates; // 0x190(0x28)
	struct FScalableFloat MinDistanceFromTeammates; // 0x1b8(0x28)
};

// ScriptStruct FortniteGame.AdHocSquad_InviteDataArray
// Size: 0x120 (Inherited: 0x108)
struct FAdHocSquad_InviteDataArray : FFastArraySerializer {
	struct TArray<struct FAdHocSquad_InviteData> Entries; // 0x108(0x10)
	char pad_118[0x8]; // 0x118(0x08)
};

// ScriptStruct FortniteGame.AshtonStoneState
// Size: 0x18 (Inherited: 0x00)
struct FAshtonStoneState {
	enum class EAshtonStoneType StoneType; // 0x00(0x01)
	enum class EAshtonStoneStateType StoneState; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	struct FGameplayTag GameplayTag; // 0x04(0x08)
	float SpawnTime; // 0x0c(0x04)
	bool bHasEverSpawned; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
	int32_t SpawnDataIdx; // 0x14(0x04)
};

// ScriptStruct FortniteGame.AshtonStoneData
// Size: 0xb8 (Inherited: 0x00)
struct FAshtonStoneData {
	enum class EAshtonStoneType StoneType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct UFortWorldItemDefinition* StoneItemDefinition; // 0x08(0x08)
	struct FSlateBrush StoneIconBrush; // 0x10(0x88)
	struct FVector2D MapIconScale; // 0x98(0x08)
	struct FGameplayTag GameplayTag; // 0xa0(0x08)
	struct FGameplayTag PickupTag; // 0xa8(0x08)
	enum class EAshtonStoneStateType InitialStoneState; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)
};

// ScriptStruct FortniteGame.FortPieSliceSpawnData
// Size: 0xa0 (Inherited: 0x00)
struct FFortPieSliceSpawnData {
	struct FScalableFloat SpawnDirection; // 0x00(0x28)
	struct FScalableFloat SpawnDirectionDeviation; // 0x28(0x28)
	struct FScalableFloat MinSpawnDistanceFromCenter; // 0x50(0x28)
	struct FScalableFloat MaxSpawnDistanceFromCenter; // 0x78(0x28)
};

// ScriptStruct FortniteGame.AshtonStoneSpawnData
// Size: 0xf0 (Inherited: 0xa0)
struct FAshtonStoneSpawnData : FFortPieSliceSpawnData {
	struct FScalableFloat SpawnDelay; // 0xa0(0x28)
	struct FScalableFloat SpawnSafeZoneIndex; // 0xc8(0x28)
};

// ScriptStruct FortniteGame.BagelLeaderboardQuery
// Size: 0x88 (Inherited: 0x00)
struct FBagelLeaderboardQuery {
	struct FUniqueNetIdRepl RequestingId; // 0x00(0x28)
	char pad_28[0x60]; // 0x28(0x60)
};

// ScriptStruct FortniteGame.BagelFriendsLeaderboard
// Size: 0x20 (Inherited: 0x00)
struct FBagelFriendsLeaderboard {
	struct FString Name; // 0x00(0x10)
	struct TArray<struct FBagelLeaderboardEntry> LeaderBoard; // 0x10(0x10)
};

// ScriptStruct FortniteGame.BagelLeaderboardEntry
// Size: 0x48 (Inherited: 0x00)
struct FBagelLeaderboardEntry {
	struct FString DisplayName; // 0x00(0x10)
	int32_t Value; // 0x10(0x04)
	int32_t Rank; // 0x14(0x04)
	struct FUniqueNetIdRepl UserNetId; // 0x18(0x28)
	bool bIsSpecialEntry; // 0x40(0x01)
	bool bIsLocalPlayer; // 0x41(0x01)
	char pad_42[0x6]; // 0x42(0x06)
};

// ScriptStruct FortniteGame.BagelLootTierOverrideAssetData
// Size: 0x0c (Inherited: 0x00)
struct FBagelLootTierOverrideAssetData {
	int32_t SafeZoneIndex; // 0x00(0x04)
	struct FName TieredGroup; // 0x04(0x08)
};

// ScriptStruct FortniteGame.BagelDifficultySettings
// Size: 0xa8 (Inherited: 0x00)
struct FBagelDifficultySettings {
	struct FScalableFloat SpawnCountPlayerCountMultiplier; // 0x00(0x28)
	struct FScalableFloat SpawnCountDifficultyMultiplier; // 0x28(0x28)
	struct FScalableFloat AIEffectPlayerCountMultiplier; // 0x50(0x28)
	struct FScalableFloat AIEffectDifficultyMultiplier; // 0x78(0x28)
	float SpawnCountMultiplier; // 0xa0(0x04)
	float AIEffectMultiplier; // 0xa4(0x04)
};

// ScriptStruct FortniteGame.BagelScoreData
// Size: 0x88 (Inherited: 0x00)
struct FBagelScoreData {
	struct AActor* ActorClass; // 0x00(0x08)
	struct FGameplayTagContainer Tags; // 0x08(0x20)
	struct FGameplayTagContainer ExclusionTags; // 0x28(0x20)
	struct FScalableFloat ScoreValue; // 0x48(0x28)
	struct FText ScoreText; // 0x70(0x18)
};

// ScriptStruct FortniteGame.BagelPlayerDataArray
// Size: 0x118 (Inherited: 0x108)
struct FBagelPlayerDataArray : FFastArraySerializer {
	struct TArray<struct FBagelPlayerDataEntry> Entries; // 0x108(0x10)
};

// ScriptStruct FortniteGame.BagelPlayerDataEntry
// Size: 0x80 (Inherited: 0x0c)
struct FBagelPlayerDataEntry : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct AFortPlayerStateAthena* PlayerState; // 0x10(0x08)
	int32_t Scores[0xe]; // 0x18(0x38)
	int32_t TotalScore; // 0x50(0x04)
	char StreakScoreLevel; // 0x54(0x01)
	char StreakMultiplierCurrentKillCount; // 0x55(0x01)
	char pad_56[0x2]; // 0x56(0x02)
	float LastAIKillTime; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
	struct TArray<float> AIKillTimes; // 0x60(0x10)
	struct FTimerHandle ResetStreakScoreMultiplierTimerHandle; // 0x70(0x08)
	int32_t TotalAIKillCount; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// ScriptStruct FortniteGame.BagelObjectiveAreaInstanceData
// Size: 0x30 (Inherited: 0x00)
struct FBagelObjectiveAreaInstanceData {
	struct FVector Location; // 0x00(0x0c)
	char pad_C[0x4]; // 0x0c(0x04)
	struct AActor* AreaActor; // 0x10(0x08)
	struct FName SpecialActorID; // 0x18(0x08)
	struct TArray<struct FBagelScoreMultiplierInstanceData> ScoreMultipliers; // 0x20(0x10)
};

// ScriptStruct FortniteGame.BagelScoreMultiplierInstanceData
// Size: 0x10 (Inherited: 0x00)
struct FBagelScoreMultiplierInstanceData {
	struct ABuildingActor* Actor; // 0x00(0x08)
	struct FName SpecialActorID; // 0x08(0x08)
};

// ScriptStruct FortniteGame.BagelScoreMultiplierSpawnData
// Size: 0x278 (Inherited: 0xa0)
struct FBagelScoreMultiplierSpawnData : FFortPieSliceSpawnData {
	struct FScalableFloat ScoreMultiplier; // 0xa0(0x28)
	struct FScalableFloat SpawnCount; // 0xc8(0x28)
	struct FScalableFloat MinSpawnTime; // 0xf0(0x28)
	struct FScalableFloat MaxSpawnTime; // 0x118(0x28)
	struct ABuildingActor* ObjectClass; // 0x140(0x08)
	struct FGameplayTag SpecialActorTag; // 0x148(0x08)
	struct FSlateBrush SpecialActorMinimapIconBrush; // 0x150(0x88)
	struct FVector2D SpecialActorMinimapIconScale; // 0x1d8(0x08)
	struct FSlateBrush SpecialActorCompassIconBrush; // 0x1e0(0x88)
	struct FVector2D SpecialActorCompassIconScale; // 0x268(0x08)
	bool bShouldDrawCompassIcon; // 0x270(0x01)
	char pad_271[0x7]; // 0x271(0x07)
};

// ScriptStruct FortniteGame.BagelAreaSpecialActorData
// Size: 0x130 (Inherited: 0x00)
struct FBagelAreaSpecialActorData {
	struct FGameplayTag SpecialActorTag; // 0x00(0x08)
	struct FSlateBrush SpecialActorMinimapIconBrush; // 0x08(0x88)
	struct FVector2D SpecialActorMinimapIconScale; // 0x90(0x08)
	struct FSlateBrush SpecialActorCompassIconBrush; // 0x98(0x88)
	struct FVector2D SpecialActorCompassIconScale; // 0x120(0x08)
	bool bShouldDrawCompassIcon; // 0x128(0x01)
	char pad_129[0x7]; // 0x129(0x07)
};

// ScriptStruct FortniteGame.ItemsToSpawn
// Size: 0x30 (Inherited: 0x00)
struct FItemsToSpawn {
	struct UFortWorldItemDefinition* ItemToDrop; // 0x00(0x08)
	struct FScalableFloat NumberToDrop; // 0x08(0x28)
};

// ScriptStruct FortniteGame.BarrierMountedTurretData
// Size: 0x18 (Inherited: 0x00)
struct FBarrierMountedTurretData {
	struct TArray<struct UMaterialInterface*> MaterialOverrides; // 0x00(0x10)
	struct UMaterialInterface* BaseMaterialOverride; // 0x10(0x08)
};

// ScriptStruct FortniteGame.BarrierHeadData
// Size: 0x10 (Inherited: 0x00)
struct FBarrierHeadData {
	struct TArray<struct UCustomCharacterPart*> PartsToSwapIn; // 0x00(0x10)
};

// ScriptStruct FortniteGame.BarrierTeamState
// Size: 0x28 (Inherited: 0x00)
struct FBarrierTeamState {
	char TeamNum; // 0x00(0x01)
	enum class EBarrierFoodTeam FoodTeam; // 0x01(0x01)
	char pad_2[0x6]; // 0x02(0x06)
	struct AAthenaBarrierFlag* ObjectiveFlag; // 0x08(0x08)
	struct AAthenaBarrierObjective* ObjectiveObject; // 0x10(0x08)
	bool bRespawnEnabled; // 0x18(0x01)
	char pad_19[0xf]; // 0x19(0x0f)
};

// ScriptStruct FortniteGame.LimitedLifeDataArray
// Size: 0x118 (Inherited: 0x108)
struct FLimitedLifeDataArray : FFastArraySerializer {
	struct TArray<struct FLimitedLifeDataEntry> Entries; // 0x108(0x10)
};

// ScriptStruct FortniteGame.LimitedLifeDataEntry
// Size: 0x20 (Inherited: 0x0c)
struct FLimitedLifeDataEntry : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct AActor* BackingActor; // 0x10(0x08)
	char TeamId; // 0x18(0x01)
	char pad_19[0x3]; // 0x19(0x03)
	int32_t Lives; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.LimitedLifeByTeamData
// Size: 0x08 (Inherited: 0x00)
struct FLimitedLifeByTeamData {
	bool bUseTeamPooledLives; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t Lives; // 0x04(0x04)
};

// ScriptStruct FortniteGame.UpdateBotSkillInfo
// Size: 0x0c (Inherited: 0x00)
struct FUpdateBotSkillInfo {
	char pad_0[0xc]; // 0x00(0x0c)
};

// ScriptStruct FortniteGame.MMRSpawningBaseRuntimeInfo
// Size: 0x08 (Inherited: 0x00)
struct FMMRSpawningBaseRuntimeInfo {
	char pad_0[0x8]; // 0x00(0x08)
};

// ScriptStruct FortniteGame.MMRSpawningBotsRuntimeInfo
// Size: 0x30 (Inherited: 0x08)
struct FMMRSpawningBotsRuntimeInfo : FMMRSpawningBaseRuntimeInfo {
	char pad_8[0x10]; // 0x08(0x10)
	struct TArray<struct UBotELOSpawningInfo*> ELOSpawningInfos; // 0x18(0x10)
	char pad_28[0x8]; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortOverrideDataTableRow
// Size: 0x30 (Inherited: 0x08)
struct FFortOverrideDataTableRow : FTableRowBase {
	struct FString Name; // 0x08(0x10)
	float Weight; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct TArray<struct FOverrideTablePair> OverrideTableList; // 0x20(0x10)
};

// ScriptStruct FortniteGame.OverrideTablePair
// Size: 0x20 (Inherited: 0x00)
struct FOverrideTablePair {
	struct FString ParentTablePath; // 0x00(0x10)
	struct FString OverrideTablePath; // 0x10(0x10)
};

// ScriptStruct FortniteGame.MMRSpawningBracketBotDataTableRow
// Size: 0x20 (Inherited: 0x10)
struct FMMRSpawningBracketBotDataTableRow : FMMRSpawningBracketBaseDataTableRow {
	struct TArray<struct FMMRPhaseSpawningDataTableInfo> PhaseSpawningItems; // 0x10(0x10)
};

// ScriptStruct FortniteGame.MMRPhaseSpawningDataTableInfo
// Size: 0x18 (Inherited: 0x00)
struct FMMRPhaseSpawningDataTableInfo {
	int32_t GamePhaseIndexToSpawn; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct TArray<struct FMMRSpawningDataTableInfo> SpawningItems; // 0x08(0x10)
};

// ScriptStruct FortniteGame.MMRSpawningDataTableInfo
// Size: 0x0c (Inherited: 0x00)
struct FMMRSpawningDataTableInfo {
	float Skill; // 0x00(0x04)
	float Weight; // 0x04(0x04)
	int32_t SpawingItemIndex; // 0x08(0x04)
};

// ScriptStruct FortniteGame.LocationPOIList
// Size: 0x60 (Inherited: 0x00)
struct FLocationPOIList {
	struct FScalableFloat Enabled; // 0x00(0x28)
	struct FScalableFloat ChanceToApply; // 0x28(0x28)
	struct TArray<struct FCenterOnLocationPOI> List; // 0x50(0x10)
};

// ScriptStruct FortniteGame.CenterOnLocationPOI
// Size: 0x88 (Inherited: 0x00)
struct FCenterOnLocationPOI {
	struct FScalableFloat Enabled; // 0x00(0x28)
	struct FScalableFloat RelativeToPreviousChosenLocation; // 0x28(0x28)
	struct FVector LocationForPOI; // 0x50(0x0c)
	char pad_5C[0x4]; // 0x5c(0x04)
	struct FScalableFloat WithinRadius; // 0x60(0x28)
};

// ScriptStruct FortniteGame.TaggedPOIList
// Size: 0x60 (Inherited: 0x00)
struct FTaggedPOIList {
	struct FScalableFloat Enabled; // 0x00(0x28)
	struct FScalableFloat ChanceToApply; // 0x28(0x28)
	struct TArray<struct FCenterOnTaggedPOI> List; // 0x50(0x10)
};

// ScriptStruct FortniteGame.CenterOnTaggedPOI
// Size: 0x58 (Inherited: 0x00)
struct FCenterOnTaggedPOI {
	struct FScalableFloat Enabled; // 0x00(0x28)
	struct FGameplayTag TagForPOI; // 0x28(0x08)
	struct FScalableFloat WithinRadius; // 0x30(0x28)
};

// ScriptStruct FortniteGame.ChromeRoute
// Size: 0xd0 (Inherited: 0x00)
struct FChromeRoute {
	struct FFortSquadStartSearchParamData SquadStartSearchParam; // 0x00(0xc0)
	struct TArray<struct FGameplayTag> FinishPOITags; // 0xc0(0x10)
};

// ScriptStruct FortniteGame.FortSquadStartSearchParamData
// Size: 0xc0 (Inherited: 0x00)
struct FFortSquadStartSearchParamData {
	struct FGameplayTagContainer FilterTags; // 0x00(0x20)
	struct FScalableFloat DistanceMinimum; // 0x20(0x28)
	struct FScalableFloat DistanceMaximum; // 0x48(0x28)
	struct FScalableFloat bDistance2D; // 0x70(0x28)
	struct FScalableFloat bShuffle; // 0x98(0x28)
};

// ScriptStruct FortniteGame.TaggedPOI
// Size: 0x90 (Inherited: 0x00)
struct FTaggedPOI {
	struct FGameplayTag POITag; // 0x00(0x08)
	struct FScalableFloat Enabled; // 0x08(0x28)
	struct FVector SpawnOffset; // 0x30(0x0c)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct FScalableFloat SelectFromAvailableShrinkLocation; // 0x40(0x28)
	struct TArray<struct FVector2D> AvailableShrinkLocations; // 0x68(0x10)
	struct FText POIOverrideName; // 0x78(0x18)
};

// ScriptStruct FortniteGame.CobaltCombatStormShieldArray
// Size: 0x118 (Inherited: 0x108)
struct FCobaltCombatStormShieldArray : FFastArraySerializer {
	struct TArray<struct FCobaltCombatStormShieldDataEntry> Entries; // 0x108(0x10)
};

// ScriptStruct FortniteGame.CobaltCombatStormShieldDataEntry
// Size: 0xa8 (Inherited: 0x0c)
struct FCobaltCombatStormShieldDataEntry : FFastArraySerializerItem {
	bool bStormShieldActive; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
	struct TArray<char> Teams; // 0x10(0x10)
	struct TArray<int32_t> ParentStormShields; // 0x20(0x10)
	struct AAthenaCobaltStormShield* StormShieldActor; // 0x30(0x08)
	struct FVector StormShieldPOILocation; // 0x38(0x0c)
	struct FGameplayTag POITag; // 0x44(0x08)
	int8_t RoundIndex; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
	struct TArray<int32_t> TeamScores; // 0x50(0x10)
	char LeadingTeam; // 0x60(0x01)
	char TieBreakerTeam; // 0x61(0x01)
	bool bAwardedFirstEliminationOfRound; // 0x62(0x01)
	char FirstLandTeam; // 0x63(0x01)
	char pad_64[0x4]; // 0x64(0x04)
	struct TArray<float> TotalDamageDealt; // 0x68(0x10)
	struct TArray<float> TotalDamageTaken; // 0x78(0x10)
	struct ACobaltPOICameraActor* POICamera; // 0x88(0x08)
	struct FVector2D Team0RespawnPoint; // 0x90(0x08)
	struct FVector2D Team1RespawnPoint; // 0x98(0x08)
	float NextSupplyDropSpawnTime; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// ScriptStruct FortniteGame.CosmeticOverrideData
// Size: 0x10 (Inherited: 0x00)
struct FCosmeticOverrideData {
	enum class EAthenaCustomizationCategory SlotName; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct UFortItemDefinition* CosmeticItem; // 0x08(0x08)
};

// ScriptStruct FortniteGame.CrucibleWorkManager
// Size: 0x158 (Inherited: 0x00)
struct FCrucibleWorkManager {
	char pad_0[0x158]; // 0x00(0x158)
};

// ScriptStruct FortniteGame.CrucibleLeaderboardData
// Size: 0x30 (Inherited: 0x00)
struct FCrucibleLeaderboardData {
	enum class EFortCrucibleLeaderboardId LeaderboardId; // 0x00(0x01)
	enum class EFortCrucibleLeaderboardState CurrentState; // 0x01(0x01)
	char pad_2[0x6]; // 0x02(0x06)
	struct FString LeaderboardName; // 0x08(0x10)
	struct TArray<struct FCrucibleLeaderboardEntry> CurrentCompiledResults; // 0x18(0x10)
	bool bHasBeenRequestedByUser; // 0x28(0x01)
	bool bHasHadWorkQueued; // 0x29(0x01)
	char pad_2A[0x2]; // 0x2a(0x02)
	int32_t NumQueries; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.CrucibleLeaderboardEntry
// Size: 0x48 (Inherited: 0x00)
struct FCrucibleLeaderboardEntry {
	struct FString DisplayName; // 0x00(0x10)
	int32_t Rank; // 0x10(0x04)
	int32_t Value; // 0x14(0x04)
	bool bIsLocalPlayer; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
	struct FUniqueNetIdRepl UserNetId; // 0x20(0x28)
};

// ScriptStruct FortniteGame.CrucibleParticipantData
// Size: 0x88 (Inherited: 0x00)
struct FCrucibleParticipantData {
	struct TWeakObjectPtr<struct AFortPlayerControllerAthena> AthenaPC; // 0x00(0x08)
	char pad_8[0x10]; // 0x08(0x10)
	struct TMap<struct FString, int64_t> LatestRetrievedRawStats; // 0x18(0x50)
	char pad_68[0x20]; // 0x68(0x20)
};

// ScriptStruct FortniteGame.CrucibleCourseData
// Size: 0x10 (Inherited: 0x00)
struct FCrucibleCourseData {
	struct TArray<struct FCrucibleSegmentData> SegmentsData; // 0x00(0x10)
};

// ScriptStruct FortniteGame.CrucibleSegmentData
// Size: 0x14 (Inherited: 0x00)
struct FCrucibleSegmentData {
	bool bRegistered; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t NumAI; // 0x04(0x04)
	int32_t NumTargets; // 0x08(0x04)
	float MissedTargetPenalty; // 0x0c(0x04)
	enum class EFortCrucibleStatType BackendStatType; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
};

// ScriptStruct FortniteGame.CrucibleCourseResults
// Size: 0x30 (Inherited: 0x00)
struct FCrucibleCourseResults {
	float CalculatedScore; // 0x00(0x04)
	float CalculatedTotalPenalty; // 0x04(0x04)
	int32_t CalculatedMissedTargets; // 0x08(0x04)
	int32_t CalculatedSpawnedTargets; // 0x0c(0x04)
	struct TArray<struct FCrucibleSegmentResults> SegmentResults; // 0x10(0x10)
	float StartTime; // 0x20(0x04)
	float FinishTime; // 0x24(0x04)
	float CancelTime; // 0x28(0x04)
	bool bInputMethodWasKBMAtAnyPoint; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
};

// ScriptStruct FortniteGame.CrucibleSegmentResults
// Size: 0x24 (Inherited: 0x00)
struct FCrucibleSegmentResults {
	int32_t SegmentId; // 0x00(0x04)
	float CalculatedScore; // 0x04(0x04)
	float CalculatedPenalty; // 0x08(0x04)
	int32_t CalculatedMissedTargets; // 0x0c(0x04)
	float StartTime; // 0x10(0x04)
	float FinishTime; // 0x14(0x04)
	float CancelTime; // 0x18(0x04)
	int32_t NumAIElims; // 0x1c(0x04)
	int32_t NumTargetElims; // 0x20(0x04)
};

// ScriptStruct FortniteGame.CrucibleStatValue
// Size: 0x28 (Inherited: 0x00)
struct FCrucibleStatValue {
	float BestTime; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	int64_t RawBestTime; // 0x08(0x08)
	enum class EFortCrucibleStatSource Source; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct FString BackendStatName; // 0x18(0x10)
};

// ScriptStruct FortniteGame.PartOverrideData
// Size: 0x30 (Inherited: 0x00)
struct FPartOverrideData {
	enum class EFortCustomGender Gender; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct UCustomCharacterPart*> PartsToSwapIn; // 0x08(0x10)
	struct TArray<struct UCustomCharacterPart*> DefaultParts; // 0x18(0x10)
	struct FGameplayTag CosmeticSwapTag; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortDadbroPickupDespawnData
// Size: 0x10 (Inherited: 0x00)
struct FFortDadbroPickupDespawnData {
	float DespawnTime; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct AFortPickup* Pickup; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortAthenaMutator_SurvivalObjectiveData
// Size: 0x1e0 (Inherited: 0x00)
struct FFortAthenaMutator_SurvivalObjectiveData {
	struct ABuildingActor* BuildingActorObjectiveClass; // 0x00(0x08)
	struct FScalableFloat SpawnDistanceFromGround; // 0x08(0x28)
	int32_t ActivationSafeZoneIndex; // 0x30(0x04)
	char bEndMatchOnDestroy : 1; // 0x34(0x01)
	char bSpawnOnPOI : 1; // 0x34(0x01)
	char pad_34_2 : 6; // 0x34(0x01)
	bool bClearAreaOnSpawn; // 0x35(0x01)
	char pad_36[0x2]; // 0x36(0x02)
	float ClearAreaRadiusOverride; // 0x38(0x04)
	float ClearAreaHalfHeightOverride; // 0x3c(0x04)
	char bIsSpecialActor : 1; // 0x40(0x01)
	char pad_40_1 : 7; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct FGameplayTagQuery POIFilterQuery; // 0x48(0x48)
	int32_t RandomizedPOICount; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
	struct TArray<int32_t> ExtraSafezoneIndexes; // 0x98(0x10)
	struct ABuildingActor* SpawnedBuildingActorObjective; // 0xa8(0x08)
	struct FGameplayTag SpecialActorTag; // 0xb0(0x08)
	struct FSlateBrush SpecialActorMinimapIconBrush; // 0xb8(0x88)
	struct FVector2D SpecialActorMinimapIconScale; // 0x140(0x08)
	struct FSlateBrush SpecialActorCompassIconBrush; // 0x148(0x88)
	struct FVector2D SpecialActorCompassIconScale; // 0x1d0(0x08)
	struct FName SpecialActorID; // 0x1d8(0x08)
};

// ScriptStruct FortniteGame.ControlPointInstanceData
// Size: 0x50 (Inherited: 0x00)
struct FControlPointInstanceData {
	struct AAthenaCapturePoint* ControlPoint; // 0x00(0x08)
	enum class EControlPointState ControlPointState; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	int32_t SpawnDataIdx; // 0x0c(0x04)
	float SpawnTime; // 0x10(0x04)
	float EnableTime; // 0x14(0x04)
	float DisableTime; // 0x18(0x04)
	char PrevOwningTeam; // 0x1c(0x01)
	char pad_1D[0x3]; // 0x1d(0x03)
	struct AFortTeamInfoAthena* CachedOwningTeamInfo; // 0x20(0x08)
	float PointAccrualTime; // 0x28(0x04)
	float PointsRemainder; // 0x2c(0x04)
	float BonusPointAccrualTime; // 0x30(0x04)
	float BonusPointsRemainder; // 0x34(0x04)
	float CachedPointAccrualValue; // 0x38(0x04)
	float CachedBonusPointAccrualValue; // 0x3c(0x04)
	bool bPointFinished; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	int32_t CachedSafeZonePhaseWhenToSpawn; // 0x44(0x04)
	bool bIgnoreForOrderMessaging; // 0x48(0x01)
	bool bAlwaysInPlay; // 0x49(0x01)
	char pad_4A[0x2]; // 0x4a(0x02)
	float TimeOfShutdown; // 0x4c(0x04)
};

// ScriptStruct FortniteGame.ControlPointSpawnData
// Size: 0x238 (Inherited: 0xa0)
struct FControlPointSpawnData : FFortPieSliceSpawnData {
	struct FScalableFloat SpawnDelayTime; // 0xa0(0x28)
	struct FScalableFloat SafeZonePhaseWhenToSpawn; // 0xc8(0x28)
	struct FScalableFloat SafeZonePhaseWhereToSpawn; // 0xf0(0x28)
	struct FScalableFloat EnableDelayTime; // 0x118(0x28)
	struct FScalableFloat EnableInSafeZonePhase; // 0x140(0x28)
	struct FScalableFloat DisableDelayTime; // 0x168(0x28)
	struct FScalableFloat DisableInSafeZonePhase; // 0x190(0x28)
	struct FScalableFloat PointsEarnedPerSecond; // 0x1b8(0x28)
	struct FScalableFloat BonusPointsEarnedPerSecond; // 0x1e0(0x28)
	struct FScalableFloat bIgnoreForOrderMessaging; // 0x208(0x28)
	int32_t IconMaterialIndex; // 0x230(0x04)
	bool bAlwaysInPlay; // 0x234(0x01)
	char pad_235[0x3]; // 0x235(0x03)
};

// ScriptStruct FortniteGame.ControlPointAssetData
// Size: 0x40 (Inherited: 0x00)
struct FControlPointAssetData {
	struct AAthenaCapturePoint* CapturePointClass; // 0x00(0x08)
	struct FScalableFloat SpawnDistanceFromGround; // 0x08(0x28)
	struct FVector2D MiniMapIconScale; // 0x30(0x08)
	struct FVector2D CompassIconScale; // 0x38(0x08)
};

// ScriptStruct FortniteGame.EQSActorSpawnerData
// Size: 0x260 (Inherited: 0x00)
struct FEQSActorSpawnerData {
	struct FName NameId; // 0x00(0x08)
	bool bEnabled; // 0x08(0x01)
	enum class EEQSActorSpawnerTriggerType SpawningTrigger; // 0x09(0x01)
	enum class EFortSafeZoneState SafeZoneStateToStartSpawning; // 0x0a(0x01)
	char pad_B[0x1]; // 0x0b(0x01)
	int32_t SafeZoneIndexToSpawnIn; // 0x0c(0x04)
	struct FScalableFloat DelayBeforeSpawning; // 0x10(0x28)
	struct FScalableFloat TimeBetweenSpawns_Min; // 0x38(0x28)
	struct FScalableFloat TimeBetweenSpawns_Max; // 0x60(0x28)
	struct FScalableFloat TotalActorsToSpawn_Min; // 0x88(0x28)
	struct FScalableFloat TotalActorsToSpawn_Max; // 0xb0(0x28)
	struct FScalableFloat DelayBeforeSpawning_BySafeZoneIndex; // 0xd8(0x28)
	struct FScalableFloat TimeBetweenSpawns_Min_BySafeZoneIndex; // 0x100(0x28)
	struct FScalableFloat TimeBetweenSpawns_Max_BySafeZoneIndex; // 0x128(0x28)
	struct FScalableFloat TotalActorsToSpawn_Min_BySafeZoneIndex; // 0x150(0x28)
	struct FScalableFloat TotalActorsToSpawn_Max_BySafeZoneIndex; // 0x178(0x28)
	struct FScalableFloat bSpawnInCenterOfBuildingGridCell; // 0x1a0(0x28)
	struct FVector SpawnLocationOffset; // 0x1c8(0x0c)
	char pad_1D4[0x4]; // 0x1d4(0x04)
	struct TArray<struct UEQSActorSpawnerHelperDestroyActorsInArea*> SpawnerHelperDestroyActorsInAreaClasses; // 0x1d8(0x10)
	struct FScalableFloat TotalRetryAttemptsOnSpawnFailure; // 0x1e8(0x28)
	bool bAvoidRepeatClassSpawning; // 0x210(0x01)
	char pad_211[0x7]; // 0x211(0x07)
	struct TArray<struct FEQSActorSpawnerClassToSpawnData> SpawnClassesData; // 0x218(0x10)
	struct UEnvQuery* BasePlacementQuery; // 0x228(0x08)
	struct UEnvQuery* SpawnActorPlacementQuery; // 0x230(0x08)
	bool bIncludeMutatorBasePlacementQueryResults; // 0x238(0x01)
	char pad_239[0x7]; // 0x239(0x07)
	struct TArray<struct FEnvNamedValue> SpawnActorPlacementQueryParams; // 0x240(0x10)
	struct UEnvQuery* SpawnedActorRemovalQuery; // 0x250(0x08)
	float BaseQueryingAttemptIntervalTimeSeconds; // 0x258(0x04)
	float SpawnedActorRemovalQueryInterval; // 0x25c(0x04)
};

// ScriptStruct FortniteGame.EQSActorSpawnerClassToSpawnData
// Size: 0x70 (Inherited: 0x00)
struct FEQSActorSpawnerClassToSpawnData {
	char pad_0[0x10]; // 0x00(0x10)
	struct FName SharedAssetID; // 0x10(0x08)
	struct FScalableFloat Weight; // 0x18(0x28)
	enum class EEQSActorSpawnerSpawnType SpawnActorType; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct AActor* ActorClassToSpawn; // 0x48(0x08)
	float AdjustSpawnedActorToGroundLocationTraceZOffset; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct UFortAthenaAISpawnerData* AISpawnerData; // 0x58(0x08)
	struct AFortPickup* PickupClassToSpawn; // 0x60(0x08)
	struct UFortItemDefinition* PickupItemDefinition; // 0x68(0x08)
};

// ScriptStruct FortniteGame.TargetDataEntry
// Size: 0x80 (Inherited: 0x00)
struct FTargetDataEntry {
	struct TArray<struct AAthenaBuildingFoundationObjective*> Targets; // 0x00(0x10)
	struct FGameplayTag FoundationTag; // 0x10(0x08)
	struct FScalableFloat HealthPercentRequiredToMoveOn; // 0x18(0x28)
	bool bFindInStormCircle; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct TArray<int32_t> StormCircleIndices; // 0x48(0x10)
	struct FScalableFloat NumberOfFoundationsToFind; // 0x58(0x28)
};

// ScriptStruct FortniteGame.TeamSetupDataEntry
// Size: 0x18 (Inherited: 0x00)
struct FTeamSetupDataEntry {
	char TeamNum; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct UCustomCharacterPart*> PartsToSwapIn; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortAthenaMutator_GamePhaseMessageData
// Size: 0x20 (Inherited: 0x00)
struct FFortAthenaMutator_GamePhaseMessageData {
	bool bSendIfPhaseSkipped; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FAthenaGameMessageData> Messages; // 0x08(0x10)
	char pad_18[0x8]; // 0x18(0x08)
};

// ScriptStruct FortniteGame.GunGameGunEntries
// Size: 0x10 (Inherited: 0x00)
struct FGunGameGunEntries {
	struct TArray<struct FGunGameGunEntry> Entries; // 0x00(0x10)
};

// ScriptStruct FortniteGame.GunGameGunEntry
// Size: 0x68 (Inherited: 0x00)
struct FGunGameGunEntry {
	struct UFortWeaponItemDefinition* Weapon; // 0x00(0x08)
	struct FPrimaryAssetId WeaponAssetId; // 0x08(0x10)
	struct FScalableFloat Enabled; // 0x18(0x28)
	struct FScalableFloat AwardAtElim; // 0x40(0x28)
};

// ScriptStruct FortniteGame.GunGamePlayerData
// Size: 0x10 (Inherited: 0x00)
struct FGunGamePlayerData {
	struct TArray<struct UFortWeaponItemDefinition*> CurrentlyAssignedWeapons; // 0x00(0x10)
};

// ScriptStruct FortniteGame.CosmeticsToApplyOnItemPickupData
// Size: 0x40 (Inherited: 0x00)
struct FCosmeticsToApplyOnItemPickupData {
	struct FScalableFloat bEnabled; // 0x00(0x28)
	struct UFortGadgetItemDefinition* GadgetItemDefinition; // 0x28(0x08)
	struct UAthenaPickaxeItemDefinition* PickaxeItemDefinition; // 0x30(0x08)
	struct FGameplayTag GameplayCueTag; // 0x38(0x08)
};

// ScriptStruct FortniteGame.ItemsToGiveAtPhase
// Size: 0x30 (Inherited: 0x00)
struct FItemsToGiveAtPhase {
	struct UFortWorldItemDefinition* ItemToDrop; // 0x00(0x08)
	struct FScalableFloat NumberToGive; // 0x08(0x28)
};

// ScriptStruct FortniteGame.ItemsToGive
// Size: 0x30 (Inherited: 0x00)
struct FItemsToGive {
	struct UFortWorldItemDefinition* ItemToDrop; // 0x00(0x08)
	struct FScalableFloat NumberToGive; // 0x08(0x28)
};

// ScriptStruct FortniteGame.GravityMovementData
// Size: 0x14 (Inherited: 0x00)
struct FGravityMovementData {
	float GravityZScale; // 0x00(0x04)
	float VehicleGravityZScale; // 0x04(0x04)
	float JumpZVelocityOverride; // 0x08(0x04)
	float JumpHorizontalAccelerationOverride; // 0x0c(0x04)
	float JumpHorizontalVelocityOverride; // 0x10(0x04)
};

// ScriptStruct FortniteGame.HeistTeamHoldingJewelInfo
// Size: 0x0c (Inherited: 0x00)
struct FHeistTeamHoldingJewelInfo {
	int32_t JewelsHeld; // 0x00(0x04)
	float TimeStartedHoldingJewel; // 0x04(0x04)
	float AccumulatedTotalTime; // 0x08(0x04)
};

// ScriptStruct FortniteGame.HeistPostMatchAnalyticsData
// Size: 0x48 (Inherited: 0x00)
struct FHeistPostMatchAnalyticsData {
	int32_t SupplyDropsOpenedPerMatch; // 0x00(0x04)
	int32_t JewelsLostToStorm; // 0x04(0x04)
	int32_t HeistDropsLostToStorm; // 0x08(0x04)
	int32_t JewelsEquippedPerMatch; // 0x0c(0x04)
	struct TArray<float> TimeJewelHeldPerTeam; // 0x10(0x10)
	struct TArray<int32_t> PlayersAlivePerEscape; // 0x20(0x10)
	int32_t NumSuccessfulEscapes; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct TArray<char> WinningTeams; // 0x38(0x10)
};

// ScriptStruct FortniteGame.HeistExitCraftData
// Size: 0x30 (Inherited: 0x00)
struct FHeistExitCraftData {
	struct AFortAthenaExitCraftSpawner* ExitCraftSpawner; // 0x00(0x08)
	struct AFortAthenaExitCraft* SpawnedExitCraft; // 0x08(0x08)
	enum class EHeistExitCraftState ExitCraftState; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct TArray<struct AFortPlayerPawnAthena*> DepartedPawns; // 0x18(0x10)
	float SpawnTime; // 0x28(0x04)
	bool bIsUsed; // 0x2c(0x01)
	bool bHasDeparted; // 0x2d(0x01)
	char pad_2E[0x2]; // 0x2e(0x02)
};

// ScriptStruct FortniteGame.HeistBlingDropSpawnData
// Size: 0xc8 (Inherited: 0xa0)
struct FHeistBlingDropSpawnData : FFortPieSliceSpawnData {
	struct FScalableFloat SafeZonePhaseWhereToSpawn; // 0xa0(0x28)
};

// ScriptStruct FortniteGame.HeistExitCraftSpawnData
// Size: 0x118 (Inherited: 0xa0)
struct FHeistExitCraftSpawnData : FFortPieSliceSpawnData {
	struct FScalableFloat SpawnDelayTime; // 0xa0(0x28)
	struct FScalableFloat SafeZonePhaseWhenToSpawn; // 0xc8(0x28)
	struct FScalableFloat SafeZonePhaseWhereToSpawn; // 0xf0(0x28)
};

// ScriptStruct FortniteGame.HUDElementsToHideData
// Size: 0x30 (Inherited: 0x00)
struct FHUDElementsToHideData {
	enum class EAthenaGamePhase StartHidingGamePhase; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t StartHidingSafeZonePhase; // 0x04(0x04)
	enum class EAthenaGamePhase StopHidingGamePhase; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	int32_t StopHidingSafeZonePhase; // 0x0c(0x04)
	struct FGameplayTagContainer HUDElementsToHide; // 0x10(0x20)
};

// ScriptStruct FortniteGame.InfiltrationPOIInfo
// Size: 0x40 (Inherited: 0x00)
struct FInfiltrationPOIInfo {
	struct FGameplayTag POITag; // 0x00(0x08)
	struct TArray<struct AInfiltrationCarryObjectSpawnPoint*> IntelSpawnPoints; // 0x08(0x10)
	struct TArray<struct AInfiltrationCarryObjectCapturePoint*> IntelCapturePoints; // 0x18(0x10)
	struct FText POIOverrideName; // 0x28(0x18)
};

// ScriptStruct FortniteGame.InfiltrationTeamInfo
// Size: 0x0c (Inherited: 0x00)
struct FInfiltrationTeamInfo {
	char TeamNum; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FGameplayTag TeamTag; // 0x04(0x08)
};

// ScriptStruct FortniteGame.InfiltrationModeState
// Size: 0x30 (Inherited: 0x00)
struct FInfiltrationModeState {
	int32_t IntelDownloaded; // 0x00(0x04)
	int32_t IntelCaptured; // 0x04(0x04)
	float TotalTime; // 0x08(0x04)
	float TotalGroundTime; // 0x0c(0x04)
	struct TArray<struct FIntelState> IntelStates; // 0x10(0x10)
	int32_t CurrentRound; // 0x20(0x04)
	bool bGameOver; // 0x24(0x01)
	char pad_25[0x3]; // 0x25(0x03)
	struct FGameplayTag CurrentPOITag; // 0x28(0x08)
};

// ScriptStruct FortniteGame.IntelState
// Size: 0x14 (Inherited: 0x00)
struct FIntelState {
	bool bInRange; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float TimeRemaining; // 0x04(0x04)
	float ServerEndTime; // 0x08(0x04)
	float ServerGroundTimerEnd; // 0x0c(0x04)
	enum class EIntelStateEnum IntelState; // 0x10(0x01)
	char WinningTeam; // 0x11(0x01)
	char AttackingTeam; // 0x12(0x01)
	char DefendingTeam; // 0x13(0x01)
};

// ScriptStruct FortniteGame.IconDisplayData
// Size: 0x120 (Inherited: 0x00)
struct FIconDisplayData {
	struct FSlateBrush MiniMap_Brush; // 0x00(0x88)
	struct FSlateBrush Compass_Brush; // 0x88(0x88)
	struct FVector2D MapSize; // 0x110(0x08)
	struct FVector2D CompassSize; // 0x118(0x08)
};

// ScriptStruct FortniteGame.RoundCosmeticInfo
// Size: 0x20 (Inherited: 0x00)
struct FRoundCosmeticInfo {
	struct FText RoundNameText; // 0x00(0x18)
	struct USoundBase* RoundSound; // 0x18(0x08)
};

// ScriptStruct FortniteGame.InventoryOverrideLoadoutRandomization
// Size: 0x18 (Inherited: 0x00)
struct FInventoryOverrideLoadoutRandomization {
	char pad_0[0x18]; // 0x00(0x18)
};

// ScriptStruct FortniteGame.ItemLoadoutTeamMap
// Size: 0x04 (Inherited: 0x00)
struct FItemLoadoutTeamMap {
	char TeamIndex; // 0x00(0x01)
	char LoadoutIndex; // 0x01(0x01)
	enum class EAthenaInventorySpawnOverride UpdateOverrideType; // 0x02(0x01)
	enum class EAthenaLootDropOverride DropAllItemsOverride; // 0x03(0x01)
};

// ScriptStruct FortniteGame.ItemLoadoutContainer
// Size: 0x48 (Inherited: 0x00)
struct FItemLoadoutContainer {
	struct FScalableFloat bEnabled; // 0x00(0x28)
	struct TArray<struct FItemAndCount> Loadout; // 0x28(0x10)
	struct TArray<struct FHotfixableInventoryOverrideItem> LoadoutList; // 0x38(0x10)
};

// ScriptStruct FortniteGame.HotfixableInventoryOverrideItem
// Size: 0x30 (Inherited: 0x00)
struct FHotfixableInventoryOverrideItem {
	struct FScalableFloat Count; // 0x00(0x28)
	struct UFortItemDefinition* Item; // 0x28(0x08)
};

// ScriptStruct FortniteGame.PlayerBucketSelection
// Size: 0x0c (Inherited: 0x00)
struct FPlayerBucketSelection {
	char pad_0[0xc]; // 0x00(0x0c)
};

// ScriptStruct FortniteGame.ItemLoadoutBucket
// Size: 0x40 (Inherited: 0x00)
struct FItemLoadoutBucket {
	struct FScalableFloat bEnabled; // 0x00(0x28)
	struct TArray<struct FItemLoadoutContainer> Loadouts; // 0x28(0x10)
	char pad_38[0x8]; // 0x38(0x08)
};

// ScriptStruct FortniteGame.ItemsToDropOnDeath
// Size: 0x30 (Inherited: 0x00)
struct FItemsToDropOnDeath {
	struct UFortWorldItemDefinition* ItemToDrop; // 0x00(0x08)
	struct FScalableFloat NumberToDrop; // 0x08(0x28)
};

// ScriptStruct FortniteGame.PlayerLoadout
// Size: 0x48 (Inherited: 0x00)
struct FPlayerLoadout {
	struct TArray<struct FPlayerLoudoutEntry> AlwaysGrantedLoadoutItems; // 0x00(0x10)
	struct TArray<struct FRandomItemEntries> RandomlyGrantedLoadoutItems; // 0x10(0x10)
	struct FScalableFloat LoadoutDuration; // 0x20(0x28)
};

// ScriptStruct FortniteGame.RandomItemEntries
// Size: 0x10 (Inherited: 0x00)
struct FRandomItemEntries {
	struct TArray<struct FPlayerLoudoutEntry> WeightedEntries; // 0x00(0x10)
};

// ScriptStruct FortniteGame.PlayerLoudoutEntry
// Size: 0x88 (Inherited: 0x00)
struct FPlayerLoudoutEntry {
	struct UFortWorldItemDefinition* ItemToGrant; // 0x00(0x08)
	struct FScalableFloat NumberOfItemsToGrant; // 0x08(0x28)
	struct FScalableFloat RemoveItemOnNextSwap; // 0x30(0x28)
	struct FScalableFloat RandomWeight; // 0x58(0x28)
	int32_t DesiredSlot; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
};

// ScriptStruct FortniteGame.CustomLootOverrideData
// Size: 0x68 (Inherited: 0x00)
struct FCustomLootOverrideData {
	enum class ECustomLootSelection CustomLootType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct UDataTable* LootTierData; // 0x08(0x08)
	struct UDataTable* LootPackages; // 0x10(0x08)
	struct UDataTable* ExperimentalLootTierData; // 0x18(0x08)
	struct UDataTable* ExperimentalLootPackages; // 0x20(0x08)
	struct FGameplayTagContainer PlaylistContextTagsToAdd; // 0x28(0x20)
	struct FGameplayTagContainer PlaylistContextTagsToRemove; // 0x48(0x20)
};

// ScriptStruct FortniteGame.MarkerUtilitiesCompassPlacementIcon
// Size: 0x170 (Inherited: 0x00)
struct FMarkerUtilitiesCompassPlacementIcon {
	struct FFortAthenaCompassIcon PlacementCompassIcon; // 0x00(0xa0)
	struct FFortAthenaCompassIcon SquadmatePlacementCompassIcon; // 0xa0(0xa0)
	struct FScalableFloat MinimumTeamScoreToShow; // 0x140(0x28)
	bool bMinimumTeamScoreToShowIsPercent; // 0x168(0x01)
	char pad_169[0x7]; // 0x169(0x07)
};

// ScriptStruct FortniteGame.MarkerUtilitiesMapPlacementIcon
// Size: 0x190 (Inherited: 0x00)
struct FMarkerUtilitiesMapPlacementIcon {
	struct FMarkerUtilitiesMapIcon PlacementMapIcon; // 0x00(0xb0)
	struct FMarkerUtilitiesMapIcon SquadmatePlacementMapIcon; // 0xb0(0xb0)
	struct FScalableFloat MinimumTeamScoreToShow; // 0x160(0x28)
	bool bMinimumTeamScoreToShowIsPercent; // 0x188(0x01)
	char pad_189[0x7]; // 0x189(0x07)
};

// ScriptStruct FortniteGame.MarkerUtilitiesMapIcon
// Size: 0xb0 (Inherited: 0x00)
struct FMarkerUtilitiesMapIcon {
	struct FSlateBrush MapIcon; // 0x00(0x88)
	struct FScalableFloat MapIconScale; // 0x88(0x28)
};

// ScriptStruct FortniteGame.MarkerUtilitiesTeamPlacement
// Size: 0x08 (Inherited: 0x00)
struct FMarkerUtilitiesTeamPlacement {
	char TeamId; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t Placement; // 0x04(0x04)
};

// ScriptStruct FortniteGame.MashLeaderboardQuery
// Size: 0x88 (Inherited: 0x00)
struct FMashLeaderboardQuery {
	struct FUniqueNetIdRepl RequestingId; // 0x00(0x28)
	char pad_28[0x60]; // 0x28(0x60)
};

// ScriptStruct FortniteGame.MashFriendsLeaderboard
// Size: 0x20 (Inherited: 0x00)
struct FMashFriendsLeaderboard {
	struct FString Name; // 0x00(0x10)
	struct TArray<struct FMashLeaderboardEntry> LeaderBoard; // 0x10(0x10)
};

// ScriptStruct FortniteGame.MashLeaderboardEntry
// Size: 0x48 (Inherited: 0x00)
struct FMashLeaderboardEntry {
	struct FString DisplayName; // 0x00(0x10)
	int32_t Value; // 0x10(0x04)
	int32_t Rank; // 0x14(0x04)
	struct FUniqueNetIdRepl UserNetId; // 0x18(0x28)
	bool bIsSpecialEntry; // 0x40(0x01)
	bool bIsLocalPlayer; // 0x41(0x01)
	char pad_42[0x6]; // 0x42(0x06)
};

// ScriptStruct FortniteGame.MashLootTierOverrideAssetData
// Size: 0x0c (Inherited: 0x00)
struct FMashLootTierOverrideAssetData {
	int32_t SafeZoneIndex; // 0x00(0x04)
	struct FName TieredGroup; // 0x04(0x08)
};

// ScriptStruct FortniteGame.MashDifficultySettings
// Size: 0xa8 (Inherited: 0x00)
struct FMashDifficultySettings {
	struct FScalableFloat SpawnCountPlayerCountMultiplier; // 0x00(0x28)
	struct FScalableFloat SpawnCountDifficultyMultiplier; // 0x28(0x28)
	struct FScalableFloat AIEffectPlayerCountMultiplier; // 0x50(0x28)
	struct FScalableFloat AIEffectDifficultyMultiplier; // 0x78(0x28)
	float SpawnCountMultiplier; // 0xa0(0x04)
	float AIEffectMultiplier; // 0xa4(0x04)
};

// ScriptStruct FortniteGame.RiftDamagerInfo
// Size: 0x18 (Inherited: 0x00)
struct FRiftDamagerInfo {
	struct ABuildingRift* Rift; // 0x00(0x08)
	struct TArray<struct AController*> Damagers; // 0x08(0x10)
};

// ScriptStruct FortniteGame.MashScoreData
// Size: 0x88 (Inherited: 0x00)
struct FMashScoreData {
	struct AActor* ActorClass; // 0x00(0x08)
	struct FGameplayTagContainer Tags; // 0x08(0x20)
	struct FGameplayTagContainer ExclusionTags; // 0x28(0x20)
	struct FScalableFloat ScoreValue; // 0x48(0x28)
	struct FText ScoreText; // 0x70(0x18)
};

// ScriptStruct FortniteGame.MashPlayerDataArray
// Size: 0x118 (Inherited: 0x108)
struct FMashPlayerDataArray : FFastArraySerializer {
	struct TArray<struct FMashPlayerDataEntry> Entries; // 0x108(0x10)
};

// ScriptStruct FortniteGame.MashPlayerDataEntry
// Size: 0x80 (Inherited: 0x0c)
struct FMashPlayerDataEntry : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct AFortPlayerStateAthena* PlayerState; // 0x10(0x08)
	int32_t Scores[0xe]; // 0x18(0x38)
	int32_t TotalScore; // 0x50(0x04)
	char StreakScoreLevel; // 0x54(0x01)
	char StreakMultiplierCurrentKillCount; // 0x55(0x01)
	char pad_56[0x2]; // 0x56(0x02)
	float LastAIKillTime; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
	struct TArray<float> AIKillTimes; // 0x60(0x10)
	struct FTimerHandle ResetStreakScoreMultiplierTimerHandle; // 0x70(0x08)
	int32_t TotalAIKillCount; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// ScriptStruct FortniteGame.MashObjectiveAreaInstanceData
// Size: 0x30 (Inherited: 0x00)
struct FMashObjectiveAreaInstanceData {
	struct FVector Location; // 0x00(0x0c)
	char pad_C[0x4]; // 0x0c(0x04)
	struct AActor* AreaActor; // 0x10(0x08)
	struct FName SpecialActorID; // 0x18(0x08)
	struct TArray<struct FMashScoreMultiplierInstanceData> ScoreMultipliers; // 0x20(0x10)
};

// ScriptStruct FortniteGame.MashScoreMultiplierInstanceData
// Size: 0x10 (Inherited: 0x00)
struct FMashScoreMultiplierInstanceData {
	struct ABuildingActor* Actor; // 0x00(0x08)
	struct FName SpecialActorID; // 0x08(0x08)
};

// ScriptStruct FortniteGame.MashScoreMultiplierSpawnData
// Size: 0x278 (Inherited: 0xa0)
struct FMashScoreMultiplierSpawnData : FFortPieSliceSpawnData {
	struct FScalableFloat ScoreMultiplier; // 0xa0(0x28)
	struct FScalableFloat SpawnCount; // 0xc8(0x28)
	struct FScalableFloat MinSpawnTime; // 0xf0(0x28)
	struct FScalableFloat MaxSpawnTime; // 0x118(0x28)
	struct ABuildingActor* ObjectClass; // 0x140(0x08)
	struct FGameplayTag SpecialActorTag; // 0x148(0x08)
	struct FSlateBrush SpecialActorMinimapIconBrush; // 0x150(0x88)
	struct FVector2D SpecialActorMinimapIconScale; // 0x1d8(0x08)
	struct FSlateBrush SpecialActorCompassIconBrush; // 0x1e0(0x88)
	struct FVector2D SpecialActorCompassIconScale; // 0x268(0x08)
	bool bShouldDrawCompassIcon; // 0x270(0x01)
	char pad_271[0x7]; // 0x271(0x07)
};

// ScriptStruct FortniteGame.MashAreaSpecialActorData
// Size: 0x130 (Inherited: 0x00)
struct FMashAreaSpecialActorData {
	struct FGameplayTag SpecialActorTag; // 0x00(0x08)
	struct FSlateBrush SpecialActorMinimapIconBrush; // 0x08(0x88)
	struct FVector2D SpecialActorMinimapIconScale; // 0x90(0x08)
	struct FSlateBrush SpecialActorCompassIconBrush; // 0x98(0x88)
	struct FVector2D SpecialActorCompassIconScale; // 0x120(0x08)
	bool bShouldDrawCompassIcon; // 0x128(0x01)
	char pad_129[0x7]; // 0x129(0x07)
};

// ScriptStruct FortniteGame.MatchConditionMutatorTeamData
// Size: 0x02 (Inherited: 0x00)
struct FMatchConditionMutatorTeamData {
	char TeamNum; // 0x00(0x01)
	enum class EMatchConditionMutatorTeamStatus TeamStatus; // 0x01(0x01)
};

// ScriptStruct FortniteGame.FortMutatorMusicEventPlayInstance
// Size: 0x10 (Inherited: 0x00)
struct FFortMutatorMusicEventPlayInstance {
	struct UAudioComponent* AudioComponent; // 0x00(0x08)
	struct FTimerHandle LoopTimerHandle; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortMutatorGamePhaseStepMusicEvent
// Size: 0x18 (Inherited: 0x00)
struct FFortMutatorGamePhaseStepMusicEvent {
	enum class EAthenaGamePhaseStep Step; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FFortMutatorMusicEvent event; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortMutatorMusicEvent
// Size: 0x10 (Inherited: 0x00)
struct FFortMutatorMusicEvent {
	struct USoundBase* sound; // 0x00(0x08)
	float LoopTime; // 0x08(0x04)
	float FadeTime; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortMutatorGamePhaseMusicEvent
// Size: 0x18 (Inherited: 0x00)
struct FFortMutatorGamePhaseMusicEvent {
	enum class EAthenaGamePhase Phase; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FFortMutatorMusicEvent event; // 0x08(0x10)
};

// ScriptStruct FortniteGame.OmahaCharacterVariantInfoData
// Size: 0x10 (Inherited: 0x00)
struct FOmahaCharacterVariantInfoData {
	struct TArray<struct FMcpVariantChannelInfo> VariantChannelInfo; // 0x00(0x10)
};

// ScriptStruct FortniteGame.PaybackMutatorEffectData
// Size: 0x30 (Inherited: 0x00)
struct FPaybackMutatorEffectData {
	char pad_0[0x8]; // 0x00(0x08)
	struct AFortPlayerStateAthena* KillerPlayerState; // 0x08(0x08)
	char VictimTeam; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct TArray<struct AFortPlayerStateAthena*> VictimPlayerStates; // 0x18(0x10)
	float StartTime; // 0x28(0x04)
	float EndTime; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.ForcedPerks
// Size: 0x30 (Inherited: 0x00)
struct FForcedPerks {
	struct UFortSpyTechItemDefinition* ForcedItems[0x6]; // 0x00(0x30)
};

// ScriptStruct FortniteGame.PerkMutatorData
// Size: 0x120 (Inherited: 0x00)
struct FPerkMutatorData {
	struct FGameplayTag PerkTag; // 0x00(0x08)
	struct FGameplayTag ShowPerkSelectTag; // 0x08(0x08)
	struct FGameplayTag PassivePerkTag; // 0x10(0x08)
	struct FGameplayTag ItemPerkTag; // 0x18(0x08)
	struct FGameplayTag FirstRollTag; // 0x20(0x08)
	struct FGameplayTag BlockRespawnTag; // 0x28(0x08)
	struct UGameplayEffect* PerkUnlockedGameplayEffectClass; // 0x30(0x08)
	struct UGameplayEffect* ShowPerkSelectGameplayEffectClass; // 0x38(0x08)
	struct UGameplayEffect* BlockRespawnGameplayEffectClass; // 0x40(0x08)
	struct UUserWidget* PerkScreenIntroWidgetClass; // 0x48(0x08)
	struct FScalableFloat StartingRerollCount; // 0x50(0x28)
	struct FScalableFloat RerollsToGivePerPerkUnlock; // 0x78(0x28)
	struct FScalableFloat MaxRerollsPerPlayer; // 0xa0(0x28)
	struct TMap<struct FName, struct FGameplayTag> FactionItemMapping; // 0xc8(0x50)
	bool bShouldShowBackgroundImage; // 0x118(0x01)
	char pad_119[0x7]; // 0x119(0x07)
};

// ScriptStruct FortniteGame.BonePlayerDamageMultiplier
// Size: 0x30 (Inherited: 0x00)
struct FBonePlayerDamageMultiplier {
	struct FName BoneName; // 0x00(0x08)
	struct FScalableFloat DamageMultiplier; // 0x08(0x28)
};

// ScriptStruct FortniteGame.PlayerMarkerMutatorEffectData
// Size: 0x10 (Inherited: 0x00)
struct FPlayerMarkerMutatorEffectData {
	char pad_0[0x8]; // 0x00(0x08)
	struct AFortPlayerStateAthena* MarkedPlayerState; // 0x08(0x08)
};

// ScriptStruct FortniteGame.MutatorPlayerSettingsData
// Size: 0x18 (Inherited: 0x00)
struct FMutatorPlayerSettingsData {
	struct UFortPlayerSettingsComponentBase* ScopeSettings; // 0x00(0x08)
	char pad_8[0x10]; // 0x08(0x10)
};

// ScriptStruct FortniteGame.PowPlayerDataArray
// Size: 0x120 (Inherited: 0x108)
struct FPowPlayerDataArray : FFastArraySerializer {
	struct AFortAthenaMutator_Pow* OwningMutator; // 0x108(0x08)
	struct TArray<struct FPowPlayerDataEntry> Entries; // 0x110(0x10)
};

// ScriptStruct FortniteGame.PowPlayerDataEntry
// Size: 0x28 (Inherited: 0x0c)
struct FPowPlayerDataEntry : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct AFortPlayerStateAthena* PlayerState; // 0x10(0x08)
	float CurrentMaxShield; // 0x18(0x04)
	float CurrentShield; // 0x1c(0x04)
	struct AFortAthenaMutator_Pow* POWMutator; // 0x20(0x08)
};

// ScriptStruct FortniteGame.QuickbarRestoreMutatorData
// Size: 0x18 (Inherited: 0x00)
struct FQuickbarRestoreMutatorData {
	char pad_0[0x18]; // 0x00(0x18)
};

// ScriptStruct FortniteGame.ReroutePlayerEventQueueEntry
// Size: 0xc0 (Inherited: 0x00)
struct FReroutePlayerEventQueueEntry {
	char pad_0[0x8]; // 0x00(0x08)
	struct FGameplayEventData GameplayEventData; // 0x08(0xb0)
	char pad_B8[0x8]; // 0xb8(0x08)
};

// ScriptStruct FortniteGame.ReroutePlayerEventDefinition
// Size: 0x70 (Inherited: 0x00)
struct FReroutePlayerEventDefinition {
	struct FGameplayTagContainer IncomingEventTags; // 0x00(0x20)
	struct FGameplayTagContainer IncludeTags; // 0x20(0x20)
	struct FGameplayTagContainer ExcludeTags; // 0x40(0x20)
	struct FGameplayTag ImmediateOutgoingEventTag; // 0x60(0x08)
	struct FGameplayTag MergedOutgoingEventTag; // 0x68(0x08)
};

// ScriptStruct FortniteGame.RespawnAndSpectateTargetData
// Size: 0x30 (Inherited: 0x00)
struct FRespawnAndSpectateTargetData {
	struct TWeakObjectPtr<struct AFortAthenaMutator_RespawnAndSpectateSelect> OwningMutator; // 0x00(0x08)
	char bEnabled : 1; // 0x08(0x01)
	char bPrevAvailableOnClient : 1; // 0x08(0x01)
	char bPrevEnabledOnClient : 1; // 0x08(0x01)
	char bShouldBeSelectedByDefault : 1; // 0x08(0x01)
	char bHiddenAndAutoSelectedFallback : 1; // 0x08(0x01)
	char pad_8_5 : 3; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	float PostDeathDisableTime; // 0x0c(0x04)
	int32_t ID; // 0x10(0x04)
	int32_t DisplayPriority; // 0x14(0x04)
	char Team; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
	struct AActor* RespawnTargetActor; // 0x20(0x08)
	struct AActor* CameraActor; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortAthenaMutator_RespawnWaveTeamData
// Size: 0x20 (Inherited: 0x00)
struct FFortAthenaMutator_RespawnWaveTeamData {
	char pad_0[0x8]; // 0x00(0x08)
	float ReplicatedTimeStamp; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct TArray<struct TWeakObjectPtr<struct AFortPlayerStateAthena>> PlayerStates; // 0x10(0x10)
};

// ScriptStruct FortniteGame.POIRoundInfo
// Size: 0x60 (Inherited: 0x00)
struct FPOIRoundInfo {
	struct FScalableFloat bIsPOIEnabled; // 0x00(0x28)
	struct FGameplayTag POITag; // 0x28(0x08)
	struct FText POIOverrideName; // 0x30(0x18)
	struct TArray<struct FPlayerStartInfo> PlayerStartInfos; // 0x48(0x10)
	struct AFortPOICameraActor* CameraActor; // 0x58(0x08)
};

// ScriptStruct FortniteGame.PlayerStartInfo
// Size: 0x38 (Inherited: 0x00)
struct FPlayerStartInfo {
	char TeamNum; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FGameplayTagContainer RequiredTags; // 0x08(0x20)
	struct TArray<struct AFortPlayerStart*> PlayerStartActors; // 0x28(0x10)
};

// ScriptStruct FortniteGame.HotfixableBlacklistLiteralLocations
// Size: 0x0c (Inherited: 0x00)
struct FHotfixableBlacklistLiteralLocations {
	struct FVector2D Position; // 0x00(0x08)
	float Radius; // 0x08(0x04)
};

// ScriptStruct FortniteGame.SafeZoneOrderOptimizeMutatorRouteOrder
// Size: 0x18 (Inherited: 0x00)
struct FSafeZoneOrderOptimizeMutatorRouteOrder {
	struct TArray<int32_t> RouteIDs; // 0x00(0x10)
	float TotalDistance; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.SafeZoneOrderOptimizeMutatorRouteDefinition
// Size: 0x30 (Inherited: 0x00)
struct FSafeZoneOrderOptimizeMutatorRouteDefinition {
	struct FVector StartLocation; // 0x00(0x0c)
	struct FVector EndLocation; // 0x0c(0x0c)
	struct FText DebugName; // 0x18(0x18)
};

// ScriptStruct FortniteGame.SkyCapTargetData
// Size: 0x08 (Inherited: 0x00)
struct FSkyCapTargetData {
	float TargetHeight; // 0x00(0x04)
	float MoveTime; // 0x04(0x04)
};

// ScriptStruct FortniteGame.SkyCapPositionData
// Size: 0x78 (Inherited: 0x00)
struct FSkyCapPositionData {
	struct FScalableFloat MoveTime; // 0x00(0x28)
	struct FScalableFloat Height; // 0x28(0x28)
	struct FScalableFloat WaitTime; // 0x50(0x28)
};

// ScriptStruct FortniteGame.SpawningInfo
// Size: 0x10 (Inherited: 0x00)
struct FSpawningInfo {
	char pad_0[0x8]; // 0x00(0x08)
	struct UFortAthenaMutator_SpawningPolicyData* ItemSpawnData; // 0x08(0x08)
};

// ScriptStruct FortniteGame.ObjectiveSpecialActorContainer
// Size: 0x10 (Inherited: 0x00)
struct FObjectiveSpecialActorContainer {
	struct AActor* TheSpawnedObjective; // 0x00(0x08)
	char pad_8[0x8]; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortSupplyDropMutatorData
// Size: 0x20 (Inherited: 0x00)
struct FFortSupplyDropMutatorData {
	struct FName SupplyDropID; // 0x00(0x08)
	bool bShouldCenterGroundCheckAtFoundLocation; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct TArray<struct FFortItemDeliverySupplyDropMutatorData> ItemDeliveryMutatorPerSafeZonePhase; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortItemDeliverySupplyDropMutatorData
// Size: 0x38 (Inherited: 0x00)
struct FFortItemDeliverySupplyDropMutatorData {
	bool bShouldApplyMutator; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FScalableFloat NumDeliveryItemsToSpawn; // 0x08(0x28)
	struct UEnvQuery* SupplyDropPlacementQuery; // 0x30(0x08)
};

// ScriptStruct FortniteGame.BeginGroupTeleportParams
// Size: 0x28 (Inherited: 0x00)
struct FBeginGroupTeleportParams {
	struct FText HUDReasonText; // 0x00(0x18)
	bool bRespawnPlayers; // 0x18(0x01)
	bool bForceKillPlayers; // 0x19(0x01)
	bool bAutoReleaseFromStasis; // 0x1a(0x01)
	char pad_1B[0x1]; // 0x1b(0x01)
	float FadeTime; // 0x1c(0x04)
	enum class ESynchronizedTeleportHealthAndShieldResetType HealthAndShieldResetType; // 0x20(0x01)
	bool bResetPlayerInventories; // 0x21(0x01)
	bool bRandomizePlayerInventories; // 0x22(0x01)
	bool bReinitializePlayerAbilities; // 0x23(0x01)
	bool bBlockPickupsDuringTeleport; // 0x24(0x01)
	bool bFadeSound; // 0x25(0x01)
	char pad_26[0x2]; // 0x26(0x02)
};

// ScriptStruct FortniteGame.SynchronizedTeleportPlayer
// Size: 0x20 (Inherited: 0x00)
struct FSynchronizedTeleportPlayer {
	char pad_0[0x10]; // 0x00(0x10)
	struct AFortPlayerStateAthena* FortPlayerState; // 0x10(0x08)
	char pad_18[0x8]; // 0x18(0x08)
};

// ScriptStruct FortniteGame.TagVisualsData
// Size: 0x20 (Inherited: 0x00)
struct FTagVisualsData {
	struct UGameplayEffect* GE_Glow; // 0x00(0x08)
	struct FGameplayTag GlowTag; // 0x08(0x08)
	struct FLinearColor MinimapColor; // 0x10(0x10)
};

// ScriptStruct FortniteGame.TagTeamInfoArray
// Size: 0x118 (Inherited: 0x108)
struct FTagTeamInfoArray : FFastArraySerializer {
	struct TArray<struct FTagTeamInfoEntry> Entries; // 0x108(0x10)
};

// ScriptStruct FortniteGame.TagTeamInfoEntry
// Size: 0x18 (Inherited: 0x0c)
struct FTagTeamInfoEntry : FFastArraySerializerItem {
	char TeamNum; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
	int32_t PlayerCount; // 0x10(0x04)
	int32_t PreviousPlayerCount; // 0x14(0x04)
};

// ScriptStruct FortniteGame.PartSwapData
// Size: 0x10 (Inherited: 0x00)
struct FPartSwapData {
	struct TArray<struct UCustomCharacterPart*> PartsToSwapIn; // 0x00(0x10)
};

// ScriptStruct FortniteGame.TeamPlacementData
// Size: 0x18 (Inherited: 0x00)
struct FTeamPlacementData {
	char TeamId; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t TeamPlacement; // 0x04(0x04)
	int32_t TeamScore; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct AFortTeamInfoAthena* TeamInfoAthena; // 0x10(0x08)
};

// ScriptStruct FortniteGame.TimeOfDaySpeed
// Size: 0x20 (Inherited: 0x00)
struct FTimeOfDaySpeed {
	float Speed; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FText DisplayName; // 0x08(0x18)
};

// ScriptStruct FortniteGame.TimeOfDayPhase
// Size: 0x20 (Inherited: 0x00)
struct FTimeOfDayPhase {
	float Time; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FText DisplayName; // 0x08(0x18)
};

// ScriptStruct FortniteGame.TournamentWeaponKillStat
// Size: 0x88 (Inherited: 0x00)
struct FTournamentWeaponKillStat {
	struct FGameplayTagContainer TagList; // 0x00(0x20)
	struct FString StatName; // 0x20(0x10)
	struct FName StatDisplayName; // 0x30(0x08)
	struct TMap<struct AFortPlayerState*, int32_t> PlayerStats; // 0x38(0x50)
};

// ScriptStruct FortniteGame.WaxPartOverrideData
// Size: 0x30 (Inherited: 0x00)
struct FWaxPartOverrideData {
	enum class EFortCustomGender Gender; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct UCustomCharacterPart*> PartsToSwapIn; // 0x08(0x10)
	struct TArray<struct UCustomCharacterPart*> DefaultParts; // 0x18(0x10)
	struct FGameplayTag CosmeticSwapTag; // 0x28(0x08)
};

// ScriptStruct FortniteGame.WaxNoStormZone
// Size: 0x38 (Inherited: 0x00)
struct FWaxNoStormZone {
	struct FVector Location; // 0x00(0x0c)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FScalableFloat Radius; // 0x10(0x28)
};

// ScriptStruct FortniteGame.WaxRespawnLogicData
// Size: 0x280 (Inherited: 0x00)
struct FWaxRespawnLogicData {
	struct FFortRespawnLogicData BaseRespawnData; // 0x00(0x140)
	struct FScalableFloat TryPlaceByTeammates; // 0x140(0x28)
	struct FScalableFloat AlsoPlaceBehindTeammates; // 0x168(0x28)
	struct FScalableFloat MaxDistanceFromTeammates; // 0x190(0x28)
	struct FScalableFloat MinDistanceFromTeammates; // 0x1b8(0x28)
	struct FScalableFloat TryPlaceAwayFromLeaders; // 0x1e0(0x28)
	struct FScalableFloat OnlyCountLeadersAboveWaxState; // 0x208(0x28)
	struct FScalableFloat UseDirectionFromTeam; // 0x230(0x28)
	struct FScalableFloat SpawnBehindTeammateBias; // 0x258(0x28)
};

// ScriptStruct FortniteGame.WaxPlayerDataArray
// Size: 0x120 (Inherited: 0x108)
struct FWaxPlayerDataArray : FFastArraySerializer {
	struct AFortAthenaMutator_Wax* OwningMutator; // 0x108(0x08)
	struct TArray<struct FWaxPlayerDataEntry> Entries; // 0x110(0x10)
};

// ScriptStruct FortniteGame.WaxPlayerDataEntry
// Size: 0x48 (Inherited: 0x0c)
struct FWaxPlayerDataEntry : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct AFortPlayerStateAthena* PlayerState; // 0x10(0x08)
	bool bPermanentlyWaxed; // 0x18(0x01)
	bool bPlayerWasLeader; // 0x19(0x01)
	char pad_1A[0x2]; // 0x1a(0x02)
	int32_t TokenBasedPlacement; // 0x1c(0x04)
	int32_t CurrentTokens; // 0x20(0x04)
	int32_t PreviousTokens; // 0x24(0x04)
	int32_t CurrentTeamTokens; // 0x28(0x04)
	int32_t PreviousTeamTokens; // 0x2c(0x04)
	int32_t CurrentKills; // 0x30(0x04)
	int32_t PreviousKills; // 0x34(0x04)
	int32_t CurrentLives; // 0x38(0x04)
	struct FVector PreviousVictimLocation; // 0x3c(0x0c)
};

// ScriptStruct FortniteGame.WaxVisibilityModifiers
// Size: 0x180 (Inherited: 0x00)
struct FWaxVisibilityModifiers {
	struct FScalableFloat UI_VisibilityMode; // 0x00(0x28)
	struct FSlateBrush CompassIndicator; // 0x28(0x88)
	struct FSlateBrush MinimapIndicator; // 0xb0(0x88)
	struct TArray<struct UGameplayEffect*> TemporarilyGrantedEffects; // 0x138(0x10)
	struct TArray<struct UGameplayEffect*> PermanentlyGrantedEffects; // 0x148(0x10)
	struct FScalableFloat DistanceConsideredCloseForUI; // 0x158(0x28)
};

// ScriptStruct FortniteGame.FortAthenaTutorial_ShootTargetInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortAthenaTutorial_ShootTargetInfo {
	struct AActor* ShootTargetMarker; // 0x00(0x08)
	struct ABuildingProp* ShootTarget; // 0x08(0x08)
	char pad_10[0x8]; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortAthenaTutorial_AiTargetInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortAthenaTutorial_AiTargetInfo {
	struct AActor* TargetMarker; // 0x00(0x08)
	struct AFortAIPawn* TargetActor; // 0x08(0x08)
	char pad_10[0x8]; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortAthenaTutorial_TargetInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortAthenaTutorial_TargetInfo {
	struct AActor* TargetMarker; // 0x00(0x08)
	struct ABuildingProp* TargetActor; // 0x08(0x08)
	char pad_10[0x8]; // 0x10(0x08)
};

// ScriptStruct FortniteGame.PredictionReplicationProxy_SP
// Size: 0x18 (Inherited: 0x00)
struct FPredictionReplicationProxy_SP {
	int32_t ServerFrameNumber; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct TArray<char> Data; // 0x08(0x10)
};

// ScriptStruct FortniteGame.PredictionReplicationProxy_AP
// Size: 0x18 (Inherited: 0x00)
struct FPredictionReplicationProxy_AP {
	int32_t ClientFrameNumber; // 0x00(0x04)
	int32_t ServerFrameNumber; // 0x04(0x04)
	struct TArray<char> Data; // 0x08(0x10)
};

// ScriptStruct FortniteGame.VehicleToggleablePart
// Size: 0x08 (Inherited: 0x00)
struct FVehicleToggleablePart {
	int32_t ShapeIndex; // 0x00(0x04)
	bool bEnabled; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
};

// ScriptStruct FortniteGame.PredictedDestroyedBuilding
// Size: 0x10 (Inherited: 0x00)
struct FPredictedDestroyedBuilding {
	struct ABuildingActor* Building; // 0x00(0x08)
	float Time; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.IgnoredPawn
// Size: 0x10 (Inherited: 0x00)
struct FIgnoredPawn {
	struct AFortPawn* Pawn; // 0x00(0x08)
	float Time; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.VehicleImpactBucket
// Size: 0x18 (Inherited: 0x00)
struct FVehicleImpactBucket {
	char pad_0[0x18]; // 0x00(0x18)
};

// ScriptStruct FortniteGame.SMVehicleGear
// Size: 0x18 (Inherited: 0x00)
struct FSMVehicleGear {
	float TopSpeed; // 0x00(0x04)
	float MinSpeed; // 0x04(0x04)
	float PushForce; // 0x08(0x04)
	float RampTime; // 0x0c(0x04)
	float SteeringAngleMultiplier; // 0x10(0x04)
	char bAutoBrake : 1; // 0x14(0x01)
	char bIgnoreGravity : 1; // 0x14(0x01)
	char pad_14_2 : 6; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
};

// ScriptStruct FortniteGame.VehicleTargetOrientation
// Size: 0x24 (Inherited: 0x00)
struct FVehicleTargetOrientation {
	struct FVector UpVector; // 0x00(0x0c)
	struct FVector ForwardVector; // 0x0c(0x0c)
	struct FVector Location; // 0x18(0x0c)
};

// ScriptStruct FortniteGame.SpringGroundTriangle
// Size: 0x18 (Inherited: 0x00)
struct FSpringGroundTriangle {
	struct FName Socket0; // 0x00(0x08)
	struct FName Socket1; // 0x08(0x08)
	struct FName Socket2; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortAthenaVehicleInputStateUnreliable
// Size: 0x28 (Inherited: 0x00)
struct FFortAthenaVehicleInputStateUnreliable {
	float ForwardAlpha; // 0x00(0x04)
	float RightAlpha; // 0x04(0x04)
	float PitchAlpha; // 0x08(0x04)
	float LookUpDelta; // 0x0c(0x04)
	float TurnDelta; // 0x10(0x04)
	float SteerAlpha; // 0x14(0x04)
	float GravityOffset; // 0x18(0x04)
	struct FVector_NetQuantize100 MovementDir; // 0x1c(0x0c)
};

// ScriptStruct FortniteGame.FortAthenaVehicleInputStateReliable
// Size: 0x01 (Inherited: 0x00)
struct FFortAthenaVehicleInputStateReliable {
	char bIsSprinting : 1; // 0x00(0x01)
	char bIsJumping : 1; // 0x00(0x01)
	char bIsBraking : 1; // 0x00(0x01)
	char bIsHonking : 1; // 0x00(0x01)
	char bIgnoreForwardInAir : 1; // 0x00(0x01)
	char bMovementModifier0 : 1; // 0x00(0x01)
	char bMovementModifier1 : 1; // 0x00(0x01)
	char bMovementModifier2 : 1; // 0x00(0x01)
};

// ScriptStruct FortniteGame.VehicleWeightedDef
// Size: 0x50 (Inherited: 0x00)
struct FVehicleWeightedDef {
	struct TSoftObjectPtr<struct UFortVehicleItemDefinition> VehicleItemDef; // 0x00(0x28)
	struct FScalableFloat Weight; // 0x28(0x28)
};

// ScriptStruct FortniteGame.VehicleBounceState
// Size: 0x0c (Inherited: 0x00)
struct FVehicleBounceState {
	enum class EBounceCompressionState CompressionState; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float CompressionValue; // 0x04(0x04)
	float StateCooldown; // 0x08(0x04)
};

// ScriptStruct FortniteGame.ReplicatedAthenaVehicleState
// Size: 0x0c (Inherited: 0x00)
struct FReplicatedAthenaVehicleState {
	struct FVector ForwardVectorTarget; // 0x00(0x0c)
};

// ScriptStruct FortniteGame.AttachedInfo
// Size: 0xb8 (Inherited: 0x00)
struct FAttachedInfo {
	struct FHitResult Hit; // 0x00(0x88)
	struct AActor* AttachedToActor; // 0x88(0x08)
	struct FVector_NetQuantize10 AttachOffset; // 0x90(0x0c)
	struct FVector_NetQuantizeNormal VelocityNormalized; // 0x9c(0x0c)
	float NarrowPlacementAgainstVelocityThreshold; // 0xa8(0x04)
	float StickyOffsetFromPhysicsMesh; // 0xac(0x04)
	float StickyOffsetFromBoneCenter; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// ScriptStruct FortniteGame.MyFortCategoryData
// Size: 0x58 (Inherited: 0x00)
struct FMyFortCategoryData {
	struct FText CategoryName; // 0x00(0x18)
	struct FGameplayTag TooltipTag; // 0x18(0x08)
	struct FGameplayTagContainer ModifiedTagContainer; // 0x20(0x20)
	bool bIsCore; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct TArray<struct FGameplayAttribute> Attributes; // 0x48(0x10)
};

// ScriptStruct FortniteGame.FortAttributeInfo
// Size: 0x90 (Inherited: 0x00)
struct FFortAttributeInfo {
	struct FGameplayAttribute Attribute; // 0x00(0x38)
	enum class EFortAttributeDisplay DisplayMethod; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct FText UnitDisplayName; // 0x40(0x18)
	float DisplayScalingFactor; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
	struct FText FormatText; // 0x60(0x18)
	struct TArray<struct FFortAttributeDetailsInfo> AttributeDetails; // 0x78(0x10)
	bool bShowInSummaries; // 0x88(0x01)
	bool bShowInDifferences; // 0x89(0x01)
	bool bShowAsBuffInFE; // 0x8a(0x01)
	bool bNegativeValuesShouldBeDisplayedPositively; // 0x8b(0x01)
	char pad_8C[0x4]; // 0x8c(0x04)
};

// ScriptStruct FortniteGame.FortAttributeDetailsInfo
// Size: 0x380 (Inherited: 0x00)
struct FFortAttributeDetailsInfo {
	struct FGameplayTagContainer RequiredTags; // 0x00(0x20)
	struct FFortMultiSizeBrush Icon; // 0x20(0x330)
	struct FText DisplayName; // 0x350(0x18)
	struct FText Description; // 0x368(0x18)
};

// ScriptStruct FortniteGame.FortGameplayAttributeData
// Size: 0x28 (Inherited: 0x10)
struct FFortGameplayAttributeData : FGameplayAttributeData {
	float Minimum; // 0x10(0x04)
	float Maximum; // 0x14(0x04)
	bool bIsCurrentClamped; // 0x18(0x01)
	bool bIsBaseClamped; // 0x19(0x01)
	bool bShouldClampBase; // 0x1a(0x01)
	char pad_1B[0x1]; // 0x1b(0x01)
	float UnclampedBaseValue; // 0x1c(0x04)
	float UnclampedCurrentValue; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.FortSubmixAnalyzerData
// Size: 0x48 (Inherited: 0x00)
struct FFortSubmixAnalyzerData {
	struct TArray<struct FAudioAnalysisParameterScalar> ScalarParameters; // 0x00(0x10)
	struct TArray<struct FAudioAnalysisParameterVector> VectorParameters; // 0x10(0x10)
	struct FAudioAnalysisSpectralAnalysisSettings SpectralAnalysisConfig; // 0x20(0x28)
};

// ScriptStruct FortniteGame.AudioAnalysisSpectralAnalysisSettings
// Size: 0x28 (Inherited: 0x00)
struct FAudioAnalysisSpectralAnalysisSettings {
	struct TArray<struct FSoundSubmixSpectralAnalysisBandSettings> BandSettings; // 0x00(0x10)
	float UpdateRate; // 0x10(0x04)
	float DecibalNoiseFloor; // 0x14(0x04)
	bool bDoNormalize; // 0x18(0x01)
	bool bDoAutoRange; // 0x19(0x01)
	char pad_1A[0x2]; // 0x1a(0x02)
	float AutoRangeAttackTime; // 0x1c(0x04)
	float AutoRangeReleaseTime; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.AudioAnalysisParameterVector
// Size: 0x28 (Inherited: 0x00)
struct FAudioAnalysisParameterVector {
	struct TArray<struct FName> ParamNames; // 0x00(0x10)
	struct UMaterialParameterCollection* MaterialCollection; // 0x10(0x08)
	struct UNiagaraParameterCollection* NiagaraCollection; // 0x18(0x08)
	char bDebug : 1; // 0x20(0x01)
	char pad_20_1 : 7; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
};

// ScriptStruct FortniteGame.AudioAnalysisParameterScalar
// Size: 0x20 (Inherited: 0x00)
struct FAudioAnalysisParameterScalar {
	struct FName Name; // 0x00(0x08)
	struct UMaterialParameterCollection* MaterialCollection; // 0x08(0x08)
	struct UNiagaraParameterCollection* NiagaraCollection; // 0x10(0x08)
	char bDebug : 1; // 0x18(0x01)
	char pad_18_1 : 7; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
};

// ScriptStruct FortniteGame.AudioCurveInfo
// Size: 0x98 (Inherited: 0x00)
struct FAudioCurveInfo {
	char pad_0[0x18]; // 0x00(0x18)
	struct FRichCurve Curve; // 0x18(0x80)
};

// ScriptStruct FortniteGame.ChannelData
// Size: 0x10 (Inherited: 0x00)
struct FChannelData {
	struct FName Name; // 0x00(0x08)
	float MaxMagnitude; // 0x08(0x04)
	float Value; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortBadgeCountArray
// Size: 0x118 (Inherited: 0x108)
struct FFortBadgeCountArray : FFastArraySerializer {
	struct TArray<struct FFortBadgeCount> Badges; // 0x108(0x10)
};

// ScriptStruct FortniteGame.FortBadgeCount
// Size: 0x20 (Inherited: 0x0c)
struct FFortBadgeCount : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct UFortBadgeItemDefinition* Badge; // 0x10(0x08)
	int32_t Count; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortBadgeScoringData
// Size: 0x18 (Inherited: 0x08)
struct FFortBadgeScoringData : FTableRowBase {
	int32_t ScoreAwarded; // 0x08(0x04)
	int32_t MissionPoints; // 0x0c(0x04)
	enum class EStatCategory ScoreCategory; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
	int32_t ScoreThreshold; // 0x14(0x04)
};

// ScriptStruct FortniteGame.BangCheckData
// Size: 0x28 (Inherited: 0x00)
struct FBangCheckData {
	struct UFortQuestItemDefinition* AlterQuest; // 0x00(0x08)
	struct UFortQuestItemDefinition* EgoQuest; // 0x08(0x08)
	struct UFortChallengeBundleItemDefinition* BundleSeeRoom; // 0x10(0x08)
	struct FGameplayTag IntroTag; // 0x18(0x08)
	struct FGameplayTag RoomBangTag; // 0x20(0x08)
};

// ScriptStruct FortniteGame.AnimTagProperty
// Size: 0x38 (Inherited: 0x00)
struct FAnimTagProperty {
	struct FGameplayTag BackingGameplayTag; // 0x00(0x08)
	FieldPathProperty PropertyToEdit; // 0x08(0x20)
	struct FName PropertyName; // 0x28(0x08)
	bool bUseExactTag; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// ScriptStruct FortniteGame.FortVehicleDerived
// Size: 0x48 (Inherited: 0x00)
struct FFortVehicleDerived {
	char pad_0[0x8]; // 0x00(0x08)
	struct TArray<struct FSpringConfig> Springs; // 0x08(0x10)
	struct TArray<struct FGearConfig> InternalGears; // 0x18(0x10)
	struct FVector LocalFrontFrictionPt; // 0x28(0x0c)
	struct FVector LocalRearFrictionPt; // 0x34(0x0c)
	float FrontMassRatio; // 0x40(0x04)
	float RearMassRatio; // 0x44(0x04)
};

// ScriptStruct FortniteGame.GearConfig
// Size: 0x18 (Inherited: 0x00)
struct FGearConfig {
	float TopSpeed; // 0x00(0x04)
	float MinSpeed; // 0x04(0x04)
	float PushForce; // 0x08(0x04)
	float RampTime; // 0x0c(0x04)
	float SteeringAngleMultiplier; // 0x10(0x04)
	char bAutoBrake : 1; // 0x14(0x01)
	char bIgnoreGravity : 1; // 0x14(0x01)
	char bForwardGear : 1; // 0x14(0x01)
	char pad_14_3 : 5; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
};

// ScriptStruct FortniteGame.SpringConfig
// Size: 0x70 (Inherited: 0x00)
struct FSpringConfig {
	struct FTransform LocalStartTM; // 0x00(0x30)
	struct FTransform LocalApplyTM; // 0x30(0x30)
	float SpringLength; // 0x60(0x04)
	float SpringStiff; // 0x64(0x04)
	float SpringDamp; // 0x68(0x04)
	float MaxAccelChange; // 0x6c(0x04)
};

// ScriptStruct FortniteGame.BiplaneDerived
// Size: 0x48 (Inherited: 0x48)
struct FBiplaneDerived : FFortVehicleDerived {
};

// ScriptStruct FortniteGame.VehicleSimAux
// Size: 0x80 (Inherited: 0x00)
struct FVehicleSimAux {
	char pad_0[0x80]; // 0x00(0x80)
};

// ScriptStruct FortniteGame.BiplaneSimAux
// Size: 0x490 (Inherited: 0x80)
struct FBiplaneSimAux : FVehicleSimAux {
	bool bIsEngineOn; // 0x80(0x01)
	bool bIsFlying; // 0x81(0x01)
	bool bAutoStartEngineInAir; // 0x82(0x01)
	bool bEngineStartIsBeingHeld; // 0x83(0x01)
	float PitchAlphaNoPilot; // 0x84(0x04)
	float TurnAlphaNoPilot; // 0x88(0x04)
	float RollAlphaNoPilot; // 0x8c(0x04)
	float AileronRollAlphaStart; // 0x90(0x04)
	bool bHadPassengers; // 0x94(0x01)
	char pad_95[0x3]; // 0x95(0x03)
	float NoPassengerStallTimerStart; // 0x98(0x04)
	float StuckTimerStart; // 0x9c(0x04)
	bool bRollRight; // 0xa0(0x01)
	bool bRollLeft; // 0xa1(0x01)
	char pad_A2[0x2]; // 0xa2(0x02)
	float AileronRollDoubleClickTimerStart; // 0xa4(0x04)
	struct FAileronRoll AileronRoll; // 0xa8(0xe0)
	struct FFortRechargingActionTimer BoostAction; // 0x188(0xd8)
	char pad_260[0x220]; // 0x260(0x220)
	float VehicleFuelPercent; // 0x480(0x04)
	bool bIsStallingFromAltitude; // 0x484(0x01)
	char pad_485[0xb]; // 0x485(0x0b)
};

// ScriptStruct FortniteGame.FortAnalyticsEventAttribute
// Size: 0x20 (Inherited: 0x00)
struct FFortAnalyticsEventAttribute {
	char pad_0[0x20]; // 0x00(0x20)
};

// ScriptStruct FortniteGame.FortBotBuildingContainerBlacklistDataTableRow
// Size: 0x18 (Inherited: 0x08)
struct FFortBotBuildingContainerBlacklistDataTableRow : FTableRowBase {
	struct ABuildingContainer* BlacklistedActorClass; // 0x08(0x08)
	bool bIsBlacklisted; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.FortBotCosmeticItemSetDataTableRow
// Size: 0x68 (Inherited: 0x08)
struct FFortBotCosmeticItemSetDataTableRow : FTableRowBase {
	struct FPrimaryAssetId CharacterAssetId; // 0x08(0x10)
	struct FPrimaryAssetId GliderAssetId; // 0x18(0x10)
	struct FPrimaryAssetId SkyDiveContrailAssetId; // 0x28(0x10)
	struct FPrimaryAssetId BackpackAssetId; // 0x38(0x10)
	struct FPrimaryAssetId PickaxeAssetId; // 0x48(0x10)
	float Weight; // 0x58(0x04)
	struct FGameplayTag SetTag; // 0x5c(0x08)
	char pad_64[0x4]; // 0x64(0x04)
};

// ScriptStruct FortniteGame.FortLimitedAvailabilityBotCosmeticItemSetDataTableRow
// Size: 0x78 (Inherited: 0x68)
struct FFortLimitedAvailabilityBotCosmeticItemSetDataTableRow : FFortBotCosmeticItemSetDataTableRow {
	struct FDateTime StartDate; // 0x68(0x08)
	struct FDateTime EndDate; // 0x70(0x08)
};

// ScriptStruct FortniteGame.FortBotCosmeticItemDataTableRow
// Size: 0x20 (Inherited: 0x08)
struct FFortBotCosmeticItemDataTableRow : FTableRowBase {
	struct FPrimaryAssetId PrimaryAssetId; // 0x08(0x10)
	float Weight; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortLimitedAvailabilityBotCosmeticItemDataTableRow
// Size: 0x30 (Inherited: 0x20)
struct FFortLimitedAvailabilityBotCosmeticItemDataTableRow : FFortBotCosmeticItemDataTableRow {
	struct FDateTime StartDate; // 0x20(0x08)
	struct FDateTime EndDate; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortBotCosmeticLibraryWeightRegionOverrideDataTableRow
// Size: 0x40 (Inherited: 0x08)
struct FFortBotCosmeticLibraryWeightRegionOverrideDataTableRow : FTableRowBase {
	struct FString RegionId; // 0x08(0x10)
	struct FScalableFloat RegionWeights; // 0x18(0x28)
};

// ScriptStruct FortniteGame.FortBotItemDataTableRow
// Size: 0x18 (Inherited: 0x08)
struct FFortBotItemDataTableRow : FTableRowBase {
	struct FGameplayTag Tag; // 0x08(0x08)
	bool bIsSupported; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.FortBotTeamInfoAthena
// Size: 0x10 (Inherited: 0x00)
struct FFortBotTeamInfoAthena {
	struct TArray<struct FFortBotReservedLoot> ReservedLoots; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortBotReservedLoot
// Size: 0x10 (Inherited: 0x00)
struct FFortBotReservedLoot {
	uint32_t LootId; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct AFortAthenaAIBotController* Owner; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortBroadcastInfoPerPlayer
// Size: 0x18 (Inherited: 0x00)
struct FFortBroadcastInfoPerPlayer {
	struct AFortPlayerStateAthena* PlayerState; // 0x00(0x08)
	struct AFortInventory* PlayerInventory; // 0x08(0x08)
	struct AFortBroadcastRemoteClientInfo* PlayerClientInfo; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortBuildingSoundsPerResourceType
// Size: 0x120 (Inherited: 0x00)
struct FFortBuildingSoundsPerResourceType {
	struct FFortBuildingSoundsPerAffiliation OnConstruction[0x6]; // 0x00(0x60)
	struct FFortBuildingSoundsPerAffiliation OnGenericDestruction[0x6]; // 0x60(0x60)
	struct FFortBuildingSoundsPerAffiliation OnPlayerBuiltDestruction[0x6]; // 0xc0(0x60)
};

// ScriptStruct FortniteGame.FortBuildingSoundsPerAffiliation
// Size: 0x10 (Inherited: 0x00)
struct FFortBuildingSoundsPerAffiliation {
	struct USoundBase* SoundFriendly; // 0x00(0x08)
	struct USoundBase* SoundEnemy; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortBuildingInstruction
// Size: 0x70 (Inherited: 0x00)
struct FFortBuildingInstruction {
	struct FFortActorRecord ActorRecord; // 0x00(0x70)
};

// ScriptStruct FortniteGame.FortActorRecord
// Size: 0x70 (Inherited: 0x00)
struct FFortActorRecord {
	struct FGuid ActorGuid; // 0x00(0x10)
	enum class EFortBuildingPersistentState ActorState; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct ABuildingActor* ActorClass; // 0x18(0x08)
	struct FTransform ActorTransform; // 0x20(0x30)
	bool bSpawnedActor; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
	struct TArray<char> ActorData; // 0x58(0x10)
	char pad_68[0x8]; // 0x68(0x08)
};

// ScriptStruct FortniteGame.FortCalendarEventInventoryTransformData
// Size: 0x190 (Inherited: 0x08)
struct FFortCalendarEventInventoryTransformData : FTableRowBase {
	struct FName CalendarChannelName; // 0x08(0x08)
	struct FName CalendarEventName; // 0x10(0x08)
	struct TArray<struct FName> AllowedProfileTypes; // 0x18(0x10)
	struct FGameplayTagContainer PrerequisiteHomebaseProperties; // 0x28(0x20)
	struct TSoftObjectPtr<struct UFortQuestItemDefinition> PrerequisiteQuest; // 0x48(0x28)
	struct FDataTableRowHandle PrerequisiteObjective; // 0x70(0x10)
	struct TArray<struct TSoftObjectPtr<struct UFortQuestItemDefinition>> PrerequisiteIncompleteOrUngrantedQuests; // 0x80(0x10)
	struct TArray<struct TSoftObjectPtr<struct UFortItemDefinition>> PrerequisiteUnownedItems; // 0x90(0x10)
	struct TArray<struct TSoftObjectPtr<struct UFortQuestItemDefinition>> QuestsOnlyActiveDuringEvent; // 0xa0(0x10)
	struct TArray<struct FFortItemQuantityPair> ItemsToGrant; // 0xb0(0x10)
	struct TArray<struct FFortHiddenRewardQuantityPair> ItemsToGrantByTemplate; // 0xc0(0x10)
	struct TArray<struct FRecipeDataTableRowHandleQuantityData> ConversionRecipesToRunOnEventStart; // 0xd0(0x10)
	struct TArray<struct FRecipeDataTableRowHandleQuantityData> ConversionRecipesToRunAfterEvent; // 0xe0(0x10)
	struct TArray<struct FFortItemQuantityPair> ItemsToRemoveAfterEvent; // 0xf0(0x10)
	struct TArray<struct FFortHiddenRewardQuantityPair> ItemsToRemoveAfterEventByTemplate; // 0x100(0x10)
	struct TSoftObjectPtr<struct UFortPersistentResourceItemDefinition> EventCurrency; // 0x110(0x28)
	float EventCurrencyConversionFactor; // 0x138(0x04)
	char pad_13C[0x4]; // 0x13c(0x04)
	struct TMap<struct FString, struct FString> MetaData; // 0x140(0x50)
};

// ScriptStruct FortniteGame.RecipeDataTableRowHandleQuantityData
// Size: 0x18 (Inherited: 0x00)
struct FRecipeDataTableRowHandleQuantityData {
	struct FDataTableRowHandle DataTableRowHandle; // 0x00(0x10)
	int32_t Quantity; // 0x10(0x04)
	bool ConvertRemainderUp; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
};

// ScriptStruct FortniteGame.RecipeData
// Size: 0x10 (Inherited: 0x00)
struct FRecipeData {
	char pad_0[0x10]; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortUICameraFrameTargetSettings
// Size: 0x30 (Inherited: 0x00)
struct FFortUICameraFrameTargetSettings {
	struct FVector FocusPointToCenter; // 0x00(0x0c)
	enum class EFortUICameraFrameTargetBoundingBehavior BoundingBehavior; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
	struct FFortUICameraFrameTargetBounds BoundsToFrame; // 0x10(0x14)
	struct FRotator FocusObjectRotation; // 0x24(0x0c)
};

// ScriptStruct FortniteGame.FortUICameraFrameTargetBounds
// Size: 0x14 (Inherited: 0x00)
struct FFortUICameraFrameTargetBounds {
	struct FVector Origin; // 0x00(0x0c)
	float CylinderHalfHeight; // 0x0c(0x04)
	float CylinderRadius; // 0x10(0x04)
};

// ScriptStruct FortniteGame.InterpOffset
// Size: 0x10 (Inherited: 0x00)
struct FInterpOffset {
	struct TArray<struct FInterpOffsetData> SamplePoints; // 0x00(0x10)
};

// ScriptStruct FortniteGame.InterpOffsetData
// Size: 0x1c (Inherited: 0x00)
struct FInterpOffsetData {
	struct FVector ViewOffset; // 0x00(0x0c)
	struct FVector LargeBodyTypeAddtnlOffset; // 0x0c(0x0c)
	float PitchAngle; // 0x18(0x04)
};

// ScriptStruct FortniteGame.FilledGadgetSlot
// Size: 0x18 (Inherited: 0x00)
struct FFilledGadgetSlot {
	struct FString Gadget; // 0x00(0x10)
	int32_t slot_index; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortCrewSlotInformation
// Size: 0x48 (Inherited: 0x00)
struct FFortCrewSlotInformation {
	struct FText DisplayName; // 0x00(0x18)
	struct FName SlotName; // 0x18(0x08)
	struct FGameplayTagContainer SlotTags; // 0x20(0x20)
	float SlotStatContribution; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// ScriptStruct FortniteGame.CarriedObjectAttachmentInfo
// Size: 0x28 (Inherited: 0x00)
struct FCarriedObjectAttachmentInfo {
	struct AActor* AttachParent; // 0x00(0x08)
	struct FName SocketName; // 0x08(0x08)
	struct FVector RelativeTranslation; // 0x10(0x0c)
	struct FRotator RelativeRotation; // 0x1c(0x0c)
};

// ScriptStruct FortniteGame.FortCurrencyData
// Size: 0x48 (Inherited: 0x08)
struct FFortCurrencyData : FTableRowBase {
	struct FString TemplateName; // 0x08(0x10)
	int32_t MaxStackSize; // 0x18(0x04)
	int32_t MaxNumStacks; // 0x1c(0x04)
	struct FString ProfileType; // 0x20(0x10)
	struct FString Platform; // 0x30(0x10)
	bool bPrivate; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// ScriptStruct FortniteGame.FortProceduralCatalogCostPriceFactor
// Size: 0x10 (Inherited: 0x08)
struct FFortProceduralCatalogCostPriceFactor : FTableRowBase {
	float PriceFactor; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortChallengeBundleSpecialOffer
// Size: 0x50 (Inherited: 0x00)
struct FFortChallengeBundleSpecialOffer {
	struct FString Storefront; // 0x00(0x10)
	struct FText RichText; // 0x10(0x18)
	struct TSoftObjectPtr<struct UMaterial> OfferImage; // 0x28(0x28)
};

// ScriptStruct FortniteGame.FortChallengeBundleRewards
// Size: 0x18 (Inherited: 0x00)
struct FFortChallengeBundleRewards {
	int32_t CompletionCount; // 0x00(0x04)
	bool bBundlePrestige; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
	struct TArray<struct FAthenaRewardItemReference> Rewards; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortChallengeBundleQuestEntry
// Size: 0x80 (Inherited: 0x00)
struct FFortChallengeBundleQuestEntry {
	struct TSoftObjectPtr<struct UFortQuestItemDefinition> QuestDefinition; // 0x00(0x28)
	enum class EChallengeBundleQuestUnlockType QuestUnlockType; // 0x28(0x01)
	bool bStartActive; // 0x29(0x01)
	bool bIsPrerequisite; // 0x2a(0x01)
	char pad_2B[0x1]; // 0x2b(0x01)
	int32_t UnlockValue; // 0x2c(0x04)
	struct FChallengeGiftBoxData RewardGiftBox; // 0x30(0x38)
	struct FFortItemQuantityPair MenuOverrideRewardPreview; // 0x68(0x14)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// ScriptStruct FortniteGame.FortChallengeBundleLevel
// Size: 0x10 (Inherited: 0x00)
struct FFortChallengeBundleLevel {
	struct TArray<struct FFortChallengeBundleLevelReward> BundleLevelRewardEntries; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortChallengeBundleLevelReward
// Size: 0x88 (Inherited: 0x00)
struct FFortChallengeBundleLevelReward {
	struct FAthenaRewardItemReference RewardItem; // 0x00(0x80)
	int32_t NumObjectivesNeeded; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
};

// ScriptStruct FortniteGame.GlyphRewardInfo
// Size: 0x18 (Inherited: 0x08)
struct FGlyphRewardInfo : FTableRowBase {
	struct UFortChallengeBundleItemDefinition* BundleDef; // 0x08(0x08)
	struct UFortQuestItemDefinition* QuestDef; // 0x10(0x08)
};

// ScriptStruct FortniteGame.ChallengePartialCompletionData
// Size: 0x20 (Inherited: 0x00)
struct FChallengePartialCompletionData {
	struct FString QuestTemplateId; // 0x00(0x10)
	struct TArray<struct FObjectivePartialCompletionData> ObjectivData; // 0x10(0x10)
};

// ScriptStruct FortniteGame.ObjectivePartialCompletionData
// Size: 0x18 (Inherited: 0x00)
struct FObjectivePartialCompletionData {
	struct FString ObjectiveName; // 0x00(0x10)
	int32_t CompletionCount; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortChallengeBundleScheduleEntry
// Size: 0x30 (Inherited: 0x00)
struct FFortChallengeBundleScheduleEntry {
	struct TSoftObjectPtr<struct UFortChallengeBundleItemDefinition> ChallengeBundle; // 0x00(0x28)
	enum class EChallengeScheduleUnlockType UnlockType; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	int32_t UnlockValue; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortChallengePunchCardStyles
// Size: 0xb0 (Inherited: 0x00)
struct FFortChallengePunchCardStyles {
	struct FGameplayTag StyleType; // 0x00(0x08)
	struct FString EncodedName; // 0x08(0x10)
	struct FLinearColor BaseColor1; // 0x18(0x10)
	struct FLinearColor BaseColor2; // 0x28(0x10)
	struct FLinearColor BaseColor3; // 0x38(0x10)
	struct FLinearColor BaseColor4; // 0x48(0x10)
	struct FLinearColor BaseColor5; // 0x58(0x10)
	struct FLinearColor AccentColor1; // 0x68(0x10)
	struct FLinearColor AccentColor2; // 0x78(0x10)
	struct TSoftObjectPtr<struct UTexture2D> BackgrounTexture; // 0x88(0x28)
};

// ScriptStruct FortniteGame.FortChallengeSetStyle
// Size: 0xa0 (Inherited: 0x00)
struct FFortChallengeSetStyle {
	struct FLinearColor PrimaryColor; // 0x00(0x10)
	struct FLinearColor SecondaryColor; // 0x10(0x10)
	struct FLinearColor AccentColor; // 0x20(0x10)
	struct FLinearColor Context_LimitedTimeColor; // 0x30(0x10)
	struct FLinearColor Context_BaseColor; // 0x40(0x10)
	struct TSoftObjectPtr<struct UObject> DisplayImage; // 0x50(0x28)
	struct TSoftObjectPtr<struct UObject> CustomBackground; // 0x78(0x28)
};

// ScriptStruct FortniteGame.FortCharacterCustomization
// Size: 0x40 (Inherited: 0x00)
struct FFortCharacterCustomization {
	char pad_0[0x8]; // 0x00(0x08)
	struct TArray<struct UCustomCharacterPart*> CharacterPartOverrides; // 0x08(0x10)
	struct UFortAnimInstance* AnimBPClassOverride; // 0x18(0x08)
	struct UFortWeaponAnimSet* AnimSetOverride; // 0x20(0x08)
	struct TArray<struct UAnimInstance*> AnimLayersOverride; // 0x28(0x10)
	struct UFortFootstepAudioBank* FootstepBankOverride; // 0x38(0x08)
};

// ScriptStruct FortniteGame.FortCharacterCustomizationHandle
// Size: 0x04 (Inherited: 0x00)
struct FFortCharacterCustomizationHandle {
	int32_t Handle; // 0x00(0x04)
};

// ScriptStruct FortniteGame.PartStackEntry
// Size: 0x10 (Inherited: 0x00)
struct FPartStackEntry {
	struct TArray<struct UCustomCharacterPart*> PartList; // 0x00(0x10)
};

// ScriptStruct FortniteGame.OstrichWeapon_RetainedData
// Size: 0x0c (Inherited: 0x00)
struct FOstrichWeapon_RetainedData {
	int32_t LoadedShotgunAmmo; // 0x00(0x04)
	float RocketsCooldownElapsed; // 0x04(0x04)
	bool bHasPrevious; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.CharmSlotMetadata
// Size: 0x68 (Inherited: 0x00)
struct FCharmSlotMetadata {
	enum class EFortCustomPartType AttachToPart; // 0x00(0x01)
	bool WeaponCharm; // 0x01(0x01)
	bool BackPresentedCharm; // 0x02(0x01)
	char pad_3[0x1]; // 0x03(0x01)
	struct FName AttachSocket; // 0x04(0x08)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FGameplayTagQuery MatchCriteria; // 0x10(0x48)
	struct TArray<struct FCharmPreviewEntry> PreviewList; // 0x58(0x10)
};

// ScriptStruct FortniteGame.CharmPreviewEntry
// Size: 0x70 (Inherited: 0x00)
struct FCharmPreviewEntry {
	struct TSoftObjectPtr<struct UObject> PreviewObject; // 0x00(0x28)
	char pad_28[0x8]; // 0x28(0x08)
	struct FTransform PreviewTransform; // 0x30(0x30)
	char bPreviewUsingVehicleShader : 1; // 0x60(0x01)
	char pad_60_1 : 7; // 0x60(0x01)
	char pad_61[0xf]; // 0x61(0x0f)
};

// ScriptStruct FortniteGame.SpawnPickupEntry
// Size: 0x18 (Inherited: 0x00)
struct FSpawnPickupEntry {
	struct FString Name; // 0x00(0x10)
	struct AActor* PickupClass; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortClientAnnouncementData_Conversation
// Size: 0x10 (Inherited: 0x01)
struct FFortClientAnnouncementData_Conversation : FFortClientAnnouncementData {
	struct UFortConversation* Conversation; // 0x00(0x08)
	enum class EFortAnnouncementDisplayPreference ConversationDisplayPreference; // 0x08(0x01)
	char pad_A[0x6]; // 0x0a(0x06)
};

// ScriptStruct FortniteGame.FortClientAnnouncementData_Keybinding
// Size: 0xf8 (Inherited: 0xe8)
struct FFortClientAnnouncementData_Keybinding : FFortClientAnnouncementData_Basic {
	struct TArray<struct FActionTextPair> GamapadActionTextList; // 0xe8(0x10)
};

// ScriptStruct FortniteGame.ActionTextPair
// Size: 0x20 (Inherited: 0x00)
struct FActionTextPair {
	struct FName Action; // 0x00(0x08)
	struct FText Text; // 0x08(0x18)
};

// ScriptStruct FortniteGame.FortClientAnnouncementData_ZoneModifiers
// Size: 0x10 (Inherited: 0x01)
struct FFortClientAnnouncementData_ZoneModifiers : FFortClientAnnouncementData {
	struct TArray<struct UFortGameplayModifierItemDefinition*> Modifiers; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortClientAnnouncementQueue
// Size: 0x10 (Inherited: 0x00)
struct FFortClientAnnouncementQueue {
	struct TArray<struct AFortClientAnnouncement*> Announcements; // 0x00(0x10)
};

// ScriptStruct FortniteGame.ClientBotBuildStep
// Size: 0x40 (Inherited: 0x00)
struct FClientBotBuildStep {
	char pad_0[0x40]; // 0x00(0x40)
};

// ScriptStruct FortniteGame.MovementTestDefinition
// Size: 0x20 (Inherited: 0x00)
struct FMovementTestDefinition {
	float ForwardMoveStrength; // 0x00(0x04)
	float SideMoveStrength; // 0x04(0x04)
	float Duration; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FString TestName; // 0x10(0x10)
};

// ScriptStruct FortniteGame.ConsumableTestDefinition
// Size: 0x30 (Inherited: 0x00)
struct FConsumableTestDefinition {
	char pad_0[0x30]; // 0x00(0x30)
};

// ScriptStruct FortniteGame.FortClientPilotConsumableTestDefinition
// Size: 0x30 (Inherited: 0x00)
struct FFortClientPilotConsumableTestDefinition {
	char pad_0[0x30]; // 0x00(0x30)
};

// ScriptStruct FortniteGame.FortClientPilotMovementTestDefinition
// Size: 0x20 (Inherited: 0x00)
struct FFortClientPilotMovementTestDefinition {
	float ForwardMoveStrength; // 0x00(0x04)
	float SideMoveStrength; // 0x04(0x04)
	float Duration; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FString TestName; // 0x10(0x10)
};

// ScriptStruct FortniteGame.ClientPilotBuildStep
// Size: 0x40 (Inherited: 0x00)
struct FClientPilotBuildStep {
	char pad_0[0x40]; // 0x00(0x40)
};

// ScriptStruct FortniteGame.PlayerLastSelectedPreferredProvider
// Size: 0x30 (Inherited: 0x00)
struct FPlayerLastSelectedPreferredProvider {
	struct FUniqueNetIdRepl LocalUserId; // 0x00(0x28)
	enum class EAppStore PreferredProvider; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// ScriptStruct FortniteGame.UserActionBindings
// Size: 0x10 (Inherited: 0x00)
struct FUserActionBindings {
	struct TArray<struct FFortActionKeyMapping> UserActionBindings; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortActionKeyMapping
// Size: 0x78 (Inherited: 0x00)
struct FFortActionKeyMapping {
	struct FName ActionName; // 0x00(0x08)
	enum class EFortInputActionGroup ActionGroup; // 0x08(0x01)
	enum class ESubGame SubGameUsedIn; // 0x09(0x01)
	char pad_A[0x6]; // 0x0a(0x06)
	struct FText LocalizedCategory; // 0x10(0x18)
	struct FText LocalizedName; // 0x28(0x18)
	struct FKey KeyBind1; // 0x40(0x18)
	struct FKey KeyBind2; // 0x58(0x18)
	float InputScale; // 0x70(0x04)
	bool bIsAxisMapping; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
};

// ScriptStruct FortniteGame.FortCollectionBookDirectPurchaseData
// Size: 0x38 (Inherited: 0x08)
struct FFortCollectionBookDirectPurchaseData : FTableRowBase {
	struct TArray<struct FFortItemQuantityPair> PurchaseCosts; // 0x08(0x10)
	struct FGameplayTagContainer PurchaseCatalysts; // 0x18(0x20)
};

// ScriptStruct FortniteGame.FortCollectionBookStat
// Size: 0x04 (Inherited: 0x00)
struct FFortCollectionBookStat {
	int32_t MaxBookXpLevelAchieved; // 0x00(0x04)
};

// ScriptStruct FortniteGame.FortCollectionBookPageCategoryTableRow
// Size: 0x28 (Inherited: 0x08)
struct FFortCollectionBookPageCategoryTableRow : FTableRowBase {
	struct FText Name; // 0x08(0x18)
	int32_t SortPriority; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.FortCollectionBookPageData
// Size: 0x78 (Inherited: 0x08)
struct FFortCollectionBookPageData : FTableRowBase {
	struct FText Name; // 0x08(0x18)
	struct FName CategoryId; // 0x20(0x08)
	int32_t SortPriority; // 0x28(0x04)
	struct FName ProfileId; // 0x2c(0x08)
	char pad_34[0x4]; // 0x34(0x04)
	struct TArray<struct FName> SectionRowNames; // 0x38(0x10)
	struct FFortRewardInfo Rewards; // 0x48(0x30)
};

// ScriptStruct FortniteGame.FortCollectionBookSectionData
// Size: 0x60 (Inherited: 0x08)
struct FFortCollectionBookSectionData : FTableRowBase {
	struct FText Name; // 0x08(0x18)
	struct TArray<struct FName> SlotRowNames; // 0x20(0x10)
	struct FFortRewardInfo Rewards; // 0x30(0x30)
};

// ScriptStruct FortniteGame.FortCollectionBookSlotSourceData
// Size: 0x20 (Inherited: 0x08)
struct FFortCollectionBookSlotSourceData : FTableRowBase {
	struct FText Description; // 0x08(0x18)
};

// ScriptStruct FortniteGame.FortCollectionBookSlotXPWeightData
// Size: 0x20 (Inherited: 0x08)
struct FFortCollectionBookSlotXPWeightData : FTableRowBase {
	float ConstantWeight; // 0x08(0x04)
	float RarityWeight; // 0x0c(0x04)
	float PremiumTierWeight; // 0x10(0x04)
	float ItemLevelWeight; // 0x14(0x04)
	float ItemRatingWeight; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortCollectionBookSectionState
// Size: 0x18 (Inherited: 0x00)
struct FFortCollectionBookSectionState {
	struct FString Section; // 0x00(0x10)
	enum class EFortCollectionBookState State; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.FortCollectionBookXPData
// Size: 0x48 (Inherited: 0x08)
struct FFortCollectionBookXPData : FTableRowBase {
	int32_t XpToNextLevel; // 0x08(0x04)
	int32_t TotalXpToGetToThisLevel; // 0x0c(0x04)
	struct FFortRewardInfo Rewards; // 0x10(0x30)
	bool bIsMajorReward; // 0x40(0x01)
	bool bAutoOpenRewardCardPacks; // 0x41(0x01)
	char pad_42[0x6]; // 0x42(0x06)
};

// ScriptStruct FortniteGame.FortCollectionDataMapping
// Size: 0x40 (Inherited: 0x00)
struct FFortCollectionDataMapping {
	struct FString CollectionType; // 0x00(0x10)
	bool bEnsureAllTaggedItemsAreInTheCollection; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct TSoftObjectPtr<struct UFortCollectionData> Collection; // 0x18(0x28)
};

// ScriptStruct FortniteGame.FortCollisionAudioTriggerData
// Size: 0x48 (Inherited: 0x00)
struct FFortCollisionAudioTriggerData {
	struct USoundBase* Asset; // 0x00(0x08)
	struct FVector2D ImpulseMagnitudeRange; // 0x08(0x08)
	bool bImpulseMagnitudeLowerBound; // 0x10(0x01)
	bool bImpulseMagnitudeUpperBound; // 0x11(0x01)
	char pad_12[0x2]; // 0x12(0x02)
	struct FVector2D VolumeRange; // 0x14(0x08)
	struct FVector2D PitchRange; // 0x1c(0x08)
	float MinRetriggerTime; // 0x24(0x04)
	float MaxTriggerDistance; // 0x28(0x04)
	char pad_2C[0x1c]; // 0x2c(0x1c)
};

// ScriptStruct FortniteGame.FortSurfaceDamageRatioStats
// Size: 0x68 (Inherited: 0x08)
struct FFortSurfaceDamageRatioStats : FTableRowBase {
	struct FName Default; // 0x08(0x08)
	struct FName Wood; // 0x10(0x08)
	struct FName Stone; // 0x18(0x08)
	struct FName Metal; // 0x20(0x08)
	struct FName HumanEntity; // 0x28(0x08)
	struct FName AIEntity; // 0x30(0x08)
	struct FName Explosive; // 0x38(0x08)
	struct FName WeakSpot; // 0x40(0x08)
	struct FName Objective; // 0x48(0x08)
	struct FName WeakSpot_Wood; // 0x50(0x08)
	struct FName WeakSpot_Stone; // 0x58(0x08)
	struct FName WeakSpot_Metal; // 0x60(0x08)
};

// ScriptStruct FortniteGame.FortSurfaceDamageRatioByAffiliationStats
// Size: 0x18 (Inherited: 0x08)
struct FFortSurfaceDamageRatioByAffiliationStats : FTableRowBase {
	float Friendly; // 0x08(0x04)
	float Neutral; // 0x0c(0x04)
	float Hostile; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortDamageSource
// Size: 0x10 (Inherited: 0x00)
struct FFortDamageSource {
	struct TWeakObjectPtr<struct AController> InstigatorController; // 0x00(0x08)
	struct TWeakObjectPtr<struct AActor> DamageCauser; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortCombatManagerEvent
// Size: 0x08 (Inherited: 0x00)
struct FFortCombatManagerEvent {
	float EventValue; // 0x00(0x04)
	enum class EFortCombatEvents event; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
};

// ScriptStruct FortniteGame.FortActiveMontageDecisionWindow
// Size: 0x18 (Inherited: 0x00)
struct FFortActiveMontageDecisionWindow {
	struct UFortAnimNotifyState_AbilityDecisionWindow* DecisionWindow; // 0x00(0x08)
	struct UAnimSequenceBase* DecisionAnimation; // 0x08(0x08)
	bool bReceivedPrimaryInput; // 0x10(0x01)
	bool bReceivedSecondaryInput; // 0x11(0x01)
	bool bAlreadyProcessedInput; // 0x12(0x01)
	char pad_13[0x5]; // 0x13(0x05)
};

// ScriptStruct FortniteGame.FortMontageInputAction
// Size: 0x14 (Inherited: 0x00)
struct FFortMontageInputAction {
	struct FGameplayTag TriggerAbilityTag; // 0x00(0x08)
	struct FName NextSection; // 0x08(0x08)
	enum class EFortMontageInputType InputType; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
};

// ScriptStruct FortniteGame.FortComponentPropertyProxy
// Size: 0x01 (Inherited: 0x00)
struct FFortComponentPropertyProxy {
	char pad_0[0x1]; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortConstructorBaseClassData
// Size: 0xc0 (Inherited: 0xc0)
struct FFortConstructorBaseClassData : FBuildingPropClassData {
};

// ScriptStruct FortniteGame.PatternBASEEffect
// Size: 0x10 (Inherited: 0x00)
struct FPatternBASEEffect {
	struct UBuildingEditModeMetadata* Pattern; // 0x00(0x08)
	struct UStaticMesh* Mesh; // 0x08(0x08)
};

// ScriptStruct FortniteGame.BASEGameplayEffect
// Size: 0x10 (Inherited: 0x00)
struct FBASEGameplayEffect {
	struct UGameplayEffect* Effect; // 0x00(0x08)
	int32_t LevelOverride; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.ConsumeEffectData
// Size: 0x50 (Inherited: 0x00)
struct FConsumeEffectData {
	SoftClassProperty EffectClass; // 0x00(0x28)
	struct FScalableFloat Level; // 0x28(0x28)
};

// ScriptStruct FortniteGame.FortContentEncryptionCollection
// Size: 0x14 (Inherited: 0x00)
struct FFortContentEncryptionCollection {
	bool bEnabled; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FCollectionReference Collection; // 0x04(0x08)
	enum class EFortContentEncryptionCollectionGrouping Grouping; // 0x0c(0x04)
	enum class EFortContentEncryptionAllowedReferences AllowedReferences; // 0x10(0x04)
};

// ScriptStruct FortniteGame.FortKeyChain
// Size: 0x18 (Inherited: 0x00)
struct FFortKeyChain {
	uint32_t Hash; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct TArray<struct FFortEncryptionKey> Keys; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortEncryptionKey
// Size: 0x30 (Inherited: 0x00)
struct FFortEncryptionKey {
	struct FName Name; // 0x00(0x08)
	struct FGuid Guid; // 0x08(0x10)
	struct TArray<char> Bytes; // 0x18(0x10)
	enum class EFortEncryptionStatus Status; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// ScriptStruct FortniteGame.DirectiveInput
// Size: 0x30 (Inherited: 0x00)
struct FDirectiveInput {
	enum class ECommonInputType Input; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FText Text; // 0x08(0x18)
	struct TArray<struct FText> ABTestingTexts; // 0x20(0x10)
};

// ScriptStruct FortniteGame.HUDElementToHighlight
// Size: 0x60 (Inherited: 0x00)
struct FHUDElementToHighlight {
	struct FGameplayTagContainer HUDElementToHighlight; // 0x00(0x20)
	struct FGameplayTagContainer HUDSubElementToHighlight; // 0x20(0x20)
	struct FGameplayTagContainer UniqueHUDElementToHighlight; // 0x40(0x20)
};

// ScriptStruct FortniteGame.ExternalEmoteCategory
// Size: 0x50 (Inherited: 0x00)
struct FExternalEmoteCategory {
	struct FName CategoryName; // 0x00(0x08)
	struct FText CategoryTitle; // 0x08(0x18)
	struct FText CategoryTitleMultipage; // 0x20(0x18)
	struct TArray<struct FEmoteActionBinding> Emotes; // 0x38(0x10)
	char bExclusive : 1; // 0x48(0x01)
	char pad_48_1 : 7; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// ScriptStruct FortniteGame.EmoteActionBinding
// Size: 0x30 (Inherited: 0x00)
struct FEmoteActionBinding {
	struct FPrimaryAssetId EmoteId; // 0x00(0x10)
	bool bOnlyDisplayForDiscoverability; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
	struct FName ActionName; // 0x14(0x08)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct TArray<struct FInputActionKeyMapping> Input; // 0x20(0x10)
};

// ScriptStruct FortniteGame.ComponentWidgetPairings
// Size: 0x10 (Inherited: 0x00)
struct FComponentWidgetPairings {
	enum class EUIExtensionSlot Slot; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct UUserWidget* Class; // 0x08(0x08)
};

// ScriptStruct FortniteGame.StenciledActorInfoArray
// Size: 0x120 (Inherited: 0x108)
struct FStenciledActorInfoArray : FFastArraySerializer {
	struct TArray<struct FStenciledActorInfoEntry> Entries; // 0x108(0x10)
	char pad_118[0x8]; // 0x118(0x08)
};

// ScriptStruct FortniteGame.StenciledActorInfoEntry
// Size: 0x98 (Inherited: 0x0c)
struct FStenciledActorInfoEntry : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct AActor* Actor; // 0x10(0x08)
	float StartTime; // 0x18(0x04)
	float EndTime; // 0x1c(0x04)
	struct FStenciledActorData Data; // 0x20(0x70)
	bool bReplaceExistingWhenAdded; // 0x90(0x01)
	bool bRefreshExistingWhenAdded; // 0x91(0x01)
	char pad_92[0x6]; // 0x92(0x06)
};

// ScriptStruct FortniteGame.StenciledActorData
// Size: 0x70 (Inherited: 0x00)
struct FStenciledActorData {
	struct FString GroupIdentifier; // 0x00(0x10)
	float Duration; // 0x10(0x04)
	float StepTime; // 0x14(0x04)
	enum class EShareActorWith ShareActorWith; // 0x18(0x01)
	char ShareActorWithMask; // 0x19(0x01)
	char DisplayTeamOverride; // 0x1a(0x01)
	char pad_1B[0x5]; // 0x1b(0x05)
	struct FIndicatedActorParticleSystemData ParticleSystemData; // 0x20(0x30)
	struct USoundBase* sound; // 0x50(0x08)
	struct FName FriendlyStencilName; // 0x58(0x08)
	struct FName EnemyStencilName; // 0x60(0x08)
	char FriendlyStencilIndex; // 0x68(0x01)
	char EnemyStencilIndex; // 0x69(0x01)
	char pad_6A[0x6]; // 0x6a(0x06)
};

// ScriptStruct FortniteGame.IndicatedActorParticleSystemData
// Size: 0x30 (Inherited: 0x00)
struct FIndicatedActorParticleSystemData {
	struct UParticleSystem* ParticleSystem; // 0x00(0x08)
	struct FName ParticleSystemActorParamName; // 0x08(0x08)
	struct FVector ParticleSystemOffset; // 0x10(0x0c)
	struct FVector ParticleSystemDBNOOffset; // 0x1c(0x0c)
	struct FName ParticleSystemVectorParamName; // 0x28(0x08)
};

// ScriptStruct FortniteGame.IndicatedActorInfoArray
// Size: 0x120 (Inherited: 0x108)
struct FIndicatedActorInfoArray : FFastArraySerializer {
	struct TArray<struct FIndicatedActorInfoEntry> Entries; // 0x108(0x10)
	char pad_118[0x8]; // 0x118(0x08)
};

// ScriptStruct FortniteGame.IndicatedActorInfoEntry
// Size: 0xd8 (Inherited: 0x0c)
struct FIndicatedActorInfoEntry : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct AActor* Actor; // 0x10(0x08)
	float StartTime; // 0x18(0x04)
	float EndTime; // 0x1c(0x04)
	struct FIndicatedActorData Data; // 0x20(0xb0)
	bool bReplaceExistingWhenAdded; // 0xd0(0x01)
	bool bRefreshExistingWhenAdded; // 0xd1(0x01)
	char pad_D2[0x6]; // 0xd2(0x06)
};

// ScriptStruct FortniteGame.IndicatedActorData
// Size: 0xb0 (Inherited: 0x00)
struct FIndicatedActorData {
	struct FString GroupIdentifier; // 0x00(0x10)
	float Duration; // 0x10(0x04)
	float StepTime; // 0x14(0x04)
	struct FVector IndicatorOffset; // 0x18(0x0c)
	struct FVector IndicatorDBNOOffset; // 0x24(0x0c)
	enum class EShareActorWith ShareActorWith; // 0x30(0x01)
	char ShareActorWithMask; // 0x31(0x01)
	char DisplayTeamOverride; // 0x32(0x01)
	bool bClampToScreen; // 0x33(0x01)
	struct FIndicatedActorScaleAndOpacityData ScaleAndOpacityData; // 0x34(0x1c)
	struct FIndicatedActorParticleSystemData ParticleSystemData; // 0x50(0x30)
	struct USoundBase* sound; // 0x80(0x08)
	enum class EIndicatorStateImage StateImageOverride; // 0x88(0x01)
	char pad_89[0x3]; // 0x89(0x03)
	struct FDelegate OnActorAdded; // 0x8c(0x10)
	struct FDelegate OnActorRemoved; // 0x9c(0x10)
	char pad_AC[0x4]; // 0xac(0x04)
};

// ScriptStruct FortniteGame.IndicatedActorScaleAndOpacityData
// Size: 0x1c (Inherited: 0x00)
struct FIndicatedActorScaleAndOpacityData {
	float SmallSizeDistance; // 0x00(0x04)
	float LargestSizeDistance; // 0x04(0x04)
	float SmallScale; // 0x08(0x04)
	float LargestScale; // 0x0c(0x04)
	float FarAwayScale; // 0x10(0x04)
	float FarAwayOpacity; // 0x14(0x04)
	float MaxScaleAndFadePercent; // 0x18(0x04)
};

// ScriptStruct FortniteGame.IndicatedActorDataWithFilter
// Size: 0x1b8 (Inherited: 0x00)
struct FIndicatedActorDataWithFilter {
	struct FGameplayTagContainer IndicatedActorTags; // 0x00(0x20)
	struct FGameplayTagQuery IndicatedActorTagQuery; // 0x20(0x48)
	struct TArray<enum class EObjectTypeQuery> ObjectTypes; // 0x68(0x10)
	struct AActor* ActorClassFilter; // 0x78(0x08)
	struct TArray<enum class EFortTeamAffiliation> WithAffiliation; // 0x80(0x10)
	struct FIndicatedActorData IndicatedData; // 0x90(0xb0)
	struct FStenciledActorData StenciledData; // 0x140(0x70)
	float OverlapRadius; // 0x1b0(0x04)
	char pad_1B4[0x4]; // 0x1b4(0x04)
};

// ScriptStruct FortniteGame.InspectorScreenshotContext
// Size: 0x30 (Inherited: 0x00)
struct FInspectorScreenshotContext {
	float DelaySeconds; // 0x00(0x04)
	float FOVAngle; // 0x04(0x04)
	uint32_t ResX; // 0x08(0x04)
	uint32_t ResY; // 0x0c(0x04)
	uint32_t SampleMultiplier; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct FString ResponseUri; // 0x18(0x10)
	char pad_28[0x8]; // 0x28(0x08)
};

// ScriptStruct FortniteGame.GlobalCurrencyTrackedData
// Size: 0x20 (Inherited: 0x00)
struct FGlobalCurrencyTrackedData {
	int32_t TotalCurrencyEarnedInMatch; // 0x00(0x04)
	int32_t PhaseStartCurrencyBalance; // 0x04(0x04)
	int32_t PhaseEndCurrencyBalance; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct TArray<struct FGlobalCurrencyTransactionData> TransactionData; // 0x10(0x10)
};

// ScriptStruct FortniteGame.GlobalCurrencyTransactionData
// Size: 0x18 (Inherited: 0x00)
struct FGlobalCurrencyTransactionData {
	float ServerTime; // 0x00(0x04)
	int32_t Amount; // 0x04(0x04)
	struct FString SourceType; // 0x08(0x10)
};

// ScriptStruct FortniteGame.RepGlobalCurrencyStash
// Size: 0x08 (Inherited: 0x00)
struct FRepGlobalCurrencyStash {
	enum class EStashInventoryServiceSyncState SyncState; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FFortGlobalCurrencyStash Currency; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortGlobalCurrencyStash
// Size: 0x04 (Inherited: 0x00)
struct FFortGlobalCurrencyStash {
	int32_t Count; // 0x00(0x04)
};

// ScriptStruct FortniteGame.PoiDiscoverabilityDataArray
// Size: 0x120 (Inherited: 0x108)
struct FPoiDiscoverabilityDataArray : FFastArraySerializer {
	struct TArray<struct FPoiDiscoverabilityDataEntry> Entries; // 0x108(0x10)
	struct UFortControllerComponent_MapDiscoverability* Owner; // 0x118(0x08)
};

// ScriptStruct FortniteGame.PoiDiscoverabilityDataEntry
// Size: 0x1c (Inherited: 0x0c)
struct FPoiDiscoverabilityDataEntry : FFastArraySerializerItem {
	struct FGameplayTag POITag; // 0x0c(0x08)
	bool bDiscovered; // 0x14(0x01)
	bool bWasInitiallyDiscovered; // 0x15(0x01)
	char VisitCounter; // 0x16(0x01)
	char pad_17[0x5]; // 0x17(0x05)
};

// ScriptStruct FortniteGame.MinigameActivityEndedData
// Size: 0x18 (Inherited: 0x00)
struct FMinigameActivityEndedData {
	bool bSuccessfullyCompleted; // 0x00(0x01)
	enum class EMinigameActivityStat Stat; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	float FinalStatValue; // 0x04(0x04)
	float FinalStatBestValue; // 0x08(0x04)
	int32_t FinalScore; // 0x0c(0x04)
	int32_t TotalScore; // 0x10(0x04)
	int32_t Rank; // 0x14(0x04)
};

// ScriptStruct FortniteGame.MinigameActivityStartedData
// Size: 0x28 (Inherited: 0x00)
struct FMinigameActivityStartedData {
	struct FText MinigameActivityName; // 0x00(0x18)
	enum class EMinigameActivityStat Stat; // 0x18(0x01)
	char pad_19[0x3]; // 0x19(0x03)
	float InitialStatValue; // 0x1c(0x04)
	int32_t InitialScore; // 0x20(0x04)
	int32_t TotalScore; // 0x24(0x04)
};

// ScriptStruct FortniteGame.FortControllerMiniMapComponentVisibilitiesArray
// Size: 0x118 (Inherited: 0x108)
struct FFortControllerMiniMapComponentVisibilitiesArray : FFastArraySerializer {
	struct TArray<struct FFortControllerMiniMapComponentVisibility> Entries; // 0x108(0x10)
};

// ScriptStruct FortniteGame.FortControllerMiniMapComponentVisibility
// Size: 0x20 (Inherited: 0x0c)
struct FFortControllerMiniMapComponentVisibility : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct UFortMiniMapComponent_Discoverable* MiniMapComponent; // 0x10(0x08)
	enum class EMiniMapComponentDiscoverableVisibility Visibility; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
};

// ScriptStruct FortniteGame.RadiusTrackingDisplayInfoArray
// Size: 0x118 (Inherited: 0x108)
struct FRadiusTrackingDisplayInfoArray : FFastArraySerializer {
	struct TArray<struct FRadiusTrackingDisplayInfo> Items; // 0x108(0x10)
};

// ScriptStruct FortniteGame.RadiusTrackingDisplayInfo
// Size: 0x58 (Inherited: 0x0c)
struct FRadiusTrackingDisplayInfo : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct AActor* TrackedActor; // 0x10(0x08)
	struct FVector2D TrackedCenter; // 0x18(0x08)
	float TrackedRadius; // 0x20(0x04)
	struct FLinearColor CircleColor; // 0x24(0x10)
	char pad_34[0x4]; // 0x34(0x04)
	struct UMaterialInterface* CircleMaterial; // 0x38(0x08)
	struct UMaterialInstanceDynamic* MiniMapMID; // 0x40(0x08)
	struct UMaterialInstanceDynamic* FullMapMID; // 0x48(0x08)
	struct UFortControllerComponent_RadiusTracker* RadiusTrackerComponent; // 0x50(0x08)
};

// ScriptStruct FortniteGame.CachedRechargeAmmoData
// Size: 0x50 (Inherited: 0x00)
struct FCachedRechargeAmmoData {
	float ServerStartTime; // 0x00(0x04)
	float ChargeRate; // 0x04(0x04)
	int32_t AmountToRecharge; // 0x08(0x04)
	int32_t ItemLevel; // 0x0c(0x04)
	struct FGuid WeaponItemGuid; // 0x10(0x10)
	struct TSoftObjectPtr<struct UFortWorldItemDefinition> AmmoItemDefinition; // 0x20(0x28)
	bool bShouldRechargeAmmoToClip; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// ScriptStruct FortniteGame.FortChangeMonitoringStruct
// Size: 0x01 (Inherited: 0x00)
struct FFortChangeMonitoringStruct {
	bool bAnyValueDirty; // 0x00(0x01)
};

// ScriptStruct FortniteGame.SkydiveFeedbackData
// Size: 0x20 (Inherited: 0x01)
struct FSkydiveFeedbackData : FFortChangeMonitoringStruct {
	char pad_1[0x1f]; // 0x01(0x1f)
};

// ScriptStruct FortniteGame.PawnConvertedInfos
// Size: 0x20 (Inherited: 0x00)
struct FPawnConvertedInfos {
	struct FString ConvertedPawnUniqueID; // 0x00(0x10)
	char pad_10[0x10]; // 0x10(0x10)
};

// ScriptStruct FortniteGame.PlayerFishingTelemetryData
// Size: 0x30 (Inherited: 0x00)
struct FPlayerFishingTelemetryData {
	float TimeFishingSessionBegan; // 0x00(0x04)
	struct TWeakObjectPtr<struct AFortPickup> Item; // 0x04(0x08)
	struct TWeakObjectPtr<struct AActor> ItemUsedToFish; // 0x0c(0x08)
	bool bFromFishingPool; // 0x14(0x01)
	bool bBestCollected; // 0x15(0x01)
	char pad_16[0x2]; // 0x16(0x02)
	struct FString FishVariantTag; // 0x18(0x10)
	float FishPropertyLength; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortBotTeleportInfo
// Size: 0x48 (Inherited: 0x00)
struct FFortBotTeleportInfo {
	bool bTeleportSuccess; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FVector TeleportFrom; // 0x04(0x0c)
	struct FRotator RotationFrom; // 0x10(0x0c)
	struct FVector TeleportTo; // 0x1c(0x0c)
	struct FRotator RotationTo; // 0x28(0x0c)
	enum class ETeleportReason TeleportReason; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	struct FString BTNodeNameCausingTeleportation; // 0x38(0x10)
};

// ScriptStruct FortniteGame.FortItemsConsumedInfo
// Size: 0x20 (Inherited: 0x00)
struct FFortItemsConsumedInfo {
	struct UFortWeaponItemDefinition* WeaponData; // 0x00(0x08)
	struct FVector Location; // 0x08(0x0c)
	float Health; // 0x14(0x04)
	float Shield; // 0x18(0x04)
	int32_t ItemQuantity; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortRevivedInfo
// Size: 0x28 (Inherited: 0x00)
struct FFortRevivedInfo {
	struct FVector RevivedLocation; // 0x00(0x0c)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FString ReviverUniqueID; // 0x10(0x10)
	char ReviverTeam; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
};

// ScriptStruct FortniteGame.EffectRequestContext
// Size: 0x80 (Inherited: 0x00)
struct FEffectRequestContext {
	struct AController* InstigatingController; // 0x00(0x08)
	struct AActor* InstigatingActor; // 0x08(0x08)
	struct FGameplayTagContainer SourceTags; // 0x10(0x20)
	struct FGameplayTagContainer TargetTags; // 0x30(0x20)
	struct FGameplayTagContainer ContextTags; // 0x50(0x20)
	char pad_70[0x10]; // 0x70(0x10)
};

// ScriptStruct FortniteGame.TagModificationRequest
// Size: 0x30 (Inherited: 0x00)
struct FTagModificationRequest {
	struct FGameplayTagContainer TagsToModify; // 0x00(0x20)
	bool bAddTag; // 0x20(0x01)
	char pad_21[0x3]; // 0x21(0x03)
	float Delay; // 0x24(0x04)
	float FiniteLifetime; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.NPCChosenItemData
// Size: 0x10 (Inherited: 0x00)
struct FNPCChosenItemData {
	char pad_0[0x10]; // 0x00(0x10)
};

// ScriptStruct FortniteGame.EffectUIParameters
// Size: 0x50 (Inherited: 0x00)
struct FEffectUIParameters {
	struct TMap<struct FString, struct FString> ParameterKeyValuePairs; // 0x00(0x50)
};

// ScriptStruct FortniteGame.FortConversationSentence
// Size: 0xc8 (Inherited: 0x00)
struct FFortConversationSentence {
	struct FFortSentenceAudio SpeechAudio; // 0x00(0x40)
	struct FText SpeechText; // 0x40(0x18)
	struct TSoftObjectPtr<struct UTexture2D> TalkingHeadTexture; // 0x58(0x28)
	struct FText TalkingHeadTitle; // 0x80(0x18)
	struct TSoftObjectPtr<struct UAnimMontage> AnimMontage; // 0x98(0x28)
	float PostSentenceDelay; // 0xc0(0x04)
	float DisplayDuration; // 0xc4(0x04)
};

// ScriptStruct FortniteGame.FortSentenceAudio
// Size: 0x40 (Inherited: 0x00)
struct FFortSentenceAudio {
	struct TSoftObjectPtr<struct USoundBase> Audio; // 0x00(0x28)
	struct FFortFeedbackHandle Handle; // 0x28(0x18)
};

// ScriptStruct FortniteGame.FortFeedbackHandle
// Size: 0x18 (Inherited: 0x00)
struct FFortFeedbackHandle {
	struct UFortFeedbackBank* FeedbackBank; // 0x00(0x08)
	struct FName EventName; // 0x08(0x08)
	bool bReadOnly; // 0x10(0x01)
	bool bBankDefined; // 0x11(0x01)
	enum class EFortFeedbackBroadcastFilter BroadcastFilterOverride; // 0x12(0x01)
	char pad_13[0x5]; // 0x13(0x05)
};

// ScriptStruct FortniteGame.ContextualMessageConfig
// Size: 0x28 (Inherited: 0x00)
struct FContextualMessageConfig {
	struct TArray<struct FContextualMessageCandidate> ContextualMessages; // 0x00(0x10)
	struct FText DefaultMessage; // 0x10(0x18)
};

// ScriptStruct FortniteGame.ContextualMessageCandidate
// Size: 0x80 (Inherited: 0x00)
struct FContextualMessageCandidate {
	struct FText Message; // 0x00(0x18)
	enum class EContextRequirementMatchPolicy RequirementMatchPolicy; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
	struct TArray<struct FFortConversationContextRequirement> ContextRequirements; // 0x20(0x10)
	struct FScalableFloat Priority; // 0x30(0x28)
	struct FScalableFloat Weight; // 0x58(0x28)
};

// ScriptStruct FortniteGame.FortConversationContextRequirement
// Size: 0x10 (Inherited: 0x00)
struct FFortConversationContextRequirement {
	struct FGameplayTag ParticipantID; // 0x00(0x08)
	struct UFortControllerRequirement* Requirement; // 0x08(0x08)
};

// ScriptStruct FortniteGame.ControllerRequirementTestContext
// Size: 0x20 (Inherited: 0x00)
struct FControllerRequirementTestContext {
	struct AActor* TestSubjectActor; // 0x00(0x08)
	struct AController* TestSubjectController; // 0x08(0x08)
	struct AActor* OtherActor; // 0x10(0x08)
	struct AController* OtherController; // 0x18(0x08)
};

// ScriptStruct FortniteGame.ConversationGiftTypeDefinition
// Size: 0x30 (Inherited: 0x00)
struct FConversationGiftTypeDefinition {
	enum class EContextRequirementMatchPolicy RequirementMatchPolicy; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct UFortControllerRequirement*> Requirements; // 0x08(0x10)
	struct TArray<struct UFortControllerEffect*> Effects; // 0x18(0x10)
	struct UGiftUINotificationHandler* UINotificationType; // 0x28(0x08)
};

// ScriptStruct FortniteGame.ConversationHistoryData
// Size: 0xf0 (Inherited: 0x00)
struct FConversationHistoryData {
	char pad_0[0xf0]; // 0x00(0xf0)
};

// ScriptStruct FortniteGame.DataDrivenServiceTaskMemory
// Size: 0x04 (Inherited: 0x00)
struct FDataDrivenServiceTaskMemory {
	char pad_0[0x4]; // 0x00(0x04)
};

// ScriptStruct FortniteGame.EffectRecipientConfig
// Size: 0x18 (Inherited: 0x00)
struct FEffectRecipientConfig {
	enum class EDataDrivenEffectRecipient Recipient; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct UFortControllerEffect*> Effects; // 0x08(0x10)
};

// ScriptStruct FortniteGame.ConversationParticipantRequirement
// Size: 0x28 (Inherited: 0x00)
struct FConversationParticipantRequirement {
	struct FGameplayTag ParticipantID; // 0x00(0x08)
	struct UFortControllerRequirement* Requirement; // 0x08(0x08)
	enum class EConversationRequirementResult FailureNodeBehaviour; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct FString CannotUseReasonParameter; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FindActorByClassData
// Size: 0x150 (Inherited: 0x00)
struct FFindActorByClassData {
	struct UObject* ClassFilter; // 0x00(0x08)
	struct TArray<enum class EObjectTypeQuery> ObjectTypes; // 0x08(0x10)
	struct FGameplayTagQuery TargetFilter; // 0x18(0x48)
	struct FScalableFloat MaxToFind; // 0x60(0x28)
	struct FScalableFloat MaxRadius; // 0x88(0x28)
	struct FScalableFloat ShowToSquad; // 0xb0(0x28)
	struct FScalableFloat ShowMarkerDetails; // 0xd8(0x28)
	struct FScalableFloat Price; // 0x100(0x28)
	struct FScalableFloat Rarity; // 0x128(0x28)
};

// ScriptStruct FortniteGame.ConversationSellTaskMemory
// Size: 0x18 (Inherited: 0x00)
struct FConversationSellTaskMemory {
	char pad_0[0x18]; // 0x00(0x18)
};

// ScriptStruct FortniteGame.PendingSupplyDropInfo
// Size: 0x1c (Inherited: 0x00)
struct FPendingSupplyDropInfo {
	char pad_0[0x1c]; // 0x00(0x1c)
};

// ScriptStruct FortniteGame.SupplyDropTaskMemory
// Size: 0x04 (Inherited: 0x00)
struct FSupplyDropTaskMemory {
	char pad_0[0x4]; // 0x00(0x04)
};

// ScriptStruct FortniteGame.FortConversionControlKeyCosts
// Size: 0x90 (Inherited: 0x08)
struct FFortConversionControlKeyCosts : FTableRowBase {
	struct TSoftObjectPtr<struct UFortItemDefinition> RequiredItem; // 0x08(0x28)
	struct FFortConversionTierData Common; // 0x30(0x08)
	struct FFortConversionTierData Uncommon; // 0x38(0x08)
	struct FFortConversionTierData Rare; // 0x40(0x08)
	struct FFortConversionTierData Epic; // 0x48(0x08)
	struct FFortConversionTierData Legendary; // 0x50(0x08)
	struct FFortConversionTierData Mythic; // 0x58(0x08)
	struct FFortConversionTierData Transcendent; // 0x60(0x08)
	struct FFortConversionTierData Unattainable; // 0x68(0x08)
	struct FGameplayTagContainer RequiredCatalysts; // 0x70(0x20)
};

// ScriptStruct FortniteGame.FortConversionTierData
// Size: 0x08 (Inherited: 0x00)
struct FFortConversionTierData {
	int32_t TierCost; // 0x00(0x04)
	int32_t RequiredItemQuantity; // 0x04(0x04)
};

// ScriptStruct FortniteGame.BaseVariantDef
// Size: 0x98 (Inherited: 0x00)
struct FBaseVariantDef {
	char pad_0[0x8]; // 0x00(0x08)
	bool bStartUnlocked; // 0x08(0x01)
	bool bIsDefault; // 0x09(0x01)
	bool bHideIfNotOwned; // 0x0a(0x01)
	char pad_B[0x1]; // 0x0b(0x01)
	struct FGameplayTag CustomizationVariantTag; // 0x0c(0x08)
	char pad_14[0x4]; // 0x14(0x04)
	struct FText VariantName; // 0x18(0x18)
	struct TSoftObjectPtr<struct UTexture2D> PreviewImage; // 0x30(0x28)
	struct FText UnlockRequirements; // 0x58(0x18)
	struct TSoftObjectPtr<struct UFortAccountItemDefinition> UnlockingItemDef; // 0x70(0x28)
};

// ScriptStruct FortniteGame.GameplayTagVariantDef
// Size: 0x98 (Inherited: 0x98)
struct FGameplayTagVariantDef : FBaseVariantDef {
};

// ScriptStruct FortniteGame.CosmeticFilterTagDataRow
// Size: 0x18 (Inherited: 0x08)
struct FCosmeticFilterTagDataRow : FTableRowBase {
	struct TArray<struct FText> SearchQueries; // 0x08(0x10)
};

// ScriptStruct FortniteGame.CosmeticMarkupTagDataRow
// Size: 0x40 (Inherited: 0x08)
struct FCosmeticMarkupTagDataRow : FTableRowBase {
	struct FGameplayTag Tag; // 0x08(0x08)
	struct FText DisplayName; // 0x10(0x18)
	struct FText HelpText; // 0x28(0x18)
};

// ScriptStruct FortniteGame.CosmeticSetDataRow
// Size: 0x40 (Inherited: 0x08)
struct FCosmeticSetDataRow : FTableRowBase {
	struct FGameplayTag Tag; // 0x08(0x08)
	struct FText DisplayName; // 0x10(0x18)
	struct FText Description; // 0x28(0x18)
};

// ScriptStruct FortniteGame.CosmeticLoadoutPartyReplState
// Size: 0x58 (Inherited: 0x00)
struct FCosmeticLoadoutPartyReplState {
	struct FString BackpackPersistentName; // 0x00(0x10)
	struct FString BannerIconId; // 0x10(0x10)
	struct FString BannerColorId; // 0x20(0x10)
	int32_t BattlePassLevel; // 0x30(0x04)
	int32_t BattlePassSelfBoostXp; // 0x34(0x04)
	int32_t BattlePassFriendBoostXp; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct FDisplayManagerVariantData AthenaCharacterVariantInfo; // 0x40(0x18)
};

// ScriptStruct FortniteGame.DisplayManagerVariantData
// Size: 0x18 (Inherited: 0x00)
struct FDisplayManagerVariantData {
	struct UAthenaCosmeticItemDefinition* CosmeticItemDef; // 0x00(0x08)
	struct TArray<struct FMcpVariantChannelInfo> CosmeticVariantChannels; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortCosmeticLockerSlotData
// Size: 0x50 (Inherited: 0x00)
struct FFortCosmeticLockerSlotData {
	struct TMap<enum class EAthenaCustomizationCategory, struct FFortCosmeticLockerSlots> Slots; // 0x00(0x50)
};

// ScriptStruct FortniteGame.FortCosmeticLockerSlots
// Size: 0x20 (Inherited: 0x00)
struct FFortCosmeticLockerSlots {
	struct TArray<struct FString> Items; // 0x00(0x10)
	struct TArray<struct FFortCosmeticLockerSlotsActiveVariants> ActiveVariants; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortCosmeticLockerSlotsActiveVariants
// Size: 0x10 (Inherited: 0x00)
struct FFortCosmeticLockerSlotsActiveVariants {
	struct TArray<struct FMcpVariantReader> Variants; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortCosmeticLockerSlotInformation
// Size: 0x0c (Inherited: 0x00)
struct FFortCosmeticLockerSlotInformation {
	enum class EAthenaCustomizationCategory CustomizationCategory; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t NumSlotsOfCategory; // 0x04(0x04)
	bool bCanBeBlank; // 0x08(0x01)
	bool bMustBeUniqueInArray; // 0x09(0x01)
	char pad_A[0x2]; // 0x0a(0x02)
};

// ScriptStruct FortniteGame.FCRP_LoopingUpdate
// Size: 0x78 (Inherited: 0x00)
struct FFCRP_LoopingUpdate {
	char pad_0[0x18]; // 0x00(0x18)
	struct UObject* Requester; // 0x18(0x08)
	char pad_20[0x58]; // 0x20(0x58)
};

// ScriptStruct FortniteGame.FortCosmeticDependentSwapData
// Size: 0x38 (Inherited: 0x00)
struct FFortCosmeticDependentSwapData {
	struct TArray<struct FFortCosmeticSwapRequirement> SwapRequirements; // 0x00(0x10)
	struct TArray<struct FFortSwapItemAndVariantData> SwapData; // 0x10(0x10)
	enum class EFortAppliedSwapItemAndVariantState ForcedSwapState; // 0x20(0x01)
	char pad_21[0x3]; // 0x21(0x03)
	struct FGuid SwapId; // 0x24(0x10)
	char pad_34[0x4]; // 0x34(0x04)
};

// ScriptStruct FortniteGame.FortCosmeticSwapRequirement
// Size: 0x28 (Inherited: 0x00)
struct FFortCosmeticSwapRequirement {
	enum class EFortCosmeticSwapRequirementPart ItemCategory; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FGameplayTagContainer RequiredMetaTags; // 0x08(0x20)
};

// ScriptStruct FortniteGame.DynamicVariantDef
// Size: 0xa8 (Inherited: 0x98)
struct FDynamicVariantDef : FBaseVariantDef {
	struct TArray<struct UVariantTypeBase*> DynamicVariants; // 0x98(0x10)
};

// ScriptStruct FortniteGame.PartyVariantRep
// Size: 0x28 (Inherited: 0x00)
struct FPartyVariantRep {
	struct FString C; // 0x00(0x10)
	struct FString V; // 0x10(0x10)
	int32_t dE; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.CosmeticVariantCache
// Size: 0x18 (Inherited: 0x00)
struct FCosmeticVariantCache {
	struct UFortItemDefinition* ItemDefFor; // 0x00(0x08)
	char pad_8[0x10]; // 0x08(0x10)
};

// ScriptStruct FortniteGame.McpVariantWriter
// Size: 0x78 (Inherited: 0x00)
struct FMcpVariantWriter {
	struct FGameplayTag VariantChannel; // 0x00(0x08)
	struct FGameplayTag ActiveVariant; // 0x08(0x08)
	struct FString CustomActiveVariant; // 0x10(0x10)
	struct FGameplayTagContainer UnlockedVariants; // 0x20(0x20)
	struct FString CustomUnlockedVariants; // 0x40(0x10)
	struct FString ColorSwatch; // 0x50(0x10)
	int32_t AntiConflictChannel; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
	struct FString AntiConflictRules; // 0x68(0x10)
};

// ScriptStruct FortniteGame.PartVariantDef
// Size: 0x1a8 (Inherited: 0x98)
struct FPartVariantDef : FBaseVariantDef {
	struct TArray<struct TSoftObjectPtr<struct UCustomCharacterPart>> VariantParts; // 0x98(0x10)
	struct TArray<struct FMaterialVariants> VariantMaterials; // 0xa8(0x10)
	struct TArray<struct FMaterialParamterDef> VariantMaterialParams; // 0xb8(0x10)
	struct TArray<struct FVariantParticleSystemInitializerData> InitalParticelSystemData; // 0xc8(0x10)
	struct TArray<struct FParticleVariant> VariantParticles; // 0xd8(0x10)
	struct TArray<struct FParticleParamterVariant> VariantParticleParams; // 0xe8(0x10)
	struct TArray<struct FManagedParticleSwapVariant> VariantSwapInParticles; // 0xf8(0x10)
	struct TArray<struct FManagedParticleParamVariant> VariantAlteredParticleParams; // 0x108(0x10)
	struct TArray<struct FSoundVariant> VariantSounds; // 0x118(0x10)
	struct TArray<struct FFoleySoundVariant> VariantFoley; // 0x128(0x10)
	struct TArray<struct FSocketTransformVariant> SocketTransforms; // 0x138(0x10)
	struct TArray<struct FScriptedActionVariant> VariantActions; // 0x148(0x10)
	struct TArray<struct FMeshVariant> VariantMeshes; // 0x158(0x10)
	struct FCosmeticMetaTagContainer MetaTags; // 0x168(0x40)
};

// ScriptStruct FortniteGame.CosmeticMetaTagContainer
// Size: 0x40 (Inherited: 0x00)
struct FCosmeticMetaTagContainer {
	struct FGameplayTagContainer MetaTagsToApply; // 0x00(0x20)
	struct FGameplayTagContainer MetaTagsToRemove; // 0x20(0x20)
};

// ScriptStruct FortniteGame.MeshVariant
// Size: 0xb0 (Inherited: 0x00)
struct FMeshVariant {
	struct TSoftObjectPtr<struct USkeletalMesh> MeshToSwap; // 0x00(0x28)
	struct FName ComponentToOverride; // 0x28(0x08)
	struct TSoftObjectPtr<struct USkeletalMesh> OverrideMesh; // 0x30(0x28)
	enum class EAnimInstanceClassSwapType AnimInstanceClassSwapType; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
	SoftClassProperty AnimInstanceClassToSwap; // 0x60(0x28)
	SoftClassProperty OverrideAnimInstanceClass; // 0x88(0x28)
};

// ScriptStruct FortniteGame.ScriptedActionVariant
// Size: 0x0c (Inherited: 0x00)
struct FScriptedActionVariant {
	struct FGameplayTag ActionTag; // 0x00(0x08)
	char pad_8[0x4]; // 0x08(0x04)
};

// ScriptStruct FortniteGame.SocketTransformVariant
// Size: 0x40 (Inherited: 0x00)
struct FSocketTransformVariant {
	struct FName SourceSocketName; // 0x00(0x08)
	struct FName OverridSocketName; // 0x08(0x08)
	char pad_10[0x8]; // 0x10(0x08)
	struct TSoftObjectPtr<struct USkeletalMesh> SourceObjectToModify; // 0x18(0x28)
};

// ScriptStruct FortniteGame.FoleySoundVariant
// Size: 0x20 (Inherited: 0x00)
struct FFoleySoundVariant {
	struct TArray<struct USoundLibrary*> LibrariesToAdd; // 0x00(0x10)
	struct TArray<struct USoundLibrary*> LibrariesToRemove; // 0x10(0x10)
};

// ScriptStruct FortniteGame.SoundVariant
// Size: 0x58 (Inherited: 0x00)
struct FSoundVariant {
	struct TSoftObjectPtr<struct USoundBase> SoundToSwap; // 0x00(0x28)
	struct FName ComponentToOverride; // 0x28(0x08)
	struct TSoftObjectPtr<struct USoundBase> OverrideSound; // 0x30(0x28)
};

// ScriptStruct FortniteGame.ManagedParticleParamVariant
// Size: 0x40 (Inherited: 0x00)
struct FManagedParticleParamVariant {
	struct FGameplayTag ParamGroupTag; // 0x00(0x08)
	char pad_8[0x8]; // 0x08(0x08)
	struct TArray<struct FMaterialVectorVariant> ColorParams; // 0x10(0x10)
	struct TArray<struct FVectorParamVariant> VectorParams; // 0x20(0x10)
	struct TArray<struct FMaterialFloatVariant> FloatParams; // 0x30(0x10)
};

// ScriptStruct FortniteGame.MaterialParamName
// Size: 0x08 (Inherited: 0x00)
struct FMaterialParamName {
	struct FName ParamName; // 0x00(0x08)
};

// ScriptStruct FortniteGame.MaterialFloatVariant
// Size: 0x0c (Inherited: 0x08)
struct FMaterialFloatVariant : FMaterialParamName {
	float Value; // 0x08(0x04)
};

// ScriptStruct FortniteGame.VectorParamVariant
// Size: 0x14 (Inherited: 0x08)
struct FVectorParamVariant : FMaterialParamName {
	struct FVector Value; // 0x08(0x0c)
};

// ScriptStruct FortniteGame.MaterialVectorVariant
// Size: 0x18 (Inherited: 0x08)
struct FMaterialVectorVariant : FMaterialParamName {
	struct FLinearColor Value; // 0x08(0x10)
};

// ScriptStruct FortniteGame.ManagedParticleSwapVariant
// Size: 0x68 (Inherited: 0x00)
struct FManagedParticleSwapVariant {
	struct FGameplayTag ParamGroupTag; // 0x00(0x08)
	struct FFortPortableSoftParticles ParticleToOverride; // 0x08(0x58)
	char pad_60[0x8]; // 0x60(0x08)
};

// ScriptStruct FortniteGame.FortPortableSoftParticles
// Size: 0x58 (Inherited: 0x00)
struct FFortPortableSoftParticles {
	enum class EFXType FXType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TSoftObjectPtr<struct UNiagaraSystem> NiagaraVersion; // 0x08(0x28)
	struct TSoftObjectPtr<struct UParticleSystem> CascadeVersion; // 0x30(0x28)
};

// ScriptStruct FortniteGame.ParticleParamterVariant
// Size: 0x58 (Inherited: 0x00)
struct FParticleParamterVariant {
	struct TSoftObjectPtr<struct UFXSystemAsset> ParticleSystemToAlter; // 0x00(0x28)
	struct TArray<struct FMaterialVectorVariant> ColorParams; // 0x28(0x10)
	struct TArray<struct FVectorParamVariant> VectorParams; // 0x38(0x10)
	struct TArray<struct FMaterialFloatVariant> FloatParams; // 0x48(0x10)
};

// ScriptStruct FortniteGame.ParticleVariant
// Size: 0x58 (Inherited: 0x00)
struct FParticleVariant {
	struct TSoftObjectPtr<struct UFXSystemAsset> ParticleSystemToAlter; // 0x00(0x28)
	struct FName ComponentToOverride; // 0x28(0x08)
	struct TSoftObjectPtr<struct UFXSystemAsset> OverrideParticleSystem; // 0x30(0x28)
};

// ScriptStruct FortniteGame.VariantParticleSystemInitializerData
// Size: 0x68 (Inherited: 0x00)
struct FVariantParticleSystemInitializerData {
	struct FName ParticleComponentName; // 0x00(0x08)
	struct TSoftObjectPtr<struct UFXSystemAsset> ParticleSystem; // 0x08(0x28)
	struct TSoftObjectPtr<struct USkeletalMesh> MeshToBindTO; // 0x30(0x28)
	struct FName AttachSocketName; // 0x58(0x08)
	enum class EAttachmentRule LocationRule; // 0x60(0x01)
	enum class EAttachmentRule RotationRule; // 0x61(0x01)
	enum class EAttachmentRule ScaleRule; // 0x62(0x01)
	bool bWeldSimulatedBodies; // 0x63(0x01)
	char pad_64[0x4]; // 0x64(0x04)
};

// ScriptStruct FortniteGame.MaterialParamterDef
// Size: 0x68 (Inherited: 0x00)
struct FMaterialParamterDef {
	struct TSoftObjectPtr<struct UMaterialInterface> MaterialToAlter; // 0x00(0x28)
	struct FName CascadeMaterialName; // 0x28(0x08)
	struct TArray<struct FMaterialVectorVariant> ColorParams; // 0x30(0x10)
	struct TArray<struct FMaterialTextureVariant> TextureParams; // 0x40(0x10)
	struct TArray<struct FMaterialFloatVariant> FloatParams; // 0x50(0x10)
	char pad_60[0x8]; // 0x60(0x08)
};

// ScriptStruct FortniteGame.MaterialTextureVariant
// Size: 0x30 (Inherited: 0x08)
struct FMaterialTextureVariant : FMaterialParamName {
	struct TSoftObjectPtr<struct UTexture> Value; // 0x08(0x28)
};

// ScriptStruct FortniteGame.MaterialVariants
// Size: 0x68 (Inherited: 0x00)
struct FMaterialVariants {
	struct TSoftObjectPtr<struct UMaterialInterface> MaterialToSwap; // 0x00(0x28)
	struct FName ComponentToOverride; // 0x28(0x08)
	struct FName CascadeMaterialName; // 0x30(0x08)
	int32_t MaterialOverrideIndex; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct TSoftObjectPtr<struct UMaterialInterface> OverrideMaterial; // 0x40(0x28)
};

// ScriptStruct FortniteGame.TagDrivenVariantDef
// Size: 0x1e8 (Inherited: 0x1a8)
struct FTagDrivenVariantDef : FPartVariantDef {
	struct FGameplayTagContainer RequiredMetaTags; // 0x1a8(0x20)
	struct FGameplayTagContainer ExcludedMetaTags; // 0x1c8(0x20)
};

// ScriptStruct FortniteGame.LoadoutVariantDef
// Size: 0x1e8 (Inherited: 0x1a8)
struct FLoadoutVariantDef : FPartVariantDef {
	struct TSoftObjectPtr<struct UAthenaCosmeticItemDefinition> LoadoutItem; // 0x1a8(0x28)
	enum class ELoadoutVariantInsertType LocationToInsert; // 0x1d0(0x01)
	bool bItemExpectedInLoadout; // 0x1d1(0x01)
	bool bRequireItemToBeCurrent; // 0x1d2(0x01)
	bool bIgnoreRequireItemToBeCurrentInFrontEnd; // 0x1d3(0x01)
	char pad_1D4[0x4]; // 0x1d4(0x04)
	struct TArray<struct FEmoteMontageVariantDef> VariantEmoteMontages; // 0x1d8(0x10)
};

// ScriptStruct FortniteGame.EmoteMontageVariantDef
// Size: 0xe8 (Inherited: 0x98)
struct FEmoteMontageVariantDef : FBaseVariantDef {
	struct TArray<struct FEmoteMontageSwap> MontageSwaps; // 0x98(0x10)
	struct FCosmeticMetaTagContainer MetaTags; // 0xa8(0x40)
};

// ScriptStruct FortniteGame.EmoteMontageSwap
// Size: 0x50 (Inherited: 0x00)
struct FEmoteMontageSwap {
	struct TSoftObjectPtr<struct UAnimMontage> ToSwapFrom; // 0x00(0x28)
	struct TSoftObjectPtr<struct UAnimMontage> ToSwapTo; // 0x28(0x28)
};

// ScriptStruct FortniteGame.RichColorVariantDef
// Size: 0x140 (Inherited: 0x98)
struct FRichColorVariantDef : FBaseVariantDef {
	struct FCosmeticMetaTagContainer MetaTags; // 0x98(0x40)
	struct FRichColorVariant RichColorVar; // 0xd8(0x68)
};

// ScriptStruct FortniteGame.RichColorVariant
// Size: 0x68 (Inherited: 0x00)
struct FRichColorVariant {
	struct FLinearColor DefaultStartingColor; // 0x00(0x10)
	struct TSoftObjectPtr<struct UCustomDynamicColorSwatch> ColorSwatchForChoices; // 0x10(0x28)
	bool bVariantPickerShouldShowHSV; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct TArray<struct TSoftObjectPtr<struct UMaterialInterface>> MaterialsToAlter; // 0x40(0x10)
	struct TArray<struct TSoftObjectPtr<struct UFXSystemAsset>> ParticlesToAlter; // 0x50(0x10)
	struct FName ColorParamName; // 0x60(0x08)
};

// ScriptStruct FortniteGame.ParticlVariantDef
// Size: 0x148 (Inherited: 0x98)
struct FParticlVariantDef : FBaseVariantDef {
	struct TArray<struct FMaterialVariants> VariantMaterials; // 0x98(0x10)
	struct TArray<struct FMaterialParamterDef> VariantMaterialParams; // 0xa8(0x10)
	struct TArray<struct FVariantParticleSystemInitializerData> InitalParticelSystemData; // 0xb8(0x10)
	struct TArray<struct FParticleVariant> VariantParticles; // 0xc8(0x10)
	struct TArray<struct FParticleParamterVariant> VariantParticleParams; // 0xd8(0x10)
	struct TArray<struct FManagedParticleParamVariant> VariantAlteredParticleParams; // 0xe8(0x10)
	struct TArray<struct FSoundVariant> VariantSounds; // 0xf8(0x10)
	struct FCosmeticMetaTagContainer MetaTags; // 0x108(0x40)
};

// ScriptStruct FortniteGame.ManagedParticleVariantDef
// Size: 0x118 (Inherited: 0x98)
struct FManagedParticleVariantDef : FBaseVariantDef {
	struct TArray<struct FMaterialVariants> VariantMaterials; // 0x98(0x10)
	struct TArray<struct FMaterialParamterDef> VariantMaterialParams; // 0xa8(0x10)
	struct TArray<struct FManagedParticleSwapVariant> VariantSwapInParticles; // 0xb8(0x10)
	struct TArray<struct FManagedParticleParamVariant> VariantAlteredParticleParams; // 0xc8(0x10)
	struct FCosmeticMetaTagContainer MetaTags; // 0xd8(0x40)
};

// ScriptStruct FortniteGame.SocketVariantDef
// Size: 0xa8 (Inherited: 0x98)
struct FSocketVariantDef : FBaseVariantDef {
	struct TArray<struct FSocketTransformVariant> SocketTransforms; // 0x98(0x10)
};

// ScriptStruct FortniteGame.ApplyWrapVariantDef
// Size: 0x180 (Inherited: 0x98)
struct FApplyWrapVariantDef : FBaseVariantDef {
	struct FApplyWrapVariant InnerDef; // 0x98(0x80)
	struct FCosmeticMetaTagContainer MetaTags; // 0x118(0x40)
	struct FGameplayTagContainer FilterOutItemsWithTags; // 0x158(0x20)
	bool bAllowClear; // 0x178(0x01)
	char pad_179[0x7]; // 0x179(0x07)
};

// ScriptStruct FortniteGame.ApplyWrapVariant
// Size: 0x80 (Inherited: 0x00)
struct FApplyWrapVariant {
	struct TArray<struct FName> ComponentNameAllowList; // 0x00(0x10)
	int32_t WrapSectionMask; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct TMap<struct FName, int32_t> CustomSectionMaskByMeshName; // 0x18(0x50)
	struct FString DefaultSelectedItem; // 0x68(0x10)
	enum class EItemWrapMaterialType WrapMaterialType; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// ScriptStruct FortniteGame.ItemTextureVariantDef
// Size: 0x128 (Inherited: 0x98)
struct FItemTextureVariantDef : FBaseVariantDef {
	struct FItemTextureVariant InnerDef; // 0x98(0x28)
	struct FCosmeticMetaTagContainer MetaTags; // 0xc0(0x40)
	struct FGameplayTagContainer FilterOutItemsWithTags; // 0x100(0x20)
	bool bWantsSprays; // 0x120(0x01)
	bool bWantsEmoji; // 0x121(0x01)
	bool bAllowClear; // 0x122(0x01)
	char pad_123[0x5]; // 0x123(0x05)
};

// ScriptStruct FortniteGame.ItemTextureVariant
// Size: 0x28 (Inherited: 0x00)
struct FItemTextureVariant {
	struct TArray<struct TSoftObjectPtr<struct UMaterialInterface>> MaterialsToAlter; // 0x00(0x10)
	struct FName ParamName; // 0x10(0x08)
	struct FString DefaultSelectedItem; // 0x18(0x10)
};

// ScriptStruct FortniteGame.MaterialVariantDef
// Size: 0x118 (Inherited: 0x98)
struct FMaterialVariantDef : FBaseVariantDef {
	struct TArray<struct FMaterialVariants> VariantMaterials; // 0x98(0x10)
	struct TArray<struct FMaterialParamterDef> VariantMaterialParams; // 0xa8(0x10)
	struct TArray<struct FSoundVariant> VariantSounds; // 0xb8(0x10)
	struct TArray<struct FFoleySoundVariant> VariantFoley; // 0xc8(0x10)
	struct FCosmeticMetaTagContainer MetaTags; // 0xd8(0x40)
};

// ScriptStruct FortniteGame.ScriptedActionVariantDef
// Size: 0xe8 (Inherited: 0x98)
struct FScriptedActionVariantDef : FBaseVariantDef {
	struct TArray<struct FScriptedActionVariant> VariantActions; // 0x98(0x10)
	struct FCosmeticMetaTagContainer MetaTags; // 0xa8(0x40)
};

// ScriptStruct FortniteGame.MeshVariantDef
// Size: 0x178 (Inherited: 0x98)
struct FMeshVariantDef : FBaseVariantDef {
	struct TArray<struct FMeshVariant> VariantMeshes; // 0x98(0x10)
	struct TArray<struct FMaterialVariants> VariantMaterials; // 0xa8(0x10)
	struct TArray<struct FMaterialParamterDef> VariantMaterialParams; // 0xb8(0x10)
	struct TArray<struct FVariantParticleSystemInitializerData> InitialParticleSystemData; // 0xc8(0x10)
	struct TArray<struct FParticleVariant> VariantParticles; // 0xd8(0x10)
	struct TArray<struct FParticleParamterVariant> VariantParticleParams; // 0xe8(0x10)
	struct TArray<struct FSocketTransformVariant> SocketTransforms; // 0xf8(0x10)
	struct TArray<struct FSoundVariant> VariantSounds; // 0x108(0x10)
	struct TArray<struct FFoleySoundVariant> VariantFoley; // 0x118(0x10)
	struct TArray<struct FScriptedActionVariant> VariantActions; // 0x128(0x10)
	struct FCosmeticMetaTagContainer MetaTags; // 0x138(0x40)
};

// ScriptStruct FortniteGame.CosmeticMetaTagStack
// Size: 0x20 (Inherited: 0x00)
struct FCosmeticMetaTagStack {
	struct FGameplayTagContainer CurrentState; // 0x00(0x20)
};

// ScriptStruct FortniteGame.FortCreativeAssetCostData
// Size: 0xa0 (Inherited: 0x00)
struct FFortCreativeAssetCostData {
	struct TMap<struct FString, struct FCreativeActorMetaData> MetaDataMap; // 0x00(0x50)
	struct TMap<struct FName, struct FCreativeActorMetaData> NameMetaDataMap; // 0x50(0x50)
};

// ScriptStruct FortniteGame.CreativeActorMetaData
// Size: 0x30 (Inherited: 0x00)
struct FCreativeActorMetaData {
	int32_t AssetSize; // 0x00(0x04)
	int32_t InstanceSize; // 0x04(0x04)
	int32_t SimulationCost; // 0x08(0x04)
	int32_t DrawCall; // 0x0c(0x04)
	int32_t AudioCost; // 0x10(0x04)
	int32_t NetworkCost; // 0x14(0x04)
	char bCostOverridden : 1; // 0x18(0x01)
	char pad_18_1 : 7; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
	struct TArray<struct FCreativeAssetMetaData> AssetDependencies; // 0x20(0x10)
};

// ScriptStruct FortniteGame.CreativeAssetMetaData
// Size: 0x48 (Inherited: 0x00)
struct FCreativeAssetMetaData {
	struct FString StringObjectPtr; // 0x00(0x10)
	struct FName NameObjectPtr; // 0x10(0x08)
	struct TSoftObjectPtr<struct UObject> ObjectPtr; // 0x18(0x28)
	int32_t AssetSize; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// ScriptStruct FortniteGame.FortCreativeBudgetPlotBudgetOverride
// Size: 0x58 (Inherited: 0x00)
struct FFortCreativeBudgetPlotBudgetOverride {
	struct TSoftObjectPtr<struct UFortCreativeRealEstatePlotItemDefinition> PlotItemDefinitionClass; // 0x00(0x28)
	struct TArray<struct FFortCreativeBudget> Budgets; // 0x28(0x10)
	bool bCreativeHeatmapThermometerEnabled; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float CreativeHeatmapThermometerCellSize; // 0x3c(0x04)
	float CreativeHeatmapThermometerInfluenceDistanceMultiplier; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct TArray<struct FFortCreativeGridCellBudget> CreativeHeatmapThermometerBudgetOverrides; // 0x48(0x10)
};

// ScriptStruct FortniteGame.FortCreativeGridCellBudget
// Size: 0x08 (Inherited: 0x00)
struct FFortCreativeGridCellBudget {
	int32_t CellBudget; // 0x00(0x04)
	enum class EFortBudgetCategory Category; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
};

// ScriptStruct FortniteGame.FortCreativeBudget
// Size: 0x18 (Inherited: 0x00)
struct FFortCreativeBudget {
	int32_t TotalBudget; // 0x00(0x04)
	int32_t UsedBudget; // 0x04(0x04)
	int32_t PreviewBudget; // 0x08(0x04)
	enum class EFortBudgetCategory Category; // 0x0c(0x01)
	bool bCritical; // 0x0d(0x01)
	char pad_E[0x2]; // 0x0e(0x02)
	int32_t BudgetLowend; // 0x10(0x04)
	int32_t FixedInstanceCost; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortCreativeBudgetComponentSimulationCost
// Size: 0x30 (Inherited: 0x00)
struct FFortCreativeBudgetComponentSimulationCost {
	SoftClassProperty ComponentClass; // 0x00(0x28)
	int32_t SimulationCost; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortCreativeBudgetPickupInstanceLimit
// Size: 0x30 (Inherited: 0x00)
struct FFortCreativeBudgetPickupInstanceLimit {
	struct TSoftObjectPtr<struct UFortItemDefinition> ItemDefinition; // 0x00(0x28)
	int32_t MaxNumberOfInstances; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortCreativeBudgetClassInstanceLimit
// Size: 0x30 (Inherited: 0x00)
struct FFortCreativeBudgetClassInstanceLimit {
	SoftClassProperty ActorClass; // 0x00(0x28)
	int32_t MaxNumberOfInstances; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortCreativeBudgetOverride
// Size: 0x30 (Inherited: 0x00)
struct FFortCreativeBudgetOverride {
	struct FString ActorClass; // 0x00(0x10)
	int32_t AssetCost; // 0x10(0x04)
	float AssetCostMultiplier; // 0x14(0x04)
	int32_t InstanceCost; // 0x18(0x04)
	float InstanceCostMultiplier; // 0x1c(0x04)
	int32_t SimulationCost; // 0x20(0x04)
	int32_t DrawCall; // 0x24(0x04)
	int32_t AudioCost; // 0x28(0x04)
	int32_t NetworkCost; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.CreativeActorMemoryCost
// Size: 0x40 (Inherited: 0x00)
struct FCreativeActorMemoryCost {
	struct TArray<struct FCreativeAssetMetaData> AssetDependencies; // 0x00(0x10)
	int32_t InstanceMemoryCost; // 0x10(0x04)
	int32_t AssetMemoryCost; // 0x14(0x04)
	SoftClassProperty ActorId; // 0x18(0x28)
};

// ScriptStruct FortniteGame.FortCreativeBudgetTracker
// Size: 0x278 (Inherited: 0x00)
struct FFortCreativeBudgetTracker {
	char pad_0[0x50]; // 0x00(0x50)
	struct TArray<struct FFortCreativeBudget> Budgets; // 0x50(0x10)
	char pad_60[0x50]; // 0x60(0x50)
	struct TArray<uint32_t> AssetInstances; // 0xb0(0x10)
	struct TArray<uint32_t> AssetLastInstances; // 0xc0(0x10)
	char pad_D0[0x158]; // 0xd0(0x158)
	struct TMap<struct TSoftObjectPtr<struct UObject>, int32_t> UsedAssetDependencies; // 0x228(0x50)
};

// ScriptStruct FortniteGame.FortCreativeClassInstanceTracker
// Size: 0xc0 (Inherited: 0x00)
struct FFortCreativeClassInstanceTracker {
	char pad_0[0xa0]; // 0x00(0xa0)
	struct TArray<struct UObject*> ChildClassesAtLimit; // 0xa0(0x10)
	struct TArray<struct UObject*> ParentClassesAtLimit; // 0xb0(0x10)
};

// ScriptStruct FortniteGame.FortCreativeDiscoveryTestCohort
// Size: 0x20 (Inherited: 0x00)
struct FFortCreativeDiscoveryTestCohort {
	struct FName TestName; // 0x00(0x08)
	enum class EFortCreativeDiscoveryDeterminism CohortSelector; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	float SelectionChance; // 0x0c(0x04)
	struct TArray<struct FFortCreativeDiscoveryContentPanel> ContentPanels; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortCreativeDiscoveryContentPanel
// Size: 0x90 (Inherited: 0x00)
struct FFortCreativeDiscoveryContentPanel {
	struct FName PanelName; // 0x00(0x08)
	struct FText PanelDisplayName; // 0x08(0x18)
	enum class EFortCreativeDiscoveryPanelType PanelType; // 0x20(0x01)
	char pad_21[0x3]; // 0x21(0x03)
	int32_t PageSize; // 0x24(0x04)
	int32_t NumPages; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct TArray<struct FString> PanelLinkCodeBlacklist; // 0x30(0x10)
	struct TArray<struct FString> CuratedListOfLinkCodes; // 0x40(0x10)
	struct FString MetricName; // 0x50(0x10)
	struct FString MetricInterval; // 0x60(0x10)
	bool bLowestToHighest; // 0x70(0x01)
	enum class EFortCreativeDiscoverySkippedEntries EntrySkippingMethod; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	int32_t SkippedEntriesCount; // 0x74(0x04)
	float SkippedEntriesPercent; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
	struct TArray<struct FFortCreativeDiscoverySplicedEntry> SplicedEntries; // 0x80(0x10)
};

// ScriptStruct FortniteGame.FortCreativeDiscoverySplicedEntry
// Size: 0x30 (Inherited: 0x00)
struct FFortCreativeDiscoverySplicedEntry {
	struct FName EntryName; // 0x00(0x08)
	int32_t EntryIndex; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FString LinkCode; // 0x10(0x10)
	enum class EFortCreativeDiscoveryDeterminism VisibilitySelector; // 0x20(0x01)
	char pad_21[0x3]; // 0x21(0x03)
	float VisibilityChance; // 0x24(0x04)
	bool bPushDownExistingEntry; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// ScriptStruct FortniteGame.FortCreativeHeatmapThermometerPreviewData
// Size: 0x50 (Inherited: 0x00)
struct FFortCreativeHeatmapThermometerPreviewData {
	SoftClassProperty ActorClass; // 0x00(0x28)
	struct FVector Location; // 0x28(0x0c)
	struct FVector RelativeLocation; // 0x34(0x0c)
	struct FRotator RelativeRotation; // 0x40(0x0c)
	float InfluenceDistance; // 0x4c(0x04)
};

// ScriptStruct FortniteGame.CreativeItemGranterItemEntry
// Size: 0x30 (Inherited: 0x00)
struct FCreativeItemGranterItemEntry {
	struct TSoftObjectPtr<struct UFortWorldItemDefinition> ItemDefinition; // 0x00(0x28)
	int32_t Count; // 0x28(0x04)
	int32_t Level; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.PlaysetInfo
// Size: 0x10 (Inherited: 0x00)
struct FPlaysetInfo {
	struct UFortPlaysetItemDefinition* Playset; // 0x00(0x08)
	int8_t FlashCounter; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
};

// ScriptStruct FortniteGame.MoveToolSettings
// Size: 0x02 (Inherited: 0x00)
struct FMoveToolSettings {
	bool bAllowGravityOnPlace; // 0x00(0x01)
	bool bIsScalingInsteadOfRotating; // 0x01(0x01)
};

// ScriptStruct FortniteGame.ActorAndTransformPair
// Size: 0x50 (Inherited: 0x00)
struct FActorAndTransformPair {
	struct AActor* Actor; // 0x00(0x08)
	char pad_8[0x8]; // 0x08(0x08)
	struct FTransform Transform; // 0x10(0x30)
	bool bHasValidTransform; // 0x40(0x01)
	char pad_41[0xf]; // 0x41(0x0f)
};

// ScriptStruct FortniteGame.AgingActorArray
// Size: 0x10 (Inherited: 0x00)
struct FAgingActorArray {
	struct TArray<struct FActorAndTimePair> AgingActors; // 0x00(0x10)
};

// ScriptStruct FortniteGame.ActorAndTimePair
// Size: 0x10 (Inherited: 0x00)
struct FActorAndTimePair {
	struct AActor* Actor; // 0x00(0x08)
	struct FDateTime SpawnTime; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FlashCountedActorInfo
// Size: 0x18 (Inherited: 0x00)
struct FFlashCountedActorInfo {
	struct TArray<struct FCreativeSelectedActorInfo> Actors; // 0x00(0x10)
	int8_t FlashCounter; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.CreativeSelectedActorInfo
// Size: 0x60 (Inherited: 0x00)
struct FCreativeSelectedActorInfo {
	struct AActor* Actor; // 0x00(0x08)
	char pad_8[0x8]; // 0x08(0x08)
	struct FTransform UnscaledActorToSelectionAtDragStart; // 0x10(0x30)
	struct FVector DragStartGridSnapPoint; // 0x40(0x0c)
	float OriginalRelevancyDistance; // 0x4c(0x04)
	bool bWasCollisionEnabled; // 0x50(0x01)
	bool bWasDormant; // 0x51(0x01)
	bool bSpawnedFromSaveRecord; // 0x52(0x01)
	char pad_53[0x1]; // 0x53(0x01)
	int32_t LogicalConnectionChainIndex; // 0x54(0x04)
	char pad_58[0x8]; // 0x58(0x08)
};

// ScriptStruct FortniteGame.OriginalAndSpawnedPair
// Size: 0x18 (Inherited: 0x00)
struct FOriginalAndSpawnedPair {
	struct AActor* OriginalActor; // 0x00(0x08)
	struct AActor* SpawnedActor; // 0x08(0x08)
	bool bSpawnedActorIsForPreview; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.CreativePooledMID
// Size: 0x10 (Inherited: 0x00)
struct FCreativePooledMID {
	struct UMaterialInstanceDynamic* Mid; // 0x00(0x08)
	struct UMaterialInterface* OriginalMaterial; // 0x08(0x08)
};

// ScriptStruct FortniteGame.ValidPlacementPair
// Size: 0x10 (Inherited: 0x00)
struct FValidPlacementPair {
	struct AActor* Actor; // 0x00(0x08)
	bool bIsPlacementValid; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
};

// ScriptStruct FortniteGame.LogicalConnectionChain
// Size: 0x18 (Inherited: 0x00)
struct FLogicalConnectionChain {
	struct TArray<struct AActor*> LogicalConnectedActors; // 0x00(0x10)
	char pad_10[0x8]; // 0x10(0x08)
};

// ScriptStruct FortniteGame.CreativeToolClasses
// Size: 0x30 (Inherited: 0x08)
struct FCreativeToolClasses : FTableRowBase {
	SoftClassProperty ClassPath; // 0x08(0x28)
};

// ScriptStruct FortniteGame.CreativeToolObjectInteractionRow
// Size: 0x18 (Inherited: 0x08)
struct FCreativeToolObjectInteractionRow : FTableRowBase {
	struct UDataTable* AllowedClasses; // 0x08(0x08)
	struct UDataTable* ForbiddenClasses; // 0x10(0x08)
};

// ScriptStruct FortniteGame.CreativeOptionCategoryData
// Size: 0x20 (Inherited: 0x00)
struct FCreativeOptionCategoryData {
	struct FText CategoryDisplayName; // 0x00(0x18)
	struct FName CategoryTag; // 0x18(0x08)
};

// ScriptStruct FortniteGame.CreativeOptionData
// Size: 0x20 (Inherited: 0x00)
struct FCreativeOptionData {
	struct FText DisplayText; // 0x00(0x18)
	int32_t Value; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.PendingToApplyData
// Size: 0xd0 (Inherited: 0x00)
struct FPendingToApplyData {
	struct TWeakObjectPtr<struct AFortPlayerControllerAthena> PlayerController; // 0x00(0x08)
	struct TWeakObjectPtr<struct APlayerState> PlayerState; // 0x08(0x08)
	struct TWeakObjectPtr<struct AFortMinigame> Minigame; // 0x10(0x08)
	char pad_18[0x8]; // 0x18(0x08)
	struct FFortInventory_SaveEntry SaveEntry; // 0x20(0xb0)
};

// ScriptStruct FortniteGame.FortInventory_SaveEntry
// Size: 0xb0 (Inherited: 0x00)
struct FFortInventory_SaveEntry {
	struct FDateTime MostRecentUseTime; // 0x00(0x08)
	struct FFortInventory_SaveEntryFloat Health; // 0x08(0x08)
	struct FFortInventory_SaveEntryFloat Shield; // 0x10(0x08)
	struct FFortInventory_SaveEntryUint8 ClassSlot; // 0x18(0x02)
	struct FFortInventory_SaveEntryUint8 TeamIndex; // 0x1a(0x02)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct FFortInventory_SaveEntryItems Items; // 0x20(0x18)
	struct FFortInventory_SaveEntryItems Resources; // 0x38(0x18)
	struct FFortInventory_SaveEntryCheckpoints Checkpoints; // 0x50(0x18)
	char pad_68[0x8]; // 0x68(0x08)
	struct FFortInventory_SaveEntryTransform PlayerTransform; // 0x70(0x20)
	struct FFortInventory_MinigameStats MinigameStats; // 0x90(0x18)
	char pad_A8[0x8]; // 0xa8(0x08)
};

// ScriptStruct FortniteGame.FortInventory_SaveEntryBase
// Size: 0x01 (Inherited: 0x00)
struct FFortInventory_SaveEntryBase {
	bool bHasBeenStored; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortInventory_SaveEntryAttributeBase
// Size: 0x01 (Inherited: 0x01)
struct FFortInventory_SaveEntryAttributeBase : FFortInventory_SaveEntryBase {
};

// ScriptStruct FortniteGame.FortInventory_MinigameStats
// Size: 0x18 (Inherited: 0x01)
struct FFortInventory_MinigameStats : FFortInventory_SaveEntryAttributeBase {
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FFortInventory_PlayerStatEntry> PlayerStatsList; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortInventory_PlayerStatEntry
// Size: 0x10 (Inherited: 0x00)
struct FFortInventory_PlayerStatEntry {
	struct UFortMinigameStatFilter* StatFilter; // 0x00(0x08)
	int32_t Value; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortInventory_SaveEntryTransform
// Size: 0x20 (Inherited: 0x01)
struct FFortInventory_SaveEntryTransform : FFortInventory_SaveEntryAttributeBase {
	char pad_1[0x3]; // 0x01(0x03)
	struct FVector LocationValue; // 0x04(0x0c)
	struct FQuat RotationValue; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortInventory_SaveEntryCheckpoints
// Size: 0x18 (Inherited: 0x01)
struct FFortInventory_SaveEntryCheckpoints : FFortInventory_SaveEntryAttributeBase {
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FFortInventory_CheckpointEntry> CheckpointsList; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortInventory_CheckpointEntry
// Size: 0x18 (Inherited: 0x00)
struct FFortInventory_CheckpointEntry {
	struct FGuid LevelSpawnableGuid; // 0x00(0x10)
	struct FDateTime MostRecentUseTime; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortInventory_SaveEntryItems
// Size: 0x18 (Inherited: 0x01)
struct FFortInventory_SaveEntryItems : FFortInventory_SaveEntryAttributeBase {
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FFortItemEntry> FortItemEntries; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortInventory_SaveEntryUint8
// Size: 0x02 (Inherited: 0x01)
struct FFortInventory_SaveEntryUint8 : FFortInventory_SaveEntryAttributeBase {
	char Value; // 0x01(0x01)
};

// ScriptStruct FortniteGame.FortInventory_SaveEntryFloat
// Size: 0x08 (Inherited: 0x01)
struct FFortInventory_SaveEntryFloat : FFortInventory_SaveEntryAttributeBase {
	char pad_1[0x3]; // 0x01(0x03)
	float Value; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortCreativeWhitelistUserEntry
// Size: 0x20 (Inherited: 0x00)
struct FFortCreativeWhitelistUserEntry {
	struct FString UniqueId; // 0x00(0x10)
	struct FString UserName; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortCreativePlotPermissionData
// Size: 0x18 (Inherited: 0x00)
struct FFortCreativePlotPermissionData {
	enum class EFortCreativePlotPermission Permission; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FString> WhiteList; // 0x08(0x10)
};

// ScriptStruct FortniteGame.ActiveRealEstatePlotInfo
// Size: 0x18 (Inherited: 0x00)
struct FActiveRealEstatePlotInfo {
	struct UFortCreativeRealEstatePlotItemDefinition* Plot; // 0x00(0x08)
	struct FVector Position; // 0x08(0x0c)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortSourDropperColorData
// Size: 0x50 (Inherited: 0x00)
struct FFortSourDropperColorData {
	struct TMap<enum class EFortSourDropperColorType, struct FLinearColor> TypeColors; // 0x00(0x50)
};

// ScriptStruct FortniteGame.FortCreativeTagsHelper
// Size: 0x10 (Inherited: 0x00)
struct FFortCreativeTagsHelper {
	struct TArray<struct FName> CreativeTags; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortCreativeTagCategory
// Size: 0x58 (Inherited: 0x08)
struct FFortCreativeTagCategory : FTableRowBase {
	struct FText Name; // 0x08(0x18)
	struct TSoftObjectPtr<struct UTexture2D> Icon; // 0x20(0x28)
	float SortPriority; // 0x48(0x04)
	char pad_4C[0xc]; // 0x4c(0x0c)
};

// ScriptStruct FortniteGame.FortCreativeTag
// Size: 0x60 (Inherited: 0x08)
struct FFortCreativeTag : FTableRowBase {
	struct FText Name; // 0x08(0x18)
	struct FName Category; // 0x20(0x08)
	struct TSoftObjectPtr<struct UTexture2D> Icon; // 0x28(0x28)
	float SortPriority; // 0x50(0x04)
	char pad_54[0xc]; // 0x54(0x0c)
};

// ScriptStruct FortniteGame.TeleporterGroup
// Size: 0x50 (Inherited: 0x00)
struct FTeleporterGroup {
	struct TSet<struct AFortCreativeTeleporter*> Teleporters; // 0x00(0x50)
};

// ScriptStruct FortniteGame.TimerObjectiveHUDData
// Size: 0x08 (Inherited: 0x00)
struct FTimerObjectiveHUDData {
	float TimeLeft; // 0x00(0x04)
	bool bIsPaused; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
};

// ScriptStruct FortniteGame.FortCurieCableSignalManagerConfig
// Size: 0x04 (Inherited: 0x00)
struct FFortCurieCableSignalManagerConfig {
	int32_t SignalsProcessedPerTick; // 0x00(0x04)
};

// ScriptStruct FortniteGame.FortCurieCableSignalManagerTickFunction
// Size: 0x30 (Inherited: 0x28)
struct FFortCurieCableSignalManagerTickFunction : FTickFunction {
	char pad_28[0x8]; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortCurieElectricityPropagationManagerConfig
// Size: 0x28 (Inherited: 0x00)
struct FFortCurieElectricityPropagationManagerConfig {
	int16_t MinPropagationDepthLimit; // 0x00(0x02)
	int16_t MaxPropagationDepthLimit; // 0x02(0x02)
	int16_t DefaultPropagationDepthLimit; // 0x04(0x02)
	char pad_6[0x2]; // 0x06(0x02)
	int32_t ElectricGridWarningLimit; // 0x08(0x04)
	float PropagationTimeDelay; // 0x0c(0x04)
	int32_t NeighborCacheDefaultSlack; // 0x10(0x04)
	int32_t ApplicationMapDefaultSlack; // 0x14(0x04)
	struct FVector DefaultCollisionExpansion; // 0x18(0x0c)
	bool bAllowPropagationDepthLimitOverrides; // 0x24(0x01)
	char pad_25[0x3]; // 0x25(0x03)
};

// ScriptStruct FortniteGame.FortCurieElectricityPropagationManagerTickFunction
// Size: 0x30 (Inherited: 0x28)
struct FFortCurieElectricityPropagationManagerTickFunction : FTickFunction {
	char pad_28[0x8]; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortCurieStateSuggestionData
// Size: 0x58 (Inherited: 0x00)
struct FFortCurieStateSuggestionData {
	struct FGameplayTag StateTag; // 0x00(0x08)
	struct FGameplayTagQuery AttachedStatesQuery; // 0x08(0x48)
	bool bIncludeStateParams; // 0x50(0x01)
	bool bDiscardOnResolve; // 0x51(0x01)
	char pad_52[0x6]; // 0x52(0x06)
};

// ScriptStruct FortniteGame.FortCurieInteractStateSuggestionData
// Size: 0x60 (Inherited: 0x58)
struct FFortCurieInteractStateSuggestionData : FFortCurieStateSuggestionData {
	bool bAlwaysSuggest; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
};

// ScriptStruct FortniteGame.FortCurieFirePropagationManagerConfig
// Size: 0xc8 (Inherited: 0x00)
struct FFortCurieFirePropagationManagerConfig {
	float TickInterval; // 0x00(0x04)
	float FirePropagationDelay; // 0x04(0x04)
	float MinPropagationFuel; // 0x08(0x04)
	float DefaultPropagationFuel; // 0x0c(0x04)
	float MaxPropagationFuel; // 0x10(0x04)
	float DefaultPropagationFuelCost; // 0x14(0x04)
	float IncompletePropagationRefundFuelMultiplier; // 0x18(0x04)
	float InactiveFireFailsafeRemovalTime; // 0x1c(0x04)
	float MaximumPendingInteractTimePerTick; // 0x20(0x04)
	float PropagationApplicationMagnitude; // 0x24(0x04)
	float HalfAngleForUpwardMobilityCalculation; // 0x28(0x04)
	int32_t PropagationLimit; // 0x2c(0x04)
	int32_t MinimumPendingInteractsToProcessPerTick; // 0x30(0x04)
	int32_t DefaultConnectivityPoints; // 0x34(0x04)
	struct FScalableFloat PropagationRate; // 0x38(0x28)
	struct FVector2D PropagationApplicationMagnitudeRandomizationRange; // 0x60(0x08)
	struct FVector DefaultFireBoundsExpansion; // 0x68(0x0c)
	bool bAllowPropagationFuelOverrides; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
	float FireElementSubgridOverlapThreshold; // 0x78(0x04)
	float BuildingFirePropagationTickInterval; // 0x7c(0x04)
	float GrassFirePropagationInterval; // 0x80(0x04)
	float GrassFireBurnoutInterval; // 0x84(0x04)
	float GrassFireInitialPropagationDelay; // 0x88(0x04)
	float GrassFireMinPropagationDelay; // 0x8c(0x04)
	float GrassFireMaxPropagationDelay; // 0x90(0x04)
	float GrassFireBurnoutTime; // 0x94(0x04)
	float GrassMaxWaterContent; // 0x98(0x04)
	float GrassWaterContentChangeOnFireApplication; // 0x9c(0x04)
	float GrassWaterContentChangeOnWaterApplication; // 0xa0(0x04)
	float GrassFirePropagationCostPerLocation; // 0xa4(0x04)
	float GrassTraceLandscapeOffset; // 0xa8(0x04)
	float FireFoundationGrassDefaultExpansion; // 0xac(0x04)
	int32_t GrassFirePropagationRate; // 0xb0(0x04)
	int32_t GrassGridCellsPerAxisManagedByGrassFireReplicator; // 0xb4(0x04)
	int32_t GrassGridFireMinimumTraceOptimization; // 0xb8(0x04)
	int32_t GrassFirePropagationFuelConsumptionLimit; // 0xbc(0x04)
	bool bUseLandscapeMapForGrassGrid; // 0xc0(0x01)
	bool bUseIFACacheForGrassGrid; // 0xc1(0x01)
	char pad_C2[0x6]; // 0xc2(0x06)
};

// ScriptStruct FortniteGame.FortCurieActorFireEntry
// Size: 0x118 (Inherited: 0x00)
struct FFortCurieActorFireEntry {
	char pad_0[0x108]; // 0x00(0x108)
	struct TArray<struct AActor*> AvailablePropagationNeighbors; // 0x108(0x10)
};

// ScriptStruct FortniteGame.FortCurieFirePropagationManagerTickFunction
// Size: 0x30 (Inherited: 0x28)
struct FFortCurieFirePropagationManagerTickFunction : FTickFunction {
	char pad_28[0x8]; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortCurieActiveAmbientAudio
// Size: 0x18 (Inherited: 0x00)
struct FFortCurieActiveAmbientAudio {
	struct UAudioComponent* AudioComponent; // 0x00(0x08)
	struct UFortCurieComponent* OwningComponent; // 0x08(0x08)
	int32_t AudioClusterCount; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortCurieAmbientAudioLocationKey
// Size: 0x20 (Inherited: 0x00)
struct FFortCurieAmbientAudioLocationKey {
	char pad_0[0x20]; // 0x00(0x20)
};

// ScriptStruct FortniteGame.FortCurieFXManagerTickFunction
// Size: 0x30 (Inherited: 0x28)
struct FFortCurieFXManagerTickFunction : FTickFunction {
	char pad_28[0x8]; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortCurieFireParticleGrassData
// Size: 0x30 (Inherited: 0x00)
struct FFortCurieFireParticleGrassData {
	char pad_0[0x30]; // 0x00(0x30)
};

// ScriptStruct FortniteGame.FortCurieFireParticleActorData
// Size: 0x38 (Inherited: 0x00)
struct FFortCurieFireParticleActorData {
	struct UFortCurieComponent* AssociatedComponent; // 0x00(0x08)
	char pad_8[0x30]; // 0x08(0x30)
};

// ScriptStruct FortniteGame.FortCurieWorldFirePlayerSystem
// Size: 0x10 (Inherited: 0x00)
struct FFortCurieWorldFirePlayerSystem {
	struct UFortCurieWorldNiagaraComponent* ActiveWorldFireSystem; // 0x00(0x08)
	float LastFireParticleSampleTimestamp; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortCuriePendingElectricityArcRequest
// Size: 0x10 (Inherited: 0x00)
struct FFortCuriePendingElectricityArcRequest {
	struct UFortCurieComponent* RequestingComponent; // 0x00(0x08)
	float ExecutionTime; // 0x08(0x04)
	bool bIsFirstIteration; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
};

// ScriptStruct FortniteGame.FortCurieActiveElectricityArc
// Size: 0x28 (Inherited: 0x00)
struct FFortCurieActiveElectricityArc {
	struct FVector TargetActorSmallestAxis; // 0x00(0x0c)
	char pad_C[0x4]; // 0x0c(0x04)
	struct UStaticMeshComponent* Mesh; // 0x10(0x08)
	struct UFortCurieComponent* OwningComponent; // 0x18(0x08)
	float StartTime; // 0x20(0x04)
	bool bPlayedImpact; // 0x24(0x01)
	char pad_25[0x3]; // 0x25(0x03)
};

// ScriptStruct FortniteGame.FortCurieGlowFadeRequest
// Size: 0x18 (Inherited: 0x00)
struct FFortCurieGlowFadeRequest {
	struct UFortCurieComponent* CurieComponent; // 0x00(0x08)
	enum class EFortCurieNativeFXType FXType; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	float StartTimestamp; // 0x0c(0x04)
	bool bIsFadeIn; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.NativeCurieFXTypeSettings
// Size: 0x120 (Inherited: 0x00)
struct FNativeCurieFXTypeSettings {
	struct FRuntimeFloatCurve GlowFadeInCurve; // 0x00(0x88)
	struct FRuntimeFloatCurve GlowFadeOutCurve; // 0x88(0x88)
	int32_t GlowPriority; // 0x110(0x04)
	float GlowMaterialIdx; // 0x114(0x04)
	char bNeedsSignificanceTracking : 1; // 0x118(0x01)
	char bNeedsGlow : 1; // 0x118(0x01)
	char bNeedsAmbientAudio : 1; // 0x118(0x01)
	char pad_118_3 : 5; // 0x118(0x01)
	char pad_119[0x7]; // 0x119(0x07)
};

// ScriptStruct FortniteGame.FortCuriePackedGrassDataArray
// Size: 0x118 (Inherited: 0x108)
struct FFortCuriePackedGrassDataArray : FFastArraySerializer {
	struct TArray<struct FFortCuriePackedGrassData> Items; // 0x108(0x10)
};

// ScriptStruct FortniteGame.FortCuriePackedGrassData
// Size: 0x10 (Inherited: 0x0c)
struct FFortCuriePackedGrassData : FFastArraySerializerItem {
	uint32_t Data; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortInteractionExecutionInteractData
// Size: 0x08 (Inherited: 0x00)
struct FFortInteractionExecutionInteractData {
	char pad_0[0x8]; // 0x00(0x08)
};

// ScriptStruct FortniteGame.FortCurieExecutionEntry
// Size: 0x90 (Inherited: 0x00)
struct FFortCurieExecutionEntry {
	enum class EFortCurieExecutionType ExecutionType; // 0x00(0x01)
	enum class EFortCurieApplicationEvent ApplicationEvent; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	struct FFortCurieExecutionFilter ExecutionFilter; // 0x04(0x08)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FFortCurieExecutionParams ExecutionParameters; // 0x10(0x80)
};

// ScriptStruct FortniteGame.FortCurieExecutionParams
// Size: 0x80 (Inherited: 0x00)
struct FFortCurieExecutionParams {
	struct FGameplayTag ElementIdentifier; // 0x00(0x08)
	struct FScalableFloat Magnitude; // 0x08(0x28)
	struct FScalableFloat LandscapeEffectRadius; // 0x30(0x28)
	struct FScalableFloat PropagationFuelOverride; // 0x58(0x28)
};

// ScriptStruct FortniteGame.FortCurieExecutionFilter
// Size: 0x08 (Inherited: 0x00)
struct FFortCurieExecutionFilter {
	struct FGameplayTag RequiredState; // 0x00(0x08)
};

// ScriptStruct FortniteGame.FortNativeCurieFXResponse
// Size: 0x0c (Inherited: 0x00)
struct FFortNativeCurieFXResponse {
	struct FGameplayTag OverrideGameplayCue; // 0x00(0x08)
	enum class EFortNativeCurieFXCueResponse GameplayCueResponse; // 0x08(0x01)
	char bShouldPlayGeneralVFX : 1; // 0x09(0x01)
	char bShouldPlayAmbientAudio : 1; // 0x09(0x01)
	char bShouldPlayGlow : 1; // 0x09(0x01)
	char bShouldPlayFXAsAOE : 1; // 0x09(0x01)
	char pad_9_4 : 4; // 0x09(0x01)
	char pad_A[0x2]; // 0x0a(0x02)
};

// ScriptStruct FortniteGame.CurieToggleComponentGroup
// Size: 0x40 (Inherited: 0x00)
struct FCurieToggleComponentGroup {
	struct TArray<struct UFortCurieToggleComponent*> GroupComponents; // 0x00(0x10)
	struct FMulticastInlineDelegate OnToggleGroupFullyActive; // 0x10(0x10)
	struct FMulticastInlineDelegate OnToggleGroupFullyInactive; // 0x20(0x10)
	struct FMulticastInlineDelegate OnToggleGroupMemberStateChange; // 0x30(0x10)
};

// ScriptStruct FortniteGame.FortCurieSpatialManagerTickFunction
// Size: 0x30 (Inherited: 0x28)
struct FFortCurieSpatialManagerTickFunction : FTickFunction {
	char pad_28[0x8]; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortCurieSpatialGrid
// Size: 0x170 (Inherited: 0x70)
struct FFortCurieSpatialGrid : FFortSpatialGrid {
	char pad_70[0x100]; // 0x70(0x100)
};

// ScriptStruct FortniteGame.FortCurieGrassGrid
// Size: 0x1c0 (Inherited: 0x170)
struct FFortCurieGrassGrid : FFortCurieSpatialGrid {
	char pad_170[0x50]; // 0x170(0x50)
};

// ScriptStruct FortniteGame.FortCurieElementSpatialGrid
// Size: 0x310 (Inherited: 0x170)
struct FFortCurieElementSpatialGrid : FFortCurieSpatialGrid {
	char pad_170[0x50]; // 0x170(0x50)
	struct TMap<struct FIntPoint, struct UFortCurieDangerousNavRelevantObject*> NavRelevantObjectMap; // 0x1c0(0x50)
	struct TArray<struct UFortCurieDangerousNavRelevantObject*> NavRelevantPool; // 0x210(0x10)
	char pad_220[0xf0]; // 0x220(0xf0)
};

// ScriptStruct FortniteGame.FortCurieBuildingGrid
// Size: 0x248 (Inherited: 0x170)
struct FFortCurieBuildingGrid : FFortCurieSpatialGrid {
	char pad_170[0xd8]; // 0x170(0xd8)
};

// ScriptStruct FortniteGame.FortCurieSpatialManagerConfig
// Size: 0xf8 (Inherited: 0x00)
struct FFortCurieSpatialManagerConfig {
	float TickInterval; // 0x00(0x04)
	float OverlapFireApplicationMagnitude; // 0x04(0x04)
	float OverlapElectricityApplicationMagnitude; // 0x08(0x04)
	int32_t ElementOverlapMaximumTestActorsPerFrame; // 0x0c(0x04)
	float ElementOverlapMaximumDelayBetweenChecks; // 0x10(0x04)
	float ElementOverlapDefaultExpansion; // 0x14(0x04)
	float GrassWaterContentDecayRate; // 0x18(0x04)
	float FireLandscapePropagationApplicationMagnitude; // 0x1c(0x04)
	float ElementSubgridVoxelOverlapThreshold; // 0x20(0x04)
	float ElementGridOverlapVolumeThreshold; // 0x24(0x04)
	struct FGameplayTagContainer DangerousNavRelevantElements; // 0x28(0x20)
	int32_t NavRelevantObjectPoolCap; // 0x48(0x04)
	int32_t AccurateCollisionGridCellMinimum; // 0x4c(0x04)
	struct FGameplayTagContainer ElementsToVoxelize; // 0x50(0x20)
	int32_t MaxNumStormFireConsiderationsPerFrame; // 0x70(0x04)
	int32_t StormFireInteractionTickCheckFreq; // 0x74(0x04)
	float MaxTimeForStormFireInteractionsPerFrame; // 0x78(0x04)
	float StormFireInteractionConsiderationDelay; // 0x7c(0x04)
	float StormFireInteractionMagnitude; // 0x80(0x04)
	float MovableActorFireInteractionMagnitude; // 0x84(0x04)
	float AccurateActorOverlapVolumeThreshold; // 0x88(0x04)
	float AccurateActorBoxOverlapVolumeThreshold; // 0x8c(0x04)
	struct TArray<struct TSoftObjectPtr<struct UFoliageType>> GrassFoliageTypes; // 0x90(0x10)
	struct TArray<struct TSoftObjectPtr<struct UPhysicalMaterial>> IgnitablePhysicalMaterials; // 0xa0(0x10)
	struct FGameplayTagContainer DisallowedElementInteractsWhileInVehicle; // 0xb0(0x20)
	struct FGameplayTagContainer DisallowedElementInteractsWhileDBNO; // 0xd0(0x20)
	bool bUseAccurateCollisionVoxelization; // 0xf0(0x01)
	bool bAllowStormFireInteractions; // 0xf1(0x01)
	bool bCreateFireInteractsForMovableActors; // 0xf2(0x01)
	char pad_F3[0x5]; // 0xf3(0x05)
};

// ScriptStruct FortniteGame.FortCurieEntityStateDefinition
// Size: 0x28 (Inherited: 0x18)
struct FFortCurieEntityStateDefinition : FCurieEntityStateDefinitionBase {
	struct FGameplayTag GameplayCue; // 0x18(0x08)
	enum class EFortCurieNativeFXType NativeVFXType; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
};

// ScriptStruct FortniteGame.FortCurieElementDefinition
// Size: 0x80 (Inherited: 0x78)
struct FFortCurieElementDefinition : FCurieElementDefinitionBase {
	float MaxIntensity; // 0x78(0x04)
	float IntensityDecayRate; // 0x7c(0x04)
};

// ScriptStruct FortniteGame.FortCurieMaterialDefinition
// Size: 0xa8 (Inherited: 0x68)
struct FFortCurieMaterialDefinition : FCurieMaterialDefinitionBase {
	char bCanBeElectrocuted : 1; // 0x68(0x01)
	char bConductsElectricity : 1; // 0x68(0x01)
	char bFireConsumesFuel : 1; // 0x68(0x01)
	char bUsesFirePropManager : 1; // 0x68(0x01)
	char bTrackGridFireStatus : 1; // 0x68(0x01)
	char bShouldIgniteLandscapeGrass : 1; // 0x68(0x01)
	char bHandlesOverlapsDirectly : 1; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float DefaultWaterContent; // 0x6c(0x04)
	float MinWaterContent; // 0x70(0x04)
	float MaxWaterContent; // 0x74(0x04)
	float WaterContentStabilizationRate; // 0x78(0x04)
	float DefaultFuelContent; // 0x7c(0x04)
	float MinFuelContent; // 0x80(0x04)
	float MaxFuelContent; // 0x84(0x04)
	float FuelContentStabilizationRate; // 0x88(0x04)
	float FirePropagationCost; // 0x8c(0x04)
	int32_t ElectricityPropagationLimitIncrease; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
	struct TArray<struct FFortCurieMaterialElementIntensityDecayMultiplier> ElementDecayMultipliers; // 0x98(0x10)
};

// ScriptStruct FortniteGame.FortCurieMaterialElementIntensityDecayMultiplier
// Size: 0x0c (Inherited: 0x00)
struct FFortCurieMaterialElementIntensityDecayMultiplier {
	struct FGameplayTag Element; // 0x00(0x08)
	float DecayMultiplier; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortCustomizationAssetsToLoad
// Size: 0x40 (Inherited: 0x00)
struct FFortCustomizationAssetsToLoad {
	struct TArray<struct UFortHeroType*> HeroTypes; // 0x00(0x10)
	struct TArray<struct UCustomCharacterPart*> CharacterParts; // 0x10(0x10)
	struct TArray<struct UFortItemDefinition*> ItemDefs; // 0x20(0x10)
	struct TArray<struct FSoftObjectPath> VariantAssets; // 0x30(0x10)
};

// ScriptStruct FortniteGame.SavedCustomMatchOptions
// Size: 0x50 (Inherited: 0x00)
struct FSavedCustomMatchOptions {
	struct TMap<struct FString, struct FString> CustomMatchOptions; // 0x00(0x50)
};

// ScriptStruct FortniteGame.FortDailyRewardScheduleDefinition
// Size: 0xa8 (Inherited: 0x00)
struct FFortDailyRewardScheduleDefinition {
	struct FName ScheduleName; // 0x00(0x08)
	struct TSoftObjectPtr<struct UFortDailyRewardScheduleTokenDefinition> EnablingToken; // 0x08(0x28)
	struct UDataTable* Rewards; // 0x30(0x08)
	struct FFortDailyRewardScheduleDisplayData DisplayData; // 0x38(0x60)
	struct FDateTime BeginDate; // 0x98(0x08)
	struct FDateTime EndDate; // 0xa0(0x08)
};

// ScriptStruct FortniteGame.FortDailyRewardScheduleDisplayData
// Size: 0x60 (Inherited: 0x00)
struct FFortDailyRewardScheduleDisplayData {
	struct FText Title; // 0x00(0x18)
	struct FText Description; // 0x18(0x18)
	struct FText ItemDescription; // 0x30(0x18)
	struct FText EpicItemDescription; // 0x48(0x18)
};

// ScriptStruct FortniteGame.FortDailyLoginRewardStat
// Size: 0x60 (Inherited: 0x00)
struct FFortDailyLoginRewardStat {
	int32_t NextDefaultReward; // 0x00(0x04)
	int32_t TotalDaysLoggedIn; // 0x04(0x04)
	struct FDateTime LastClaimDate; // 0x08(0x08)
	struct TMap<struct FName, struct FFortDailyLoginRewardStat_ScheduleClaimed> AdditionalSchedules; // 0x10(0x50)
};

// ScriptStruct FortniteGame.FortDailyLoginRewardStat_ScheduleClaimed
// Size: 0x08 (Inherited: 0x00)
struct FFortDailyLoginRewardStat_ScheduleClaimed {
	int32_t RewardsClaimed; // 0x00(0x04)
	bool ClaimedToday; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
};

// ScriptStruct FortniteGame.FortDailyRewardsNotification
// Size: 0x18 (Inherited: 0x00)
struct FFortDailyRewardsNotification {
	int32_t DaysLoggedIn; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct TArray<struct FMcpLootEntry> Items; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortDamageNumberColorInfo
// Size: 0x50 (Inherited: 0x00)
struct FFortDamageNumberColorInfo {
	struct FString DisplayText; // 0x00(0x10)
	struct FLinearColor Color; // 0x10(0x10)
	struct FLinearColor CriticalColor; // 0x20(0x10)
	struct FGameplayTagContainer Tags; // 0x30(0x20)
};

// ScriptStruct FortniteGame.LiveDamageNumberComponent
// Size: 0x18 (Inherited: 0x00)
struct FLiveDamageNumberComponent {
	struct UStaticMeshComponent* Component; // 0x00(0x08)
	char pad_8[0x10]; // 0x08(0x10)
};

// ScriptStruct FortniteGame.PooledDamageNumberComponents
// Size: 0x10 (Inherited: 0x00)
struct FPooledDamageNumberComponents {
	struct TArray<struct UStaticMeshComponent*> Components; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortBasicAudioParamList
// Size: 0x10 (Inherited: 0x00)
struct FFortBasicAudioParamList {
	struct TArray<struct FFortBasicAudioParam> Params; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortBasicAudioParam
// Size: 0x0c (Inherited: 0x00)
struct FFortBasicAudioParam {
	struct FName Name; // 0x00(0x08)
	int32_t Value; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortDeathCauseInfo
// Size: 0x68 (Inherited: 0x00)
struct FFortDeathCauseInfo {
	struct FString DisplayText; // 0x00(0x10)
	struct FGameplayTag DeathCauseTag; // 0x10(0x08)
	struct TArray<struct FText> SelfInflictedMessages; // 0x18(0x10)
	struct TArray<struct FText> SelfInflictedDBNOMessages; // 0x28(0x10)
	struct TArray<struct FText> EliminatedMessages; // 0x38(0x10)
	struct TArray<struct FText> EliminatedDBNOMessages; // 0x48(0x10)
	struct TArray<struct FFortDeathCauseInfoVariant> DeathCauseInfoVariants; // 0x58(0x10)
};

// ScriptStruct FortniteGame.FortDeathCauseInfoVariant
// Size: 0x58 (Inherited: 0x00)
struct FFortDeathCauseInfoVariant {
	struct FString DisplayText; // 0x00(0x10)
	struct FGameplayTag DeathCauseTag; // 0x10(0x08)
	struct TArray<struct FText> SelfInflictedMessages; // 0x18(0x10)
	struct TArray<struct FText> SelfInflictedDBNOMessages; // 0x28(0x10)
	struct TArray<struct FText> EliminatedMessages; // 0x38(0x10)
	struct TArray<struct FText> EliminatedDBNOMessages; // 0x48(0x10)
};

// ScriptStruct FortniteGame.FortTagToDeathCause
// Size: 0x0c (Inherited: 0x00)
struct FFortTagToDeathCause {
	struct FGameplayTag DeathTag; // 0x00(0x08)
	enum class EDeathCause DBNOCause; // 0x08(0x01)
	enum class EDeathCause DeathCause; // 0x09(0x01)
	char pad_A[0x2]; // 0x0a(0x02)
};

// ScriptStruct FortniteGame.DecoPlacementState
// Size: 0xa0 (Inherited: 0x00)
struct FDecoPlacementState {
	struct FVector Start; // 0x00(0x0c)
	struct FVector End; // 0x0c(0x0c)
	struct FVector RawLocation; // 0x18(0x0c)
	struct FVector Normal; // 0x24(0x0c)
	struct FQuat AbsoluteRotation; // 0x30(0x10)
	struct FVector GridLocation; // 0x40(0x0c)
	struct FVector PreviousLocation; // 0x4c(0x0c)
	struct FVector FallbackLocation; // 0x58(0x0c)
	struct TWeakObjectPtr<struct AActor> LastHitActor; // 0x64(0x08)
	struct TWeakObjectPtr<struct ABuildingSMActor> CurrentBuildingActorAttachment; // 0x6c(0x08)
	struct FVector CreateBuildingLocation; // 0x74(0x0c)
	struct FRotator CreateBuildingRotation; // 0x80(0x0c)
	enum class EFortDecoPlacementQueryResults CanPlaceState; // 0x8c(0x01)
	char pad_8D[0x13]; // 0x8d(0x13)
};

// ScriptStruct FortniteGame.FortTierProgression
// Size: 0x10 (Inherited: 0x00)
struct FFortTierProgression {
	struct TArray<struct FFortTierProgressionInfo> ProgressionInfo; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortTierProgressionInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortTierProgressionInfo {
	struct FString ProgressionLayoutGuid; // 0x00(0x10)
	int32_t HighestDefeatedTier; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.PendingDeployableManagerAction
// Size: 0x40 (Inherited: 0x00)
struct FPendingDeployableManagerAction {
	enum class EQueueActionType ActionType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct ADeployableBasePlot*> PendingPlots; // 0x08(0x10)
	int32_t CurrentPlotRunningIndex; // 0x18(0x04)
	enum class EDeployableBaseBuildingState DesiredPlotState; // 0x1c(0x01)
	char pad_1D[0x13]; // 0x1d(0x13)
	struct AFortDeployableBaseManager* Manager; // 0x30(0x08)
	char pad_38[0x8]; // 0x38(0x08)
};

// ScriptStruct FortniteGame.AvailableTierLayout
// Size: 0x30 (Inherited: 0x00)
struct FAvailableTierLayout {
	struct UFortTieredCollectionLayout* Layout; // 0x00(0x08)
	struct TArray<struct FFortTierCollectionLayoutOutput> AvailableTiers; // 0x08(0x10)
	struct TArray<struct FFortTierCollectionLayoutOutput> LockedTiers; // 0x18(0x10)
	char bLocked : 1; // 0x28(0x01)
	char pad_28_1 : 7; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// ScriptStruct FortniteGame.FortTierCollectionLayoutOutput
// Size: 0x50 (Inherited: 0x00)
struct FFortTierCollectionLayoutOutput {
	struct FName SpawnCollectionName; // 0x00(0x08)
	struct FName DifficultyRowName; // 0x08(0x08)
	struct FName ModifierProgressionName; // 0x10(0x08)
	float AdditiveDifficultyMod; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct TArray<struct UFortBadgeItemDefinition*> RewardBadges; // 0x20(0x10)
	struct TArray<struct FName> StartTierLootTierGroups; // 0x30(0x10)
	struct TArray<struct FName> WaveCompleteLootTierGroups; // 0x40(0x10)
};

// ScriptStruct FortniteGame.ActiveTieredCollectionLayoutArray
// Size: 0x120 (Inherited: 0x108)
struct FActiveTieredCollectionLayoutArray : FFastArraySerializer {
	struct TArray<struct FActiveTieredCollectionLayout> LayoutArray; // 0x108(0x10)
	bool bTiersForced; // 0x118(0x01)
	char pad_119[0x7]; // 0x119(0x07)
};

// ScriptStruct FortniteGame.ActiveTieredCollectionLayout
// Size: 0x20 (Inherited: 0x0c)
struct FActiveTieredCollectionLayout : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct UFortTieredCollectionLayout* Layout; // 0x10(0x08)
	int32_t MaxTierUnlocked; // 0x18(0x04)
	char bLocked : 1; // 0x1c(0x01)
	char pad_1C_1 : 7; // 0x1c(0x01)
	char pad_1D[0x3]; // 0x1d(0x03)
};

// ScriptStruct FortniteGame.EnvironmentBuildingRestorationRecord
// Size: 0x50 (Inherited: 0x00)
struct FEnvironmentBuildingRestorationRecord {
	struct ABuildingActor* ActorClass; // 0x00(0x08)
	char pad_8[0x8]; // 0x08(0x08)
	struct FTransform ActorTransform; // 0x10(0x30)
	struct FName QuotaSelectedLootTierKey; // 0x40(0x08)
	int32_t QuotaSelectedLootTier; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// ScriptStruct FortniteGame.PendingDeployableBaseUser
// Size: 0x40 (Inherited: 0x00)
struct FPendingDeployableBaseUser {
	struct FUniqueNetIdRepl UserNetId; // 0x00(0x28)
	struct FFortUserCloudRequestHandle LoadingCloudRequestHandle; // 0x28(0x08)
	struct UFortDeployableBaseRecord* BaseRecord; // 0x30(0x08)
	struct ADeployableBasePlot* BasePlot; // 0x38(0x08)
};

// ScriptStruct FortniteGame.FortUserCloudRequestHandle
// Size: 0x08 (Inherited: 0x00)
struct FFortUserCloudRequestHandle {
	uint64_t Handle; // 0x00(0x08)
};

// ScriptStruct FortniteGame.DeployableBaseArray
// Size: 0x118 (Inherited: 0x108)
struct FDeployableBaseArray : FFastArraySerializer {
	struct TArray<struct FDeployableBaseInstance> DeployableBases; // 0x108(0x10)
};

// ScriptStruct FortniteGame.DeployableBaseInstance
// Size: 0x18 (Inherited: 0x0c)
struct FDeployableBaseInstance : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct ADeployableBasePlot* DeployableBase; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortTaggedUnlockBase
// Size: 0x08 (Inherited: 0x00)
struct FFortTaggedUnlockBase {
	struct FGameplayTag RequiredTag; // 0x00(0x08)
};

// ScriptStruct FortniteGame.FortTaggedDeployableBaseLootUnlock
// Size: 0x10 (Inherited: 0x08)
struct FFortTaggedDeployableBaseLootUnlock : FFortTaggedUnlockBase {
	struct FName LootTierGroup; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortTaggedDeployableBasePlotExpansionUnlock
// Size: 0x14 (Inherited: 0x08)
struct FFortTaggedDeployableBasePlotExpansionUnlock : FFortTaggedUnlockBase {
	struct FIntVector CellExpansionVector; // 0x08(0x0c)
};

// ScriptStruct FortniteGame.FortPartyMemberRepData
// Size: 0x978 (Inherited: 0x178)
struct FFortPartyMemberRepData : FPartyMemberRepData {
	enum class EFortPartyMemberLocation Location; // 0x178(0x01)
	char pad_179[0x37]; // 0x179(0x37)
	struct FPartyMemberCampaignHero CampaignHero; // 0x1b0(0x38)
	char pad_1E8[0x30]; // 0x1e8(0x30)
	struct FPartyMemberCampaignInfo CampaignInfo; // 0x218(0x20)
	char pad_238[0x90]; // 0x238(0x90)
	struct FPartyMemberFrontendEmote FrontendEmote; // 0x2c8(0x40)
	char pad_308[0x30]; // 0x308(0x30)
	char NumAthenaPlayersLeft; // 0x338(0x01)
	char pad_339[0x37]; // 0x339(0x37)
	bool SpectateAPartyMemberAvailable; // 0x370(0x01)
	char pad_371[0x37]; // 0x371(0x37)
	struct FDateTime UtcTimeStartedMatchAthena; // 0x3a8(0x08)
	char pad_3B0[0x30]; // 0x3b0(0x30)
	struct FPartyMemberLobbyState LobbyState; // 0x3e0(0x0c)
	char pad_3EC[0x124]; // 0x3ec(0x124)
	struct FPartyMemberAssistedChallengeInfo AssistedChallengeInfo; // 0x510(0x10)
	char pad_520[0x30]; // 0x520(0x30)
	struct UFortFeatItemDefinition* FeatDefinition; // 0x550(0x08)
	char pad_558[0x30]; // 0x558(0x30)
	struct FPartyMemberSquadAssignmentRequest MemberSquadAssignmentRequest; // 0x588(0x38)
	char pad_5C0[0x30]; // 0x5c0(0x30)
	enum class EPartyMemberVoiceChatStatus VoiceChatStatus; // 0x5f0(0x01)
	char pad_5F1[0x37]; // 0x5f1(0x37)
	enum class EPartyMemberSidekickStatus SidekickStatus; // 0x628(0x01)
	char pad_629[0x37]; // 0x629(0x37)
	struct FPartyMemberFrontEndMapMarker FrontEndMapMarker; // 0x660(0x0c)
	char pad_66C[0x34]; // 0x66c(0x34)
	struct FPartyMemberCosmeticLoadout AthenaCosmeticLoadout; // 0x6a0(0x150)
	char pad_7F0[0x30]; // 0x7f0(0x30)
	struct FPartyMemberVariantCache AthenaCosmeticLoadoutVariants; // 0x820(0x50)
	char pad_870[0x30]; // 0x870(0x30)
	struct TArray<struct FString> ArbitraryCustomDataStore; // 0x8a0(0x10)
	char pad_8B0[0x30]; // 0x8b0(0x30)
	struct FPartyMemberAthenaBannerInfo AthenaBannerInfo; // 0x8e0(0x28)
	char pad_908[0x30]; // 0x908(0x30)
	struct FPartyMemberBattlePassInfo BattlePassInfo; // 0x938(0x10)
	char pad_948[0x30]; // 0x948(0x30)
};

// ScriptStruct FortniteGame.PartyMemberBattlePassInfo
// Size: 0x10 (Inherited: 0x00)
struct FPartyMemberBattlePassInfo {
	bool bHasPurchasedPass; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t PassLevel; // 0x04(0x04)
	int32_t SelfBoostXp; // 0x08(0x04)
	int32_t FriendBoostXp; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.PartyMemberAthenaBannerInfo
// Size: 0x28 (Inherited: 0x00)
struct FPartyMemberAthenaBannerInfo {
	struct FString BannerIconId; // 0x00(0x10)
	struct FString BannerColorId; // 0x10(0x10)
	int32_t SeasonLevel; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.PartyMemberVariantCache
// Size: 0x50 (Inherited: 0x00)
struct FPartyMemberVariantCache {
	struct TMap<enum class EFortItemType, struct FNestedPartyVariantRep> vL; // 0x00(0x50)
};

// ScriptStruct FortniteGame.NestedPartyVariantRep
// Size: 0x10 (Inherited: 0x00)
struct FNestedPartyVariantRep {
	struct TArray<struct FPartyVariantRep> I; // 0x00(0x10)
};

// ScriptStruct FortniteGame.PartyMemberCosmeticLoadout
// Size: 0x150 (Inherited: 0x00)
struct FPartyMemberCosmeticLoadout {
	struct TSoftObjectPtr<struct UAthenaCharacterItemDefinition> CharacterDef; // 0x00(0x28)
	struct FString CharacterEKey; // 0x28(0x10)
	struct TSoftObjectPtr<struct UAthenaBackpackItemDefinition> BackpackDef; // 0x38(0x28)
	struct FString BackpackEKey; // 0x60(0x10)
	struct TSoftObjectPtr<struct UAthenaPickaxeItemDefinition> PickaxeDef; // 0x70(0x28)
	struct FString PickaxeEKey; // 0x98(0x10)
	struct TSoftObjectPtr<struct UAthenaSkyDiveContrailItemDefinition> ContrailDef; // 0xa8(0x28)
	struct FString ContrailEKey; // 0xd0(0x10)
	struct TArray<struct FMcpVariantChannelInfo> CosmeticVariants; // 0xe0(0x10)
	struct TArray<struct FPartyMemberScratchEntry> Scratchpad; // 0xf0(0x10)
	char pad_100[0x50]; // 0x100(0x50)
};

// ScriptStruct FortniteGame.PartyMemberScratchEntry
// Size: 0x08 (Inherited: 0x00)
struct FPartyMemberScratchEntry {
	int32_t T; // 0x00(0x04)
	int32_t V; // 0x04(0x04)
};

// ScriptStruct FortniteGame.PartyMemberFrontEndMapMarker
// Size: 0x0c (Inherited: 0x00)
struct FPartyMemberFrontEndMapMarker {
	struct FVector2D MarkerLocation; // 0x00(0x08)
	bool bIsSet; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.PartyMemberSquadAssignmentRequest
// Size: 0x38 (Inherited: 0x00)
struct FPartyMemberSquadAssignmentRequest {
	int32_t StartingAbsoluteIdx; // 0x00(0x04)
	int32_t TargetAbsoluteIdx; // 0x04(0x04)
	struct FUniqueNetIdRepl SwapTargetMemberId; // 0x08(0x28)
	char Version; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// ScriptStruct FortniteGame.PartyMemberAssistedChallengeInfo
// Size: 0x10 (Inherited: 0x00)
struct FPartyMemberAssistedChallengeInfo {
	struct UFortQuestItemDefinition* QuestItemDef; // 0x00(0x08)
	int32_t ObjectivesCompleted; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.PartyMemberLobbyState
// Size: 0x0c (Inherited: 0x00)
struct FPartyMemberLobbyState {
	enum class EFortPartyMemberReadyCheckStatus InGameReadyCheckStatus; // 0x00(0x01)
	enum class EGameReadiness GameReadiness; // 0x01(0x01)
	enum class ECommonInputType ReadyInputType; // 0x02(0x01)
	enum class ECommonInputType CurrentInputType; // 0x03(0x01)
	int32_t HiddenMatchmakingDelayMax; // 0x04(0x04)
	bool HasPreloadedAthena; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.PartyMemberFrontendEmote
// Size: 0x40 (Inherited: 0x00)
struct FPartyMemberFrontendEmote {
	struct TSoftObjectPtr<struct UFortMontageItemDefinitionBase> EmoteItemDef; // 0x00(0x28)
	struct FString EmoteEKey; // 0x28(0x10)
	int8_t EmoteSection; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// ScriptStruct FortniteGame.PartyMemberCampaignInfo
// Size: 0x20 (Inherited: 0x00)
struct FPartyMemberCampaignInfo {
	int32_t MatchmakingLevel; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FString ZoneInstanceId; // 0x08(0x10)
	int64_t HomeBaseVersion; // 0x18(0x08)
};

// ScriptStruct FortniteGame.PartyMemberCampaignHero
// Size: 0x38 (Inherited: 0x00)
struct FPartyMemberCampaignHero {
	struct FString HeroItemInstanceId; // 0x00(0x10)
	struct TSoftObjectPtr<struct UFortHeroType> HeroType; // 0x10(0x28)
};

// ScriptStruct FortniteGame.DevFortPartyMemberRepData
// Size: 0x978 (Inherited: 0x978)
struct FDevFortPartyMemberRepData : FFortPartyMemberRepData {
};

// ScriptStruct FortniteGame.DevPartyMember
// Size: 0x1b0 (Inherited: 0x00)
struct FDevPartyMember {
	struct FString ContextName; // 0x00(0x10)
	struct FString Email; // 0x10(0x10)
	struct FString Password; // 0x20(0x10)
	struct FFortAthenaLoadout AthenaLoadout; // 0x30(0x140)
	struct UFortMontageItemDefinitionBase* Emote; // 0x170(0x08)
	int32_t SeasonLevel; // 0x178(0x04)
	enum class ECrossplayPreference CrossplayPreference; // 0x17c(0x01)
	char pad_17D[0x3]; // 0x17d(0x03)
	struct FString JsonPartyMemberData; // 0x180(0x10)
	bool bIsEmbedded; // 0x190(0x01)
	char pad_191[0x7]; // 0x191(0x07)
	struct FString Platform; // 0x198(0x10)
	enum class ECommonInputType InputType; // 0x1a8(0x01)
	char pad_1A9[0x7]; // 0x1a9(0x07)
};

// ScriptStruct FortniteGame.MeshNetworkEditorSettings
// Size: 0x28 (Inherited: 0x00)
struct FMeshNetworkEditorSettings {
	bool bEnableMeshNetwork; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t BaseMeshPort; // 0x04(0x04)
	int32_t BaseMeshGamePort; // 0x08(0x04)
	int32_t NumRootClients; // 0x0c(0x04)
	int32_t RootLoginStartIndex; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct FString MeshMetadata; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortMissionGenerationElementCostAndAvailabilityRow
// Size: 0x20 (Inherited: 0x08)
struct FFortMissionGenerationElementCostAndAvailabilityRow : FTableRowBase {
	struct UCurveTable* AvailabilityCurveTable; // 0x08(0x08)
	struct FName AvailabilityCurveTableRow; // 0x10(0x08)
	float MinCost; // 0x18(0x04)
	float MaxCost; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortAIEncounterTimedModifierTags
// Size: 0x28 (Inherited: 0x00)
struct FFortAIEncounterTimedModifierTags {
	float TimeSeconds; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FGameplayTagContainer GameplayTags; // 0x08(0x20)
};

// ScriptStruct FortniteGame.FortEncounterLockedUtility
// Size: 0x02 (Inherited: 0x00)
struct FFortEncounterLockedUtility {
	enum class EFortAIUtility Utility; // 0x00(0x01)
	enum class EFortEncounterUtilityDesire UtilityDesire; // 0x01(0x01)
};

// ScriptStruct FortniteGame.FortEmoteMapping
// Size: 0x30 (Inherited: 0x00)
struct FFortEmoteMapping {
	enum class EFortCustomBodyType BodyType; // 0x00(0x01)
	enum class EFortCustomGender Gender; // 0x01(0x01)
	char pad_2[0x6]; // 0x02(0x06)
	struct TSoftObjectPtr<struct UAnimMontage> EmoteMontage; // 0x08(0x28)
};

// ScriptStruct FortniteGame.FortEmoteVolumePlayerTrackingInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortEmoteVolumePlayerTrackingInfo {
	char pad_0[0x18]; // 0x00(0x18)
};

// ScriptStruct FortniteGame.CameraSequence
// Size: 0x30 (Inherited: 0x00)
struct FCameraSequence {
	struct TSoftObjectPtr<struct ALevelSequenceActor> CameraSequencer; // 0x00(0x28)
	bool PlayFromStart; // 0x28(0x01)
	bool UseCinematiceMode; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
};

// ScriptStruct FortniteGame.FortEventLevelNavigationDisplayDetails
// Size: 0x10 (Inherited: 0x00)
struct FFortEventLevelNavigationDisplayDetails {
	struct FString NavActorName; // 0x00(0x10)
};

// ScriptStruct FortniteGame.NavWidgetSettingContainer
// Size: 0x58 (Inherited: 0x00)
struct FNavWidgetSettingContainer {
	struct FGameplayTagContainer CameraTags; // 0x00(0x20)
	struct FNavWidgetSettings WidgetSettings; // 0x20(0x38)
};

// ScriptStruct FortniteGame.NavWidgetSettings
// Size: 0x38 (Inherited: 0x00)
struct FNavWidgetSettings {
	bool bDrawNavWidget; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float Distance; // 0x04(0x04)
	float Angle; // 0x08(0x04)
	float MinRandomNavAngle; // 0x0c(0x04)
	float MaxRandomNavAngle; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct FGameplayTagContainer WordSetsToUse; // 0x18(0x20)
};

// ScriptStruct FortniteGame.NavOptions
// Size: 0x38 (Inherited: 0x00)
struct FNavOptions {
	struct FGameplayTag CameraTag; // 0x00(0x08)
	struct AFortEventLevelNavigationActor* NavObjToLeft; // 0x08(0x08)
	struct AFortEventLevelNavigationActor* NavObjToRight; // 0x10(0x08)
	struct AFortEventLevelNavigationActor* NavObjToUp; // 0x18(0x08)
	struct AFortEventLevelNavigationActor* NavObjToDown; // 0x20(0x08)
	struct TArray<struct FNavOptionFallback> NavFallbacks; // 0x28(0x10)
};

// ScriptStruct FortniteGame.NavOptionFallback
// Size: 0x10 (Inherited: 0x00)
struct FNavOptionFallback {
	enum class ENavOptionFallbackDir NavDir; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct AFortEventLevelNavigationActor* NavObj; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortCriteriaRequirementData
// Size: 0x20 (Inherited: 0x08)
struct FFortCriteriaRequirementData : FTableRowBase {
	struct FGameplayTag RequiredTag; // 0x08(0x08)
	bool bGlobalMod; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
	float ModValue; // 0x14(0x04)
	bool bRequireRarity; // 0x18(0x01)
	enum class EFortRarity RequiredRarity; // 0x19(0x01)
	char pad_1A[0x6]; // 0x1a(0x06)
};

// ScriptStruct FortniteGame.FortFactionInfo
// Size: 0xc8 (Inherited: 0x00)
struct FFortFactionInfo {
	struct FGameplayTag FactionTag; // 0x00(0x08)
	enum class EFortFactionAttitude DefaultAttitude; // 0x08(0x01)
	char bHasSpecificRelations : 1; // 0x09(0x01)
	char bAreFactionMemberAllies : 1; // 0x09(0x01)
	char bShouldSpecificRelationsApplyToEntireFaction : 1; // 0x09(0x01)
	char bMembersCanResetSpecificRelation : 1; // 0x09(0x01)
	char pad_9_4 : 4; // 0x09(0x01)
	char pad_A[0x2]; // 0x0a(0x02)
	float ResetSpecificRelationUnawareDelay; // 0x0c(0x04)
	float ResetSpecificRelationNoDamageDelay; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct FGameplayTagContainer FactionRelations[0x3]; // 0x18(0x60)
	struct FFortAffiliationActorIdentifierList SpecificRelations[0x3]; // 0x78(0x30)
	struct TArray<struct UFortActorComponent_Affiliation*> Members; // 0xa8(0x10)
	struct TArray<struct FFortFactionSharedBBInfo> SharedBBInfos; // 0xb8(0x10)
};

// ScriptStruct FortniteGame.FortFactionSharedBBInfo
// Size: 0x20 (Inherited: 0x00)
struct FFortFactionSharedBBInfo {
	struct TArray<struct UFortActorComponent_Affiliation*> Members; // 0x00(0x10)
	struct FGameplayTag BlackboardTag; // 0x10(0x08)
	struct UBlackboardComponent* BlackboardComp; // 0x18(0x08)
};

// ScriptStruct FortniteGame.FactionData
// Size: 0xf8 (Inherited: 0x00)
struct FFactionData {
	bool bActive; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FText Name; // 0x08(0x18)
	struct FText Description; // 0x20(0x18)
	struct FGameplayTag FactionTag; // 0x38(0x08)
	enum class EFortFactionAttitude DefaultAttitude; // 0x40(0x01)
	bool bAreFactionMemberAllies; // 0x41(0x01)
	bool bShouldSpecificRelationsApplyToEntireFaction; // 0x42(0x01)
	bool bMembersCanResetSpecificRelation; // 0x43(0x01)
	char pad_44[0x4]; // 0x44(0x04)
	struct FScalableFloat ResetSpecificRelationUnawareDelay; // 0x48(0x28)
	struct FScalableFloat ResetSpecificRelationNoDamageDelay; // 0x70(0x28)
	struct FGameplayTagContainer RelationExceptions[0x3]; // 0x98(0x60)
};

// ScriptStruct FortniteGame.FortSpokenLine
// Size: 0x30 (Inherited: 0x00)
struct FFortSpokenLine {
	struct USoundBase* Audio; // 0x00(0x08)
	struct UAnimMontage* AnimMontage; // 0x08(0x08)
	struct UAnimSequence* AnimSequence; // 0x10(0x08)
	struct AFortPawn* Addressee; // 0x18(0x08)
	enum class EFortFeedbackBroadcastFilter BroadcastFilter; // 0x20(0x01)
	char pad_21[0x3]; // 0x21(0x03)
	float Delay; // 0x24(0x04)
	bool bInterruptCurrentLine; // 0x28(0x01)
	bool bCanBeInterrupted; // 0x29(0x01)
	bool bCanQue; // 0x2a(0x01)
	char pad_2B[0x5]; // 0x2b(0x05)
};

// ScriptStruct FortniteGame.FortFeedbackEvent
// Size: 0x30 (Inherited: 0x00)
struct FFortFeedbackEvent {
	struct AFortPawn* Instigator; // 0x00(0x08)
	struct AFortPawn* Recipient; // 0x08(0x08)
	struct FFortFeedbackHandle Handle; // 0x10(0x18)
	float Delay; // 0x28(0x04)
	bool bOverriddenQueuing; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
};

// ScriptStruct FortniteGame.FortFeedbackEventData
// Size: 0x38 (Inherited: 0x00)
struct FFortFeedbackEventData {
	struct FFortFeedbackHandle Handle; // 0x00(0x18)
	float ChanceToPlay; // 0x18(0x04)
	float MinReplayTime; // 0x1c(0x04)
	float MinReplayTimeForSpeaker; // 0x20(0x04)
	float MaxWitnessDistance; // 0x24(0x04)
	bool bInterruptCurrentLine; // 0x28(0x01)
	bool bCanBeInterrupted; // 0x29(0x01)
	bool bCanQue; // 0x2a(0x01)
	enum class EFortFeedbackBroadcastFilter MultiplayerBroadcastFilter; // 0x2b(0x01)
	enum class EFortFeedbackSelectionMethod ContextSelectionMethod; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
	float FeedbackDelay; // 0x30(0x04)
	float TimeLastPlayed; // 0x34(0x04)
};

// ScriptStruct FortniteGame.FortFeedbackAction
// Size: 0x30 (Inherited: 0x00)
struct FFortFeedbackAction {
	char pad_0[0x8]; // 0x00(0x08)
	struct FFortFeedbackHandle Handle; // 0x08(0x18)
	struct TArray<struct FFortFeedbackLine> Lines; // 0x20(0x10)
};

// ScriptStruct FortniteGame.FortFeedbackLine
// Size: 0x98 (Inherited: 0x00)
struct FFortFeedbackLine {
	struct TSoftObjectPtr<struct USoundBase> Audio; // 0x00(0x28)
	struct TSoftObjectPtr<struct UAnimSequence> AnimSequence; // 0x28(0x28)
	struct TSoftObjectPtr<struct UAnimMontage> AnimMontage; // 0x50(0x28)
	enum class EFortFeedbackAddressee Addressee; // 0x78(0x01)
	enum class EFortFeedbackContext Context; // 0x79(0x01)
	char pad_7A[0x6]; // 0x7a(0x06)
	struct TArray<struct FFortFeedbackResponse> ResponseEvents; // 0x80(0x10)
	bool bInterruptCurrentLine; // 0x90(0x01)
	bool bCanBeInterrupted; // 0x91(0x01)
	bool bCanQue; // 0x92(0x01)
	char pad_93[0x5]; // 0x93(0x05)
};

// ScriptStruct FortniteGame.FortFeedbackResponse
// Size: 0x20 (Inherited: 0x00)
struct FFortFeedbackResponse {
	struct FFortFeedbackHandle Handle; // 0x00(0x18)
	enum class EFortFeedbackContext Context; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
};

// ScriptStruct FortniteGame.FortFeedbackActionBankDefined
// Size: 0x38 (Inherited: 0x30)
struct FFortFeedbackActionBankDefined : FFortFeedbackAction {
	float MinReplayTime; // 0x30(0x04)
	float MinReplayTimeForSpeaker; // 0x34(0x04)
};

// ScriptStruct FortniteGame.FerretVehicleBoostLevel
// Size: 0x08 (Inherited: 0x00)
struct FFerretVehicleBoostLevel {
	float AccumulationPercent; // 0x00(0x04)
	float BoostTime; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortFlightModel
// Size: 0x220 (Inherited: 0x00)
struct FFortFlightModel {
	char pad_0[0x220]; // 0x00(0x220)
};

// ScriptStruct FortniteGame.FlightParams
// Size: 0xbc (Inherited: 0x00)
struct FFlightParams {
	float TopSpeedKmh; // 0x00(0x04)
	float LiftoffSpeedKmh; // 0x04(0x04)
	float LandingSpeedKmh; // 0x08(0x04)
	float ControlSpeedKmh; // 0x0c(0x04)
	float HeadingStabilizationRate; // 0x10(0x04)
	float HeadingStabilizationMaxForwardVelocityKmh; // 0x14(0x04)
	float HeadingStabilizationMaxDegPerSecond; // 0x18(0x04)
	float VerticalStabilizationDrag; // 0x1c(0x04)
	float HorizontalStabilizationDrag; // 0x20(0x04)
	float VerticalStabilizationTorque; // 0x24(0x04)
	float MaxVerticalStabilizationTorque; // 0x28(0x04)
	float HorizontalStabilizationTorque; // 0x2c(0x04)
	float MaxHorizontalStabilizationTorque; // 0x30(0x04)
	float RotationalDampingCoefficient; // 0x34(0x04)
	float MaxRotationalDampingTorque; // 0x38(0x04)
	float TailLength; // 0x3c(0x04)
	float LowSpeedThrust; // 0x40(0x04)
	float HighSpeedThrust; // 0x44(0x04)
	float AntigravityHorizontal; // 0x48(0x04)
	float AntigravityUp; // 0x4c(0x04)
	float AntigravityDown; // 0x50(0x04)
	float ControlFrameHeight; // 0x54(0x04)
	float ControlFrameDistance; // 0x58(0x04)
	float ControlFrameDistanceInterpPerSecond; // 0x5c(0x04)
	float ControlFrameOrbitInterpPerSecond; // 0x60(0x04)
	float ControlFrameRollInterpPerSecond; // 0x64(0x04)
	struct FVector ControlFrameDefaultRollUp; // 0x68(0x0c)
	float ControlFrameRollUpAcceleration; // 0x74(0x04)
	float ControlFrameRollUpMaxVelocity; // 0x78(0x04)
	float ControlFrameRollUpDamping; // 0x7c(0x04)
	float ControlFrameMinUpNudge; // 0x80(0x04)
	float ControlFrameMaxUpNudge; // 0x84(0x04)
	float ControlFrameUpsideDownIgnoreNudgePercent; // 0x88(0x04)
	float SteerPitchRate; // 0x8c(0x04)
	float SteerYawRate; // 0x90(0x04)
	float SteerMaxHeadingDiffDegrees; // 0x94(0x04)
	float RollPerHeadingDiff; // 0x98(0x04)
	float HeadingMatchRate; // 0x9c(0x04)
	float RollMatchRate; // 0xa0(0x04)
	float MatchingTorqueCap; // 0xa4(0x04)
	float StallVelocityLow; // 0xa8(0x04)
	float StallVelocityHigh; // 0xac(0x04)
	float MinStallYawMultiplier; // 0xb0(0x04)
	float MaxStallYawMultiplier; // 0xb4(0x04)
	float StallHighVelocityDeviationAngle; // 0xb8(0x04)
};

// ScriptStruct FortniteGame.FortFootstepSurfaceInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortFootstepSurfaceInfo {
	char pad_0[0x18]; // 0x00(0x18)
};

// ScriptStruct FortniteGame.FortFootstepSurfaceAudioData
// Size: 0xa8 (Inherited: 0x00)
struct FFortFootstepSurfaceAudioData {
	struct USoundBase* SoundAssets[0x7]; // 0x00(0x38)
	struct USoundBase* SoundAssetsAbove[0x7]; // 0x38(0x38)
	struct USoundBase* SoundAssetsBelow[0x7]; // 0x70(0x38)
};

// ScriptStruct FortniteGame.FortFootstepAttenuationData
// Size: 0x28 (Inherited: 0x00)
struct FFortFootstepAttenuationData {
	struct USoundAttenuation* SoundAttenuation; // 0x00(0x08)
	struct USoundAttenuation* SoundAttenuationAbove; // 0x08(0x08)
	struct USoundAttenuation* SoundAttenuationBelow; // 0x10(0x08)
	struct USoundAttenuation* SoundAttenuationAboveOrBelowAndVisible; // 0x18(0x08)
	float VolumeMultiplier; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.FortLightAnimSet
// Size: 0x20 (Inherited: 0x00)
struct FFortLightAnimSet {
	struct ULightComponent* LightComp; // 0x00(0x08)
	struct TArray<struct FFortFloatAnimationInfo> IntensityAnims; // 0x08(0x10)
	char pad_18[0x8]; // 0x18(0x08)
};

// ScriptStruct FortniteGame.FortFXAnimationInfoBase
// Size: 0x18 (Inherited: 0x00)
struct FFortFXAnimationInfoBase {
	struct UCurveFloat* LerpCurve; // 0x00(0x08)
	char pad_8[0x10]; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortFloatAnimationInfo
// Size: 0x20 (Inherited: 0x18)
struct FFortFloatAnimationInfo : FFortFXAnimationInfoBase {
	char pad_18[0x8]; // 0x18(0x08)
};

// ScriptStruct FortniteGame.FortParticleAnimSet
// Size: 0x20 (Inherited: 0x00)
struct FFortParticleAnimSet {
	struct UParticleSystemComponent* PSC; // 0x00(0x08)
	struct TArray<struct FFortFloatParamAnimationInfo> ParamAnims; // 0x08(0x10)
	char pad_18[0x8]; // 0x18(0x08)
};

// ScriptStruct FortniteGame.FortFloatParamAnimationInfo
// Size: 0x28 (Inherited: 0x20)
struct FFortFloatParamAnimationInfo : FFortFloatAnimationInfo {
	char pad_20[0x8]; // 0x20(0x08)
};

// ScriptStruct FortniteGame.FortMIDAnimSet
// Size: 0x40 (Inherited: 0x00)
struct FFortMIDAnimSet {
	struct UMaterialInstanceDynamic* Mid; // 0x00(0x08)
	struct TArray<struct FFortFloatParamAnimationInfo> FloatParamAnims; // 0x08(0x10)
	struct TArray<struct FFortLinearColorParamAnimationInfo> ColorParamAnims; // 0x18(0x10)
	struct TArray<struct FFortLinearColorCurveParamAnimationInfo> ColorCurveParamAnims; // 0x28(0x10)
	char pad_38[0x8]; // 0x38(0x08)
};

// ScriptStruct FortniteGame.FortLinearColorCurveAnimationInfo
// Size: 0x28 (Inherited: 0x18)
struct FFortLinearColorCurveAnimationInfo : FFortFXAnimationInfoBase {
	char pad_18[0x10]; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortLinearColorCurveParamAnimationInfo
// Size: 0x30 (Inherited: 0x28)
struct FFortLinearColorCurveParamAnimationInfo : FFortLinearColorCurveAnimationInfo {
	char pad_28[0x8]; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortLinearColorAnimationInfo
// Size: 0x38 (Inherited: 0x18)
struct FFortLinearColorAnimationInfo : FFortFXAnimationInfoBase {
	char pad_18[0x20]; // 0x18(0x20)
};

// ScriptStruct FortniteGame.FortLinearColorParamAnimationInfo
// Size: 0x40 (Inherited: 0x38)
struct FFortLinearColorParamAnimationInfo : FFortLinearColorAnimationInfo {
	char pad_38[0x8]; // 0x38(0x08)
};

// ScriptStruct FortniteGame.FortSplineMeshAnimSet
// Size: 0x30 (Inherited: 0x00)
struct FFortSplineMeshAnimSet {
	struct USplineMeshComponent* SplineMesh; // 0x00(0x08)
	struct TArray<struct FFortSplineMeshScaleAnimationInfo> ScaleAnims; // 0x08(0x10)
	struct TArray<struct FFortSplineMeshSnapAnimationInfo> SnapAnims; // 0x18(0x10)
	char pad_28[0x8]; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortSplineMeshSnapAnimationInfo
// Size: 0x28 (Inherited: 0x18)
struct FFortSplineMeshSnapAnimationInfo : FFortFXAnimationInfoBase {
	struct USplineComponent* TargetSpline; // 0x18(0x08)
	char pad_20[0x8]; // 0x20(0x08)
};

// ScriptStruct FortniteGame.FortSplineMeshScaleAnimationInfo
// Size: 0x28 (Inherited: 0x18)
struct FFortSplineMeshScaleAnimationInfo : FFortFXAnimationInfoBase {
	char pad_18[0x10]; // 0x18(0x10)
};

// ScriptStruct FortniteGame.CharacterPartsExtraSpecial
// Size: 0x30 (Inherited: 0x00)
struct FCharacterPartsExtraSpecial {
	struct TArray<struct UCustomCharacterPart*> CharacterPartsForExtraSpecial; // 0x00(0x10)
	struct FGameplayTagContainer SkinMetaTagsForExtraSpecial; // 0x10(0x20)
};

// ScriptStruct FortniteGame.TagQueryTableRow
// Size: 0x50 (Inherited: 0x08)
struct FTagQueryTableRow : FTableRowBase {
	struct FGameplayTagQuery TagQuery; // 0x08(0x48)
};

// ScriptStruct FortniteGame.SubGameInfo
// Size: 0x10 (Inherited: 0x00)
struct FSubGameInfo {
	struct UFortTokenType* AccessToken; // 0x00(0x08)
	bool RequiredFullInstall; // 0x08(0x01)
	bool bCanPartyWithoutFullInstall; // 0x09(0x01)
	char pad_A[0x6]; // 0x0a(0x06)
};

// ScriptStruct FortniteGame.SettingsHUDVisibilityAndText
// Size: 0x48 (Inherited: 0x00)
struct FSettingsHUDVisibilityAndText {
	struct FGameplayTag HUDVisibilityGameplayTag; // 0x00(0x08)
	enum class ESlateVisibility DefaultHUDVisibility; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct FText DisplayText; // 0x10(0x18)
	struct FText ToolTipText; // 0x28(0x18)
	bool bPlatformConstraintPC; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// ScriptStruct FortniteGame.FortHighlightColorsContainer
// Size: 0x68 (Inherited: 0x00)
struct FFortHighlightColorsContainer {
	struct FFortHighlightColors ValidHighlight; // 0x00(0x30)
	struct FFortHighlightColors InvalidHighlight; // 0x30(0x30)
	struct FName ParamProfileName; // 0x60(0x08)
};

// ScriptStruct FortniteGame.FortHighlightColors
// Size: 0x30 (Inherited: 0x00)
struct FFortHighlightColors {
	struct FLinearColor OutlineColor; // 0x00(0x10)
	struct FLinearColor SceneModulationColor1; // 0x10(0x10)
	struct FLinearColor SceneModulationColor2; // 0x20(0x10)
};

// ScriptStruct FortniteGame.FortHighlightParamProfile
// Size: 0x28 (Inherited: 0x00)
struct FFortHighlightParamProfile {
	struct FName UniqueProfileName; // 0x00(0x08)
	struct FName StencilParamName; // 0x08(0x08)
	struct FName OutlineColorParamName; // 0x10(0x08)
	struct FName SceneModulationColorOneParamName; // 0x18(0x08)
	struct FName SceneModulationColorTwoParamName; // 0x20(0x08)
};

// ScriptStruct FortniteGame.PartnerPcbInfo
// Size: 0x28 (Inherited: 0x00)
struct FPartnerPcbInfo {
	struct FGameplayTag PartnerTag; // 0x00(0x08)
	struct FGameplayTagContainer ValidPartnerBundles; // 0x08(0x20)
};

// ScriptStruct FortniteGame.PlayerClampInfo
// Size: 0x18 (Inherited: 0x08)
struct FPlayerClampInfo : FTableRowBase {
	struct TArray<struct FAttributeClamp> AttributeClamps; // 0x08(0x10)
};

// ScriptStruct FortniteGame.AttributeClamp
// Size: 0x40 (Inherited: 0x00)
struct FAttributeClamp {
	struct FGameplayAttribute Attribute; // 0x00(0x38)
	enum class EClampType ClampType; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float ClampValue; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.GameDifficultyInfo
// Size: 0xa0 (Inherited: 0x08)
struct FGameDifficultyInfo : FTableRowBase {
	bool bIsOnboarding; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	float Difficulty; // 0x0c(0x04)
	float DifficultyMatchmakingMinOverride; // 0x10(0x04)
	float DifficultyMatchmakingMaxOverride; // 0x14(0x04)
	int32_t LootLevel; // 0x18(0x04)
	enum class ERatingsEnforcementType RatingsEnforcement; // 0x1c(0x01)
	char pad_1D[0x3]; // 0x1d(0x03)
	int32_t RequiredRating; // 0x20(0x04)
	int32_t MaximumRating; // 0x24(0x04)
	int32_t PvPRating; // 0x28(0x04)
	int32_t RecommendedRating; // 0x2c(0x04)
	float ScoreBonus; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct FString LootTierGroup; // 0x38(0x10)
	struct FString BonusLootTierGroup; // 0x48(0x10)
	struct FString DifficultyIncreaseLootTierGroup; // 0x58(0x10)
	int32_t NumDifficultyIncreases; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
	struct FText ThreatDisplayName; // 0x70(0x18)
	struct FName ColorParamName; // 0x88(0x08)
	int32_t DefaultPlayerLives; // 0x90(0x04)
	struct FName PlayerStatClampRowName; // 0x94(0x08)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// ScriptStruct FortniteGame.FortGameFeatureItemsToFullyLoadData
// Size: 0x30 (Inherited: 0x00)
struct FFortGameFeatureItemsToFullyLoadData {
	struct FGameplayTagContainer PlaylistTags; // 0x00(0x20)
	struct TArray<struct UFortItemDefinition*> ItemsToFullyLoad; // 0x20(0x10)
};

// ScriptStruct FortniteGame.FortGameFeatureLootTableData
// Size: 0x50 (Inherited: 0x00)
struct FFortGameFeatureLootTableData {
	struct TSoftObjectPtr<struct UDataTable> LootTierData; // 0x00(0x28)
	struct TSoftObjectPtr<struct UDataTable> LootPackageData; // 0x28(0x28)
};

// ScriptStruct FortniteGame.AudioDynamicSoundData
// Size: 0x10 (Inherited: 0x00)
struct FAudioDynamicSoundData {
	struct FName Name; // 0x00(0x08)
	enum class EDynamicSoundOverride SoundOverrideType; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	float Volume; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.AthenaDataTableSet
// Size: 0x38 (Inherited: 0x00)
struct FAthenaDataTableSet {
	struct UDataTable* LootTierData; // 0x00(0x08)
	struct UDataTable* LootPackages; // 0x08(0x08)
	struct UDataTable* RangedWeapons; // 0x10(0x08)
	struct UCurveTable* GameData; // 0x18(0x08)
	struct UCurveTable* ResourceRates; // 0x20(0x08)
	struct UCurveTable* VehicleData; // 0x28(0x08)
	struct UCurveTable* AILootOnDeathData; // 0x30(0x08)
};

// ScriptStruct FortniteGame.ContestedBuildingRequest
// Size: 0x38 (Inherited: 0x00)
struct FContestedBuildingRequest {
	char pad_0[0x38]; // 0x00(0x38)
};

// ScriptStruct FortniteGame.AthenaServerStartAircraftStats
// Size: 0x40 (Inherited: 0x00)
struct FAthenaServerStartAircraftStats {
	float WarmupDurationSec; // 0x00(0x04)
	int32_t NumPlayersMissing; // 0x04(0x04)
	int32_t NumPlayersQuitting; // 0x08(0x04)
	bool bStartedEarly; // 0x0c(0x01)
	enum class EAircraftLaunchReason StartReason; // 0x0d(0x01)
	char pad_E[0x2]; // 0x0e(0x02)
	int32_t ExpectedPlayers; // 0x10(0x04)
	int32_t PlayersReadied; // 0x14(0x04)
	int32_t PlayersLoadingScreenDropped; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct FGameplayTagContainer GoldenPoisTags; // 0x20(0x20)
};

// ScriptStruct FortniteGame.ClearAreaParams
// Size: 0x38 (Inherited: 0x00)
struct FClearAreaParams {
	struct FVector Location; // 0x00(0x0c)
	float CapsuleHalfHeight; // 0x0c(0x04)
	float CapsuleRadius; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct FGameplayTagContainer IgnoreTags; // 0x18(0x20)
};

// ScriptStruct FortniteGame.RejoinScoreMemory
// Size: 0x30 (Inherited: 0x00)
struct FRejoinScoreMemory {
	char pad_0[0x30]; // 0x00(0x30)
};

// ScriptStruct FortniteGame.BCActionInfo
// Size: 0x08 (Inherited: 0x00)
struct FBCActionInfo {
	int32_t Type; // 0x00(0x04)
	int32_t Action; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortFollowCam_Settings
// Size: 0x168 (Inherited: 0x00)
struct FFortFollowCam_Settings {
	struct FScalableFloat TurnDampeningStart; // 0x00(0x28)
	struct FScalableFloat TurnFullRate; // 0x28(0x28)
	struct FScalableFloat TurnFullDeflectionThreshold; // 0x50(0x28)
	struct FScalableFloat TurnBoostRate; // 0x78(0x28)
	struct FScalableFloat TurnDampeningRecoveryRate; // 0xa0(0x28)
	struct FScalableFloat TurnDeadZone; // 0xc8(0x28)
	struct FScalableFloat HorizonPullDelay; // 0xf0(0x28)
	struct FScalableFloat HorizonPullDampeningTime; // 0x118(0x28)
	struct FScalableFloat HorizonPullHalfTime; // 0x140(0x28)
};

// ScriptStruct FortniteGame.FortGamepadUserOptions
// Size: 0x4c (Inherited: 0x00)
struct FFortGamepadUserOptions {
	struct FFortGamepadBasicOptions Basic; // 0x00(0x10)
	struct FFortGamepadAdvancedOptions Advanced; // 0x10(0x3c)
};

// ScriptStruct FortniteGame.FortGamepadAdvancedOptions
// Size: 0x3c (Inherited: 0x00)
struct FFortGamepadAdvancedOptions {
	uint32_t LookHorizontalSpeed; // 0x00(0x04)
	uint32_t LookVerticalSpeed; // 0x04(0x04)
	uint32_t LookHorizontalSpeedAds; // 0x08(0x04)
	uint32_t LookVerticalSpeedAds; // 0x0c(0x04)
	uint32_t LookHorizontalBoostSpeed; // 0x10(0x04)
	uint32_t LookVerticalBoostSpeed; // 0x14(0x04)
	float LookBoostAccelerationTime; // 0x18(0x04)
	uint32_t LookHorizontalBoostSpeedAds; // 0x1c(0x04)
	uint32_t LookVerticalBoostSpeedAds; // 0x20(0x04)
	float LookBoostAccelerationTimeAds; // 0x24(0x04)
	bool bInstantBoostWhenBuilding; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	float LookEaseTime; // 0x2c(0x04)
	enum class EFortGamepadLookInputCurve LookInputCurve; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	uint32_t AimAssistStrength; // 0x34(0x04)
	bool bUseLegacyControls; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
};

// ScriptStruct FortniteGame.FortGamepadBasicOptions
// Size: 0x10 (Inherited: 0x00)
struct FFortGamepadBasicOptions {
	enum class EFortGamepadSensitivity LookSensitivityPreset; // 0x00(0x01)
	enum class EFortGamepadSensitivity LookSensitivityPresetAds; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	float LookBuildModeMultiplier; // 0x04(0x04)
	float LookEditModeMultiplier; // 0x08(0x04)
	bool bUseAdvancedOptions; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
};

// ScriptStruct FortniteGame.ProjectileTrajectorySplineInfo
// Size: 0x68 (Inherited: 0x00)
struct FProjectileTrajectorySplineInfo {
	struct AActor* Instigator; // 0x00(0x08)
	struct FVector InitialLocation; // 0x08(0x0c)
	struct FVector InitialVelocity; // 0x14(0x0c)
	float MaxSpeed; // 0x20(0x04)
	float Gravity; // 0x24(0x04)
	float Friction; // 0x28(0x04)
	float Bounciness; // 0x2c(0x04)
	float TimeStep; // 0x30(0x04)
	float TraceExtent; // 0x34(0x04)
	enum class ECollisionChannel TraceChannel; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	struct FName CollisionProfile; // 0x3c(0x08)
	int32_t MaxBounces; // 0x44(0x04)
	int32_t MaxSteps; // 0x48(0x04)
	float MaxDistanceBetweenSplinePoints; // 0x4c(0x04)
	float InitialDistance; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct TArray<struct AActor*> ExtraActorsToIgnore; // 0x58(0x10)
};

// ScriptStruct FortniteGame.FortAbilityCost
// Size: 0x40 (Inherited: 0x00)
struct FFortAbilityCost {
	enum class EFortAbilityCostSource CostSource; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FScalableFloat CostValue; // 0x08(0x28)
	struct UFortItemDefinition* ItemDefinition; // 0x30(0x08)
	bool bOnlyApplyCostOnHit; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// ScriptStruct FortniteGame.FortGameplayAbilityBehaviorDistanceData
// Size: 0x28 (Inherited: 0x00)
struct FFortGameplayAbilityBehaviorDistanceData {
	struct FGameplayTagContainer DistanceDataTag; // 0x00(0x20)
	float Distance; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.FortGameplayAbilityMontageInfo
// Size: 0x58 (Inherited: 0x00)
struct FFortGameplayAbilityMontageInfo {
	struct UAnimMontage* MontageToPlay; // 0x00(0x08)
	float AnimPlayRate; // 0x08(0x04)
	float AnimRootMotionTranslationScale; // 0x0c(0x04)
	enum class EFortGameplayAbilityMontageSectionToPlay MontageSectionToPlay; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
	struct FName OverrideSection; // 0x14(0x08)
	bool bPlayRandomSection; // 0x1c(0x01)
	char pad_1D[0x3]; // 0x1d(0x03)
	struct TArray<struct FFortCharacterPartMontageInfo> CharacterPartMontages; // 0x20(0x10)
	char pad_30[0x28]; // 0x30(0x28)
};

// ScriptStruct FortniteGame.FortCharacterPartMontageInfo
// Size: 0x10 (Inherited: 0x00)
struct FFortCharacterPartMontageInfo {
	enum class EFortCustomPartType CharacterPart; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct UAnimMontage* AnimMontage; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortGameplayEffectContainer
// Size: 0xb8 (Inherited: 0x00)
struct FFortGameplayEffectContainer {
	struct FGameplayTag ApplicationTag; // 0x00(0x08)
	struct FFortAbilityTargetSelectionList TargetSelection; // 0x08(0x48)
	struct TArray<struct UGameplayEffect*> TargetGameplayEffectClasses; // 0x50(0x10)
	struct TArray<struct UGameplayEffect*> OwnerGameplayEffectClasses; // 0x60(0x10)
	struct FGameplayTagContainer ActivationCues; // 0x70(0x20)
	struct FGameplayTagContainer ImpactCues; // 0x90(0x20)
	bool bUseCalculationInTooltips; // 0xb0(0x01)
	bool bOverrideChargeMagnitude; // 0xb1(0x01)
	char pad_B2[0x2]; // 0xb2(0x02)
	float ChargeMagnitudeOverrideValue; // 0xb4(0x04)
};

// ScriptStruct FortniteGame.FortGameplayEffectContainerSpec
// Size: 0xb8 (Inherited: 0x00)
struct FFortGameplayEffectContainerSpec {
	struct FFortAbilityTargetSelectionList TargetSelection; // 0x00(0x48)
	struct TArray<struct FGameplayEffectSpecHandle> TargetGameplayEffectSpecs; // 0x48(0x10)
	struct TArray<struct FGameplayEffectSpecHandle> OwnerGameplayEffectSpecs; // 0x58(0x10)
	struct FGameplayTagContainer ActivationCues; // 0x68(0x20)
	struct FGameplayTagContainer ImpactCues; // 0x88(0x20)
	float ImpactNoiseRange; // 0xa8(0x04)
	float FlyByNoiseRange; // 0xac(0x04)
	bool bOverrideChargeMagnitude; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	float ChargeMagnitudeOverrideValue; // 0xb4(0x04)
};

// ScriptStruct FortniteGame.TurnTransitionData
// Size: 0x48 (Inherited: 0x00)
struct FTurnTransitionData {
	bool bUseMontageForTurnTransition; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FName MontageSectionName; // 0x04(0x08)
	float MinYawAngle; // 0x0c(0x04)
	float MaxYawAngle; // 0x10(0x04)
	float TurnRate; // 0x14(0x04)
	struct FGameplayTagContainer RequiredGameplayTags; // 0x18(0x20)
	int32_t PriorityLevel; // 0x38(0x04)
	struct FTurnFloatRange SpeedConstraintRange; // 0x3c(0x08)
	bool bEnableSpeedConstraint; // 0x44(0x01)
	bool bSkipTransitionInCrowd; // 0x45(0x01)
	char pad_46[0x2]; // 0x46(0x02)
};

// ScriptStruct FortniteGame.TurnFloatRange
// Size: 0x08 (Inherited: 0x00)
struct FTurnFloatRange {
	float min; // 0x00(0x04)
	float max; // 0x04(0x04)
};

// ScriptStruct FortniteGame.PossessPropClasses
// Size: 0x68 (Inherited: 0x08)
struct FPossessPropClasses : FTableRowBase {
	SoftClassProperty ClassPath; // 0x08(0x28)
	float PreviewScale; // 0x30(0x04)
	struct FRotator PossessedRotation; // 0x34(0x0c)
	struct FVector PossessedScale; // 0x40(0x0c)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct FText CategoryLabelText; // 0x50(0x18)
};

// ScriptStruct FortniteGame.FortPawnSpinParams
// Size: 0x08 (Inherited: 0x00)
struct FFortPawnSpinParams {
	float LocalSpin; // 0x00(0x04)
	bool bOnlySpinWhenFalling; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
};

// ScriptStruct FortniteGame.SpyTechLevelUpgradeData
// Size: 0x70 (Inherited: 0x00)
struct FSpyTechLevelUpgradeData {
	struct FGameplayTagContainer LevelUpgradeTags; // 0x00(0x20)
	struct FScalableFloat IsLevelUpgradeEnabled; // 0x20(0x28)
	struct FScalableFloat MaxLevelUpgrade; // 0x48(0x28)
};

// ScriptStruct FortniteGame.SpyTechUpgradeData
// Size: 0x58 (Inherited: 0x00)
struct FSpyTechUpgradeData {
	struct FGameplayTagContainer UpgradeTags; // 0x00(0x20)
	struct FScalableFloat IsUpgradeEnabled; // 0x20(0x28)
	struct FPrimaryAssetId UpgradedItemAssetID; // 0x48(0x10)
};

// ScriptStruct FortniteGame.SpyTechWeaponUpgradeRow
// Size: 0x30 (Inherited: 0x08)
struct FSpyTechWeaponUpgradeRow : FTableRowBase {
	struct TSoftObjectPtr<struct UFortItemDefinition> UpgradedItemToGrant; // 0x08(0x28)
};

// ScriptStruct FortniteGame.GrantItemMultiData
// Size: 0x60 (Inherited: 0x08)
struct FGrantItemMultiData : FTableRowBase {
	struct TSoftObjectPtr<struct UFortItemDefinition> ItemToGrant; // 0x08(0x28)
	struct FScalableFloat NumberOfItemsToGrant; // 0x30(0x28)
	bool bRemoveExistingBeforeGrant; // 0x58(0x01)
	bool bRequiresPreviousInstance; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)
};

// ScriptStruct FortniteGame.ActiveItemGrantInfo
// Size: 0x58 (Inherited: 0x00)
struct FActiveItemGrantInfo {
	struct UFortWorldItemDefinition* Item; // 0x00(0x08)
	struct FScalableFloat AmountToGive; // 0x08(0x28)
	struct FScalableFloat MaxAmount; // 0x30(0x28)
};

// ScriptStruct FortniteGame.FortBurstEffectData
// Size: 0x100 (Inherited: 0x00)
struct FFortBurstEffectData {
	struct TArray<struct FFortGameplayCueParticleInfo> BurstParticles; // 0x00(0x10)
	struct TArray<struct FFortGameplayCueAudioInfo> BurstSounds; // 0x10(0x10)
	struct FFortGameplayCueCameraShakeInfo BurstCameraShake; // 0x20(0x28)
	struct FFortGameplayCueCameraLensEffectInfo BurstCameraLensEffect; // 0x48(0x18)
	struct FFortGameplayCueForceFeedbackInfo BurstForceFeedbackEffect; // 0x60(0x28)
	struct FFortGameplayCueDecalInfo BurstDecal; // 0x88(0x78)
};

// ScriptStruct FortniteGame.FortGameplayCueDecalInfo
// Size: 0x78 (Inherited: 0x00)
struct FFortGameplayCueDecalInfo {
	struct FFortGameplayCueSpawnCondition Condition; // 0x00(0x38)
	struct FFortGameplayCueAttachInfo Attachment; // 0x38(0x28)
	char bOverrideCondition : 1; // 0x60(0x01)
	char bOverrideAttachment : 1; // 0x60(0x01)
	char bOverrideFadeOut : 1; // 0x60(0x01)
	char pad_60_3 : 5; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
	struct ADecalActor* Decal; // 0x68(0x08)
	float FadeOutStartDelay; // 0x70(0x04)
	float FadeOutDuration; // 0x74(0x04)
};

// ScriptStruct FortniteGame.FortGameplayCueAttachInfo
// Size: 0x28 (Inherited: 0x00)
struct FFortGameplayCueAttachInfo {
	struct FName SocketName; // 0x00(0x08)
	enum class EFortGameplayCueAttachType AttachType; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	char bAttachToWeapon : 1; // 0x0c(0x01)
	char bAttachToHitResult : 1; // 0x0c(0x01)
	char bUseUnsmoothedNetworkPosition : 1; // 0x0c(0x01)
	char bIgnoreScale : 1; // 0x0c(0x01)
	char bIgnoreRotation : 1; // 0x0c(0x01)
	char pad_C_5 : 3; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
	struct FVector OverrideScale; // 0x10(0x0c)
	struct FRotator OverrideRotation; // 0x1c(0x0c)
};

// ScriptStruct FortniteGame.FortGameplayCueSpawnCondition
// Size: 0x38 (Inherited: 0x00)
struct FFortGameplayCueSpawnCondition {
	enum class EFortGameplayCueSourceCondition SourceCondition; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<enum class EPhysicalSurface> AllowedSurfaces; // 0x08(0x10)
	struct TArray<enum class EPhysicalSurface> DisallowedSurfaces; // 0x18(0x10)
	float ChanceToPlay; // 0x28(0x04)
	enum class EParticleSignificanceLevel Significance; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
	int32_t RequiredDetailMode; // 0x30(0x04)
	char bRequireVisible : 1; // 0x34(0x01)
	char pad_34_1 : 7; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// ScriptStruct FortniteGame.FortGameplayCueForceFeedbackInfo
// Size: 0x28 (Inherited: 0x00)
struct FFortGameplayCueForceFeedbackInfo {
	struct UForceFeedbackEffect* ForceFeedbackEffect; // 0x00(0x08)
	float EffectRadius; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct UForceFeedbackEffect* FarForceFeedbackEffect; // 0x10(0x08)
	float FarEffectRadius; // 0x18(0x04)
	struct FName EffectTag; // 0x1c(0x08)
	bool bAlwaysPlayOnTarget; // 0x24(0x01)
	char pad_25[0x3]; // 0x25(0x03)
};

// ScriptStruct FortniteGame.FortGameplayCueCameraLensEffectInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortGameplayCueCameraLensEffectInfo {
	struct AActor* CameraLensEffect; // 0x00(0x08)
	struct FFortGameplayCueAOEInfo Falloff; // 0x08(0x08)
	bool bAlwaysPlayOnTarget; // 0x10(0x01)
	bool bCancelOnRemove; // 0x11(0x01)
	char pad_12[0x6]; // 0x12(0x06)
};

// ScriptStruct FortniteGame.FortGameplayCueAOEInfo
// Size: 0x08 (Inherited: 0x00)
struct FFortGameplayCueAOEInfo {
	float InnerRadius; // 0x00(0x04)
	float OuterRadius; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortGameplayCueCameraShakeInfo
// Size: 0x28 (Inherited: 0x00)
struct FFortGameplayCueCameraShakeInfo {
	struct UMatineeCameraShake* Shake; // 0x00(0x08)
	float Scale; // 0x08(0x04)
	enum class ECameraShakePlaySpace Playspace; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
	struct FRotator UserPlaySpaceRotation; // 0x10(0x0c)
	bool bAlwaysPlayOnTarget; // 0x1c(0x01)
	bool bCalculateUserPlaySpaceRotationFromLocation; // 0x1d(0x01)
	bool bCancelOnRemove; // 0x1e(0x01)
	char pad_1F[0x1]; // 0x1f(0x01)
	struct FFortGameplayCueAOEInfo Falloff; // 0x20(0x08)
};

// ScriptStruct FortniteGame.FortGameplayCueAudioInfo
// Size: 0x70 (Inherited: 0x00)
struct FFortGameplayCueAudioInfo {
	struct FFortGameplayCueSpawnCondition Condition; // 0x00(0x38)
	struct FFortGameplayCueAttachInfo Attachment; // 0x38(0x28)
	struct USoundBase* SoundCue; // 0x60(0x08)
	float DelayBeforePlayInSeconds; // 0x68(0x04)
	char bOverrideCondition : 1; // 0x6c(0x01)
	char bOverrideAttachment : 1; // 0x6c(0x01)
	char pad_6C_2 : 6; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
};

// ScriptStruct FortniteGame.FortGameplayCueParticleInfo
// Size: 0x80 (Inherited: 0x00)
struct FFortGameplayCueParticleInfo {
	struct FFortGameplayCueSpawnCondition Condition; // 0x00(0x38)
	struct FFortGameplayCueAttachInfo Attachment; // 0x38(0x28)
	enum class EFXType FXType; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
	struct UNiagaraSystem* NiagaraSystem; // 0x68(0x08)
	struct UParticleSystem* ParticleSystem; // 0x70(0x08)
	char bCastShadow : 1; // 0x78(0x01)
	char bOverrideCondition : 1; // 0x78(0x01)
	char bOverrideAttachment : 1; // 0x78(0x01)
	char pad_78_3 : 5; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// ScriptStruct FortniteGame.FortGameplayCueSpawnResult
// Size: 0x40 (Inherited: 0x00)
struct FFortGameplayCueSpawnResult {
	struct TArray<struct UFXSystemComponent*> ParticleComponents; // 0x00(0x10)
	struct TArray<struct UAudioComponent*> AudioComponents; // 0x10(0x10)
	struct UMatineeCameraShake* CameraShake; // 0x20(0x08)
	struct TScriptInterface<None> CameraLensEffect; // 0x28(0x10)
	struct ADecalActor* DecalActor; // 0x38(0x08)
};

// ScriptStruct FortniteGame.FortGameplayCueAudioInfo_Looping
// Size: 0x78 (Inherited: 0x70)
struct FFortGameplayCueAudioInfo_Looping : FFortGameplayCueAudioInfo {
	float LoopingSoundFadeOutDuration; // 0x70(0x04)
	float LoopingSoundVolumeLevel; // 0x74(0x04)
};

// ScriptStruct FortniteGame.FortGameplayDataTrackerAccumulation
// Size: 0x30 (Inherited: 0x00)
struct FFortGameplayDataTrackerAccumulation {
	struct FGameplayTag AccumulationTag; // 0x00(0x08)
	struct TArray<struct FFortGameplayDataTrackerAccumulationContributor> Contributions; // 0x08(0x10)
	struct TArray<struct FFortGameplayDataTrackedRange> TrackedRanges; // 0x18(0x10)
	float CurrentValue; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortGameplayDataTrackedRange
// Size: 0xc0 (Inherited: 0x00)
struct FFortGameplayDataTrackedRange {
	struct FGameplayTag RangeTag; // 0x00(0x08)
	struct FFortGameplayDataTrackerThreshold LowerThreshold; // 0x08(0x50)
	struct FFortGameplayDataTrackerThreshold UpperThreshold; // 0x58(0x50)
	struct FMulticastInlineDelegate RangeChangedInternalDelegate; // 0xa8(0x10)
	bool bIsCurrentlyInRange; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
};

// ScriptStruct FortniteGame.FortGameplayDataTrackerThreshold
// Size: 0x50 (Inherited: 0x00)
struct FFortGameplayDataTrackerThreshold {
	struct FScalableFloat EnterValue; // 0x00(0x28)
	struct FScalableFloat ExitValue; // 0x28(0x28)
};

// ScriptStruct FortniteGame.FortGameplayDataTrackerAccumulationContributor
// Size: 0x38 (Inherited: 0x00)
struct FFortGameplayDataTrackerAccumulationContributor {
	struct FGameplayTag EventTag; // 0x00(0x08)
	struct FScalableFloat EventValueMultiplier; // 0x08(0x28)
	float CurrentValue; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// ScriptStruct FortniteGame.FortGameplayDataTrackerEventValue
// Size: 0x0c (Inherited: 0x00)
struct FFortGameplayDataTrackerEventValue {
	struct FGameplayTag EventTag; // 0x00(0x08)
	float Value; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortGameplayDataTrackerActorStateGroupConfig
// Size: 0x38 (Inherited: 0x00)
struct FFortGameplayDataTrackerActorStateGroupConfig {
	struct TArray<SoftClassProperty> RelevantActorClasses; // 0x00(0x10)
	bool bAllowDBNOPawns; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct TArray<struct FFortGameplayDataTrackerActorStateConfig> StateConfigs; // 0x18(0x10)
	struct TArray<struct FFortGameplayDataTrackerTrackedActorState> ActorStates; // 0x28(0x10)
};

// ScriptStruct FortniteGame.FortGameplayDataTrackerTrackedActorState
// Size: 0x28 (Inherited: 0x00)
struct FFortGameplayDataTrackerTrackedActorState {
	struct AActor* TrackedActor; // 0x00(0x08)
	struct AFortPawn* TrackedActorAsPawn; // 0x08(0x08)
	struct ABuildingActor* TrackedActorAsBuilding; // 0x10(0x08)
	struct FGameplayTag CurrentState; // 0x18(0x08)
	bool bHasUnprocessedStateEntry; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
};

// ScriptStruct FortniteGame.FortGameplayDataTrackerActorStateConfig
// Size: 0x270 (Inherited: 0x00)
struct FFortGameplayDataTrackerActorStateConfig {
	struct FGameplayTag StateTag; // 0x00(0x08)
	struct FGameplayTag EventTag; // 0x08(0x08)
	struct FScalableFloat ShouldUseDistanceCheck; // 0x10(0x28)
	struct FScalableFloat ShouldInterpolateValueOverDistance; // 0x38(0x28)
	struct FScalableFloat DistanceNear; // 0x60(0x28)
	struct FScalableFloat DistanceFar; // 0x88(0x28)
	struct FScalableFloat DistancePercentLerpExponent; // 0xb0(0x28)
	struct FScalableFloat ShouldUseDotProductTest; // 0xd8(0x28)
	struct FScalableFloat DotProductComparisonValue; // 0x100(0x28)
	struct FScalableFloat DotProductFalureMultiplier; // 0x128(0x28)
	struct FScalableFloat ShouldHaveFirstEntryEvent; // 0x150(0x28)
	struct FGameplayTag FirstEntryEvent; // 0x178(0x08)
	struct FScalableFloat FirstEntryEventGuaranteedRange; // 0x180(0x28)
	struct FScalableFloat FirstEntryEventNearComparisonRange; // 0x1a8(0x28)
	struct FScalableFloat FirstEntryEventTrackedActorFacingNearDotProductComparisonValue; // 0x1d0(0x28)
	struct FScalableFloat FirstEntryEventTrackedActorFacingFarDotProductComparisonValue; // 0x1f8(0x28)
	struct FScalableFloat FirstEntryEventAvatarActorFacingNearDotProductComparisonValue; // 0x220(0x28)
	struct FScalableFloat FirstEntryEventAvatarActorFacingFarDotProductComparisonValue; // 0x248(0x28)
};

// ScriptStruct FortniteGame.FortGameplayDataTrackerEventConfiguration
// Size: 0x38 (Inherited: 0x00)
struct FFortGameplayDataTrackerEventConfiguration {
	struct FGameplayTag EventTag; // 0x00(0x08)
	struct FScalableFloat CoolDownRate; // 0x08(0x28)
	enum class EFortGameplayDataTrackerEventContributionType ContributionType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// ScriptStruct FortniteGame.FortGameplayDataTrackerRegisteredActorData
// Size: 0x18 (Inherited: 0x00)
struct FFortGameplayDataTrackerRegisteredActorData {
	struct FGameplayTag CurrentStateTag; // 0x00(0x08)
	char pad_8[0x10]; // 0x08(0x10)
};

// ScriptStruct FortniteGame.OverlapRestrictions
// Size: 0x0c (Inherited: 0x00)
struct FOverlapRestrictions {
	int32_t OverlapsPerActor; // 0x00(0x04)
	struct FGameplayTag OverlapActorTagRestrictions; // 0x04(0x08)
};

// ScriptStruct FortniteGame.GameplayFeedbackEventParams
// Size: 0x40 (Inherited: 0x00)
struct FGameplayFeedbackEventParams {
	struct FGameplayTag EventTag; // 0x00(0x08)
	struct FUniqueNetIdRepl InstigatorPlayerId; // 0x08(0x28)
	struct FVector EventLocation; // 0x30(0x0c)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.GameplayFeedbackEventInfo
// Size: 0x50 (Inherited: 0x00)
struct FGameplayFeedbackEventInfo {
	struct FString DisplayText; // 0x00(0x10)
	struct FGameplayTag EventTag; // 0x10(0x08)
	enum class EAthenaGameMsgType MsgType; // 0x18(0x01)
	bool bTeamBasedEvent; // 0x19(0x01)
	char pad_1A[0x6]; // 0x1a(0x06)
	struct TArray<struct FText> FriendlyEventMessages; // 0x20(0x10)
	struct TArray<struct FText> HostileEventMessages; // 0x30(0x10)
	struct TArray<struct FText> NeutralEventMessages; // 0x40(0x10)
};

// ScriptStruct FortniteGame.FortPendingReceiverReg
// Size: 0x28 (Inherited: 0x00)
struct FFortPendingReceiverReg {
	char pad_0[0x8]; // 0x00(0x08)
	struct FGameplayTagContainer ChannelIds; // 0x08(0x20)
};

// ScriptStruct FortniteGame.FortMessageChannelInfo
// Size: 0x20 (Inherited: 0x00)
struct FFortMessageChannelInfo {
	char pad_0[0x20]; // 0x00(0x20)
};

// ScriptStruct FortniteGame.FortTriggeredGameplayMessage
// Size: 0x18 (Inherited: 0x00)
struct FFortTriggeredGameplayMessage {
	struct UFortGameplayTriggerMessageComponent* Sender; // 0x00(0x08)
	struct FGameplayTag ChannelId; // 0x08(0x08)
	struct TWeakObjectPtr<struct AController> TriggerInstigator; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortGameplayMessageTriggerList
// Size: 0x10 (Inherited: 0x00)
struct FFortGameplayMessageTriggerList {
	struct TArray<struct UFortGameplayTriggerMessageComponent*> Triggers; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortGameplayMessageReceiverList
// Size: 0x10 (Inherited: 0x00)
struct FFortGameplayMessageReceiverList {
	struct TArray<struct UFortGameplayReceiverMessageComponent*> Receivers; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortEncounterMutatorReplacedTag
// Size: 0x40 (Inherited: 0x00)
struct FFortEncounterMutatorReplacedTag {
	struct FGameplayTagContainer TagsToRemove; // 0x00(0x20)
	struct FGameplayTagContainer TagsToAdd; // 0x20(0x20)
};

// ScriptStruct FortniteGame.SetCVarParams
// Size: 0x20 (Inherited: 0x00)
struct FSetCVarParams {
	struct FName CVarName; // 0x00(0x08)
	enum class ESetCVarType Type; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	float NumberValue; // 0x0c(0x04)
	struct FString StringValue; // 0x10(0x10)
};

// ScriptStruct FortniteGame.TierTags
// Size: 0x30 (Inherited: 0x00)
struct FTierTags {
	struct FGameplayTag TagForTier[0x6]; // 0x00(0x30)
};

// ScriptStruct FortniteGame.GameRewardOverridesInfo
// Size: 0x40 (Inherited: 0x08)
struct FGameRewardOverridesInfo : FTableRowBase {
	struct FString MissionName; // 0x08(0x10)
	struct FString OverrideRewardsTag; // 0x18(0x10)
	int32_t LootLevel; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct FString LootTierGroup; // 0x30(0x10)
};

// ScriptStruct FortniteGame.MeshServiceMetadata
// Size: 0x01 (Inherited: 0x00)
struct FMeshServiceMetadata {
	char pad_0[0x1]; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortDisconnectedPlayerReservation
// Size: 0x38 (Inherited: 0x00)
struct FFortDisconnectedPlayerReservation {
	struct FName SessionName; // 0x00(0x08)
	struct FUniqueNetIdRepl PlayerID; // 0x08(0x28)
	char pad_30[0x8]; // 0x30(0x08)
};

// ScriptStruct FortniteGame.FortHostSessionParams
// Size: 0x0c (Inherited: 0x00)
struct FFortHostSessionParams {
	struct FName SessionName; // 0x00(0x08)
	int32_t ControllerId; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortBanHammerStrike
// Size: 0x60 (Inherited: 0x00)
struct FFortBanHammerStrike {
	struct FUniqueNetIdRepl AccountId; // 0x00(0x28)
	struct FString Reason; // 0x28(0x10)
	enum class EFortBanHammerNotificationAction Action; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct FString Source; // 0x40(0x10)
	struct FString Offense; // 0x50(0x10)
};

// ScriptStruct FortniteGame.ClientIdRestrictions
// Size: 0x20 (Inherited: 0x00)
struct FClientIdRestrictions {
	struct FString ClientId; // 0x00(0x10)
	struct TArray<struct FString> RestrictedPlatforms; // 0x10(0x10)
};

// ScriptStruct FortniteGame.PlaylistStreamedLevelData
// Size: 0x18 (Inherited: 0x00)
struct FPlaylistStreamedLevelData {
	char pad_0[0x10]; // 0x00(0x10)
	bool bIsFinishedStreaming; // 0x10(0x01)
	bool bIsServerOnly; // 0x11(0x01)
	char pad_12[0x6]; // 0x12(0x06)
};

// ScriptStruct FortniteGame.DynamicCompositeWorld
// Size: 0x70 (Inherited: 0x00)
struct FDynamicCompositeWorld {
	struct TSoftObjectPtr<struct UWorld> MainCompositeWorld; // 0x00(0x28)
	struct TArray<struct TSoftObjectPtr<struct UWorld>> AdditionalCompositeWorlds; // 0x28(0x10)
	struct FString CalendarEventName; // 0x38(0x10)
	struct FName CameraName; // 0x48(0x08)
	enum class EFrontEndCamera CameraOverride; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	float GetDefaultLevelTransitionTime; // 0x54(0x04)
	bool bStreamInOnDemand; // 0x58(0x01)
	char pad_59[0x3]; // 0x59(0x03)
	struct FGameplayTag StreamingInLevelTag; // 0x5c(0x08)
	struct FGameplayTag StreamingOutLevelTag; // 0x64(0x08)
	bool bStreamInLevel; // 0x6c(0x01)
	bool bLevelStreamedIn; // 0x6d(0x01)
	char pad_6E[0x2]; // 0x6e(0x02)
};

// ScriptStruct FortniteGame.AnalyticsNavActorClickedData
// Size: 0x30 (Inherited: 0x00)
struct FAnalyticsNavActorClickedData {
	struct FGameplayTag InteractionCamera; // 0x00(0x08)
	struct FGameplayTagContainer InteractionActor; // 0x08(0x20)
	struct FName HumanReadable; // 0x28(0x08)
};

// ScriptStruct FortniteGame.NavIndicatorTextList
// Size: 0x18 (Inherited: 0x00)
struct FNavIndicatorTextList {
	struct FGameplayTag ListName; // 0x00(0x08)
	struct TArray<struct FText> IndicatorTextList; // 0x08(0x10)
};

// ScriptStruct FortniteGame.HiddenActors
// Size: 0x18 (Inherited: 0x00)
struct FHiddenActors {
	struct FGameplayTag RewardEventGraphNode; // 0x00(0x08)
	struct TArray<struct TWeakObjectPtr<struct AActor>> HiddenActors; // 0x08(0x10)
};

// ScriptStruct FortniteGame.DynaimcLevelStreamingLocations
// Size: 0x40 (Inherited: 0x00)
struct FDynaimcLevelStreamingLocations {
	struct FTransform LoadLocation; // 0x00(0x30)
	struct FName StreamingLevelPackageName; // 0x30(0x08)
	char pad_38[0x8]; // 0x38(0x08)
};

// ScriptStruct FortniteGame.FortFrontendCompositeLevel
// Size: 0x18 (Inherited: 0x00)
struct FFortFrontendCompositeLevel {
	struct FName StreamingLevelPackageName; // 0x00(0x08)
	struct TArray<struct ULevelStreaming*> StreamingLevels; // 0x08(0x10)
};

// ScriptStruct FortniteGame.DynamicStreamingLevelData
// Size: 0x14 (Inherited: 0x00)
struct FDynamicStreamingLevelData {
	struct FName LevelPackageName; // 0x00(0x08)
	enum class EFrontEndCamera CameraOverride; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	struct FName CameraName; // 0x0c(0x08)
};

// ScriptStruct FortniteGame.MiniMapDataOverride
// Size: 0x80 (Inherited: 0x00)
struct FMiniMapDataOverride {
	struct FGameplayTagContainer ContextTags; // 0x00(0x20)
	struct FSlateFontInfo LocationFont; // 0x20(0x58)
	enum class EMapLocationStateType StateType; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// ScriptStruct FortniteGame.MiniMapDataOverrideRepData
// Size: 0x40 (Inherited: 0x00)
struct FMiniMapDataOverrideRepData {
	struct FGameplayTagContainer ContextTags; // 0x00(0x20)
	struct FGameplayTagContainer LocationTags; // 0x20(0x20)
};

// ScriptStruct FortniteGame.PickupManagedActorBucket
// Size: 0x18 (Inherited: 0x00)
struct FPickupManagedActorBucket {
	char pad_0[0x18]; // 0x00(0x18)
};

// ScriptStruct FortniteGame.ManagedActorInfo
// Size: 0x0c (Inherited: 0x00)
struct FManagedActorInfo {
	char pad_0[0xc]; // 0x00(0x0c)
};

// ScriptStruct FortniteGame.PickupManagementSettings
// Size: 0x14 (Inherited: 0x00)
struct FPickupManagementSettings {
	int32_t PickupsAllowedMax; // 0x00(0x04)
	int32_t PickupsDesiredSlack; // 0x04(0x04)
	float PickupDespawnDelaySeconds; // 0x08(0x04)
	bool bDebugPickupManagement; // 0x0c(0x01)
	bool bEnablePickupManagement; // 0x0d(0x01)
	enum class EFortRarity NotJunkPickupThreshold; // 0x0e(0x01)
	enum class EFortRarity ImportantPickupThreshold; // 0x0f(0x01)
	bool bFlagPlayerDropsAsImportant; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
};

// ScriptStruct FortniteGame.BountyQuestSettings
// Size: 0x100 (Inherited: 0x00)
struct FBountyQuestSettings {
	bool bSetTargetForSquad; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TSoftObjectPtr<struct UFortQuestItemDefinition> TargetQuestToGrantPtr; // 0x08(0x28)
	bool bGrantProtectorQuests; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct TSoftObjectPtr<struct UFortQuestItemDefinition> ProtectorQuestToGrantPtr; // 0x38(0x28)
	struct FScalableFloat MediumThreatRange; // 0x60(0x28)
	struct FScalableFloat HighThreatRange; // 0x88(0x28)
	struct FScalableFloat ThreatRefreshRate; // 0xb0(0x28)
	struct TSoftObjectPtr<struct UTexture2D> NPCIcon; // 0xd8(0x28)
};

// ScriptStruct FortniteGame.RadiusTrackingInfo
// Size: 0x78 (Inherited: 0x00)
struct FRadiusTrackingInfo {
	struct FRadiusTrackingInitializer RadiusTrackingStaticValues; // 0x00(0x58)
	char pad_58[0x20]; // 0x58(0x20)
};

// ScriptStruct FortniteGame.RadiusTrackingInitializer
// Size: 0x58 (Inherited: 0x00)
struct FRadiusTrackingInitializer {
	float MaxCenterOffset; // 0x00(0x04)
	float MinimumRadius; // 0x04(0x04)
	float MaximumRadius; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct UMaterialInterface* CircleDrawingMaterial; // 0x10(0x08)
	float TimeBetweenUpdatesInSeconds; // 0x18(0x04)
	float RadiusAmountToShrinkEachUpdate; // 0x1c(0x04)
	struct FLinearColor CircleColor; // 0x20(0x10)
	enum class ERadiusTrackingGroupingType GroupingType; // 0x30(0x01)
	char pad_31[0x27]; // 0x31(0x27)
};

// ScriptStruct FortniteGame.RadiusTrackingGroupKey
// Size: 0x04 (Inherited: 0x00)
struct FRadiusTrackingGroupKey {
	char pad_0[0x4]; // 0x00(0x04)
};

// ScriptStruct FortniteGame.HordeDifficultyTierInfo
// Size: 0x10 (Inherited: 0x00)
struct FHordeDifficultyTierInfo {
	struct FName DifficultyTierName; // 0x00(0x08)
	struct UFortQuestItemDefinition* QuestPrerequisite; // 0x08(0x08)
};

// ScriptStruct FortniteGame.PlayerBuildableClassFilter
// Size: 0x10 (Inherited: 0x00)
struct FPlayerBuildableClassFilter {
	enum class EFortResourceType ResourceType; // 0x00(0x01)
	enum class EFortBuildingType BuildingType; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	int32_t Level; // 0x04(0x04)
	struct UBuildingEditModeMetadata* EditModeMetadata; // 0x08(0x08)
};

// ScriptStruct FortniteGame.RecentPlayerEncounter
// Size: 0x40 (Inherited: 0x00)
struct FRecentPlayerEncounter {
	struct FUniqueNetIdRepl UserId; // 0x00(0x28)
	struct FDateTime EncounterTime; // 0x28(0x08)
	char pad_30[0x10]; // 0x30(0x10)
};

// ScriptStruct FortniteGame.RecentPlayerEncounterSerialized
// Size: 0x68 (Inherited: 0x40)
struct FRecentPlayerEncounterSerialized : FRecentPlayerEncounter {
	struct FUniqueNetIdRepl LocalUserId; // 0x40(0x28)
};

// ScriptStruct FortniteGame.FortScalabilityModeSettings
// Size: 0x58 (Inherited: 0x00)
struct FFortScalabilityModeSettings {
	char pad_0[0x58]; // 0x00(0x58)
};

// ScriptStruct FortniteGame.FortSimpleGameStats
// Size: 0x20 (Inherited: 0x00)
struct FFortSimpleGameStats {
	int32_t GamesPlayed; // 0x00(0x04)
	int32_t SecondsPlayed; // 0x04(0x04)
	int32_t KillCount; // 0x08(0x04)
	int32_t BestResult; // 0x0c(0x04)
	struct FDateTime LastReviewPromptDay; // 0x10(0x08)
	int32_t CampaignGamesPlayed; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.SavedCredentials
// Size: 0x28 (Inherited: 0x00)
struct FSavedCredentials {
	enum class ESavedAccountType Type; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FString ID; // 0x08(0x10)
	struct FString Token; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortGenericDataStoreMapWrapper
// Size: 0x50 (Inherited: 0x00)
struct FFortGenericDataStoreMapWrapper {
	struct TMap<struct FName, struct UObject*> NamedStoreMap; // 0x00(0x50)
};

// ScriptStruct FortniteGame.XPEventEntryHotfix
// Size: 0x10 (Inherited: 0x00)
struct FXPEventEntryHotfix {
	struct FName Entry; // 0x00(0x08)
	int32_t CountThreshhold; // 0x08(0x04)
	int32_t MaxCount; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.ChallengeSuppressedHotfix
// Size: 0x14 (Inherited: 0x00)
struct FChallengeSuppressedHotfix {
	struct FName Quest; // 0x00(0x08)
	bool bSuppressed; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	struct FName Replacing; // 0x0c(0x08)
};

// ScriptStruct FortniteGame.ChallengeObjectiveHotfix
// Size: 0x18 (Inherited: 0x00)
struct FChallengeObjectiveHotfix {
	struct FName Quest; // 0x00(0x08)
	struct FName Stat; // 0x08(0x08)
	int32_t Count; // 0x10(0x04)
	int32_t NewCount; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortGlobalActionDetails
// Size: 0x0c (Inherited: 0x00)
struct FFortGlobalActionDetails {
	struct FName ActionName; // 0x00(0x08)
	bool HoldStatus; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.SubGameAccess
// Size: 0x03 (Inherited: 0x00)
struct FSubGameAccess {
	enum class ESubGame SubGame; // 0x00(0x01)
	enum class ESubGameAccessStatus AccessStatus; // 0x01(0x01)
	enum class ESubGameMatchmakingStatus MatchmakingStatus; // 0x02(0x01)
};

// ScriptStruct FortniteGame.VoiceChatLogSubmitOptions
// Size: 0x28 (Inherited: 0x00)
struct FVoiceChatLogSubmitOptions {
	bool bSubmitLogs; // 0x00(0x01)
	bool bSubmitSecondaryLogs; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	int32_t LogTailKb; // 0x04(0x04)
	struct TArray<struct FVoiceChatLogUploadRule> IncludeRules; // 0x08(0x10)
	struct TArray<struct FVoiceChatLogUploadRule> ExcludeRules; // 0x18(0x10)
};

// ScriptStruct FortniteGame.VoiceChatLogUploadRule
// Size: 0x28 (Inherited: 0x00)
struct FVoiceChatLogUploadRule {
	float LogSubmitChance; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FString VoiceEvent; // 0x08(0x10)
	struct FString ErrorCode; // 0x18(0x10)
};

// ScriptStruct FortniteGame.KairosSubmitLogOptions
// Size: 0x30 (Inherited: 0x00)
struct FKairosSubmitLogOptions {
	struct FString Type; // 0x00(0x10)
	bool bSubmitLogs; // 0x10(0x01)
	bool bSubmitSecondaryLogs; // 0x11(0x01)
	char pad_12[0x2]; // 0x12(0x02)
	int32_t LogTailKb; // 0x14(0x04)
	float LogSubmitChance; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct TArray<struct FString> SubmitErrors; // 0x20(0x10)
};

// ScriptStruct FortniteGame.PurchaseFailureLogSubmitOptions
// Size: 0x20 (Inherited: 0x00)
struct FPurchaseFailureLogSubmitOptions {
	bool bSubmitLogs; // 0x00(0x01)
	bool bSubmitSecondaryLogs; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	int32_t LogTailKb; // 0x04(0x04)
	float LogSubmitChance; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct TArray<struct FString> DoNotUploadReasons; // 0x10(0x10)
};

// ScriptStruct FortniteGame.LogoutLogSubmitOptions
// Size: 0x20 (Inherited: 0x00)
struct FLogoutLogSubmitOptions {
	bool bSubmitLogs; // 0x00(0x01)
	bool bSubmitSecondaryLogs; // 0x01(0x01)
	bool bSubmitLogsDuringLogin; // 0x02(0x01)
	char pad_3[0x1]; // 0x03(0x01)
	int32_t LogTailKb; // 0x04(0x04)
	float LogSubmitChance; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct TArray<struct FString> DoNotUploadReasons; // 0x10(0x10)
};

// ScriptStruct FortniteGame.LoginFailureLogSubmitOptions
// Size: 0x20 (Inherited: 0x00)
struct FLoginFailureLogSubmitOptions {
	bool bSubmitLogs; // 0x00(0x01)
	bool bSubmitSecondaryLogs; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	int32_t LogTailKb; // 0x04(0x04)
	float LogSubmitChance; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct TArray<enum class ELoginResult> DoNotUploadReasons; // 0x10(0x10)
};

// ScriptStruct FortniteGame.PartyFailureLogSubmit
// Size: 0x18 (Inherited: 0x00)
struct FPartyFailureLogSubmit {
	bool bSubmitLogs; // 0x00(0x01)
	bool bSubmitSecondaryLogs; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	int32_t LogTailKb; // 0x04(0x04)
	struct TArray<struct FPartyFailureLogSubmitReason> Reasons; // 0x08(0x10)
};

// ScriptStruct FortniteGame.PartyFailureLogSubmitReason
// Size: 0x28 (Inherited: 0x00)
struct FPartyFailureLogSubmitReason {
	struct FString Reason; // 0x00(0x10)
	struct FString SubReason; // 0x10(0x10)
	float LogSubmitChance; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.ContentInstallError
// Size: 0x28 (Inherited: 0x00)
struct FContentInstallError {
	struct FString ErrorCode; // 0x00(0x10)
	struct FText ErrorText; // 0x10(0x18)
};

// ScriptStruct FortniteGame.GoatVehicleBoostLevel
// Size: 0x08 (Inherited: 0x00)
struct FGoatVehicleBoostLevel {
	float AccumulationPercent; // 0x00(0x04)
	float BoostTime; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortHealthBarComponentData
// Size: 0x18 (Inherited: 0x00)
struct FFortHealthBarComponentData {
	struct FText DisplayText; // 0x00(0x18)
};

// ScriptStruct FortniteGame.FortHelpAdditionalContent
// Size: 0xa0 (Inherited: 0x00)
struct FFortHelpAdditionalContent {
	enum class EFortHelpContentLocation ContentLocation; // 0x00(0x01)
	bool ShowAdditionalImage; // 0x01(0x01)
	char pad_2[0x6]; // 0x02(0x06)
	struct FSlateBrush ImageToDisplay; // 0x08(0x88)
	bool ShowAdditionalWidget; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
	struct UUserWidget* WidgetToDisplay; // 0x98(0x08)
};

// ScriptStruct FortniteGame.HeroKeywordDisplayData
// Size: 0x20 (Inherited: 0x00)
struct FHeroKeywordDisplayData {
	struct FGameplayTag KeyWordGameplayTag; // 0x00(0x08)
	struct FText KeywordDisplayName; // 0x08(0x18)
};

// ScriptStruct FortniteGame.HeroPerkDefaultRequirements
// Size: 0x0c (Inherited: 0x00)
struct FHeroPerkDefaultRequirements {
	enum class EFortItemTier MinimumHeroTier; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t MinimumHeroLevel; // 0x04(0x04)
	enum class EFortRarity MinimumHeroRarity; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.HeroSubclassAttributeData
// Size: 0x30 (Inherited: 0x00)
struct FHeroSubclassAttributeData {
	struct FGameplayTagContainer HeroClassAndSubclassTags; // 0x00(0x20)
	struct TArray<struct FHeroSubclassRarityAttributeData> AttributeInitKeysPerRarity; // 0x20(0x10)
};

// ScriptStruct FortniteGame.HeroSubclassRarityAttributeData
// Size: 0x10 (Inherited: 0x00)
struct FHeroSubclassRarityAttributeData {
	struct TArray<struct FFortAttributeInitializationKey> AttributeInitKeysPerTier; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortTeamPerkSlotFilteringData
// Size: 0x0c (Inherited: 0x00)
struct FFortTeamPerkSlotFilteringData {
	char pad_0[0xc]; // 0x00(0x0c)
};

// ScriptStruct FortniteGame.FortHeroGameplayPiece
// Size: 0x98 (Inherited: 0x00)
struct FFortHeroGameplayPiece {
	struct TSoftObjectPtr<struct UFortAbilityKit> GrantedAbilityKit; // 0x00(0x28)
	struct FGameplayTagQuery RequiredCommanderTagQuery; // 0x28(0x48)
	struct FText CommanderRequirementsText; // 0x70(0x18)
	bool bUseGlobalDefaultMinima; // 0x88(0x01)
	enum class EFortItemTier MinimumHeroTier; // 0x89(0x01)
	char pad_8A[0x2]; // 0x8a(0x02)
	int32_t MinimumHeroLevel; // 0x8c(0x04)
	enum class EFortRarity MinimumHeroRarity; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
};

// ScriptStruct FortniteGame.FortHeroTierAbilityKit
// Size: 0x30 (Inherited: 0x00)
struct FFortHeroTierAbilityKit {
	struct TSoftObjectPtr<struct UFortAbilityKit> GrantedAbilityKit; // 0x00(0x28)
	enum class EFortRarity MinimumHeroRarity; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// ScriptStruct FortniteGame.HeroItem
// Size: 0x78 (Inherited: 0x00)
struct FHeroItem {
	struct TSoftObjectPtr<struct UFortWorldItemDefinition> Item; // 0x00(0x28)
	int32_t Quantity; // 0x28(0x04)
	enum class EFortReplenishmentType Replenishment; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
	struct FGameplayTagContainer RequiredGPTags; // 0x30(0x20)
	struct FGameplayTagContainer SwapTag; // 0x50(0x20)
	bool bShowInAbilityScreen; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// ScriptStruct FortniteGame.HeroAbilityKit
// Size: 0x50 (Inherited: 0x00)
struct FHeroAbilityKit {
	struct TSoftObjectPtr<struct UFortAbilityKit> InherentAbilityKit; // 0x00(0x28)
	struct FGameplayTagContainer RequiredGPTags; // 0x28(0x20)
	bool bShowInAbilityScreen; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// ScriptStruct FortniteGame.FortHexMapCoord
// Size: 0x0c (Inherited: 0x00)
struct FFortHexMapCoord {
	int32_t Horizontal; // 0x00(0x04)
	int32_t Vertical; // 0x04(0x04)
	int32_t Depth; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortZoneEvent
// Size: 0x20 (Inherited: 0x00)
struct FFortZoneEvent {
	struct FName EventType; // 0x00(0x08)
	struct UObject* EventFocus; // 0x08(0x08)
	struct UDataAsset* EventContent; // 0x10(0x08)
	struct AActor* EventInstigator; // 0x18(0x08)
};

// ScriptStruct FortniteGame.HighlightObjectData
// Size: 0x78 (Inherited: 0x00)
struct FHighlightObjectData {
	struct FGameplayTagContainer HighlightTags; // 0x00(0x20)
	struct FName FriendlyStencilName; // 0x20(0x08)
	struct FName EnemyStencilName; // 0x28(0x08)
	char FriendlyStencilIndex; // 0x30(0x01)
	char EnemyStencilIndex; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
	struct UParticleSystem* Effect; // 0x38(0x08)
	float OverlapRadius; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct TArray<enum class EObjectTypeQuery> ObjectTypes; // 0x48(0x10)
	struct AActor* ActorClassFilter; // 0x58(0x08)
	struct TArray<struct AActor*> PreviouslyOverlappingActors; // 0x60(0x10)
	bool bIgnoreDistanceCheck; // 0x70(0x01)
	bool bOnlyHighlightOwningActor; // 0x71(0x01)
	char pad_72[0x6]; // 0x72(0x06)
};

// ScriptStruct FortniteGame.HomebaseNodeState
// Size: 0x08 (Inherited: 0x00)
struct FHomebaseNodeState {
	bool bIsOwned; // 0x00(0x01)
	bool bAreCostsPayable; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	int32_t Level; // 0x04(0x04)
};

// ScriptStruct FortniteGame.WorkerSetBonusState
// Size: 0x10 (Inherited: 0x00)
struct FWorkerSetBonusState {
	struct FGameplayTag SetBonusTag; // 0x00(0x08)
	int32_t CurrentMatchCount; // 0x08(0x04)
	int32_t RequiredMatchCountToActivate; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.WorkerSetBonusData
// Size: 0x38 (Inherited: 0x00)
struct FWorkerSetBonusData {
	struct FGameplayTag SetBonusTypeTag; // 0x00(0x08)
	struct FText DisplayName; // 0x08(0x18)
	int32_t RequiredWorkersCount; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
	struct UGameplayEffect* SetBonusEffect; // 0x28(0x08)
	int32_t SelectionWeight; // 0x30(0x04)
	int32_t PowerPoints; // 0x34(0x04)
};

// ScriptStruct FortniteGame.ManagerSynergyData
// Size: 0x18 (Inherited: 0x00)
struct FManagerSynergyData {
	struct FGameplayTag SynergyTypeTag; // 0x00(0x08)
	struct TArray<struct FWorkerGenderData> GenderData; // 0x08(0x10)
};

// ScriptStruct FortniteGame.WorkerGenderData
// Size: 0x18 (Inherited: 0x00)
struct FWorkerGenderData {
	enum class EFortCustomGender Gender; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FWorkerPortraitData> PotraitData; // 0x08(0x10)
};

// ScriptStruct FortniteGame.WorkerPortraitData
// Size: 0x28 (Inherited: 0x00)
struct FWorkerPortraitData {
	struct TSoftObjectPtr<struct UFortItemIconDefinition> Portrait; // 0x00(0x28)
};

// ScriptStruct FortniteGame.WorkerPersonalityData
// Size: 0x38 (Inherited: 0x00)
struct FWorkerPersonalityData {
	struct FGameplayTag PersonalityTypeTag; // 0x00(0x08)
	struct FText PersonalityName; // 0x08(0x18)
	int32_t SelectionWeight; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
	struct TArray<struct FWorkerGenderData> GenderData; // 0x28(0x10)
};

// ScriptStruct FortniteGame.ExpeditionSlot
// Size: 0x20 (Inherited: 0x08)
struct FExpeditionSlot : FTableRowBase {
	struct FGameplayTag SlotTag; // 0x08(0x08)
	struct FString LootTierGroup; // 0x10(0x10)
};

// ScriptStruct FortniteGame.HomebaseSquadSlotId
// Size: 0x0c (Inherited: 0x00)
struct FHomebaseSquadSlotId {
	struct FName SquadId; // 0x00(0x08)
	int32_t SquadSlotIndex; // 0x08(0x04)
};

// ScriptStruct FortniteGame.HomebaseNodeGameplayEffectDataTableRow
// Size: 0x110 (Inherited: 0x08)
struct FHomebaseNodeGameplayEffectDataTableRow : FTableRowBase {
	struct FGameplayAttribute Attribute; // 0x08(0x38)
	enum class EGameplayModOp Operation; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float Magnitude; // 0x44(0x04)
	struct FGameplayTagContainer ApplicationRequiredTagsContainer; // 0x48(0x20)
	struct FGameplayTagContainer RequiredSourceTagsContainer; // 0x68(0x20)
	struct FGameplayTagContainer RequiredTargetTagsContainer; // 0x88(0x20)
	struct FGameplayTagContainer GrantedTagsContainer; // 0xa8(0x20)
	struct FGameplayTagContainer IgnoreSourceTagsContainer; // 0xc8(0x20)
	struct FGameplayTagContainer AssetTagsContainer; // 0xe8(0x20)
	int32_t AssociatedGEIdx; // 0x108(0x04)
	int32_t AssociatedModifierIdx; // 0x10c(0x04)
};

// ScriptStruct FortniteGame.HomebaseNodeLevel
// Size: 0x68 (Inherited: 0x00)
struct FHomebaseNodeLevel {
	struct FName DisplayDataId; // 0x00(0x08)
	int32_t MinCommanderLevel; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct TArray<struct FFortItemQuantityPair> Cost; // 0x10(0x10)
	struct TArray<struct FName> GameplayEffectRowNames; // 0x20(0x10)
	struct TSoftObjectPtr<struct UFortAbilityKit> AbilityKit; // 0x30(0x28)
	struct TArray<struct FHomebaseSquadSlotId> UnlockedSquadSlots; // 0x58(0x10)
};

// ScriptStruct FortniteGame.HomebaseBannerColorData
// Size: 0x20 (Inherited: 0x08)
struct FHomebaseBannerColorData : FTableRowBase {
	struct FName ColorKeyName; // 0x08(0x08)
	struct FName CategoryRowName; // 0x10(0x08)
	int32_t SubCategoryGroup; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.HomebaseBannerIconData
// Size: 0x98 (Inherited: 0x08)
struct FHomebaseBannerIconData : FTableRowBase {
	struct TSoftObjectPtr<struct UTexture2D> SmallImage; // 0x08(0x28)
	struct TSoftObjectPtr<struct UTexture2D> LargeImage; // 0x30(0x28)
	struct FName CategoryRowName; // 0x58(0x08)
	struct FText DisplayName; // 0x60(0x18)
	struct FText DisplayDescription; // 0x78(0x18)
	char bFullUsageRights : 1; // 0x90(0x01)
	char pad_90_1 : 7; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
};

// ScriptStruct FortniteGame.HomebaseBannerCategoryData
// Size: 0x28 (Inherited: 0x08)
struct FHomebaseBannerCategoryData : FTableRowBase {
	struct FText CategoryDisplayName; // 0x08(0x18)
	int32_t SortPriority; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.HomebaseBannerColor
// Size: 0x20 (Inherited: 0x00)
struct FHomebaseBannerColor {
	struct FLinearColor PrimaryColor; // 0x00(0x10)
	struct FLinearColor SecondaryColor; // 0x10(0x10)
};

// ScriptStruct FortniteGame.HookGunRopeRepData
// Size: 0x10 (Inherited: 0x00)
struct FHookGunRopeRepData {
	struct TWeakObjectPtr<struct AFortWeapon> Weapon; // 0x00(0x08)
	struct TWeakObjectPtr<struct AFortProjectileBase> Projectile; // 0x08(0x08)
};

// ScriptStruct FortniteGame.TeamMapInfo
// Size: 0x48 (Inherited: 0x00)
struct FTeamMapInfo {
	struct TArray<char> ReplicatedSeedPack; // 0x00(0x10)
	char pad_10[0x34]; // 0x10(0x34)
	char TeamId; // 0x44(0x01)
	char pad_45[0x3]; // 0x45(0x03)
};

// ScriptStruct FortniteGame.TeamMapExplorationEvent
// Size: 0x02 (Inherited: 0x00)
struct FTeamMapExplorationEvent {
	char TeamId; // 0x00(0x01)
	int8_t ExplorationThreshold; // 0x01(0x01)
};

// ScriptStruct FortniteGame.InputEventBinding
// Size: 0x0c (Inherited: 0x00)
struct FInputEventBinding {
	struct FName ActionName; // 0x00(0x08)
	enum class EInputEvent InputEvent; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.ScreenLabelText
// Size: 0x30 (Inherited: 0x00)
struct FScreenLabelText {
	struct FText NormalText; // 0x00(0x18)
	struct FText RichText; // 0x18(0x18)
};

// ScriptStruct FortniteGame.FortInstensityCurveSequenceProgression
// Size: 0x18 (Inherited: 0x00)
struct FFortInstensityCurveSequenceProgression {
	struct UFortIntensityCurveSequence* CurveSequence; // 0x00(0x08)
	struct FCurveTableRowHandle SelectionWeight; // 0x08(0x10)
};

// ScriptStruct FortniteGame.InteractionType
// Size: 0x38 (Inherited: 0x00)
struct FInteractionType {
	enum class TInteractionType InteractionType; // 0x00(0x01)
	enum class EInteractionBeingAttempted InteractionBeingAttempted; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	struct TWeakObjectPtr<struct AFortPlayerPawn> RequestingPawn; // 0x04(0x08)
	struct TWeakObjectPtr<struct AFortPlayerController> RequestingPlayerController; // 0x0c(0x08)
	char pad_14[0x8]; // 0x14(0x08)
	struct TWeakObjectPtr<struct UPrimitiveComponent> InteractComponent; // 0x1c(0x08)
	struct TWeakObjectPtr<struct UObject> OptionalObjectData; // 0x24(0x08)
	struct FVector InteractPoint; // 0x2c(0x0c)
};

// ScriptStruct FortniteGame.InteriorAudioScanResults
// Size: 0x28 (Inherited: 0x00)
struct FInteriorAudioScanResults {
	char pad_0[0x28]; // 0x00(0x28)
};

// ScriptStruct FortniteGame.InteriorAudioPlayerInfo
// Size: 0x110 (Inherited: 0x00)
struct FInteriorAudioPlayerInfo {
	char pad_0[0x1]; // 0x00(0x01)
	enum class EInteriorAudioState CurrentState; // 0x01(0x01)
	char pad_2[0x32]; // 0x02(0x32)
	struct FGameplayTag CurrentRoomSizeTag; // 0x34(0x08)
	char pad_3C[0x14]; // 0x3c(0x14)
	struct UAmbientAudioDataAsset* CurrentAmbientBank; // 0x50(0x08)
	struct UAmbientAudioDataAsset* PreviousAmbientBank; // 0x58(0x08)
	struct TMap<enum class EInteriorAudioBuildingDirection, struct FInteriorAudioDirectionScanInfo> Directions; // 0x60(0x50)
	struct TMap<enum class EStructuralWallPosition, struct ABuildingSMActor*> StartingWalls; // 0xb0(0x50)
	struct ABuildingSMActor* CenterCellActor; // 0x100(0x08)
	enum class EInteriorAudioQuadrant Quadrant; // 0x108(0x01)
	char pad_109[0x7]; // 0x109(0x07)
};

// ScriptStruct FortniteGame.InteriorAudioDirectionScanInfo
// Size: 0xa0 (Inherited: 0x00)
struct FInteriorAudioDirectionScanInfo {
	struct FInteriorAudioBuildingInfo Building; // 0x00(0x40)
	char pad_40[0x50]; // 0x40(0x50)
	struct UAudioComponent* SourceBusComponent; // 0x90(0x08)
	struct ABuildingSMActor* SourceBusActor; // 0x98(0x08)
};

// ScriptStruct FortniteGame.InteriorAudioBuildingInfo
// Size: 0x40 (Inherited: 0x00)
struct FInteriorAudioBuildingInfo {
	struct ABuildingSMActor* Actor; // 0x00(0x08)
	char pad_8[0x38]; // 0x08(0x38)
};

// ScriptStruct FortniteGame.InteriorAudioDictionary
// Size: 0x10 (Inherited: 0x00)
struct FInteriorAudioDictionary {
	struct TArray<struct FInteriorAudioDictionaryEntry> Entries; // 0x00(0x10)
};

// ScriptStruct FortniteGame.InteriorAudioDictionaryEntry
// Size: 0x48 (Inherited: 0x00)
struct FInteriorAudioDictionaryEntry {
	struct FString EditCode; // 0x00(0x10)
	int32_t Tags; // 0x10(0x04)
	enum class EInteriorAudioBuildingEvaluation DefaultEvaluation; // 0x14(0x01)
	enum class EInteriorAudioBuildingEvaluation ConditionalEvaluation; // 0x15(0x01)
	char pad_16[0x2]; // 0x16(0x02)
	struct FInteriorAudioBuildingRotationConstraint RotationConstraint; // 0x18(0x1c)
	int32_t BuildingWeights[0x5]; // 0x34(0x14)
};

// ScriptStruct FortniteGame.InteriorAudioBuildingRotationConstraint
// Size: 0x1c (Inherited: 0x00)
struct FInteriorAudioBuildingRotationConstraint {
	enum class EInteriorAudioBuildingDefaultRotation StartingOrientation; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float XScaleFlipRotation; // 0x04(0x04)
	float YScaleFlipRotation; // 0x08(0x04)
	int32_t Quadrant; // 0x0c(0x04)
	struct FVector DotProductComparisons; // 0x10(0x0c)
};

// ScriptStruct FortniteGame.InteriorAudioRoomSizeInfo
// Size: 0x0c (Inherited: 0x00)
struct FInteriorAudioRoomSizeInfo {
	float SizeRequired; // 0x00(0x04)
	struct FGameplayTag SizeTag; // 0x04(0x08)
};

// ScriptStruct FortniteGame.FortItemList
// Size: 0x1c8 (Inherited: 0x108)
struct FFortItemList : FFastArraySerializer {
	struct TArray<struct FFortItemEntry> ReplicatedEntries; // 0x108(0x10)
	char pad_118[0x50]; // 0x118(0x50)
	struct TArray<struct UFortWorldItem*> ItemInstances; // 0x168(0x10)
	char pad_178[0x50]; // 0x178(0x50)
};

// ScriptStruct FortniteGame.FortInventory_SaveEntryInt32
// Size: 0x08 (Inherited: 0x01)
struct FFortInventory_SaveEntryInt32 : FFortInventory_SaveEntryAttributeBase {
	char pad_1[0x3]; // 0x01(0x03)
	int32_t Value; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortInventory_SaveEntrySettings
// Size: 0x60 (Inherited: 0x00)
struct FFortInventory_SaveEntrySettings {
	bool bIncludeHealthAndShield; // 0x00(0x01)
	bool bIncludeClassSlot; // 0x01(0x01)
	bool bIncludeTeamIndex; // 0x02(0x01)
	char pad_3[0x5]; // 0x03(0x05)
	struct TMap<struct UFortMinigameStatFilter*, enum class EMinigameStatSavePolicy> MinigameScoreStats; // 0x08(0x50)
	bool bIncludeInventory; // 0x58(0x01)
	bool bIncludeResources; // 0x59(0x01)
	bool bIncludeCheckpoints; // 0x5a(0x01)
	bool bIncludePlayerLocation; // 0x5b(0x01)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// ScriptStruct FortniteGame.ItemCategoryMappingData
// Size: 0x20 (Inherited: 0x00)
struct FItemCategoryMappingData {
	enum class EFortItemType CategoryType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FText CategoryName; // 0x08(0x18)
};

// ScriptStruct FortniteGame.FortGiftGiver
// Size: 0x30 (Inherited: 0x28)
struct FFortGiftGiver : FFortGiftingInfo {
	int32_t NumItemsGiven; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortItemEntryTaggedIntegerData
// Size: 0x50 (Inherited: 0x00)
struct FFortItemEntryTaggedIntegerData {
	struct TMap<struct FGameplayTag, int32_t> TaggedIntegerMap; // 0x00(0x50)
};

// ScriptStruct FortniteGame.FortItemEntryAbilityData
// Size: 0x50 (Inherited: 0x00)
struct FFortItemEntryAbilityData {
	struct TMap<struct TWeakObjectPtr<struct UGameplayAbility>, float> AbilityCooldownMap; // 0x00(0x50)
};

// ScriptStruct FortniteGame.FortMeleeDeflectAnimData
// Size: 0x28 (Inherited: 0x00)
struct FFortMeleeDeflectAnimData {
	struct UAnimSequence* EntryFromGuardAnim; // 0x00(0x08)
	struct UAnimSequence* HoldAnim; // 0x08(0x08)
	struct UAnimSequence* ExitToGuardAnim; // 0x10(0x08)
	struct TArray<struct FFortMeleeDeflectTransitionAnimData> TransitionsToNextDeflection; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortMeleeDeflectTransitionAnimData
// Size: 0x10 (Inherited: 0x00)
struct FFortMeleeDeflectTransitionAnimData {
	struct UAnimSequence* TransitionAnim; // 0x00(0x08)
	int32_t NextDeflectDataIndex; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.CharacterDisplaySettings
// Size: 0x90 (Inherited: 0x00)
struct FCharacterDisplaySettings {
	char pad_0[0x8]; // 0x00(0x08)
	struct TWeakObjectPtr<struct UFortAccountItemDefinition> PrimaryItem; // 0x08(0x08)
	char pad_10[0x80]; // 0x10(0x80)
};

// ScriptStruct FortniteGame.ItemsForEventData
// Size: 0x70 (Inherited: 0x00)
struct FItemsForEventData {
	struct FString RequiredEventName; // 0x00(0x10)
	struct FEventItemNamedWeight EventItemNamedWeight; // 0x10(0x30)
	struct TArray<struct FPrimaryAssetId> ItemsToLoad; // 0x40(0x10)
	struct TArray<struct FString> GlobalTableHotfixSyntax; // 0x50(0x10)
	struct TArray<struct FEventHotfixForPlaylistData> PlaylistTableHotfixSyntax; // 0x60(0x10)
};

// ScriptStruct FortniteGame.EventHotfixForPlaylistData
// Size: 0x30 (Inherited: 0x00)
struct FEventHotfixForPlaylistData {
	struct FGameplayTagContainer PlaylistTags; // 0x00(0x20)
	struct TArray<struct FString> TableHotfixSyntax; // 0x20(0x10)
};

// ScriptStruct FortniteGame.EventItemNamedWeight
// Size: 0x30 (Inherited: 0x00)
struct FEventItemNamedWeight {
	struct FName WeightName; // 0x00(0x08)
	struct FScalableFloat WeightValue; // 0x08(0x28)
};

// ScriptStruct FortniteGame.FortItemToQuestData
// Size: 0x30 (Inherited: 0x08)
struct FFortItemToQuestData : FTableRowBase {
	struct FString ItemTemplateID; // 0x08(0x10)
	struct FString QuestTemplateId; // 0x18(0x10)
	enum class EFortQuestState QuestGrantState; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// ScriptStruct FortniteGame.ItemDefToItemVariantDataMapping
// Size: 0x30 (Inherited: 0x00)
struct FItemDefToItemVariantDataMapping {
	struct FGameplayTagContainer ItemDefinitionTags; // 0x00(0x20)
	struct UFortItemVariantData* ItemVariantData; // 0x20(0x08)
	struct FGameplayTag ItemVariantTag; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortVariantData
// Size: 0xc8 (Inherited: 0x00)
struct FFortVariantData {
	struct FText VariantName; // 0x00(0x18)
	struct TArray<struct TSoftObjectPtr<struct UMaterialInterface>> OverrideMaterials; // 0x18(0x10)
	struct FScalableFloat Weight; // 0x28(0x28)
	struct FGameplayTag ItemFilterTag; // 0x50(0x08)
	struct FGameplayTag CollectionTag; // 0x58(0x08)
	struct FGameplayTag AnalyticsTag; // 0x60(0x08)
	struct FGameplayTagContainer POITags; // 0x68(0x20)
	struct FGameplayTagContainer TODTags; // 0x88(0x20)
	struct FGameplayTagContainer RequiredTags; // 0xa8(0x20)
};

// ScriptStruct FortniteGame.ItemWrapSlotMetadata
// Size: 0x90 (Inherited: 0x00)
struct FItemWrapSlotMetadata {
	struct FGameplayTagQuery MatchCriteria; // 0x00(0x48)
	struct TArray<struct FItemWrapPreviewEntry> PreviewList; // 0x48(0x10)
	enum class EFortItemType PreviewListItemDefinitionType; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
	struct TSoftObjectPtr<struct UTexture2D> SlotImage; // 0x60(0x28)
	int32_t PreviewListSortOrder; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
};

// ScriptStruct FortniteGame.ItemWrapPreviewEntry
// Size: 0x110 (Inherited: 0x00)
struct FItemWrapPreviewEntry {
	struct TSoftObjectPtr<struct UObject> PreviewObject; // 0x00(0x28)
	struct TSoftObjectPtr<struct UObject> PreviewObjectAnimation; // 0x28(0x28)
	SoftClassProperty PreviewObjectAnimInstance; // 0x50(0x28)
	char pad_78[0x8]; // 0x78(0x08)
	struct FTransform PreviewTransform; // 0x80(0x30)
	int32_t WrapSectionMask; // 0xb0(0x04)
	char bPreviewUsingVehicleShader : 1; // 0xb4(0x01)
	char pad_B4_1 : 7; // 0xb4(0x01)
	char pad_B5[0x3]; // 0xb5(0x03)
	struct TSoftObjectPtr<struct UObject> PreviewObjectFiringAnimation; // 0xb8(0x28)
	struct TSoftObjectPtr<struct UObject> PreviewObjectMuzzleFlashParticleSystem; // 0xe0(0x28)
	char pad_108[0x8]; // 0x108(0x08)
};

// ScriptStruct FortniteGame.FortMaterialsPriorToOverride
// Size: 0x10 (Inherited: 0x00)
struct FFortMaterialsPriorToOverride {
	struct TArray<struct UMaterialInterface*> OwnedMaterials_AssumeExternalOrder; // 0x00(0x10)
};

// ScriptStruct FortniteGame.SpawnItemVariantParams
// Size: 0x68 (Inherited: 0x00)
struct FSpawnItemVariantParams {
	struct UFortWorldItemDefinition* WorldItemDefinition; // 0x00(0x08)
	struct FGameplayTagContainer RequiredTags; // 0x08(0x20)
	int32_t NumberToSpawn; // 0x28(0x04)
	struct FVector Position; // 0x2c(0x0c)
	struct FVector Direction; // 0x38(0x0c)
	int32_t OverrideMaxStackCount; // 0x44(0x04)
	bool bToss; // 0x48(0x01)
	bool bRandomRotation; // 0x49(0x01)
	bool bBlockedFromAutoPickup; // 0x4a(0x01)
	char pad_4B[0x1]; // 0x4b(0x01)
	int32_t PickupInstigatorHandle; // 0x4c(0x04)
	enum class EFortPickupSourceTypeFlag SourceType; // 0x50(0x01)
	enum class EFortPickupSpawnSource Source; // 0x51(0x01)
	char pad_52[0x6]; // 0x52(0x06)
	struct AFortPlayerController* OptionalOwnerPC; // 0x58(0x08)
	bool bPickupOnlyRelevantToOwner; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
};

// ScriptStruct FortniteGame.ServerLaunchInfo
// Size: 0x10 (Inherited: 0x00)
struct FServerLaunchInfo {
	float LaunchServerTime; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct APawn* LaunchedPawn; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortLayeredAudioFloatParam
// Size: 0x58 (Inherited: 0x00)
struct FFortLayeredAudioFloatParam {
	bool bEnabled; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FName Name; // 0x04(0x08)
	float Value; // 0x0c(0x04)
	enum class ELayeredAudioInterpolationType InterpType; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct UCurveFloat* Curve; // 0x18(0x08)
	float AttackSpeed; // 0x20(0x04)
	float ReleaseSpeed; // 0x24(0x04)
	struct FVector2D ParamRange; // 0x28(0x08)
	struct TArray<struct FFortLayeredAudioOneshotGate> Oneshots; // 0x30(0x10)
	struct UFortLayeredAudioComponent* Owner; // 0x40(0x08)
	char pad_48[0x10]; // 0x48(0x10)
};

// ScriptStruct FortniteGame.FortLayeredAudioOneshotGate
// Size: 0x28 (Inherited: 0x00)
struct FFortLayeredAudioOneshotGate {
	struct USoundBase* sound; // 0x00(0x08)
	float GateValue; // 0x08(0x04)
	enum class ELayeredAudioTriggerDir Direction; // 0x0c(0x01)
	bool FadeWhenOutsideGate; // 0x0d(0x01)
	char pad_E[0x2]; // 0x0e(0x02)
	float MinTimeSinceTrigger; // 0x10(0x04)
	float InterruptFadeTime; // 0x14(0x04)
	char pad_18[0x8]; // 0x18(0x08)
	struct UAudioComponent* AudioComp; // 0x20(0x08)
};

// ScriptStruct FortniteGame.McpLeaderboardResultRow
// Size: 0x40 (Inherited: 0x00)
struct FMcpLeaderboardResultRow {
	struct FUniqueNetIdRepl PlayerUniqueNetId; // 0x00(0x28)
	int32_t Rank; // 0x28(0x04)
	int32_t Value; // 0x2c(0x04)
	char pad_30[0x10]; // 0x30(0x10)
};

// ScriptStruct FortniteGame.LeaderboardRowData
// Size: 0x48 (Inherited: 0x00)
struct FLeaderboardRowData {
	int32_t Rank; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FString User; // 0x08(0x10)
	int32_t Value; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct FUniqueNetIdRepl PlatformAccountId; // 0x20(0x28)
};

// ScriptStruct FortniteGame.FortSourceWorldAndOverlayWorld
// Size: 0x60 (Inherited: 0x00)
struct FFortSourceWorldAndOverlayWorld {
	bool bSpecifySourceWorld; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TSoftObjectPtr<struct UWorld> SourceWorld; // 0x08(0x28)
	struct TSoftObjectPtr<struct UWorld> OverlayWorld; // 0x30(0x28)
	bool bServerOnly; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
};

// ScriptStruct FortniteGame.FortContentPackageRequest
// Size: 0x30 (Inherited: 0x00)
struct FFortContentPackageRequest {
	struct FString ProjectID; // 0x00(0x10)
	struct FVkModuleVersionRef Root; // 0x10(0x20)
};

// ScriptStruct FortniteGame.FortLevelStreamingData
// Size: 0x10 (Inherited: 0x00)
struct FFortLevelStreamingData {
	struct FName PackageName; // 0x00(0x08)
	struct FName UniquePackageName; // 0x08(0x08)
};

// ScriptStruct FortniteGame.LightOverrideSettings
// Size: 0x1c (Inherited: 0x00)
struct FLightOverrideSettings {
	enum class FLightOverrideLevel OverrideLevel; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float Intensity; // 0x04(0x04)
	float AttenuationRadius; // 0x08(0x04)
	bool CastsShadows; // 0x0c(0x01)
	bool UseInverseSquaredFalloff; // 0x0d(0x01)
	char pad_E[0x2]; // 0x0e(0x02)
	float LightFalloffExponent; // 0x10(0x04)
	float ShadowResolutionScale; // 0x14(0x04)
	float ShadowBias; // 0x18(0x04)
};

// ScriptStruct FortniteGame.FortEarlyAcessLoadingScreen
// Size: 0x2f8 (Inherited: 0x00)
struct FFortEarlyAcessLoadingScreen {
	struct FSlateBrush EABackground; // 0x00(0x88)
	struct FTextBlockStyle EATextStyle; // 0x88(0x270)
};

// ScriptStruct FortniteGame.FortPSALoadingScreen
// Size: 0x30 (Inherited: 0x00)
struct FFortPSALoadingScreen {
	int32_t PercentChance; // 0x00(0x04)
	int32_t MinimumGames; // 0x04(0x04)
	SoftClassProperty WidgetClass; // 0x08(0x28)
};

// ScriptStruct FortniteGame.FortSubGameLoadingScreen
// Size: 0x4b8 (Inherited: 0x00)
struct FFortSubGameLoadingScreen {
	struct TArray<struct UFortTips*> Tips; // 0x00(0x10)
	struct TSoftObjectPtr<struct UObject> BackgroundImage; // 0x10(0x28)
	struct FVector2D BackgroundDesiredSize; // 0x38(0x08)
	struct FLinearColor BackgroundColor; // 0x40(0x10)
	struct FFortLogoLoadingScreen LogoLoadingScreen; // 0x50(0x24)
	char pad_74[0x4]; // 0x74(0x04)
	struct FFortLoadingBlockScreen LoadingBlockScreen; // 0x78(0x430)
	struct FMargin SafeAreaMargin; // 0x4a8(0x10)
};

// ScriptStruct FortniteGame.FortLoadingBlockScreen
// Size: 0x430 (Inherited: 0x00)
struct FFortLoadingBlockScreen {
	struct FProgressBarStyle LoadingProgressBar; // 0x00(0x1a0)
	struct FMargin LoadingProgressBarPadding; // 0x1a0(0x10)
	struct FTextBlockStyle LoadingTextStyle; // 0x1b0(0x270)
	struct FMargin LoadingTextPadding; // 0x420(0x10)
};

// ScriptStruct FortniteGame.FortLogoLoadingScreen
// Size: 0x24 (Inherited: 0x00)
struct FFortLogoLoadingScreen {
	struct FLinearColor LogoColor; // 0x00(0x10)
	struct FMargin LogoPadding; // 0x10(0x10)
	float LogoSize; // 0x20(0x04)
};

// ScriptStruct FortniteGame.ProcessedTranslations
// Size: 0xe8 (Inherited: 0x00)
struct FProcessedTranslations {
	char pad_0[0xe8]; // 0x00(0xe8)
};

// ScriptStruct FortniteGame.ReplicatedLocalizedDocument
// Size: 0x30 (Inherited: 0x00)
struct FReplicatedLocalizedDocument {
	struct FString ID; // 0x00(0x10)
	struct FString SourceLang; // 0x10(0x10)
	struct TArray<struct FReplicatedTranslatedStrings> Strings; // 0x20(0x10)
};

// ScriptStruct FortniteGame.ReplicatedTranslatedStrings
// Size: 0x30 (Inherited: 0x00)
struct FReplicatedTranslatedStrings {
	struct FString ID; // 0x00(0x10)
	struct FString Name; // 0x10(0x10)
	struct TArray<struct FLocalizedStringPair> Translations; // 0x20(0x10)
};

// ScriptStruct FortniteGame.ReplicatedTranslatedString
// Size: 0x20 (Inherited: 0x00)
struct FReplicatedTranslatedString {
	struct FString Locale; // 0x00(0x10)
	struct FString Literal; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortLootGroupWeightData
// Size: 0x30 (Inherited: 0x00)
struct FFortLootGroupWeightData {
	struct FScalableFloat Weight; // 0x00(0x28)
	struct FGameplayTag LootRowRequiredTag; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortLootLevelData
// Size: 0x20 (Inherited: 0x08)
struct FFortLootLevelData : FTableRowBase {
	struct FName Category; // 0x08(0x08)
	int32_t LootLevel; // 0x10(0x04)
	int32_t MinItemLevel; // 0x14(0x04)
	int32_t MaxItemLevel; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortLootPackageData
// Size: 0xc8 (Inherited: 0x08)
struct FFortLootPackageData : FTableRowBase {
	struct FName LootPackageID; // 0x08(0x08)
	float Weight; // 0x10(0x04)
	struct FName NamedWeightMult; // 0x14(0x08)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct TArray<struct FName> PotentialNamedWeights; // 0x20(0x10)
	int32_t Count; // 0x30(0x04)
	int32_t LootPackageCategory; // 0x34(0x04)
	struct FGameplayTagContainer GameplayTags; // 0x38(0x20)
	struct FName RequiredTag; // 0x58(0x08)
	struct FString LootPackageCall; // 0x60(0x10)
	struct TSoftObjectPtr<struct UFortItemDefinition> ItemDefinition; // 0x70(0x28)
	struct FString PersistentLevel; // 0x98(0x10)
	int32_t MinWorldLevel; // 0xa8(0x04)
	int32_t MaxWorldLevel; // 0xac(0x04)
	bool bAllowBonusDrops; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)
	struct FString Annotation; // 0xb8(0x10)
};

// ScriptStruct FortniteGame.FortLootQuotaData
// Size: 0x28 (Inherited: 0x08)
struct FFortLootQuotaData : FTableRowBase {
	struct FName QuotaCategory; // 0x08(0x08)
	enum class ELootQuotaLevel QuotaLevel; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
	int32_t min; // 0x14(0x04)
	int32_t max; // 0x18(0x04)
	float Quota; // 0x1c(0x04)
	int32_t MinWorldLevel; // 0x20(0x04)
	int32_t MaxWorldLevel; // 0x24(0x04)
};

// ScriptStruct FortniteGame.FortLootTierData
// Size: 0xe0 (Inherited: 0x08)
struct FFortLootTierData : FTableRowBase {
	struct FName TierGroup; // 0x08(0x08)
	float Weight; // 0x10(0x04)
	enum class ELootQuotaLevel QuotaLevel; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
	int32_t LootTier; // 0x18(0x04)
	int32_t MinWorldLevel; // 0x1c(0x04)
	int32_t MaxWorldLevel; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
	struct FString StreakBreakerCurrency; // 0x28(0x10)
	int32_t StreakBreakerPointsMin; // 0x38(0x04)
	int32_t StreakBreakerPointsMax; // 0x3c(0x04)
	int32_t StreakBreakerPointsSpend; // 0x40(0x04)
	struct FName LootPackage; // 0x44(0x08)
	struct FName LootPreviewPackage; // 0x4c(0x08)
	float NumLootPackageDrops; // 0x54(0x04)
	struct TArray<int32_t> LootPackageCategoryWeightArray; // 0x58(0x10)
	struct TArray<int32_t> LootPackageCategoryMinArray; // 0x68(0x10)
	struct TArray<int32_t> LootPackageCategoryMaxArray; // 0x78(0x10)
	struct FGameplayTagContainer GameplayTags; // 0x88(0x20)
	struct FGameplayTagContainer RequiredGameplayTags; // 0xa8(0x20)
	bool bAllowBonusLootDrops; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct FString Annotation; // 0xd0(0x10)
};

// ScriptStruct FortniteGame.FortMangSentryInfo
// Size: 0x10 (Inherited: 0x00)
struct FFortMangSentryInfo {
	struct ABuildingGameplayActor* Sentry; // 0x00(0x08)
	enum class EAlertLevel CurrentSentryAlertLevel; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
};

// ScriptStruct FortniteGame.FortMangBotInfoArray
// Size: 0x120 (Inherited: 0x108)
struct FFortMangBotInfoArray : FFastArraySerializer {
	struct TArray<struct FFortMangBotInfo> Items; // 0x108(0x10)
	char pad_118[0x8]; // 0x118(0x08)
};

// ScriptStruct FortniteGame.FortMangBotInfo
// Size: 0x28 (Inherited: 0x0c)
struct FFortMangBotInfo : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct AFortAthenaAIBotController* BotController; // 0x10(0x08)
	struct AFortPawn* BotPawn; // 0x18(0x08)
	enum class EAlertLevel CurrentBotAlertLevel; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
};

// ScriptStruct FortniteGame.FortCachedMatchmakingSearchParams
// Size: 0xc8 (Inherited: 0x00)
struct FFortCachedMatchmakingSearchParams {
	enum class EFortMatchmakingType MatchmakingType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FMatchmakingParams MatchmakingParams; // 0x08(0xb8)
	bool bValid; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)
};

// ScriptStruct FortniteGame.MatchmakingParams
// Size: 0xb8 (Inherited: 0x00)
struct FMatchmakingParams {
	int32_t ControllerId; // 0x00(0x04)
	int32_t PartySize; // 0x04(0x04)
	struct FString DatacenterId; // 0x08(0x10)
	int32_t PlaylistId; // 0x18(0x04)
	char pad_1C[0x8]; // 0x1c(0x08)
	int32_t MatchmakingLevel; // 0x24(0x04)
	int32_t MissionDifficultyMin; // 0x28(0x04)
	int32_t MissionDifficultyMax; // 0x2c(0x04)
	enum class EStormShieldDefense StormShieldDefenseType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FString TheaterId; // 0x38(0x10)
	struct FString ZoneInstanceId; // 0x48(0x10)
	struct FString WUID; // 0x58(0x10)
	struct FUniqueNetIdRepl WorldOwnerId; // 0x68(0x28)
	struct FString SessionId; // 0x90(0x10)
	enum class EMatchmakingStartLocation StartWith; // 0xa0(0x01)
	enum class EMatchmakingFlags Flags; // 0xa1(0x01)
	char pad_A2[0x2]; // 0xa2(0x02)
	float ChanceToHostOverride; // 0xa4(0x04)
	float ChanceToHostIncrease; // 0xa8(0x04)
	int32_t NumAttempts; // 0xac(0x04)
	int32_t MaxSearchResultsOverride; // 0xb0(0x04)
	int32_t MaxProcessedSearchResults; // 0xb4(0x04)
};

// ScriptStruct FortniteGame.FortMatchmakingConfig
// Size: 0x10 (Inherited: 0x00)
struct FFortMatchmakingConfig {
	float ChanceToHostOverride; // 0x00(0x04)
	float ChanceToHostIncrease; // 0x04(0x04)
	int32_t MaxSearchResultsOverride; // 0x08(0x04)
	int32_t MaxProcessedSearchResults; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortInviteSessionParams
// Size: 0x38 (Inherited: 0x00)
struct FFortInviteSessionParams {
	enum class EMatchmakingState State; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FText FailureReason; // 0x08(0x18)
	enum class EPartyReservationResult LastBeaconResponse; // 0x20(0x01)
	char pad_21[0x17]; // 0x21(0x17)
};

// ScriptStruct FortniteGame.AthenaPlaylistEntry
// Size: 0x78 (Inherited: 0x00)
struct FAthenaPlaylistEntry {
	struct FString PlaylistName; // 0x00(0x10)
	struct FString DisplayName; // 0x10(0x10)
	struct FString DisplaySubName; // 0x20(0x10)
	struct FString Description; // 0x30(0x10)
	struct FString Violator; // 0x40(0x10)
	struct FString Image; // 0x50(0x10)
	struct TArray<struct FString> ExtraImages; // 0x60(0x10)
	int32_t CropOffset; // 0x70(0x04)
	enum class EFortMatchmakingTileStyle SpecialBorderId; // 0x74(0x01)
	bool bShowRevealAnimation; // 0x75(0x01)
	bool bIsCMSDataHidden; // 0x76(0x01)
	char pad_77[0x1]; // 0x77(0x01)
};

// ScriptStruct FortniteGame.ShowdownLatestTournamentData
// Size: 0x60 (Inherited: 0x00)
struct FShowdownLatestTournamentData {
	struct FString LastModified; // 0x00(0x10)
	struct TMap<struct FString, struct FShowdownTournamentEntry> Entries; // 0x10(0x50)
};

// ScriptStruct FortniteGame.ShowdownTournamentEntry
// Size: 0x1b0 (Inherited: 0x00)
struct FShowdownTournamentEntry {
	struct FString TournamentDisplayId; // 0x00(0x10)
	struct FString TitleLine1; // 0x10(0x10)
	struct FString TitleLine2; // 0x20(0x10)
	struct FString ScheduleInfo; // 0x30(0x10)
	struct FString PosterFrontImage; // 0x40(0x10)
	struct FString PosterBackImage; // 0x50(0x10)
	struct FString FlavorDescription; // 0x60(0x10)
	struct FString DetailsDescription; // 0x70(0x10)
	struct FString ShortFormatTitle; // 0x80(0x10)
	struct FString LongFormatTitle; // 0x90(0x10)
	struct FString BackgroundTitle; // 0xa0(0x10)
	int32_t PinScoreRequirement; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
	struct FString PinEarnedText; // 0xb8(0x10)
	struct FString BaseColor; // 0xc8(0x10)
	struct FString PrimaryColor; // 0xd8(0x10)
	struct FString SecondaryColor; // 0xe8(0x10)
	struct FString HighlightColor; // 0xf8(0x10)
	struct FString TitleColor; // 0x108(0x10)
	struct FString ShadowColor; // 0x118(0x10)
	struct FString BackgroundLeftColor; // 0x128(0x10)
	struct FString BackgroundRightColor; // 0x138(0x10)
	struct FString BackgroundTextColor; // 0x148(0x10)
	struct FString PosterFadeColor; // 0x158(0x10)
	struct FString PlaylistTileImage; // 0x168(0x10)
	struct FString LoadingScreenImage; // 0x178(0x10)
	struct FString StyleInfoId; // 0x188(0x10)
	struct FString AlertText; // 0x198(0x10)
	enum class EFortTournamentAlertType AlertType; // 0x1a8(0x01)
	char pad_1A9[0x7]; // 0x1a9(0x07)
};

// ScriptStruct FortniteGame.LatestLeaderboardData
// Size: 0x20 (Inherited: 0x00)
struct FLatestLeaderboardData {
	struct FString LastModified; // 0x00(0x10)
	struct TArray<struct FLeaderboardEntry> Entries; // 0x10(0x10)
};

// ScriptStruct FortniteGame.LeaderboardEntry
// Size: 0x28 (Inherited: 0x00)
struct FLeaderboardEntry {
	struct FString LeaderboardId; // 0x00(0x10)
	struct FString LeaderboardName; // 0x10(0x10)
	bool ShowDetailsPanel; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
};

// ScriptStruct FortniteGame.FortMatchmakingUtilityRequest
// Size: 0x58 (Inherited: 0x00)
struct FFortMatchmakingUtilityRequest {
	char pad_0[0x8]; // 0x00(0x08)
	struct FPlaylistFrontEndData DesiredPlaylist; // 0x08(0x28)
	struct FString PlaylistRegionForTournament; // 0x30(0x10)
	enum class EMatchmakingUtilityFlows FlowOverride; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct FString LinkCodeOverride; // 0x48(0x10)
};

// ScriptStruct FortniteGame.PlaylistFrontEndData
// Size: 0x28 (Inherited: 0x00)
struct FPlaylistFrontEndData {
	struct TWeakObjectPtr<struct UFortPlaylistAthena> WeakPlaylistData; // 0x00(0x08)
	char pad_8[0x10]; // 0x08(0x10)
	enum class EPlaylistVisibilityState Visibility; // 0x18(0x01)
	bool bDisplayAsDefault; // 0x19(0x01)
	enum class EPlaylistAdvertisementType AdvertiseType; // 0x1a(0x01)
	bool bDisplayAsLimitedTime; // 0x1b(0x01)
	int32_t CategoryIndex; // 0x1c(0x04)
	struct FDateTime EndDateUTC; // 0x20(0x08)
};

// ScriptStruct FortniteGame.FortMatchmakingErrorInfo
// Size: 0x28 (Inherited: 0x00)
struct FFortMatchmakingErrorInfo {
	enum class EMatchmakingErrorV2 Error; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FString ErrorCode; // 0x08(0x10)
	struct FString ResponseStr; // 0x18(0x10)
};

// ScriptStruct FortniteGame.MMSAltDomainRecord
// Size: 0x20 (Inherited: 0x00)
struct FMMSAltDomainRecord {
	struct FString OriginalDomain; // 0x00(0x10)
	struct FString AltDomain; // 0x10(0x10)
};

// ScriptStruct FortniteGame.MaterialReservation
// Size: 0x10 (Inherited: 0x00)
struct FMaterialReservation {
	char pad_0[0x8]; // 0x00(0x08)
	struct UMaterialInstanceDynamic* MaterialInstance; // 0x08(0x08)
};

// ScriptStruct FortniteGame.MaterialCacheSettings
// Size: 0x10 (Inherited: 0x08)
struct FMaterialCacheSettings : FTableRowBase {
	int32_t bDisable; // 0x08(0x04)
	struct FPerPlatformInt PlatformMaxCount; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortMcpCollectedCharacterProperties
// Size: 0x0c (Inherited: 0x00)
struct FFortMcpCollectedCharacterProperties {
	int32_t QuestsGiven; // 0x00(0x04)
	int32_t QuestsCompleted; // 0x04(0x04)
	char EncounterTypeFlags; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.FortMcpCollectedFishProperties
// Size: 0x08 (Inherited: 0x00)
struct FFortMcpCollectedFishProperties {
	float Weight; // 0x00(0x04)
	float Length; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortMcpCollectionsVariant
// Size: 0x20 (Inherited: 0x00)
struct FFortMcpCollectionsVariant {
	struct FString Category; // 0x00(0x10)
	struct FString Variant; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortMcpCollectionsBulkUpdateEntry
// Size: 0x58 (Inherited: 0x00)
struct FFortMcpCollectionsBulkUpdateEntry {
	struct FString Category; // 0x00(0x10)
	struct FString Variant; // 0x10(0x10)
	struct TArray<struct FString> ContextTags; // 0x20(0x10)
	struct FJsonObjectWrapper Properties; // 0x30(0x20)
	enum class EFortCollectedState SeenState; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	int32_t Count; // 0x54(0x04)
};

// ScriptStruct FortniteGame.FriendCodeLocString
// Size: 0x20 (Inherited: 0x00)
struct FFriendCodeLocString {
	struct FString Lang; // 0x00(0x10)
	struct FString Text; // 0x10(0x10)
};

// ScriptStruct FortniteGame.MtxPackage
// Size: 0xb0 (Inherited: 0x00)
struct FMtxPackage {
	struct FString StorefrontName; // 0x00(0x10)
	struct FString OfferId; // 0x10(0x10)
	struct FText Title; // 0x20(0x18)
	struct FText Description; // 0x38(0x18)
	int32_t TotalAmount; // 0x50(0x04)
	int32_t BonusAmount; // 0x54(0x04)
	struct FText Price; // 0x58(0x18)
	char pad_70[0x8]; // 0x70(0x08)
	struct FText SaleBasePrice; // 0x78(0x18)
	struct FString DisplayAssetPath; // 0x90(0x10)
	struct FString BannerOverride; // 0xa0(0x10)
};

// ScriptStruct FortniteGame.MtxBreakdown
// Size: 0x10 (Inherited: 0x00)
struct FMtxBreakdown {
	int32_t AvailableTotalMtx; // 0x00(0x04)
	int32_t AvailablePremiumMtx; // 0x04(0x04)
	int32_t UnavailableTotalMtx; // 0x08(0x04)
	int32_t UnavailablePremiumMtx; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortPhoenixLevelUpNotification
// Size: 0x48 (Inherited: 0x00)
struct FFortPhoenixLevelUpNotification {
	int32_t Level; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FFortLootNotification Loot; // 0x08(0x40)
};

// ScriptStruct FortniteGame.FortLootNotification
// Size: 0x40 (Inherited: 0x00)
struct FFortLootNotification {
	struct FString LootSource; // 0x00(0x10)
	struct FString LootSourceInstance; // 0x10(0x10)
	struct FMcpLootResult LootGranted; // 0x20(0x20)
};

// ScriptStruct FortniteGame.FortEventFlagsNotification
// Size: 0x18 (Inherited: 0x00)
struct FFortEventFlagsNotification {
	struct TArray<struct FString> EventFlags; // 0x00(0x10)
	struct FDateTime RefreshTime; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FriendCodeIssuedNotification
// Size: 0x20 (Inherited: 0x00)
struct FFriendCodeIssuedNotification {
	struct FString Code; // 0x00(0x10)
	struct FString CodeType; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortDifficultyIncreaseRewardRecord
// Size: 0x10 (Inherited: 0x00)
struct FFortDifficultyIncreaseRewardRecord {
	struct TArray<struct FFortDifficultyIncreaseRewardEntry> PendingRewards; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortDifficultyIncreaseRewardEntry
// Size: 0x28 (Inherited: 0x00)
struct FFortDifficultyIncreaseRewardEntry {
	int32_t DifficultyIncreaseTier; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FMcpLootResult DifficultyIncreaseMissionRewards; // 0x08(0x20)
};

// ScriptStruct FortniteGame.FortMissionAlertRecord
// Size: 0x30 (Inherited: 0x00)
struct FFortMissionAlertRecord {
	struct TArray<struct FFortMissionAlertClaimData> ClaimData; // 0x00(0x10)
	struct FMcpLootResult PendingMissionAlertRewards; // 0x10(0x20)
};

// ScriptStruct FortniteGame.FortMissionAlertClaimData
// Size: 0x20 (Inherited: 0x00)
struct FFortMissionAlertClaimData {
	struct FString MissionAlertID; // 0x00(0x10)
	struct FDateTime RedemptionDateUtc; // 0x10(0x08)
	struct FDateTime EvictClaimDataAfterUtc; // 0x18(0x08)
};

// ScriptStruct FortniteGame.FortCollectionBookResearchItemNotification
// Size: 0x20 (Inherited: 0x00)
struct FFortCollectionBookResearchItemNotification {
	struct FString ResearchedItemId; // 0x00(0x10)
	struct FString ResearchedTemplateId; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortCollectionBookUnslotItemNotification
// Size: 0x10 (Inherited: 0x00)
struct FFortCollectionBookUnslotItemNotification {
	struct FString UnslottedItemId; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortCollectionBookClaimRewardNotification
// Size: 0x40 (Inherited: 0x00)
struct FFortCollectionBookClaimRewardNotification {
	struct FMcpLootResult Loot; // 0x00(0x20)
	struct FString Page; // 0x20(0x10)
	struct FString Section; // 0x30(0x10)
};

// ScriptStruct FortniteGame.FortCollectionBookSlotItemNotification
// Size: 0x10 (Inherited: 0x00)
struct FFortCollectionBookSlotItemNotification {
	struct FString SlottedItemId; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortClaimedDifficultyIncreaseRewardNotification
// Size: 0x20 (Inherited: 0x00)
struct FFortClaimedDifficultyIncreaseRewardNotification {
	struct FMcpLootResult LootGranted; // 0x00(0x20)
};

// ScriptStruct FortniteGame.FortMissionAlertCompleteNotification
// Size: 0x20 (Inherited: 0x00)
struct FFortMissionAlertCompleteNotification {
	struct FMcpLootResult LootGranted; // 0x00(0x20)
};

// ScriptStruct FortniteGame.FortTransmogResultNotification
// Size: 0x20 (Inherited: 0x00)
struct FFortTransmogResultNotification {
	struct TArray<struct FMcpLootEntry> TransmoggedItems; // 0x00(0x10)
	struct TArray<struct FMcpLootEntry> RecycledItems; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortUpgradeItemRarityNotification
// Size: 0x10 (Inherited: 0x00)
struct FFortUpgradeItemRarityNotification {
	struct TArray<struct FMcpLootEntry> ItemsGranted; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortConversionResultNotification
// Size: 0x10 (Inherited: 0x00)
struct FFortConversionResultNotification {
	struct TArray<struct FMcpLootEntry> ItemsGranted; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortCollectedResourceNotification
// Size: 0x20 (Inherited: 0x00)
struct FFortCollectedResourceNotification {
	struct FMcpLootResult Loot; // 0x00(0x20)
};

// ScriptStruct FortniteGame.FortReceivedGiftedBoostXpNotification
// Size: 0x18 (Inherited: 0x00)
struct FFortReceivedGiftedBoostXpNotification {
	int32_t AmountBoostXpGifted; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FString GifterAccountId; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortEndMatchScoreNotification
// Size: 0x50 (Inherited: 0x00)
struct FFortEndMatchScoreNotification {
	struct TMap<struct FString, struct FFortEarnScoreNotification> scoreNotifications; // 0x00(0x50)
};

// ScriptStruct FortniteGame.FortEarnScoreNotification
// Size: 0x18 (Inherited: 0x00)
struct FFortEarnScoreNotification {
	int32_t BaseXPEarned; // 0x00(0x04)
	int32_t BonusXPEarned; // 0x04(0x04)
	int32_t BoostXPEarned; // 0x08(0x04)
	int32_t BoostXPMissed; // 0x0c(0x04)
	int32_t RestXPEarned; // 0x10(0x04)
	int32_t GroupBoostXPEarned; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortDailyQuestRerollNotification
// Size: 0x10 (Inherited: 0x00)
struct FFortDailyQuestRerollNotification {
	struct FString NewQuestId; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortQuestRewardNotification
// Size: 0x40 (Inherited: 0x00)
struct FFortQuestRewardNotification {
	struct FString QuestId; // 0x00(0x10)
	struct FMcpLootResult Loot; // 0x10(0x20)
	struct TArray<struct FFortQuestRewardData> QuestsAndRewards; // 0x30(0x10)
};

// ScriptStruct FortniteGame.FortQuestRewardData
// Size: 0x30 (Inherited: 0x00)
struct FFortQuestRewardData {
	struct FString QuestId; // 0x00(0x10)
	struct FMcpLootResult Loot; // 0x10(0x20)
};

// ScriptStruct FortniteGame.FortExpeditionResultNotification
// Size: 0x18 (Inherited: 0x00)
struct FFortExpeditionResultNotification {
	bool bExpeditionSucceeded; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FMcpLootEntry> ExpeditionRewards; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortGetMcpTimeForPlayerNotification
// Size: 0x08 (Inherited: 0x00)
struct FFortGetMcpTimeForPlayerNotification {
	struct FDateTime McpTime; // 0x00(0x08)
};

// ScriptStruct FortniteGame.CardPackResultNotification
// Size: 0x28 (Inherited: 0x00)
struct FCardPackResultNotification {
	struct FMcpLootResult LootGranted; // 0x00(0x20)
	int32_t DisplayLevel; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.FortNotificationLevelUp
// Size: 0x58 (Inherited: 0x00)
struct FFortNotificationLevelUp {
	int32_t Level; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FString HeroId; // 0x08(0x10)
	struct FFortLootNotification Loot; // 0x18(0x40)
};

// ScriptStruct FortniteGame.FortCraftingResultNotification
// Size: 0x10 (Inherited: 0x00)
struct FFortCraftingResultNotification {
	struct TArray<struct FMcpLootEntry> ItemsCrafted; // 0x00(0x10)
};

// ScriptStruct FortniteGame.ImportFriendsRewardNotification
// Size: 0x10 (Inherited: 0x00)
struct FImportFriendsRewardNotification {
	struct TArray<struct FMcpLootEntry> LootGranted; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortMissionCompletionNotification
// Size: 0x38 (Inherited: 0x00)
struct FFortMissionCompletionNotification {
	bool bWasCritical; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FString MissionName; // 0x08(0x10)
	struct FMcpLootResult LootGranted; // 0x18(0x20)
};

// ScriptStruct FortniteGame.FortInventorySnapshot
// Size: 0x20 (Inherited: 0x00)
struct FFortInventorySnapshot {
	struct FJsonObjectWrapper Stash; // 0x00(0x20)
};

// ScriptStruct FortniteGame.HardcoreModifierUpdate
// Size: 0x18 (Inherited: 0x00)
struct FHardcoreModifierUpdate {
	struct FString ModifierId; // 0x00(0x10)
	bool bEnabled; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.CompetitiveIdentity
// Size: 0x18 (Inherited: 0x00)
struct FCompetitiveIdentity {
	struct FDateTime LastUpdated; // 0x00(0x08)
	struct FString RegionId; // 0x08(0x10)
};

// ScriptStruct FortniteGame.AthenaSeasonEntry
// Size: 0x24 (Inherited: 0x00)
struct FAthenaSeasonEntry {
	int32_t BookLevel; // 0x00(0x04)
	int32_t BookXp; // 0x04(0x04)
	int32_t NumHighBracket; // 0x08(0x04)
	int32_t NumLowBracket; // 0x0c(0x04)
	int32_t NumWins; // 0x10(0x04)
	bool PurchasedVIP; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
	int32_t SeasonLevel; // 0x18(0x04)
	int32_t SeasonNumber; // 0x1c(0x04)
	int32_t SeasonXp; // 0x20(0x04)
};

// ScriptStruct FortniteGame.CommunityVoteInfo
// Size: 0x70 (Inherited: 0x00)
struct FCommunityVoteInfo {
	struct FString ElectionId; // 0x00(0x10)
	struct TMap<struct FString, struct FOfferVoteInfo> VoteHistory; // 0x10(0x50)
	struct FDateTime LastVoteGranted; // 0x60(0x08)
	int32_t VotesRemaining; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// ScriptStruct FortniteGame.OfferVoteInfo
// Size: 0x18 (Inherited: 0x00)
struct FOfferVoteInfo {
	struct FDateTime FirstVoteAt; // 0x00(0x08)
	struct FDateTime LastVoteAt; // 0x08(0x08)
	int32_t VoteCount; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.BattlePassOfferPurchaseRecord
// Size: 0x40 (Inherited: 0x00)
struct FBattlePassOfferPurchaseRecord {
	struct FString OfferId; // 0x00(0x10)
	struct FDateTime PurchaseDate; // 0x10(0x08)
	struct TArray<struct FMcpLootEntry> LootResult; // 0x18(0x10)
	struct FPrimaryAssetId CurrencyType; // 0x28(0x10)
	int32_t TotalCurrencyPaid; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.FortAthenaPastSeasonStats
// Size: 0x24 (Inherited: 0x00)
struct FFortAthenaPastSeasonStats {
	int32_t BookLevel; // 0x00(0x04)
	int32_t BookXp; // 0x04(0x04)
	int32_t NumHighBracket; // 0x08(0x04)
	int32_t NumLowBracket; // 0x0c(0x04)
	int32_t NumWins; // 0x10(0x04)
	int32_t PurchasesVIP; // 0x14(0x04)
	int32_t SeasonLevel; // 0x18(0x04)
	int32_t SeasonNumber; // 0x1c(0x04)
	int32_t SeasonXp; // 0x20(0x04)
};

// ScriptStruct FortniteGame.FortAthenaSeasonStats
// Size: 0x0c (Inherited: 0x00)
struct FFortAthenaSeasonStats {
	int32_t NumWins; // 0x00(0x04)
	int32_t NumHighBracket; // 0x04(0x04)
	int32_t NumLowBracket; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortAthenaItemCacheRecord
// Size: 0x10 (Inherited: 0x00)
struct FFortAthenaItemCacheRecord {
	struct UFortItemDefinition* ItemDef; // 0x00(0x08)
	char pad_8[0x8]; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortAthenaConsumableRecord
// Size: 0x10 (Inherited: 0x00)
struct FFortAthenaConsumableRecord {
	struct UFortAccountItemDefinition* ItemType; // 0x00(0x08)
	int32_t TotalQuantity; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.MtxPurchaseHistory
// Size: 0x18 (Inherited: 0x00)
struct FMtxPurchaseHistory {
	struct TArray<struct FMtxPurchaseHistoryEntry> Purchases; // 0x00(0x10)
	int32_t RefundCredits; // 0x10(0x04)
	int32_t RefundsUsed; // 0x14(0x04)
};

// ScriptStruct FortniteGame.MtxPurchaseHistoryEntry
// Size: 0x50 (Inherited: 0x00)
struct FMtxPurchaseHistoryEntry {
	struct FString PurchaseId; // 0x00(0x10)
	struct FString OfferId; // 0x10(0x10)
	struct FDateTime PurchaseDate; // 0x20(0x08)
	struct FDateTime RefundDate; // 0x28(0x08)
	bool FreeRefundEligible; // 0x30(0x01)
	bool bHasBeenRefunded; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
	struct TArray<struct FMcpLootEntry> LootResult; // 0x38(0x10)
	int32_t TotalMtxPaid; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// ScriptStruct FortniteGame.GiftHistory
// Size: 0x08 (Inherited: 0x00)
struct FGiftHistory {
	char pad_0[0x8]; // 0x00(0x08)
};

// ScriptStruct FortniteGame.FortCommonPublicPersona
// Size: 0x30 (Inherited: 0x00)
struct FFortCommonPublicPersona {
	struct FString BannerIconId; // 0x00(0x10)
	struct FString BannerColorId; // 0x10(0x10)
	struct FString HomebaseName; // 0x20(0x10)
};

// ScriptStruct FortniteGame.ItemTransferOperation
// Size: 0x28 (Inherited: 0x00)
struct FItemTransferOperation {
	struct FString ItemId; // 0x00(0x10)
	int32_t Quantity; // 0x10(0x04)
	bool ToStorage; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
	struct FString NewItemIdHint; // 0x18(0x10)
};

// ScriptStruct FortniteGame.ItemIdAndQuantityPair
// Size: 0x18 (Inherited: 0x00)
struct FItemIdAndQuantityPair {
	struct FString ItemId; // 0x00(0x10)
	int32_t Quantity; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortProfileAndQuestSaveIdPair
// Size: 0x30 (Inherited: 0x00)
struct FFortProfileAndQuestSaveIdPair {
	char pad_0[0x30]; // 0x00(0x30)
};

// ScriptStruct FortniteGame.FortBatchUpdatePlayer_DeployableBaseUpdate
// Size: 0x50 (Inherited: 0x00)
struct FFortBatchUpdatePlayer_DeployableBaseUpdate {
	struct FUniqueNetIdRepl AccountId; // 0x00(0x28)
	struct FString DeployableBaseItemId; // 0x28(0x10)
	struct FFortCloudSaveInfo CloudSaveInfo; // 0x38(0x18)
};

// ScriptStruct FortniteGame.FortBatchUpdatePlayer_Update
// Size: 0xf8 (Inherited: 0x00)
struct FFortBatchUpdatePlayer_Update {
	struct FUniqueNetIdRepl AccountId; // 0x00(0x28)
	int32_t TheaterNum; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct FMcpProfileChangeRequest TheaterItemUpdate; // 0x30(0x58)
	int32_t OutpostNum; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct FMcpProfileChangeRequest OutpostItemUpdate; // 0x90(0x58)
	struct TArray<struct FFortQuestObjectiveCompletion> QuestObjectiveUpdates; // 0xe8(0x10)
};

// ScriptStruct FortniteGame.FortWorldProfileUpdateRequest
// Size: 0xe8 (Inherited: 0x00)
struct FFortWorldProfileUpdateRequest {
	char pad_0[0x10]; // 0x00(0x10)
	struct TArray<struct UFortMcpProfileWorld*> WorldProfilesToSave; // 0x10(0x10)
	char pad_20[0x10]; // 0x20(0x10)
	int32_t NumberOfRequests; // 0x30(0x04)
	char pad_34[0xb4]; // 0x34(0xb4)
};

// ScriptStruct FortniteGame.FortWorldPlayerLoadout
// Size: 0x130 (Inherited: 0x00)
struct FFortWorldPlayerLoadout {
	bool bPlayerIsNew; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FQuickBar PrimaryQuickBarRecord; // 0x08(0x90)
	struct FQuickBar SecondaryQuickBarRecord; // 0x98(0x90)
	int32_t ZonesCompleted; // 0x128(0x04)
	char pad_12C[0x4]; // 0x12c(0x04)
};

// ScriptStruct FortniteGame.QuickBar
// Size: 0x90 (Inherited: 0x00)
struct FQuickBar {
	int32_t CurrentFocusedSlot; // 0x00(0x04)
	int32_t PreviousFocusedSlot; // 0x04(0x04)
	int32_t SecondaryFocusedSlot; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct TArray<struct FQuickBarSlot> Slots; // 0x10(0x10)
	struct FQuickBarData DataDefinition; // 0x20(0x10)
	struct TSet<struct UFortItemDefinition*> EquippedItemDefinitions; // 0x30(0x50)
	struct TArray<int32_t> SharedVisibleSlotIndicesWhenUsingGamepad; // 0x80(0x10)
};

// ScriptStruct FortniteGame.QuickBarSlot
// Size: 0x28 (Inherited: 0x00)
struct FQuickBarSlot {
	struct TArray<struct FGuid> Items; // 0x00(0x10)
	char bEnabled : 1; // 0x10(0x01)
	char bIsDirty : 1; // 0x10(0x01)
	char bIsReserved : 1; // 0x10(0x01)
	char bIsOccupied : 1; // 0x10(0x01)
	char pad_10_4 : 4; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
	int32_t UsedBySlotIndex; // 0x14(0x04)
	struct FGuid UsedByItemGuid; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortActiveSubscription
// Size: 0x88 (Inherited: 0x00)
struct FFortActiveSubscription {
	struct FDateTime NextRewardDate; // 0x00(0x08)
	struct FDateTime NextRenewalRewardDate; // 0x08(0x08)
	struct FDateTime LastRenewalRewardDate; // 0x10(0x08)
	struct FDateTime NextMonthlyRewardDate; // 0x18(0x08)
	struct FString NextMonthlyRewardLabel; // 0x20(0x10)
	struct FDateTime CurrentMonthlyRewardDate; // 0x30(0x08)
	struct FString CurrentMonthlyRewardLabel; // 0x38(0x10)
	struct FDateTime LastStatusRefresh; // 0x48(0x08)
	struct FDateTime MustRefreshAuthBy; // 0x50(0x08)
	struct FDateTime LastAuthRefresh; // 0x58(0x08)
	struct FDateTime SubscriptionEndDate; // 0x60(0x08)
	bool IsRetryingRenewal; // 0x68(0x01)
	bool WillAutoRenew; // 0x69(0x01)
	enum class EAppStore AppStore; // 0x6a(0x01)
	char pad_6B[0x5]; // 0x6b(0x05)
	struct FString UniqueSubscriptionId; // 0x70(0x10)
	char pad_80[0x8]; // 0x80(0x08)
};

// ScriptStruct FortniteGame.FortTwitchPendingQuestNotification
// Size: 0x10 (Inherited: 0x00)
struct FFortTwitchPendingQuestNotification {
	char pad_0[0x10]; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortTwitchViewerCompletedQuestNotification
// Size: 0x10 (Inherited: 0x00)
struct FFortTwitchViewerCompletedQuestNotification {
	struct TArray<struct FFortTwitchViewerNameAndAccountId> ViewerIds; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortTwitchViewerNameAndAccountId
// Size: 0x20 (Inherited: 0x00)
struct FFortTwitchViewerNameAndAccountId {
	struct FString TwitchViewerName; // 0x00(0x10)
	struct FString AccountId; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortTwitchViewerGrantedQuestNotification
// Size: 0x20 (Inherited: 0x00)
struct FFortTwitchViewerGrantedQuestNotification {
	struct FString QuestTemplateId; // 0x00(0x10)
	struct TArray<struct FFortTwitchViewerNameAndAccountId> ViewerIds; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortCharacterRanges
// Size: 0x30 (Inherited: 0x00)
struct FFortCharacterRanges {
	struct TArray<uint32_t> Ranges; // 0x00(0x10)
	struct TArray<uint32_t> SinglePoints; // 0x10(0x10)
	struct TArray<uint32_t> ExcludedPoints; // 0x20(0x10)
};

// ScriptStruct FortniteGame.McpMatchResults
// Size: 0x0c (Inherited: 0x00)
struct FMcpMatchResults {
	int32_t Placement; // 0x00(0x04)
	int32_t Kills; // 0x04(0x04)
	int32_t Deaths; // 0x08(0x04)
};

// ScriptStruct FortniteGame.QueryXboxUserXUIDParams
// Size: 0x10 (Inherited: 0x00)
struct FQueryXboxUserXUIDParams {
	struct FString UserXSTSToken; // 0x00(0x10)
};

// ScriptStruct FortniteGame.IssuedFriendCode
// Size: 0x28 (Inherited: 0x00)
struct FIssuedFriendCode {
	struct FString CodeId; // 0x00(0x10)
	struct FString CodeType; // 0x10(0x10)
	struct FDateTime DateCreated; // 0x20(0x08)
};

// ScriptStruct FortniteGame.XboxDedicatedServerSessionCreationParams
// Size: 0x30 (Inherited: 0x00)
struct FXboxDedicatedServerSessionCreationParams {
	struct FString TitleId; // 0x00(0x10)
	struct FString SandboxId; // 0x10(0x10)
	struct TArray<struct FString> XboxUserIds; // 0x20(0x10)
};

// ScriptStruct FortniteGame.PlayerToxicityReportRequest
// Size: 0xd0 (Inherited: 0x00)
struct FPlayerToxicityReportRequest {
	struct FString Reason; // 0x00(0x10)
	struct FString Details; // 0x10(0x10)
	struct FString ReporterGameSessionId; // 0x20(0x10)
	struct FString GameSessionId; // 0x30(0x10)
	struct FString Token; // 0x40(0x10)
	struct FString CreativeIslandSharingLink; // 0x50(0x10)
	struct FString CreativeIslandGuid; // 0x60(0x10)
	struct FString CreativeIslandOwnerAccountId; // 0x70(0x10)
	struct FString SubGameName; // 0x80(0x10)
	struct FString PlaylistName; // 0x90(0x10)
	bool bIsCompetitiveEvent; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
	struct FString ReporterPlatform; // 0xa8(0x10)
	struct FString OffenderPlatform; // 0xb8(0x10)
	bool bBlockUserRequested; // 0xc8(0x01)
	bool bUserMarkedAsKnown; // 0xc9(0x01)
	char pad_CA[0x6]; // 0xca(0x06)
};

// ScriptStruct FortniteGame.FortActiveTheaterInfo
// Size: 0x30 (Inherited: 0x00)
struct FFortActiveTheaterInfo {
	struct TArray<struct FFortTheaterMapData> Theaters; // 0x00(0x10)
	struct TArray<struct FFortAvailableTheaterMissions> Missions; // 0x10(0x10)
	struct TArray<struct FFortAvailableMissionAlerts> MissionAlerts; // 0x20(0x10)
};

// ScriptStruct FortniteGame.FortAvailableMissionAlerts
// Size: 0x28 (Inherited: 0x00)
struct FFortAvailableMissionAlerts {
	struct FString TheaterId; // 0x00(0x10)
	struct TArray<struct FFortAvailableMissionAlertData> AvailableMissionAlerts; // 0x10(0x10)
	struct FDateTime NextRefresh; // 0x20(0x08)
};

// ScriptStruct FortniteGame.FortAvailableMissionAlertData
// Size: 0x98 (Inherited: 0x00)
struct FFortAvailableMissionAlertData {
	struct FString CategoryName; // 0x00(0x10)
	struct FString SpreadDataName; // 0x10(0x10)
	struct FString MissionAlertGuid; // 0x20(0x10)
	int32_t TileIndex; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct FDateTime AvailableUntil; // 0x38(0x08)
	struct FDateTime RefreshSpreadAt; // 0x40(0x08)
	struct FMcpLootResult MissionAlertRewards; // 0x48(0x20)
	struct FMcpLootResult MissionAlertModifiers; // 0x68(0x20)
	struct TArray<struct UFortItemDefinition*> ItemDefinitionRefCache; // 0x88(0x10)
};

// ScriptStruct FortniteGame.FortAvailableTheaterMissions
// Size: 0x28 (Inherited: 0x00)
struct FFortAvailableTheaterMissions {
	struct FString TheaterId; // 0x00(0x10)
	struct TArray<struct FFortAvailableMissionData> AvailableMissions; // 0x10(0x10)
	struct FDateTime NextRefresh; // 0x20(0x08)
};

// ScriptStruct FortniteGame.FortAvailableMissionData
// Size: 0xa8 (Inherited: 0x00)
struct FFortAvailableMissionData {
	struct FString MissionGuid; // 0x00(0x10)
	struct FMcpLootResult MissionRewards; // 0x10(0x20)
	struct FMcpLootResult BonusMissionRewards; // 0x30(0x20)
	SoftClassProperty MissionGenerator; // 0x50(0x28)
	struct FDataTableRowHandle MissionDifficultyInfo; // 0x78(0x10)
	int32_t TileIndex; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct FDateTime AvailableUntil; // 0x90(0x08)
	struct TArray<struct UFortItemDefinition*> ItemDefinitionRefCache; // 0x98(0x10)
};

// ScriptStruct FortniteGame.FortTheaterMapData
// Size: 0x598 (Inherited: 0x00)
struct FFortTheaterMapData {
	struct FText DisplayName; // 0x00(0x18)
	struct FString UniqueId; // 0x18(0x10)
	int32_t TheaterSlot; // 0x28(0x04)
	bool bIsTestTheater; // 0x2c(0x01)
	bool bHideLikeTestTheater; // 0x2d(0x01)
	char pad_2E[0x2]; // 0x2e(0x02)
	struct FString RequiredEventFlag; // 0x30(0x10)
	struct FName MissionRewardNamedWeightsRowName; // 0x40(0x08)
	struct FText Description; // 0x48(0x18)
	struct FText ThreatDisplayName; // 0x60(0x18)
	struct FFortTheaterRuntimeData RuntimeInfo; // 0x78(0x500)
	struct TArray<struct FFortTheaterMapTileData> Tiles; // 0x578(0x10)
	struct TArray<struct FFortTheaterMapRegionData> Regions; // 0x588(0x10)
};

// ScriptStruct FortniteGame.FortTheaterMapRegionData
// Size: 0x118 (Inherited: 0x00)
struct FFortTheaterMapRegionData {
	struct FText DisplayName; // 0x00(0x18)
	struct FName UniqueId; // 0x18(0x08)
	struct FGameplayTagContainer RegionTags; // 0x20(0x20)
	struct TArray<int32_t> TileIndices; // 0x40(0x10)
	struct TSoftObjectPtr<struct USlateBrushAsset> RegionThemeIcon; // 0x50(0x28)
	struct FFortTheaterMapMissionData MissionData; // 0x78(0x30)
	struct FFortRequirementsInfo Requirements; // 0xa8(0x60)
	struct TArray<struct FFortMissionAlertRequirementsInfo> MissionAlertRequirements; // 0x108(0x10)
};

// ScriptStruct FortniteGame.FortMissionAlertRequirementsInfo
// Size: 0x68 (Inherited: 0x00)
struct FFortMissionAlertRequirementsInfo {
	struct FName CategoryName; // 0x00(0x08)
	struct FFortRequirementsInfo Requirements; // 0x08(0x60)
};

// ScriptStruct FortniteGame.FortTheaterMapMissionData
// Size: 0x30 (Inherited: 0x00)
struct FFortTheaterMapMissionData {
	struct TArray<struct FFortTheaterMissionWeight> MissionWeights; // 0x00(0x10)
	struct TArray<struct FFortTheaterDifficultyWeight> DifficultyWeights; // 0x10(0x10)
	int32_t NumMissionsAvailable; // 0x20(0x04)
	int32_t NumMissionsToChange; // 0x24(0x04)
	float MissionChangeFrequency; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortTheaterDifficultyWeight
// Size: 0x28 (Inherited: 0x00)
struct FFortTheaterDifficultyWeight {
	struct FDataTableRowHandle DifficultyInfo; // 0x00(0x10)
	struct FString LootTierGroup; // 0x10(0x10)
	float Weight; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.FortTheaterMissionWeight
// Size: 0x30 (Inherited: 0x00)
struct FFortTheaterMissionWeight {
	SoftClassProperty MissionGenerator; // 0x00(0x28)
	float Weight; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortTheaterMapTileData
// Size: 0xf0 (Inherited: 0x00)
struct FFortTheaterMapTileData {
	enum class EFortTheaterMapTileType TileType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	SoftClassProperty ZoneTheme; // 0x08(0x28)
	struct FFortRequirementsInfo Requirements; // 0x30(0x60)
	struct TArray<struct FFortLinkedQuest> LinkedQuests; // 0x90(0x10)
	int32_t XCoordinate; // 0xa0(0x04)
	int32_t YCoordinate; // 0xa4(0x04)
	struct TArray<struct FFortTheaterMissionWeight> MissionWeightOverrides; // 0xa8(0x10)
	struct TArray<struct FFortTheaterDifficultyWeight> DifficultyWeightOverrides; // 0xb8(0x10)
	bool CanBeMissionAlert; // 0xc8(0x01)
	bool bDisallowQuickplay; // 0xc9(0x01)
	char pad_CA[0x6]; // 0xca(0x06)
	struct FGameplayTagContainer TileTags; // 0xd0(0x20)
};

// ScriptStruct FortniteGame.FortLinkedQuest
// Size: 0x18 (Inherited: 0x00)
struct FFortLinkedQuest {
	struct UFortQuestItemDefinition* QuestDefinition; // 0x00(0x08)
	struct FDataTableRowHandle ObjectiveStatHandle; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortTheaterRuntimeData
// Size: 0x500 (Inherited: 0x00)
struct FFortTheaterRuntimeData {
	enum class EFortTheaterType TheaterType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FGameplayTagContainer TheaterTags; // 0x08(0x20)
	struct TArray<struct FEventDependentTag> EventDependentTheaterTags; // 0x28(0x10)
	struct FFortRequirementsInfo TheaterVisibilityRequirements; // 0x38(0x60)
	struct FFortRequirementsInfo Requirements; // 0x98(0x60)
	enum class ESubGame RequiredSubGameForVisibility; // 0xf8(0x01)
	bool bOnlyMatchLinkedQuestsToTiles; // 0xf9(0x01)
	char pad_FA[0x6]; // 0xfa(0x06)
	struct AWorldMapPin* WorldMapPinClass; // 0x100(0x08)
	struct UTexture2D* TheaterImage; // 0x108(0x08)
	struct FFortMultiSizeBrush TheaterImages; // 0x110(0x330)
	struct FFortTheaterColorInfo TheaterColorInfo; // 0x440(0x30)
	struct FName Socket; // 0x470(0x08)
	struct FFortRequirementsInfo MissionAlertRequirements; // 0x478(0x60)
	struct TArray<struct FFortMissionAlertRuntimeData> MissionAlertCategoryRequirements; // 0x4d8(0x10)
	struct TArray<struct FFortTheaterGameplayModifier> GameplayModifierList; // 0x4e8(0x10)
	float HighestDifficulty; // 0x4f8(0x04)
	char pad_4FC[0x4]; // 0x4fc(0x04)
};

// ScriptStruct FortniteGame.FortTheaterGameplayModifier
// Size: 0x18 (Inherited: 0x00)
struct FFortTheaterGameplayModifier {
	struct FString EventFlagName; // 0x00(0x10)
	struct UFortGameplayModifierItemDefinition* GameplayModifier; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortMissionAlertRuntimeData
// Size: 0x0c (Inherited: 0x00)
struct FFortMissionAlertRuntimeData {
	struct FName MissionAlertCategoryName; // 0x00(0x08)
	bool bRespectTileRequirements; // 0x08(0x01)
	bool bAllowQuickplay; // 0x09(0x01)
	char pad_A[0x2]; // 0x0a(0x02)
};

// ScriptStruct FortniteGame.FortTheaterColorInfo
// Size: 0x30 (Inherited: 0x00)
struct FFortTheaterColorInfo {
	bool bUseDifficultyToDetermineColor; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FSlateColor Color; // 0x08(0x28)
};

// ScriptStruct FortniteGame.EventDependentTag
// Size: 0x18 (Inherited: 0x00)
struct FEventDependentTag {
	struct FString RequiredEventFlag; // 0x00(0x10)
	struct FGameplayTag RelatedTag; // 0x10(0x08)
};

// ScriptStruct FortniteGame.MeatballInPersistent
// Size: 0x160 (Inherited: 0x138)
struct FMeatballInPersistent : FFortVehicleInPersistent {
	char pad_138[0x10]; // 0x138(0x10)
	struct UFortMeatballVehicleConfigs* FortMeatballVehicleConfigs; // 0x148(0x08)
	float TopSpeedCurrentMultiplier; // 0x150(0x04)
	float PushForceCurrentMultiplier; // 0x154(0x04)
	char pad_158[0x8]; // 0x158(0x08)
};

// ScriptStruct FortniteGame.CardSlotMedalData
// Size: 0x10 (Inherited: 0x00)
struct FCardSlotMedalData {
	struct UFortAccoladeItemDefinition* AccoladeForSlot; // 0x00(0x08)
	int32_t SlotIndex; // 0x08(0x04)
	bool bLoadedFromMcp; // 0x0c(0x01)
	bool bPunched; // 0x0d(0x01)
	char pad_E[0x2]; // 0x0e(0x02)
};

// ScriptStruct FortniteGame.MeshRegionLockData_Tracker
// Size: 0x10 (Inherited: 0x00)
struct FMeshRegionLockData_Tracker {
	struct TArray<struct FString> RegionLockDatas; // 0x00(0x10)
};

// ScriptStruct FortniteGame.MeshRegionLockData_Base
// Size: 0x18 (Inherited: 0x00)
struct FMeshRegionLockData_Base {
	struct FString RegionData; // 0x00(0x10)
	bool Replicated; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.MeshRegionLockData_String
// Size: 0x28 (Inherited: 0x18)
struct FMeshRegionLockData_String : FMeshRegionLockData_Base {
	struct FString Data; // 0x18(0x10)
};

// ScriptStruct FortniteGame.MeshRegionLockData_DateTime
// Size: 0x20 (Inherited: 0x18)
struct FMeshRegionLockData_DateTime : FMeshRegionLockData_Base {
	struct FDateTime Data; // 0x18(0x08)
};

// ScriptStruct FortniteGame.MeshRegionLockData_Int64
// Size: 0x20 (Inherited: 0x18)
struct FMeshRegionLockData_Int64 : FMeshRegionLockData_Base {
	int64_t Data; // 0x18(0x08)
};

// ScriptStruct FortniteGame.MeshRegionLockData_Int
// Size: 0x20 (Inherited: 0x18)
struct FMeshRegionLockData_Int : FMeshRegionLockData_Base {
	int32_t Data; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.MeshRegionLockData_Float
// Size: 0x20 (Inherited: 0x18)
struct FMeshRegionLockData_Float : FMeshRegionLockData_Base {
	float Data; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.MeshRegionLockData_Bool
// Size: 0x20 (Inherited: 0x18)
struct FMeshRegionLockData_Bool : FMeshRegionLockData_Base {
	bool Data; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
};

// ScriptStruct FortniteGame.MegaStormCircle
// Size: 0x60 (Inherited: 0x00)
struct FMegaStormCircle {
	struct FBuildingSupportCellIndex GridCenter; // 0x00(0x0c)
	int32_t NumCellsFromCenter; // 0x0c(0x04)
	int32_t CurrentQuadrant; // 0x10(0x04)
	struct FBuildingSupportCellIndex GridAt; // 0x14(0x0c)
	int32_t RadiusInGridCells; // 0x20(0x04)
	int32_t XAdvanceAccumulation; // 0x24(0x04)
	int32_t YAdvanceAccumulation; // 0x28(0x04)
	int32_t GridRadiusSquaredX4; // 0x2c(0x04)
	int32_t NumPlots; // 0x30(0x04)
	struct FVector WorldCenter; // 0x34(0x0c)
	float WorldRadius; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct TArray<struct TWeakObjectPtr<struct ABuildingSMActor>> ActorsInMegaStorm; // 0x48(0x10)
	enum class EMegaStormState MegaStormState; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
};

// ScriptStruct FortniteGame.MeshNetworkEventStateDataArray
// Size: 0x120 (Inherited: 0x108)
struct FMeshNetworkEventStateDataArray : FFastArraySerializer {
	struct AFortMeshNetworkEventsLoader* OwningLoader; // 0x108(0x08)
	struct TArray<struct FMeshNetworkEventStateData> StateData; // 0x110(0x10)
};

// ScriptStruct FortniteGame.MeshNetworkEventStateData
// Size: 0x50 (Inherited: 0x0c)
struct FMeshNetworkEventStateData : FFastArraySerializerItem {
	struct FName EventName; // 0x0c(0x08)
	char pad_14[0x4]; // 0x14(0x04)
	struct FDateTime EventStartTime; // 0x18(0x08)
	struct FString EventParameters; // 0x20(0x10)
	struct FGameplayTagContainer EventFilters; // 0x30(0x20)
};

// ScriptStruct FortniteGame.EventResponderTrackingItem
// Size: 0x18 (Inherited: 0x00)
struct FEventResponderTrackingItem {
	struct FName EventName; // 0x00(0x08)
	struct TArray<struct UFortEventResponderComponent*> EventResponders; // 0x08(0x10)
};

// ScriptStruct FortniteGame.NavAgentData
// Size: 0x28 (Inherited: 0x00)
struct FNavAgentData {
	struct FName AgentName; // 0x00(0x08)
	struct FCurveTableRowHandle BuildingActorHealthToNavAreaStrengthHandle; // 0x08(0x10)
	struct FCurveTableRowHandle PlayerBuiltBuildingActorHealthToNavAreaStrengthHandle; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortMigrationDataTableRow
// Size: 0x28 (Inherited: 0x08)
struct FFortMigrationDataTableRow : FTableRowBase {
	struct FString OldItemTemplate; // 0x08(0x10)
	struct FString NewItemTemplate; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortMinigameTimes
// Size: 0x14 (Inherited: 0x00)
struct FFortMinigameTimes {
	float SetupTime; // 0x00(0x04)
	float WarmupTime; // 0x04(0x04)
	float StartTime; // 0x08(0x04)
	float EndTime; // 0x0c(0x04)
	float ResetTime; // 0x10(0x04)
};

// ScriptStruct FortniteGame.MinigamePlayers
// Size: 0x120 (Inherited: 0x108)
struct FMinigamePlayers : FFastArraySerializer {
	struct TArray<struct FMinigamePlayer> Players; // 0x108(0x10)
	struct AFortMinigame* Owner; // 0x118(0x08)
};

// ScriptStruct FortniteGame.MinigamePlayer
// Size: 0xa0 (Inherited: 0x0c)
struct FMinigamePlayer : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct FUniqueNetIdRepl UniquePlayerId; // 0x10(0x28)
	bool bHasValidResetData; // 0x38(0x01)
	char ClassSlotIndex; // 0x39(0x01)
	char pad_3A[0x2]; // 0x3a(0x02)
	float LastClassSwitchTime; // 0x3c(0x04)
	char TeamBeforeMinigameStarted; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FVector LocationBeforeMinigameStarted; // 0x44(0x0c)
	struct FRotator RotationBeforeMinigameStarted; // 0x50(0x0c)
	bool bIsLocationBeforeGameStartedBlocked; // 0x5c(0x01)
	bool bWasSkydivingBeforeMinigameStarted; // 0x5d(0x01)
	bool bWasFlyingBeforeMinigameStarted; // 0x5e(0x01)
	bool bIsTeleportingOrRespawningForGameplay; // 0x5f(0x01)
	bool bIsLocalPlayer; // 0x60(0x01)
	bool bPreparingForRespawn; // 0x61(0x01)
	char pad_62[0x6]; // 0x62(0x06)
	struct AFortPlayerStartCreative* ClaimedPlayerStart; // 0x68(0x08)
	bool bIsWaitingForPersistence; // 0x70(0x01)
	char pad_71[0x2f]; // 0x71(0x2f)
};

// ScriptStruct FortniteGame.MinigameStatRow
// Size: 0x48 (Inherited: 0x00)
struct FMinigameStatRow {
	struct FText PlayerName; // 0x00(0x18)
	int32_t TeamColorIndex; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct TArray<struct FText> PlayerStats; // 0x20(0x10)
	struct TArray<struct FText> CumulativePlayerStats; // 0x30(0x10)
	bool bIsTeamRow; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// ScriptStruct FortniteGame.MinigameEndCondition
// Size: 0x30 (Inherited: 0x00)
struct FMinigameEndCondition {
	struct FFortMinigameStatQuery StatQuery; // 0x00(0x18)
	enum class EMinigameTeamListType TeamListType; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
	struct TArray<char> TeamList; // 0x20(0x10)
};

// ScriptStruct FortniteGame.FortMinigameStatQuery
// Size: 0x18 (Inherited: 0x00)
struct FFortMinigameStatQuery {
	struct UFortMinigameStatFilter* Stat; // 0x00(0x08)
	enum class EFortMinigameStatScope Scope; // 0x08(0x01)
	char bAnyMatch : 1; // 0x09(0x01)
	char pad_9_1 : 7; // 0x09(0x01)
	enum class EFortMinigameStatOperation Operation; // 0x0a(0x01)
	char pad_B[0x1]; // 0x0b(0x01)
	int32_t Value; // 0x0c(0x04)
	char bStaticCount : 1; // 0x10(0x01)
	char pad_10_1 : 7; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.MinigameClassSlot
// Size: 0x28 (Inherited: 0x00)
struct FMinigameClassSlot {
	char ClassSlotIndex; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FString ClassName; // 0x08(0x10)
	struct TArray<struct FItemAndCount> InventoryItems; // 0x18(0x10)
};

// ScriptStruct FortniteGame.MinigameTeam
// Size: 0x28 (Inherited: 0x00)
struct FMinigameTeam {
	char TeamIndex; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FString TeamName; // 0x08(0x10)
	int32_t TeamColorIndex; // 0x18(0x04)
	int32_t MaxInitTeamSize; // 0x1c(0x04)
	int32_t InitTeamSizeWeight; // 0x20(0x04)
	bool bHasBucketAvailable; // 0x24(0x01)
	char EliminatedCount; // 0x25(0x01)
	char TeamSize; // 0x26(0x01)
	char pad_27[0x1]; // 0x27(0x01)
};

// ScriptStruct FortniteGame.MinigamePlayerBucket
// Size: 0x18 (Inherited: 0x00)
struct FMinigamePlayerBucket {
	char TeamIdAtGameStart; // 0x00(0x01)
	char TeamIdAtRoundStart; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	float DesiredTeamSizePercent; // 0x04(0x04)
	struct TArray<struct FUniqueNetIdRepl> PlayerIds; // 0x08(0x10)
};

// ScriptStruct FortniteGame.MinigamePlayerPersistentStartPoint
// Size: 0x50 (Inherited: 0x00)
struct FMinigamePlayerPersistentStartPoint {
	struct FVector Location; // 0x00(0x0c)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FQuat Rotation; // 0x10(0x10)
	struct FUniqueNetIdRepl UniqueId; // 0x20(0x28)
	bool bConsumed; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// ScriptStruct FortniteGame.MinigameItemData
// Size: 0x90 (Inherited: 0x00)
struct FMinigameItemData {
	struct TSoftObjectPtr<struct UFortWorldItemDefinition> ItemDefinition; // 0x00(0x28)
	int32_t ItemQuantity; // 0x28(0x04)
	char pad_2C[0xc]; // 0x2c(0x0c)
	struct FPropertyOverrideData ItemOptionData; // 0x38(0x50)
	int32_t TrackedIndex; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
};

// ScriptStruct FortniteGame.TrackedObjectiveArray
// Size: 0x128 (Inherited: 0x108)
struct FTrackedObjectiveArray : FFastArraySerializer {
	struct TArray<struct FTrackedObjective> Objectives; // 0x108(0x10)
	int32_t NextTrackedIndex; // 0x118(0x04)
	char pad_11C[0xc]; // 0x11c(0x0c)
};

// ScriptStruct FortniteGame.TrackedObjective
// Size: 0x2c (Inherited: 0x0c)
struct FTrackedObjective : FFastArraySerializerItem {
	int32_t TrackedIndex; // 0x0c(0x04)
	char TeamIndex; // 0x10(0x01)
	char OldTeamIndex; // 0x11(0x01)
	char pad_12[0x2]; // 0x12(0x02)
	int32_t IndicatorPresetIndex; // 0x14(0x04)
	float ProgressPercentage; // 0x18(0x04)
	char TrackedState; // 0x1c(0x01)
	char TrackedStateOwnerTeam; // 0x1d(0x01)
	char OldTrackedState; // 0x1e(0x01)
	char ObjectiveType; // 0x1f(0x01)
	bool bIsInteractionAllowed; // 0x20(0x01)
	bool bOldIsInteractionAllowed; // 0x21(0x01)
	char pad_22[0xa]; // 0x22(0x0a)
};

// ScriptStruct FortniteGame.MinigameScoreTracker
// Size: 0x28 (Inherited: 0x00)
struct FMinigameScoreTracker {
	struct FMinigameScoreData GroupScore; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct TArray<struct FMinigameTeamScoreData> TeamScores; // 0x08(0x10)
	struct TArray<struct FMinigameSoloScoreData> SoloScores; // 0x18(0x10)
};

// ScriptStruct FortniteGame.MinigameScoreData
// Size: 0x04 (Inherited: 0x00)
struct FMinigameScoreData {
	float Score; // 0x00(0x04)
};

// ScriptStruct FortniteGame.MinigameSoloScoreData
// Size: 0x10 (Inherited: 0x04)
struct FMinigameSoloScoreData : FMinigameScoreData {
	char pad_4[0x4]; // 0x04(0x04)
	struct AFortPlayerState* PlayerState; // 0x08(0x08)
};

// ScriptStruct FortniteGame.MinigameTeamScoreData
// Size: 0x08 (Inherited: 0x04)
struct FMinigameTeamScoreData : FMinigameScoreData {
	char Team; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
};

// ScriptStruct FortniteGame.MinigameScoreTemplate
// Size: 0x0c (Inherited: 0x00)
struct FMinigameScoreTemplate {
	enum class EMinigameScoreType ScoreType; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t NumHighScores; // 0x04(0x04)
	bool bAscending; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.MinigameScoreArray
// Size: 0x130 (Inherited: 0x108)
struct FMinigameScoreArray : FFastArraySerializer {
	struct TArray<struct FMinigameScoreEntry> Scores; // 0x108(0x10)
	struct TArray<struct FMinigameScoreEntry> HighScores; // 0x118(0x10)
	struct AActor* Owner; // 0x128(0x08)
};

// ScriptStruct FortniteGame.MinigameHighScoreEntryRow
// Size: 0x20 (Inherited: 0x08)
struct FMinigameHighScoreEntryRow : FTableRowBase {
	struct FString PlayerName; // 0x08(0x10)
	float Score; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.MinigameHighScoreRow
// Size: 0x10 (Inherited: 0x08)
struct FMinigameHighScoreRow : FTableRowBase {
	struct UDataTable* HighScoresTable; // 0x08(0x08)
};

// ScriptStruct FortniteGame.MinigameSpawnerSpawnParams
// Size: 0x60 (Inherited: 0x00)
struct FMinigameSpawnerSpawnParams {
	struct TSoftObjectPtr<struct UFortWorldItemDefinition> PickupToSpawn; // 0x00(0x28)
	int32_t PickupQuantity; // 0x28(0x04)
	int32_t PickupInstigatorHandle; // 0x2c(0x04)
	struct FTransform SpawnTransform; // 0x30(0x30)
};

// ScriptStruct FortniteGame.MingiameScoreboardRow
// Size: 0x38 (Inherited: 0x00)
struct FMingiameScoreboardRow {
	struct FText Name; // 0x00(0x18)
	int32_t TeamColorIndex; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct TArray<struct FMinigameScoreboardValue> Values; // 0x20(0x10)
	int32_t WinCount; // 0x30(0x04)
	bool bHighlight; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// ScriptStruct FortniteGame.MinigameScoreboardValue
// Size: 0x10 (Inherited: 0x00)
struct FMinigameScoreboardValue {
	struct UFortMinigameStatFilter* StatFilter; // 0x00(0x08)
	int32_t Value; // 0x08(0x04)
	bool bHighlight; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
};

// ScriptStruct FortniteGame.MinigameScoreboardBucketRow
// Size: 0x50 (Inherited: 0x38)
struct FMinigameScoreboardBucketRow : FMingiameScoreboardRow {
	int32_t Standing; // 0x38(0x04)
	int32_t BucketIndex; // 0x3c(0x04)
	struct TArray<struct FMinigameScoreboardPlayerRow> PlayerRows; // 0x40(0x10)
};

// ScriptStruct FortniteGame.MinigameScoreboardPlayerRow
// Size: 0x40 (Inherited: 0x38)
struct FMinigameScoreboardPlayerRow : FMingiameScoreboardRow {
	struct AFortPlayerState* PlayerState; // 0x38(0x08)
};

// ScriptStruct FortniteGame.FortMinigameStatCollection
// Size: 0x30 (Inherited: 0x00)
struct FFortMinigameStatCollection {
	struct FFortMinigameGroupStats GroupStats; // 0x00(0x10)
	struct TArray<struct FFortMinigamePlayerStats> PlayerStats; // 0x10(0x10)
	struct TArray<struct FFortMinigamePlayerBucketStats> PlayerBucketStats; // 0x20(0x10)
};

// ScriptStruct FortniteGame.FortMinigameGroupStats
// Size: 0x10 (Inherited: 0x00)
struct FFortMinigameGroupStats {
	struct TArray<struct FFortMinigameStat> Stats; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortMinigameStat
// Size: 0x10 (Inherited: 0x00)
struct FFortMinigameStat {
	struct UFortMinigameStatFilter* Filter; // 0x00(0x08)
	int32_t Count; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortMinigamePlayerBucketStats
// Size: 0x18 (Inherited: 0x10)
struct FFortMinigamePlayerBucketStats : FFortMinigameGroupStats {
	int32_t BucketIndex; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortMinigamePlayerStats
// Size: 0x38 (Inherited: 0x10)
struct FFortMinigamePlayerStats : FFortMinigameGroupStats {
	struct FUniqueNetIdRepl Player; // 0x10(0x28)
};

// ScriptStruct FortniteGame.FortMinigameTeamStats
// Size: 0x18 (Inherited: 0x10)
struct FFortMinigameTeamStats : FFortMinigameGroupStats {
	char Team; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.FortMiniMapData
// Size: 0xa0 (Inherited: 0x00)
struct FFortMiniMapData {
	struct UObject* MiniMapIcon; // 0x00(0x08)
	struct FVector2D IconScale; // 0x08(0x08)
	char bUseIconSize : 1; // 0x10(0x01)
	char pad_10_1 : 7; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
	struct FVector2D IconMaterialSize; // 0x14(0x08)
	char bIsVisible : 1; // 0x1c(0x01)
	char bIsVisibleOnMiniMap : 1; // 0x1c(0x01)
	char bIsVisibleOnMap : 1; // 0x1c(0x01)
	char bIsVisibilityBasedOnTeam : 1; // 0x1c(0x01)
	char bShowVerticalOffset : 1; // 0x1c(0x01)
	char bShowFarOffIndicator : 1; // 0x1c(0x01)
	char bDisplayIconEvenOnFogOfWar : 1; // 0x1c(0x01)
	char bAllowLocalOverrides : 1; // 0x1c(0x01)
	char bUseTeamAffiliationColors : 1; // 0x1d(0x01)
	char pad_1D_1 : 7; // 0x1d(0x01)
	char pad_1E[0x2]; // 0x1e(0x02)
	struct FLinearColor Color; // 0x20(0x10)
	struct FLinearColor FriendColor; // 0x30(0x10)
	struct FLinearColor EnemyColor; // 0x40(0x10)
	struct FLinearColor NeutralColor; // 0x50(0x10)
	struct FLinearColor PulseColor; // 0x60(0x10)
	float ColorPulsesPerSecond; // 0x70(0x04)
	float SizePulsesPerSecond; // 0x74(0x04)
	float ViewableDistance; // 0x78(0x04)
	struct FVector LocationOffset; // 0x7c(0x0c)
	int32_t Priority; // 0x88(0x04)
	char Team; // 0x8c(0x01)
	char pad_8D[0x3]; // 0x8d(0x03)
	struct TArray<struct FFortMiniMapIconMaterialParameterData> MiniMapIconMaterialParameterDataList; // 0x90(0x10)
};

// ScriptStruct FortniteGame.FortMiniMapIconMaterialParameterData
// Size: 0x28 (Inherited: 0x00)
struct FFortMiniMapIconMaterialParameterData {
	enum class EMiniMapIconParameterDataType DataType; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FName Name; // 0x04(0x08)
	float Scalar; // 0x0c(0x04)
	struct FLinearColor Vector; // 0x10(0x10)
	struct UTexture* Texture; // 0x20(0x08)
};

// ScriptStruct FortniteGame.FortMissionFocusDisplayData
// Size: 0x20 (Inherited: 0x00)
struct FFortMissionFocusDisplayData {
	struct FText CurrentFocusDisplayText; // 0x00(0x18)
	float CurrentFocusPercentage; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortMissionPlacementActorPreferredTagInfo
// Size: 0x38 (Inherited: 0x00)
struct FFortMissionPlacementActorPreferredTagInfo {
	struct FDataTableRowHandle DifficultyInfo; // 0x00(0x10)
	struct FGameplayTagContainer PlacementActorPreferredTags; // 0x10(0x20)
	float Difficulty; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// ScriptStruct FortniteGame.FortActiveThreatPlayerData
// Size: 0x10 (Inherited: 0x00)
struct FFortActiveThreatPlayerData {
	struct AFortPlayerController* PlayerController; // 0x00(0x08)
	struct UFortAIEncounterInfo* Encounter; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortReactiveQuestDialogue
// Size: 0x10 (Inherited: 0x00)
struct FFortReactiveQuestDialogue {
	struct UFortConversation* Conversation; // 0x00(0x08)
	int32_t PlayOnObjectiveCount; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortRiftSpawnerData
// Size: 0x110 (Inherited: 0x00)
struct FFortRiftSpawnerData {
	struct ABuildingRift* Rift; // 0x00(0x08)
	struct UFortAIEncounterInfo* Encounter; // 0x08(0x08)
	struct UFortAIEncounterSequence* EncounterSequence; // 0x10(0x08)
	struct TArray<struct AFortPlayerPawn*> PlayersInRange; // 0x18(0x10)
	float TriggerDamagePercentage; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct AController* KillingInstigator; // 0x30(0x08)
	struct AActor* KillingDamageCauser; // 0x38(0x08)
	struct FTimerHandle DeactivationTimerHandle; // 0x40(0x08)
	struct FTimerHandle BurstFallbackTimerHandle; // 0x48(0x08)
	struct FFortEncounterSettings OverrideSettings; // 0x50(0xb8)
	bool bUseOverrideSettings; // 0x108(0x01)
	char pad_109[0x7]; // 0x109(0x07)
};

// ScriptStruct FortniteGame.VehiclePlacementInfo
// Size: 0x10 (Inherited: 0x00)
struct FVehiclePlacementInfo {
	struct TWeakObjectPtr<struct AActor> PlacementActor; // 0x00(0x08)
	struct FActiveGameplayEffectHandle AppliedGameplayEffectHandle; // 0x08(0x08)
};

// ScriptStruct FortniteGame.MissionVehicleSpawnSet
// Size: 0x50 (Inherited: 0x00)
struct FMissionVehicleSpawnSet {
	struct AFortAthenaVehicle* VehicleClass; // 0x00(0x08)
	int32_t MinSpawnCount; // 0x08(0x04)
	int32_t MaxSpawnCount; // 0x0c(0x04)
	struct FVector SpawnOffset; // 0x10(0x0c)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct UGameplayEffect* OccupiedLocationGameplayEffect; // 0x20(0x08)
	int32_t OccupiedLocationGameplayEffectLevel; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct FGameplayTagContainer OccupiedLocationAdditionalContextTags; // 0x30(0x20)
};

// ScriptStruct FortniteGame.FortMissionAlertData
// Size: 0x68 (Inherited: 0x08)
struct FFortMissionAlertData : FTableRowBase {
	struct FName CategoryRowName; // 0x08(0x08)
	struct FName SpreadRowName; // 0x10(0x08)
	struct FString RequiredEventFlag; // 0x18(0x10)
	bool bOnlyUsedForSpreading; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	int32_t MinimumTileDifficulty; // 0x2c(0x04)
	int32_t MaximumTileDifficulty; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct TArray<struct FString> RestrictedMissionGens; // 0x38(0x10)
	struct FString LootTierGroup; // 0x48(0x10)
	struct FString ModifierTierGroup; // 0x58(0x10)
};

// ScriptStruct FortniteGame.FortMissionAlertSpreadData
// Size: 0x20 (Inherited: 0x08)
struct FFortMissionAlertSpreadData : FTableRowBase {
	float ChanceToSpread; // 0x08(0x04)
	int32_t TotalChancesToSpread; // 0x0c(0x04)
	int32_t MaxNumTilesToSpreadTo; // 0x10(0x04)
	int32_t SpreadInterval; // 0x14(0x04)
	struct FName MissionAlertRowName; // 0x18(0x08)
};

// ScriptStruct FortniteGame.FortMissionAlertCategoryData
// Size: 0x68 (Inherited: 0x08)
struct FFortMissionAlertCategoryData : FTableRowBase {
	struct FName CategoryRowName; // 0x08(0x08)
	int32_t Priority; // 0x10(0x04)
	bool MissionAlertRepeatable; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
	struct FString Timer; // 0x18(0x10)
	struct FGameplayTagContainer CategoryTagsContainer; // 0x28(0x20)
	struct FGameplayTagContainer VisualizationTagsContainer; // 0x48(0x20)
};

// ScriptStruct FortniteGame.FortDifficultyOptionBudget
// Size: 0x30 (Inherited: 0x00)
struct FFortDifficultyOptionBudget {
	struct FGameplayTagContainer BudgetTypeTags; // 0x00(0x20)
	struct FCurveTableRowHandle DifficultyOptionPointsCurve; // 0x20(0x10)
};

// ScriptStruct FortniteGame.PerDifficultyMissionGenerationInfo
// Size: 0x30 (Inherited: 0x00)
struct FPerDifficultyMissionGenerationInfo {
	struct FDataTableRowHandle MinDifficulty; // 0x00(0x10)
	struct FDataTableRowHandle MaxDifficulty; // 0x10(0x10)
	struct TArray<struct FMissionGenerationInfo> MissionGenerationInfos; // 0x20(0x10)
};

// ScriptStruct FortniteGame.MissionGenerationInfo
// Size: 0x58 (Inherited: 0x00)
struct FMissionGenerationInfo {
	int32_t NumMissionsRequired; // 0x00(0x04)
	int32_t MaxMissionsAllowed; // 0x04(0x04)
	int32_t NumMissionsGeneratedMatchingRequirements; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FGameplayTagQuery MissionTagRequirements; // 0x10(0x48)
};

// ScriptStruct FortniteGame.FortPlayerSpawnPadPlacementData
// Size: 0x58 (Inherited: 0x00)
struct FFortPlayerSpawnPadPlacementData {
	struct UEnvQuery* PlacementQuery; // 0x00(0x08)
	SoftClassProperty ActorToPlace; // 0x08(0x28)
	bool bSnapToGrid; // 0x30(0x01)
	bool bAdjustPlacementForFloors; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
	struct FGameplayTagContainer TagsToAddToChosenPlacementActor; // 0x38(0x20)
};

// ScriptStruct FortniteGame.FortAthenaLTMConfig
// Size: 0x58 (Inherited: 0x00)
struct FFortAthenaLTMConfig {
	struct TSoftObjectPtr<struct UTexture2D> SplashImage; // 0x00(0x28)
	struct FText FrontEndDescription; // 0x28(0x18)
	struct FText DisabledMessage; // 0x40(0x18)
};

// ScriptStruct FortniteGame.ZoneLoadingScreenConfig
// Size: 0x118 (Inherited: 0x00)
struct FZoneLoadingScreenConfig {
	struct TSoftObjectPtr<struct UTexture2D> BackgroundImage; // 0x00(0x28)
	struct FText TitleDescription; // 0x28(0x18)
	struct FText Title; // 0x40(0x18)
	struct FZoneLoadingScreenHeadingConfig Headings[0x3]; // 0x58(0xa8)
	struct TArray<struct UFortTips*> LoadingTips; // 0x100(0x10)
	struct USoundBase* LoadingMusic; // 0x110(0x08)
};

// ScriptStruct FortniteGame.ZoneLoadingScreenHeadingConfig
// Size: 0x38 (Inherited: 0x00)
struct FZoneLoadingScreenHeadingConfig {
	struct UTexture2D* HeadingImage; // 0x00(0x08)
	struct FText Heading; // 0x08(0x18)
	struct FText HeadingDescription; // 0x20(0x18)
};

// ScriptStruct FortniteGame.FortPossibleMission
// Size: 0x38 (Inherited: 0x00)
struct FFortPossibleMission {
	struct TSoftObjectPtr<struct UFortMissionInfo> MissionInfo; // 0x00(0x28)
	float Weight; // 0x28(0x04)
	int32_t MinAlwaysGenerated; // 0x2c(0x04)
	bool bIsPrototype; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// ScriptStruct FortniteGame.FortMissionInfoOption
// Size: 0x30 (Inherited: 0x00)
struct FFortMissionInfoOption {
	struct TSoftObjectPtr<struct UFortMissionInfo> MissionInfo; // 0x00(0x28)
	float MinDifficultyLevel; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortMissionPlacementItems
// Size: 0x40 (Inherited: 0x00)
struct FFortMissionPlacementItems {
	struct FGameplayTagContainer TagsToAddToChosenPlacementActors; // 0x00(0x20)
	struct TArray<struct FFortMissionPlacementFoundationItem> AdditionalWorldFoundations; // 0x20(0x10)
	struct TArray<struct FFortMissionPlacementActorItem> ActorsAndLocations; // 0x30(0x10)
};

// ScriptStruct FortniteGame.FortMissionPlacementActorItem
// Size: 0x80 (Inherited: 0x00)
struct FFortMissionPlacementActorItem {
	struct FGameplayTagContainer ItemIdentifyingTags; // 0x00(0x20)
	struct FGameplayTagContainer TagsToAddToChosenPlacementActor; // 0x20(0x20)
	struct UEnvQuery* PlacementQuery; // 0x40(0x08)
	SoftClassProperty ActorToPlace; // 0x48(0x28)
	int32_t NumLocationsToFind; // 0x70(0x04)
	bool bSpawnActorAutomatically; // 0x74(0x01)
	bool bShouldReserveLocations; // 0x75(0x01)
	char pad_76[0x1]; // 0x76(0x01)
	bool bSnapToGrid; // 0x77(0x01)
	bool bAdjustPlacementForFloors; // 0x78(0x01)
	bool bDontCreateSpawnRiftsNearby; // 0x79(0x01)
	char pad_7A[0x6]; // 0x7a(0x06)
};

// ScriptStruct FortniteGame.FortMissionPlacementFoundationItem
// Size: 0x78 (Inherited: 0x00)
struct FFortMissionPlacementFoundationItem {
	struct FGameplayTagContainer ItemIdentifyingTags; // 0x00(0x20)
	struct FGameplayTagContainer TagsToAddToChosenPlacementActorOrFoundationActor; // 0x20(0x20)
	struct UEnvQuery* PlacementQuery; // 0x40(0x08)
	SoftClassProperty BuildingFoundationToPlace; // 0x48(0x28)
	int32_t NumLocationsToFind; // 0x70(0x04)
	bool bAdjustFoundationPlacementForFloors; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
};

// ScriptStruct FortniteGame.MissionPerDifficultyProperties
// Size: 0x68 (Inherited: 0x00)
struct FMissionPerDifficultyProperties {
	struct TArray<struct FDataTableRowHandle> ValidDifficulties; // 0x00(0x10)
	struct FFortTimeOfDayTheme OverrideTimeOfDayTheme; // 0x10(0x40)
	struct FFortGlobalWindInfo OverrideGlobalWindInfo; // 0x50(0x18)
};

// ScriptStruct FortniteGame.FortGlobalWindInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortGlobalWindInfo {
	struct TArray<struct FFortWindIntensityAndDirection> ValidWindInfos; // 0x00(0x10)
	int32_t WindIndex; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortWindIntensityAndDirection
// Size: 0x08 (Inherited: 0x00)
struct FFortWindIntensityAndDirection {
	float WindIntensity; // 0x00(0x04)
	float WindHeading; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortTimeOfDayTheme
// Size: 0x40 (Inherited: 0x00)
struct FFortTimeOfDayTheme {
	struct TArray<struct UFortTimeOfDayCollection*> TimeOfDayCollections; // 0x00(0x10)
	struct TArray<SoftClassProperty> AdditionalTimeOfDayManagers; // 0x10(0x10)
	struct TArray<SoftClassProperty> ProhibitedTimeOfDayManagers; // 0x20(0x10)
	struct TArray<SoftClassProperty> ValidTimeOfDayManagers; // 0x30(0x10)
};

// ScriptStruct FortniteGame.FortMissionTaggedRewards
// Size: 0x18 (Inherited: 0x00)
struct FFortMissionTaggedRewards {
	struct FGameplayTag Tag; // 0x00(0x08)
	struct TArray<struct TSoftObjectPtr<struct UFortWorldItemDefinition>> WorldItemDefinitions; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortMissionPopupWidgetData
// Size: 0x1d0 (Inherited: 0x00)
struct FFortMissionPopupWidgetData {
	struct FText DisplayName; // 0x00(0x18)
	bool bShowDescription; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
	struct FText Description; // 0x20(0x18)
	struct FSlateBrush DescriptionIcon; // 0x38(0x88)
	struct FSlateBrush AvailableIcon; // 0xc0(0x88)
	struct FSlateBrush UnavailableIcon; // 0x148(0x88)
};

// ScriptStruct FortniteGame.FortObjectiveBlock
// Size: 0x10 (Inherited: 0x00)
struct FFortObjectiveBlock {
	struct TArray<struct FFortObjectiveEntry> ObjectiveEntries; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortObjectiveEntry
// Size: 0x58 (Inherited: 0x00)
struct FFortObjectiveEntry {
	SoftClassProperty ObjectiveRef; // 0x00(0x28)
	struct UFortBadgeItemDefinition* ObjectiveRewardBadge; // 0x28(0x08)
	enum class EFortObjectiveRequirement MissionRequirement; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FGameplayTagContainer ObjectiveHandle; // 0x38(0x20)
};

// ScriptStruct FortniteGame.FortStartingMissionInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortStartingMissionInfo {
	struct TArray<struct UFortMissionInfo*> StartingMissions; // 0x00(0x10)
	bool bDisableSharedMissionLoading; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.FortEncounterSequenceSettings
// Size: 0x38 (Inherited: 0x00)
struct FFortEncounterSequenceSettings {
	struct FFortEncounterTransitionSettings TransitionSettings; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FFortEncounterProfile> EncounterSequence; // 0x08(0x10)
	struct FGameplayTagContainer SequenceTags; // 0x18(0x20)
};

// ScriptStruct FortniteGame.FortEncounterProfile
// Size: 0x60 (Inherited: 0x00)
struct FFortEncounterProfile {
	struct TSoftObjectPtr<struct UFortDifficultyOptionSetEncounter> EncounterOptions; // 0x00(0x28)
	struct TArray<struct UFortDifficultyOptionCategoryEncounter*> OverrideCategories; // 0x28(0x10)
	bool bShouldReselectOptionsPerInstance; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct FGameplayTagContainer EncounterTypeTags; // 0x40(0x20)
};

// ScriptStruct FortniteGame.FortEncounterTransitionSettings
// Size: 0x01 (Inherited: 0x00)
struct FFortEncounterTransitionSettings {
	bool bShouldMaintainEncounterState; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortMissionEventReceiverByGameplayTagQuery
// Size: 0x50 (Inherited: 0x00)
struct FFortMissionEventReceiverByGameplayTagQuery {
	struct FGameplayTagQuery TagQueryEventDiscriminator; // 0x00(0x48)
	struct UFortMissionEventDelegateHolder* DelegateHolder; // 0x48(0x08)
};

// ScriptStruct FortniteGame.FortMissionUIActorHandle
// Size: 0x30 (Inherited: 0x00)
struct FFortMissionUIActorHandle {
	struct TWeakObjectPtr<struct AActor> AttachedActor; // 0x00(0x08)
	struct FVector AttachmentOffset; // 0x08(0x0c)
	float MaxVisibleDistance; // 0x14(0x04)
	struct FGuid MissionGuid; // 0x18(0x10)
	struct TWeakObjectPtr<struct UFortMissionInfoIndicator> MissionUIIndicator; // 0x28(0x08)
};

// ScriptStruct FortniteGame.StormShieldMoveData
// Size: 0x24 (Inherited: 0x00)
struct FStormShieldMoveData {
	float MoveRate; // 0x00(0x04)
	struct FVector TargetLocation; // 0x04(0x0c)
	struct FVector StartingLocation; // 0x10(0x0c)
	float SafeAreaStartLocationChangeTime; // 0x1c(0x04)
	float SafeAreaFinishLocationChangeTime; // 0x20(0x04)
};

// ScriptStruct FortniteGame.StormShieldRadiusGrowthData
// Size: 0x18 (Inherited: 0x00)
struct FStormShieldRadiusGrowthData {
	float TargetRadius; // 0x00(0x04)
	float StartingRadius; // 0x04(0x04)
	float GrowthRate; // 0x08(0x04)
	float SafeAreaStartRadiusChangeTime; // 0x0c(0x04)
	float SafeAreaFinishRadiusChangeTime; // 0x10(0x04)
	enum class EMissionStormShieldState State; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
};

// ScriptStruct FortniteGame.MissionTimeDisplayData
// Size: 0x2c (Inherited: 0x00)
struct FMissionTimeDisplayData {
	float LessThanTimeValue; // 0x00(0x04)
	bool bHideTimer; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
	struct FLinearColor BaseColor; // 0x08(0x10)
	struct FLinearColor PulseColor; // 0x18(0x10)
	float ColorPulsesPerSecond; // 0x28(0x04)
};

// ScriptStruct FortniteGame.MissionTimerData
// Size: 0x30 (Inherited: 0x00)
struct FMissionTimerData {
	bool bTimerIsPaused; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float OriginalTimePeriod; // 0x04(0x04)
	float ReplicatedRemainingTime; // 0x08(0x04)
	float TimeAddedOrRemoved; // 0x0c(0x04)
	float LastTimeAddedOrRemoved; // 0x10(0x04)
	float ClientRemainingTime; // 0x14(0x04)
	char pad_18[0x18]; // 0x18(0x18)
};

// ScriptStruct FortniteGame.FortMissionWeightedReward
// Size: 0x98 (Inherited: 0x00)
struct FFortMissionWeightedReward {
	struct FName LootTierGroup; // 0x00(0x08)
	struct FSlateBrush LootIcon; // 0x08(0x88)
	float Weight; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// ScriptStruct FortniteGame.FortMobileSchemaModificationContainer
// Size: 0x10 (Inherited: 0x00)
struct FFortMobileSchemaModificationContainer {
	struct TArray<struct FFortMobileSchemaModification> Modifications; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortMobileSchemaModification
// Size: 0x78 (Inherited: 0x00)
struct FFortMobileSchemaModification {
	struct FGuid Guid; // 0x00(0x10)
	enum class ESchemaModificationType ModificationType; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
	struct FGameplayTag OwningContextTag; // 0x14(0x08)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct FFortMobileHUDWidgetSchemaSave ModifiedSchema; // 0x20(0x58)
};

// ScriptStruct FortniteGame.FortMobileHUDWidgetSchemaSave
// Size: 0x58 (Inherited: 0x00)
struct FFortMobileHUDWidgetSchemaSave {
	struct FGameplayTag HUDWidgetClassTag; // 0x00(0x08)
	struct FGameplayTag BehaviorClassTag; // 0x08(0x08)
	struct FGuid Guid; // 0x10(0x10)
	struct FFortMobileHUDWidgetLayoutSave HUDWidgetLayout; // 0x20(0x38)
};

// ScriptStruct FortniteGame.FortMobileHUDWidgetLayoutSave
// Size: 0x38 (Inherited: 0x00)
struct FFortMobileHUDWidgetLayoutSave {
	struct FAnchorData LayoutData; // 0x00(0x28)
	struct TArray<struct FFortMobileHUDWidgetCustomPropertySave> CustomProperties; // 0x28(0x10)
};

// ScriptStruct FortniteGame.FortMobileHUDWidgetCustomPropertySave
// Size: 0x18 (Inherited: 0x00)
struct FFortMobileHUDWidgetCustomPropertySave {
	struct FGameplayTag PropertyTag; // 0x00(0x08)
	struct FString PropertyValue; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortMobileHUDLayoutProfileSave
// Size: 0x28 (Inherited: 0x00)
struct FFortMobileHUDLayoutProfileSave {
	struct FText ProfileName; // 0x00(0x18)
	struct TArray<struct FFortMobileHUDContextLayoutSave> ContextLayouts; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortMobileHUDContextLayoutSave
// Size: 0x18 (Inherited: 0x00)
struct FFortMobileHUDContextLayoutSave {
	struct FGameplayTag ContextLayoutTag; // 0x00(0x08)
	struct TArray<struct FFortMobileHUDWidgetSchemaSave> HUDWidgetSchemas; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortMobileHUDPresetExtension
// Size: 0x30 (Inherited: 0x00)
struct FFortMobileHUDPresetExtension {
	struct FGameplayTag HUDPresetToExtend; // 0x00(0x08)
	struct FFortMobileHUDLayoutProfileSave HUDPresetExtensionSave; // 0x08(0x28)
};

// ScriptStruct FortniteGame.FortMobileHUDProfileContainer
// Size: 0x28 (Inherited: 0x00)
struct FFortMobileHUDProfileContainer {
	struct FFortMobileHUDProfileIdentifier ActiveHUDProfileIdentifier; // 0x00(0x18)
	struct TArray<struct FFortMobileCustomHUDProfile> CustomHUDProfiles; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortMobileHUDProfileBase
// Size: 0x40 (Inherited: 0x00)
struct FFortMobileHUDProfileBase {
	char pad_0[0x8]; // 0x00(0x08)
	struct FFortMobileHUDProfileIdentifier HUDProfileIdentifier; // 0x08(0x18)
	struct FText HUDProfileName; // 0x20(0x18)
	struct FGameplayTag HUDProfileBaseType; // 0x38(0x08)
};

// ScriptStruct FortniteGame.FortMobileHUDProfileIdentifier
// Size: 0x18 (Inherited: 0x00)
struct FFortMobileHUDProfileIdentifier {
	struct FGameplayTag HUDProfileType; // 0x00(0x08)
	struct FGuid Guid; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortMobileCustomHUDProfile
// Size: 0x50 (Inherited: 0x40)
struct FFortMobileCustomHUDProfile : FFortMobileHUDProfileBase {
	struct FFortMobileSchemaModificationContainer Modifications; // 0x40(0x10)
};

// ScriptStruct FortniteGame.FortMobileHUDPreset
// Size: 0x68 (Inherited: 0x40)
struct FFortMobileHUDPreset : FFortMobileHUDProfileBase {
	struct FFortMobileHUDLayoutProfileSave HUDLayoutPreset; // 0x40(0x28)
};

// ScriptStruct FortniteGame.MontageVisibilityData
// Size: 0x10 (Inherited: 0x00)
struct FMontageVisibilityData {
	enum class EMontageVisibilityRule Rule; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct UFortItemDefinition* Item; // 0x08(0x08)
};

// ScriptStruct FortniteGame.MontageItemAccessData
// Size: 0x10 (Inherited: 0x00)
struct FMontageItemAccessData {
	struct FGameplayTag AccessTag; // 0x00(0x08)
	struct UFortItemAccessTokenType* AccessToken; // 0x08(0x08)
};

// ScriptStruct FortniteGame.SectionNameAndWeight
// Size: 0x0c (Inherited: 0x00)
struct FSectionNameAndWeight {
	struct FName SectionName; // 0x00(0x08)
	float SectionWeight; // 0x08(0x04)
};

// ScriptStruct FortniteGame.MontageLookupData
// Size: 0x48 (Inherited: 0x00)
struct FMontageLookupData {
	struct FGameplayTagContainer GameplayTags; // 0x00(0x20)
	struct TSoftObjectPtr<struct UAnimMontage> AnimMontage; // 0x20(0x28)
};

// ScriptStruct FortniteGame.TurretCosmeticData
// Size: 0xc0 (Inherited: 0x00)
struct FTurretCosmeticData {
	struct UParticleSystemComponent* OverheatSmoke; // 0x00(0x08)
	struct UParticleSystemComponent* OverheatScreenL; // 0x08(0x08)
	struct UParticleSystemComponent* OverheatScreenR; // 0x10(0x08)
	struct TArray<struct UParticleSystemComponent*> OverheatParticleSystems; // 0x18(0x10)
	struct UAudioComponent* OverheatAudio; // 0x28(0x08)
	struct UAudioComponent* OnOverheatAudio; // 0x30(0x08)
	struct UCurveFloat* OverheatAudioCurve; // 0x38(0x08)
	struct UFortVehicleAudioVoice* ServoAudio; // 0x40(0x08)
	struct UFortVehicleAimingWeaponComp* AimingWeaponComponent; // 0x48(0x08)
	struct FName OverheatParamName; // 0x50(0x08)
	float OverheatParamOnOverheatValue; // 0x58(0x04)
	struct FName OverheatColorParamName; // 0x5c(0x08)
	struct FName OverheatAlphaParamName; // 0x64(0x08)
	struct FName RedBlinkParamName; // 0x6c(0x08)
	float RotatationAudioRangeInA; // 0x74(0x04)
	float RotatationAudioRangeInB; // 0x78(0x04)
	float RotatationAudioRangeOutA; // 0x7c(0x04)
	float RotatationAudioRangeOutB; // 0x80(0x04)
	float HotThreshold; // 0x84(0x04)
	float WarmThreshold; // 0x88(0x04)
	float AudioFadeinDuration; // 0x8c(0x04)
	float AudioFadeoutDuration; // 0x90(0x04)
	struct FLinearColor WarmColor; // 0x94(0x10)
	struct FLinearColor HotColor; // 0xa4(0x10)
	float OverheatColorExponent; // 0xb4(0x04)
	float ReplicateOverheatMax; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// ScriptStruct FortniteGame.MountedWeaponInfoRepped
// Size: 0x10 (Inherited: 0x00)
struct FMountedWeaponInfoRepped {
	struct AActor* HostVehicleCachedActor; // 0x00(0x08)
	int32_t HostVehicleSeatIndexCached; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.MountedWeaponInfo
// Size: 0x40 (Inherited: 0x00)
struct FMountedWeaponInfo {
	struct TArray<struct AActor*> TraceIgnoreActors; // 0x00(0x10)
	float ThirdPersonDistanceCorrection; // 0x10(0x04)
	float ThirdPersonDistanceCorrectionPawn; // 0x14(0x04)
	bool bDamageStartFromWeaponTowardFocus; // 0x18(0x01)
	bool bUseMountedWeaponAimRotOverride; // 0x19(0x01)
	bool bUseAimingClampAngles; // 0x1a(0x01)
	char pad_1B[0x1]; // 0x1b(0x01)
	float MaximumPitchAimingAngle; // 0x1c(0x04)
	float MinimumPitchAimingAngle; // 0x20(0x04)
	bool bTargetSourceFromVehicleMuzzle; // 0x24(0x01)
	char pad_25[0x3]; // 0x25(0x03)
	float MinReticleAlphaForAimInterpolation; // 0x28(0x04)
	float MinAimAngleDiffForReticleAlpha; // 0x2c(0x04)
	float MaxAimAngleDiffForReticleAlpha; // 0x30(0x04)
	bool bNeedsVehicleAttachment; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	int32_t AttachAttemptCount; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.WaterSprintBoostParams
// Size: 0xf0 (Inherited: 0x00)
struct FWaterSprintBoostParams {
	struct FScalableFloat RequiredDepth; // 0x00(0x28)
	struct FScalableFloat TriggerAboveDepth; // 0x28(0x28)
	struct FScalableFloat TriggerAtVelocity; // 0x50(0x28)
	struct FScalableFloat PreventAtVelocity; // 0x78(0x28)
	struct FScalableFloat Duration; // 0xa0(0x28)
	struct FScalableFloat MaxSpeed; // 0xc8(0x28)
};

// ScriptStruct FortniteGame.WaterJumpParams
// Size: 0xa0 (Inherited: 0x00)
struct FWaterJumpParams {
	struct FScalableFloat WaterJumpMinVelocityZ; // 0x00(0x28)
	struct FScalableFloat WaterJumpMaxVelocityZ; // 0x28(0x28)
	struct FScalableFloat WaterJumpForceZ; // 0x50(0x28)
	struct FScalableFloat JumpForceDuration; // 0x78(0x28)
};

// ScriptStruct FortniteGame.WaterControlParams
// Size: 0x690 (Inherited: 0x00)
struct FWaterControlParams {
	struct FScalableFloat MinImmersionDepth; // 0x00(0x28)
	struct FScalableFloat TargetImmersionDepth; // 0x28(0x28)
	struct FScalableFloat MaxImmersionDepth; // 0x50(0x28)
	struct FScalableFloat CancelCrouchImmersionDepth; // 0x78(0x28)
	struct FScalableFloat DBNOSwimImmersionDepth; // 0xa0(0x28)
	struct FScalableFloat MaxAcceleration; // 0xc8(0x28)
	struct FScalableFloat MaxAccelerationSprinting; // 0xf0(0x28)
	struct FScalableFloat BrakingDeceleration; // 0x118(0x28)
	struct FScalableFloat MaxNormalSpeed; // 0x140(0x28)
	struct FScalableFloat MaxSprintSpeed; // 0x168(0x28)
	struct FScalableFloat MinSprintJumpSpeed; // 0x190(0x28)
	struct FScalableFloat SprintJumpAirAccelAngleLimit; // 0x1b8(0x28)
	struct FScalableFloat SprintRetriggerDelay; // 0x1e0(0x28)
	struct FScalableFloat SprintDelayAfterFiring; // 0x208(0x28)
	struct FScalableFloat MaxTargetingSpeed; // 0x230(0x28)
	struct FScalableFloat BackwardsSpeedMultiplier; // 0x258(0x28)
	struct FScalableFloat BackwardsSpeedCosAngle; // 0x280(0x28)
	struct FScalableFloat AngledSpeedMultiplier; // 0x2a8(0x28)
	struct FScalableFloat AngledSpeedCosAngle; // 0x2d0(0x28)
	struct FScalableFloat Friction; // 0x2f8(0x28)
	struct FScalableFloat FrictionSprinting; // 0x320(0x28)
	struct FScalableFloat FrictionDirectionChangeDot; // 0x348(0x28)
	struct FScalableFloat FrictionDirectionChangeMultiplier; // 0x370(0x28)
	struct FScalableFloat MaxSpeedUp; // 0x398(0x28)
	struct FScalableFloat MaxSpeedDown; // 0x3c0(0x28)
	struct FScalableFloat MaxHorizontalEntrySpeed; // 0x3e8(0x28)
	struct FScalableFloat WaterForceMultiplier; // 0x410(0x28)
	struct FScalableFloat WaterForceSecondMultiplier; // 0x438(0x28)
	struct FScalableFloat MaxWaterForce; // 0x460(0x28)
	struct FScalableFloat WaterVelocityDepthForMax; // 0x488(0x28)
	struct FScalableFloat WaterVelocityMinMultiplier; // 0x4b0(0x28)
	struct FScalableFloat WaterSimMaxTimeStep; // 0x4d8(0x28)
	struct FScalableFloat WaterSimSubStepTime; // 0x500(0x28)
	struct FScalableFloat BobbingMaxForce; // 0x528(0x28)
	struct FScalableFloat BobbingIdealDepthTolerance; // 0x550(0x28)
	struct FScalableFloat BobbingFrictionDown; // 0x578(0x28)
	struct FScalableFloat BobbingExpDragDown; // 0x5a0(0x28)
	struct FScalableFloat BobbingFrictionDownSubmerged; // 0x5c8(0x28)
	struct FScalableFloat BobbingExpDragDownSubmerged; // 0x5f0(0x28)
	struct FScalableFloat BobbingFrictionUp; // 0x618(0x28)
	struct FScalableFloat BobbingExpDragUp; // 0x640(0x28)
	struct FScalableFloat BoostDragMultiplier; // 0x668(0x28)
};

// ScriptStruct FortniteGame.GoopControlParams
// Size: 0xa0 (Inherited: 0x00)
struct FGoopControlParams {
	struct FScalableFloat DragHorizontalPercent; // 0x00(0x28)
	struct FScalableFloat DragVerticalPercent; // 0x28(0x28)
	struct FScalableFloat DragHorizontalFlat; // 0x50(0x28)
	struct FScalableFloat DragVerticalFlat; // 0x78(0x28)
};

// ScriptStruct FortniteGame.AirControlParams
// Size: 0x140 (Inherited: 0x00)
struct FAirControlParams {
	struct FScalableFloat MaxAcceleration; // 0x00(0x28)
	struct FScalableFloat LateralFriction; // 0x28(0x28)
	struct FScalableFloat MaxLateralSpeed; // 0x50(0x28)
	struct FScalableFloat TerminalVelocity; // 0x78(0x28)
	struct FScalableFloat UpwardTerminalVelocity; // 0xa0(0x28)
	struct FScalableFloat GravityScalar; // 0xc8(0x28)
	struct FScalableFloat CustomGravityCeiling; // 0xf0(0x28)
	struct FScalableFloat CustomGravityCeilingWidth; // 0x118(0x28)
};

// ScriptStruct FortniteGame.AthenaJumpPenalty
// Size: 0x08 (Inherited: 0x00)
struct FAthenaJumpPenalty {
	float JumpScalar; // 0x00(0x04)
	float MovementScalar; // 0x04(0x04)
};

// ScriptStruct FortniteGame.GroundSplineSpeedData
// Size: 0x18 (Inherited: 0x00)
struct FGroundSplineSpeedData {
	float Speed; // 0x00(0x04)
	float Acceleration; // 0x04(0x04)
	float YawSpeed; // 0x08(0x04)
	float YawAcceleration; // 0x0c(0x04)
	int32_t SnapToNewSpeedRequestNum; // 0x10(0x04)
	float Timestamp; // 0x14(0x04)
};

// ScriptStruct FortniteGame.GroundSplineLocationData
// Size: 0x18 (Inherited: 0x00)
struct FGroundSplineLocationData {
	float DistanceAlongSpline; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct USplineComponent* SplineComponent; // 0x08(0x08)
	int32_t TeleportRequestNum; // 0x10(0x04)
	float Timestamp; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortMtxPlatformList
// Size: 0x10 (Inherited: 0x00)
struct FFortMtxPlatformList {
	struct TArray<enum class EFortMtxPlatform> MtxPlatformList; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortMusicSection
// Size: 0x18 (Inherited: 0x00)
struct FFortMusicSection {
	struct USoundBase* sound; // 0x00(0x08)
	float FadeInTime; // 0x08(0x04)
	float FadeOutTime; // 0x0c(0x04)
	float InitialOffset; // 0x10(0x04)
	float Duration; // 0x14(0x04)
};

// ScriptStruct FortniteGame.QueuedMusic
// Size: 0x10 (Inherited: 0x00)
struct FQueuedMusic {
	char pad_0[0x10]; // 0x00(0x10)
};

// ScriptStruct FortniteGame.MutatorAbilitySetEntry
// Size: 0x10 (Inherited: 0x00)
struct FMutatorAbilitySetEntry {
	struct TArray<struct FFortAbilitySetHandle> AppliedAbilitySetHandles; // 0x00(0x10)
};

// ScriptStruct FortniteGame.MutatorContext
// Size: 0x18 (Inherited: 0x00)
struct FMutatorContext {
	struct TArray<struct AActor*> MutatorOwners; // 0x00(0x10)
	char pad_10[0x8]; // 0x10(0x08)
};

// ScriptStruct FortniteGame.NativizationCachedFieldsToCompare
// Size: 0x20 (Inherited: 0x00)
struct FNativizationCachedFieldsToCompare {
	char pad_0[0x20]; // 0x00(0x20)
};

// ScriptStruct FortniteGame.ProfileStatRequirement
// Size: 0x18 (Inherited: 0x00)
struct FProfileStatRequirement {
	struct FString ProfileStat; // 0x00(0x10)
	char pad_10[0x8]; // 0x10(0x08)
};

// ScriptStruct FortniteGame.CalendarRequirement
// Size: 0x10 (Inherited: 0x00)
struct FCalendarRequirement {
	struct FName CalendarEventName; // 0x00(0x08)
	bool bActive; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	int32_t DaysFromEeventStart; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.QuestRequirement
// Size: 0x20 (Inherited: 0x00)
struct FQuestRequirement {
	struct UFortQuestItemDefinition* QuestDef; // 0x00(0x08)
	enum class EFortQuestState DesiredState; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct TArray<struct FObjectiveRequirement> Objectives; // 0x10(0x10)
};

// ScriptStruct FortniteGame.ObjectiveRequirement
// Size: 0x0c (Inherited: 0x00)
struct FObjectiveRequirement {
	struct FName ObjectiveBackendName; // 0x00(0x08)
	bool bCompleted; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.ItemRequirement
// Size: 0x10 (Inherited: 0x00)
struct FItemRequirement {
	struct UFortAccountItemDefinition* ItemDef; // 0x00(0x08)
	bool bMustOwnItem; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
};

// ScriptStruct FortniteGame.MetaNavCachedEntry
// Size: 0x1e8 (Inherited: 0x00)
struct FMetaNavCachedEntry {
	char pad_0[0x1e8]; // 0x00(0x1e8)
};

// ScriptStruct FortniteGame.OctopusAsyncDef
// Size: 0x01 (Inherited: 0x00)
struct FOctopusAsyncDef {
	char pad_0[0x1]; // 0x00(0x01)
};

// ScriptStruct FortniteGame.OctopusOutPersistent
// Size: 0x3e0 (Inherited: 0x10)
struct FOctopusOutPersistent : FFortVehicleOutPersistent {
	char pad_10[0x3c0]; // 0x10(0x3c0)
	struct FQuat ShellRotation; // 0x3d0(0x10)
};

// ScriptStruct FortniteGame.OctopusOutContinuous
// Size: 0x38 (Inherited: 0x28)
struct FOctopusOutContinuous : FFortVehicleOutContinuous {
	char pad_28[0x10]; // 0x28(0x10)
};

// ScriptStruct FortniteGame.OctopusInPersistent
// Size: 0x218 (Inherited: 0x138)
struct FOctopusInPersistent : FFortVehicleInPersistent {
	struct UFortOctopusVehicleConfigs* FortOctopusVehicleConfigs; // 0x138(0x08)
	struct TArray<struct FSphericalDriveContact> CachedContactPoints; // 0x140(0x10)
	char pad_150[0x9c]; // 0x150(0x9c)
	float BoostForce; // 0x1ec(0x04)
	float MaxVerticalBoostForce; // 0x1f0(0x04)
	float BoostSpeedKmh; // 0x1f4(0x04)
	struct FVector TowhookAimDir; // 0x1f8(0x0c)
	char pad_204[0x14]; // 0x204(0x14)
};

// ScriptStruct FortniteGame.SphericalDriveContact
// Size: 0x34 (Inherited: 0x00)
struct FSphericalDriveContact {
	struct FVector Location; // 0x00(0x0c)
	struct FVector Normal; // 0x0c(0x0c)
	struct FVector Impulse; // 0x18(0x0c)
	float Traction; // 0x24(0x04)
	struct TWeakObjectPtr<struct UPrimitiveComponent> Component; // 0x28(0x08)
	bool bIsBouncy; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
};

// ScriptStruct FortniteGame.FortOctopusCmd
// Size: 0x28 (Inherited: 0x00)
struct FFortOctopusCmd {
	char pad_0[0x28]; // 0x00(0x28)
};

// ScriptStruct FortniteGame.VerifyProfileTokenPayload
// Size: 0x50 (Inherited: 0x00)
struct FVerifyProfileTokenPayload {
	struct TMap<struct FString, struct FString> ProfileTokens; // 0x00(0x50)
};

// ScriptStruct FortniteGame.RestrictedCountry
// Size: 0x04 (Inherited: 0x00)
struct FRestrictedCountry {
	bool bHealthWarningShown; // 0x00(0x01)
	bool bAntiAddictionMessageShown; // 0x01(0x01)
	bool bRealMoneyStoreRestriction; // 0x02(0x01)
	bool bGameplayRestrictions; // 0x03(0x01)
};

// ScriptStruct FortniteGame.GeneralChatReturn
// Size: 0x28 (Inherited: 0x00)
struct FGeneralChatReturn {
	struct TArray<struct FGeneralChatRoom> GlobalChatRooms; // 0x00(0x10)
	struct TArray<struct FGeneralChatRoom> FounderChatRooms; // 0x10(0x10)
	bool bNeedsPaidAccessForGlobalChat; // 0x20(0x01)
	bool bNeedsPaidAccessForFounderChat; // 0x21(0x01)
	bool bIsGlobalChatDisabled; // 0x22(0x01)
	bool bIsFounderChatDisabled; // 0x23(0x01)
	bool bIsSubGameGlobalChatDisabled; // 0x24(0x01)
	char pad_25[0x3]; // 0x25(0x03)
};

// ScriptStruct FortniteGame.GeneralChatRoom
// Size: 0x28 (Inherited: 0x00)
struct FGeneralChatRoom {
	struct FString RoomName; // 0x00(0x10)
	int32_t CurrentMembersCount; // 0x10(0x04)
	int32_t MaxMembersCount; // 0x14(0x04)
	struct FString PublicFacingShardName; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortAnimInput_TurnCorrection
// Size: 0x34 (Inherited: 0x00)
struct FFortAnimInput_TurnCorrection {
	struct FFortCachedFloatCurve RotationCurve; // 0x00(0x0c)
	float YawCorrectionOffset; // 0x0c(0x04)
	float MaxYawCorrectionOffset; // 0x10(0x04)
	float CharacterMeshYawOffset; // 0x14(0x04)
	float CurveMultiplier; // 0x18(0x04)
	float CharacterInitialWorldYaw; // 0x1c(0x04)
	float CharacterWorldYawLastFrame; // 0x20(0x04)
	float AccumulatedAnimationYaw; // 0x24(0x04)
	float TotalYawFromCurve; // 0x28(0x04)
	float RotationCurveYawLastFrame; // 0x2c(0x04)
	bool bEnableDebug; // 0x30(0x01)
	bool bIsTurnFinished; // 0x31(0x01)
	char pad_32[0x2]; // 0x32(0x02)
};

// ScriptStruct FortniteGame.OutpostBuildingData
// Size: 0x28 (Inherited: 0x00)
struct FOutpostBuildingData {
	struct TSoftObjectPtr<struct UFortOutpostItemDefinition> ItemDefinition; // 0x00(0x28)
};

// ScriptStruct FortniteGame.OutpostUpgradeAndPrestigeBuildingData
// Size: 0x90 (Inherited: 0x28)
struct FOutpostUpgradeAndPrestigeBuildingData : FOutpostBuildingData {
	int32_t MaxPrestigeLevel; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct UDataTable* DefaultOutpostBuildingUpgradeData; // 0x30(0x08)
	struct TArray<struct FOutpostUpgradesPerTheaterData> PerTheaterOutpostBuildingUpgradeData; // 0x38(0x10)
	struct FOutpostPrestigeEffects DefaultPrestigeData; // 0x48(0x10)
	struct TArray<struct FOutpostPrestigeEffectsPerTheater> PrestigePerTheaterData; // 0x58(0x10)
	struct FOutpostPOSTBoost DefaultPOSTData; // 0x68(0x10)
	struct TArray<struct FOutpostPOSTPerTheaterData> POSTPerTheaterData; // 0x78(0x10)
	struct UGameplayEffect* POSTBuildingGameplayEffectClass; // 0x88(0x08)
};

// ScriptStruct FortniteGame.OutpostPOSTPerTheaterData
// Size: 0x18 (Inherited: 0x00)
struct FOutpostPOSTPerTheaterData {
	int32_t TheaterSlot; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FOutpostPOSTBoost POSTData; // 0x08(0x10)
};

// ScriptStruct FortniteGame.OutpostPOSTBoost
// Size: 0x10 (Inherited: 0x00)
struct FOutpostPOSTBoost {
	struct FCurveTableRowHandle PlayerStructureHealthModPerPOSTLevel; // 0x00(0x10)
};

// ScriptStruct FortniteGame.OutpostPrestigeEffectsPerTheater
// Size: 0x18 (Inherited: 0x00)
struct FOutpostPrestigeEffectsPerTheater {
	int32_t TheaterSlot; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FOutpostPrestigeEffects PrestigeEffects; // 0x08(0x10)
};

// ScriptStruct FortniteGame.OutpostPrestigeEffects
// Size: 0x10 (Inherited: 0x00)
struct FOutpostPrestigeEffects {
	struct TArray<struct UGameplayEffect*> EnemyPrestigeEffect; // 0x00(0x10)
};

// ScriptStruct FortniteGame.OutpostUpgradesPerTheaterData
// Size: 0x10 (Inherited: 0x00)
struct FOutpostUpgradesPerTheaterData {
	int32_t TheaterSlot; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct UDataTable* OutpostUpgradesData; // 0x08(0x08)
};

// ScriptStruct FortniteGame.StorageVaultBuildingData
// Size: 0x38 (Inherited: 0x28)
struct FStorageVaultBuildingData : FOutpostBuildingData {
	struct TArray<int32_t> ItemCapacityPerLevel; // 0x28(0x10)
};

// ScriptStruct FortniteGame.HarvestingOptimizerBuildingData
// Size: 0x28 (Inherited: 0x28)
struct FHarvestingOptimizerBuildingData : FOutpostBuildingData {
};

// ScriptStruct FortniteGame.OutpostItemUpgradeData
// Size: 0x58 (Inherited: 0x08)
struct FOutpostItemUpgradeData : FTableRowBase {
	struct TSoftObjectPtr<struct UFortOutpostItemDefinition> ItemDefinition; // 0x08(0x28)
	int32_t ItemLevel; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct FString RequiredItems; // 0x38(0x10)
	struct FString RequiredAccountItems; // 0x48(0x10)
};

// ScriptStruct FortniteGame.FortOutpostPOSTInfo
// Size: 0x10 (Inherited: 0x00)
struct FFortOutpostPOSTInfo {
	struct TArray<struct FFortDepositedResources> DepositedPostItems; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortDepositedResources
// Size: 0x18 (Inherited: 0x00)
struct FFortDepositedResources {
	struct FString TemplateId; // 0x00(0x10)
	int32_t Quantity; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.PlayerSquadMapping
// Size: 0x38 (Inherited: 0x00)
struct FPlayerSquadMapping {
	struct FName PlaylistName; // 0x00(0x08)
	struct FString PlayerID; // 0x08(0x10)
	struct FString CustomMatchKey; // 0x18(0x10)
	uint32_t TeamId; // 0x28(0x04)
	uint32_t PartyId; // 0x2c(0x04)
	int32_t SeatId; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// ScriptStruct FortniteGame.EmptyServerReservation
// Size: 0x58 (Inherited: 0x00)
struct FEmptyServerReservation {
	int32_t PlaylistId; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FString ZoneInstanceId; // 0x08(0x10)
	struct FString WUID; // 0x18(0x10)
	struct FUniqueNetIdRepl WorldDataOwner; // 0x28(0x28)
	bool bMakePrivate; // 0x50(0x01)
	enum class EFortMatchmakingPool MatchmakingPool; // 0x51(0x01)
	bool bUsesMatchmakingV2; // 0x52(0x01)
	char pad_53[0x5]; // 0x53(0x05)
};

// ScriptStruct FortniteGame.FortPatrolAnimSetWeaponPair
// Size: 0x10 (Inherited: 0x00)
struct FFortPatrolAnimSetWeaponPair {
	enum class EFortWeaponCoreAnimation WeaponType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct UFortPatrolAnimAsset* DataAsset; // 0x08(0x08)
};

// ScriptStruct FortniteGame.RecordedGunshot
// Size: 0x28 (Inherited: 0x00)
struct FRecordedGunshot {
	struct AFortWeapon* Weapon; // 0x00(0x08)
	struct AFortPawn* InstigatingFortPawn; // 0x08(0x08)
	struct FVector WorldLocation; // 0x10(0x0c)
	float Strength; // 0x1c(0x04)
	float Time; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.AthenaBatchedDamageGameplayCues_NonShared
// Size: 0x10 (Inherited: 0x00)
struct FAthenaBatchedDamageGameplayCues_NonShared {
	struct AActor* HitActor; // 0x00(0x08)
	struct AActor* NonPlayerHitActor; // 0x08(0x08)
};

// ScriptStruct FortniteGame.AthenaBatchedDamageGameplayCues_Shared
// Size: 0x44 (Inherited: 0x00)
struct FAthenaBatchedDamageGameplayCues_Shared {
	struct FVector_NetQuantize10 Location; // 0x00(0x0c)
	struct FVector_NetQuantizeNormal Normal; // 0x0c(0x0c)
	float Magnitude; // 0x18(0x04)
	bool bWeaponActivate; // 0x1c(0x01)
	bool bIsFatal; // 0x1d(0x01)
	bool bIsCritical; // 0x1e(0x01)
	bool bIsShield; // 0x1f(0x01)
	bool bIsShieldDestroyed; // 0x20(0x01)
	bool bIsShieldApplied; // 0x21(0x01)
	bool bIsBallistic; // 0x22(0x01)
	bool bIsBeam; // 0x23(0x01)
	struct FVector_NetQuantize10 NonPlayerLocation; // 0x24(0x0c)
	struct FVector_NetQuantizeNormal NonPlayerNormal; // 0x30(0x0c)
	float NonPlayerMagnitude; // 0x3c(0x04)
	bool NonPlayerbIsFatal; // 0x40(0x01)
	bool NonPlayerbIsCritical; // 0x41(0x01)
	bool bIsValid; // 0x42(0x01)
	char pad_43[0x1]; // 0x43(0x01)
};

// ScriptStruct FortniteGame.FortPawnVocalChord
// Size: 0xd8 (Inherited: 0x00)
struct FFortPawnVocalChord {
	struct UAudioComponent* FeedbackAudioComponent; // 0x00(0x08)
	struct FFortSpokenLine ReplicatedSpokenLine; // 0x08(0x30)
	struct FFortSpokenLine PendingSpokenLine; // 0x38(0x30)
	struct FFortSpokenLine QueuedSpokenLine; // 0x68(0x30)
	struct FFortSpokenLine CurrentSpokenLine; // 0x98(0x30)
	char pad_C8[0x10]; // 0xc8(0x10)
};

// ScriptStruct FortniteGame.AssetAttachment
// Size: 0x30 (Inherited: 0x00)
struct FAssetAttachment {
	struct FName SocketName; // 0x00(0x08)
	struct USkeletalMesh* SkeletalMeshAsset; // 0x08(0x08)
	struct UStaticMesh* StaticMeshAsset; // 0x10(0x08)
	bool bSkipOnDedicatedServers; // 0x18(0x01)
	bool bIsCurrentWeaponSubstitute; // 0x19(0x01)
	char pad_1A[0x6]; // 0x1a(0x06)
	struct USkeletalMeshComponentBudgeted* SkelMeshComp; // 0x20(0x08)
	struct UStaticMeshComponent* StaticMeshComp; // 0x28(0x08)
};

// ScriptStruct FortniteGame.CalloutEntry
// Size: 0x90 (Inherited: 0x00)
struct FCalloutEntry {
	struct FGameplayTag CalloutTag; // 0x00(0x08)
	struct FSlateBrush CalloutIcon; // 0x08(0x88)
};

// ScriptStruct FortniteGame.SavedPosition
// Size: 0x2c (Inherited: 0x00)
struct FSavedPosition {
	char pad_0[0x2c]; // 0x00(0x2c)
};

// ScriptStruct FortniteGame.PawnDamageZones
// Size: 0x18 (Inherited: 0x00)
struct FPawnDamageZones {
	bool bActive; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FName> Bones; // 0x08(0x10)
};

// ScriptStruct FortniteGame.DamageDoneTargetInfo
// Size: 0x30 (Inherited: 0x00)
struct FDamageDoneTargetInfo {
	struct FGameplayTagContainer TrackedTargetTags; // 0x00(0x20)
	struct TArray<struct FDamageDoneSourceInfo> TrackedSourceData; // 0x20(0x10)
};

// ScriptStruct FortniteGame.DamageDoneSourceInfo
// Size: 0x28 (Inherited: 0x00)
struct FDamageDoneSourceInfo {
	struct FGameplayTagContainer TrackedSourceTags; // 0x00(0x20)
	float DamageAmount; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.DamageDoneInfo
// Size: 0x28 (Inherited: 0x00)
struct FDamageDoneInfo {
	struct FGameplayTagContainer TrackedDamageTagGrouping; // 0x00(0x20)
	float DamageAmount; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.DamagerInfo
// Size: 0x30 (Inherited: 0x00)
struct FDamagerInfo {
	struct AActor* DamageCauser; // 0x00(0x08)
	int32_t DamageAmount; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FGameplayTagContainer SourceTags; // 0x10(0x20)
};

// ScriptStruct FortniteGame.BuildingHitTime
// Size: 0x18 (Inherited: 0x00)
struct FBuildingHitTime {
	struct ABuildingActor* HitBuilding; // 0x00(0x08)
	char pad_8[0x10]; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortPassiveHealerPawnInfo
// Size: 0x10 (Inherited: 0x00)
struct FFortPassiveHealerPawnInfo {
	struct AFortPawn* Pawn; // 0x00(0x08)
	bool bEmoteStarted; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
};

// ScriptStruct FortniteGame.ScriptedBehavior
// Size: 0x20 (Inherited: 0x00)
struct FScriptedBehavior {
	struct FString ScriptName; // 0x00(0x10)
	struct TArray<struct FScriptedAction> Actions; // 0x10(0x10)
};

// ScriptStruct FortniteGame.ScriptedAction
// Size: 0x70 (Inherited: 0x00)
struct FScriptedAction {
	struct FString Template; // 0x00(0x10)
	struct TArray<struct FString> Params; // 0x10(0x10)
	struct TMap<struct FString, struct FString> ParamMap; // 0x20(0x50)
};

// ScriptStruct FortniteGame.FortBadMatchTrigger
// Size: 0x30 (Inherited: 0x00)
struct FFortBadMatchTrigger {
	struct FName Key; // 0x00(0x08)
	enum class EFortBadMatchTriggerOperation Operation; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	double Value; // 0x10(0x08)
	struct TArray<struct FName> Playlists; // 0x18(0x10)
	enum class EFortBadMatchTriggerType Type; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// ScriptStruct FortniteGame.FortPresenceGameplayStats
// Size: 0x20 (Inherited: 0x00)
struct FFortPresenceGameplayStats {
	struct FString State; // 0x00(0x10)
	struct FName Playlist; // 0x10(0x08)
	int32_t NumKills; // 0x18(0x04)
	bool bFellToDeath; // 0x1c(0x01)
	char pad_1D[0x3]; // 0x1d(0x03)
};

// ScriptStruct FortniteGame.FortPresenceBasicInfo
// Size: 0x04 (Inherited: 0x00)
struct FFortPresenceBasicInfo {
	int32_t HomeBaseRating; // 0x00(0x04)
};

// ScriptStruct FortniteGame.FortZoneInstanceInfo
// Size: 0x68 (Inherited: 0x00)
struct FFortZoneInstanceInfo {
	struct FString WorldId; // 0x00(0x10)
	struct FString TheaterId; // 0x10(0x10)
	struct FString TheaterMissionId; // 0x20(0x10)
	struct FString TheaterMissionAlertId; // 0x30(0x10)
	SoftClassProperty ZoneThemeClass; // 0x40(0x28)
};

// ScriptStruct FortniteGame.FortZoneInstanceDetails
// Size: 0x128 (Inherited: 0x68)
struct FFortZoneInstanceDetails : FFortZoneInstanceInfo {
	SoftClassProperty MissionGenerator; // 0x68(0x28)
	struct FDataTableRowHandle ZoneDifficultyInfo; // 0x90(0x10)
	struct FMcpLootResult MissionRewards; // 0xa0(0x20)
	struct TArray<struct FMcpLootResult> DifficultyIncreaseMissionRewards; // 0xc0(0x10)
	struct FMcpLootResult MissionAlertRewards; // 0xd0(0x20)
	struct FMcpLootResult ZoneModifiers; // 0xf0(0x20)
	struct FString MissionAlertCategoryName; // 0x110(0x10)
	int32_t TileIndex; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
};

// ScriptStruct FortniteGame.FortSavedModeLoadout
// Size: 0x20 (Inherited: 0x00)
struct FFortSavedModeLoadout {
	struct FString LoadoutName; // 0x00(0x10)
	struct TArray<struct FString> SelectedGadgets; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortPetOffsets
// Size: 0xa8 (Inherited: 0x00)
struct FFortPetOffsets {
	struct FVector DefaultIdle; // 0x00(0x0c)
	struct FVector DefaultDownsights; // 0x0c(0x0c)
	struct FVector CrouchIdle; // 0x18(0x0c)
	struct FVector CrouchDownsights; // 0x24(0x0c)
	struct FVector DBNOIdle; // 0x30(0x0c)
	struct FVector MeleePlaying; // 0x3c(0x0c)
	struct FVector EmotePlaying; // 0x48(0x0c)
	struct FVector DefaultSkydive; // 0x54(0x0c)
	struct FVector SurfaceSwimmingIdle; // 0x60(0x0c)
	struct FVector SurfaceSwimmingDownsights; // 0x6c(0x0c)
	struct FVector SurfaceSwimmingMeleePlaying; // 0x78(0x0c)
	struct FVector DiveJumping; // 0x84(0x0c)
	struct FVector CrouchTurning; // 0x90(0x0c)
	struct FVector DivingSkydive; // 0x9c(0x0c)
};

// ScriptStruct FortniteGame.PetResponseFromQuestSystem
// Size: 0x20 (Inherited: 0x00)
struct FPetResponseFromQuestSystem {
	struct FDataTableRowHandle ObjectiveStatHandle; // 0x00(0x10)
	struct FGameplayTag ResponseTag; // 0x10(0x08)
	float ResponseDuration; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.PhysicsObjectMovementStateData
// Size: 0x94 (Inherited: 0x00)
struct FPhysicsObjectMovementStateData {
	enum class EFortPhysicsObjectMovementState MovementState; // 0x00(0x01)
	enum class EFortPhysicsObjectMovementState PreviousMovementState; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	struct FHitResult LastMovingHitResult; // 0x04(0x88)
	float TimeMovementStateUpdated; // 0x8c(0x04)
	float MovingStopTime; // 0x90(0x04)
};

// ScriptStruct FortniteGame.PhysicsObjectImpactInstigatorData
// Size: 0x10 (Inherited: 0x00)
struct FPhysicsObjectImpactInstigatorData {
	struct AActor* ImpactInstigator; // 0x00(0x08)
	float ServerTimeAssigned; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortPhysicsSimulationRepData
// Size: 0x28 (Inherited: 0x00)
struct FFortPhysicsSimulationRepData {
	enum class EFortPhysicsSimulationRepEvent EventType; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FVector RepAppliedVector; // 0x04(0x0c)
	struct FVector RepLocationVector; // 0x10(0x0c)
	struct FName RepBoneName; // 0x1c(0x08)
	bool bRepFlag; // 0x24(0x01)
	char pad_25[0x3]; // 0x25(0x03)
};

// ScriptStruct FortniteGame.VehicleSafeTeleportInfo
// Size: 0x18 (Inherited: 0x00)
struct FVehicleSafeTeleportInfo {
	struct FVector Location; // 0x00(0x0c)
	struct FRotator Rotation; // 0x0c(0x0c)
};

// ScriptStruct FortniteGame.PhysicsPawnObjectInitialParameters
// Size: 0x24 (Inherited: 0x00)
struct FPhysicsPawnObjectInitialParameters {
	struct FVector InitialVelocity; // 0x00(0x0c)
	float OverrideMassInKG; // 0x0c(0x04)
	float OverrideAngularDampening; // 0x10(0x04)
	float OverrideLinearDampening; // 0x14(0x04)
	float PlayerForceMultiplier; // 0x18(0x04)
	float PawnKnockbackMultiplier; // 0x1c(0x04)
	char bEnableGravity : 1; // 0x20(0x01)
	char bEnableGravityOnHit : 1; // 0x20(0x01)
	char bShouldKillPawnOnHit : 1; // 0x20(0x01)
	char pad_20_3 : 5; // 0x20(0x01)
	char pad_21[0x3]; // 0x21(0x03)
};

// ScriptStruct FortniteGame.HitData
// Size: 0x70 (Inherited: 0x00)
struct FHitData {
	float PingOfHitter; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct APawn* HittingPawn; // 0x08(0x08)
	struct FVector HitNormal; // 0x10(0x0c)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct FTimeStampedPhysicsPawnState ObjectState; // 0x20(0x50)
};

// ScriptStruct FortniteGame.FortPhysicsVehicleDamageOverrideConfigs
// Size: 0xd0 (Inherited: 0x00)
struct FFortPhysicsVehicleDamageOverrideConfigs {
	struct FGameplayTag Tag; // 0x00(0x08)
	struct FScalableFloat MaxDamageOverride; // 0x08(0x28)
	struct FScalableFloat MinDamageOverride; // 0x30(0x28)
	struct FScalableFloat MinimumSpeed; // 0x58(0x28)
	struct FScalableFloat SpeedForMaximumDamage; // 0x80(0x28)
	struct FScalableFloat SpeedForMinimumDamage; // 0xa8(0x28)
};

// ScriptStruct FortniteGame.FortPickupLocationData
// Size: 0x60 (Inherited: 0x00)
struct FFortPickupLocationData {
	struct AFortPawn* PickupTarget; // 0x00(0x08)
	struct AFortPickup* CombineTarget; // 0x08(0x08)
	struct AFortPawn* ItemOwner; // 0x10(0x08)
	struct FVector_NetQuantize10 LootInitialPosition; // 0x18(0x0c)
	struct FVector_NetQuantize10 LootFinalPosition; // 0x24(0x0c)
	float FlyTime; // 0x30(0x04)
	struct FVector_NetQuantizeNormal StartDirection; // 0x34(0x0c)
	struct FVector_NetQuantize10 FinalTossRestLocation; // 0x40(0x0c)
	enum class EFortPickupTossState TossState; // 0x4c(0x01)
	bool bPlayPickupSound; // 0x4d(0x01)
	char pad_4E[0x2]; // 0x4e(0x02)
	struct FGuid PickupGuid; // 0x50(0x10)
};

// ScriptStruct FortniteGame.FortPickupEntryData
// Size: 0x30 (Inherited: 0x00)
struct FFortPickupEntryData {
	struct FInterpCurveFloat FloatCurve; // 0x00(0x18)
	struct FGuid PickupGuid; // 0x18(0x10)
	float StartTime; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.CanInteractResult
// Size: 0x1c (Inherited: 0x00)
struct FCanInteractResult {
	struct TWeakObjectPtr<struct AFortPlayerPawn> RequestingPawn; // 0x00(0x08)
	struct TWeakObjectPtr<struct AFortPlayerController> RequestingPlayerController; // 0x08(0x08)
	struct TWeakObjectPtr<struct UPrimitiveComponent> InteractComponent; // 0x10(0x08)
	char pad_18[0x4]; // 0x18(0x04)
};

// ScriptStruct FortniteGame.PickupInstigatorData
// Size: 0x68 (Inherited: 0x00)
struct FPickupInstigatorData {
	char TeamIndex; // 0x00(0x01)
	enum class ETeamAttitude TargetAttitude; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	float AccentColorParam; // 0x04(0x04)
	int32_t ScoreValue; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FPropertyOverrideData ItemOptionData; // 0x10(0x50)
	struct AFortPickup* OverridePickupClass; // 0x60(0x08)
};

// ScriptStruct FortniteGame.PickupInstigatorArray
// Size: 0x1c8 (Inherited: 0x108)
struct FPickupInstigatorArray : FFastArraySerializer {
	struct TArray<struct FPickupInstigator> Items; // 0x108(0x10)
	int32_t NextTrackedIndex; // 0x118(0x04)
	char pad_11C[0xac]; // 0x11c(0xac)
};

// ScriptStruct FortniteGame.PickupInstigator
// Size: 0xa0 (Inherited: 0x0c)
struct FPickupInstigator : FFastArraySerializerItem {
	int32_t TrackedIndex; // 0x0c(0x04)
	struct FPickupInstigatorData InstigatorData; // 0x10(0x68)
	char pad_78[0x28]; // 0x78(0x28)
};

// ScriptStruct FortniteGame.FortCameraPrototype
// Size: 0x28 (Inherited: 0x00)
struct FFortCameraPrototype {
	struct FName PrototypeName; // 0x00(0x08)
	struct FString PrototypeDescription; // 0x08(0x10)
	struct TArray<struct FFortCameraModeOverride> ModeOverrides; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortCameraModeOverride
// Size: 0x10 (Inherited: 0x00)
struct FFortCameraModeOverride {
	struct UFortCameraMode* OriginalClass; // 0x00(0x08)
	struct UFortCameraMode* ClassOverride; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortCameraInstanceEntry
// Size: 0x18 (Inherited: 0x00)
struct FFortCameraInstanceEntry {
	struct UFortCameraMode* CameraClass; // 0x00(0x08)
	struct AActor* ViewTarget; // 0x08(0x08)
	struct UFortCameraMode* Camera; // 0x10(0x08)
};

// ScriptStruct FortniteGame.ActiveFortCamera
// Size: 0x20 (Inherited: 0x00)
struct FActiveFortCamera {
	struct UFortCameraMode* Camera; // 0x00(0x08)
	struct AActor* ViewTarget; // 0x08(0x08)
	float TransitionAlpha; // 0x10(0x04)
	float TransitionUpdateRate; // 0x14(0x04)
	float BlendWeight; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortPlayerControllerDuringPhysicsTickFunction
// Size: 0x30 (Inherited: 0x30)
struct FFortPlayerControllerDuringPhysicsTickFunction : FActorTickFunction {
};

// ScriptStruct FortniteGame.FortPipTest
// Size: 0x20 (Inherited: 0x08)
struct FFortPipTest : FTableRowBase {
	struct UMediaPlayer* MediaPlayer; // 0x08(0x08)
	struct UStreamMediaSource* StreamMediaSource; // 0x10(0x08)
	struct UObject* WidgetClass; // 0x18(0x08)
};

// ScriptStruct FortniteGame.CreativeToolPersistentData
// Size: 0x08 (Inherited: 0x00)
struct FCreativeToolPersistentData {
	char GridSnapIndex; // 0x00(0x01)
	char RotationAxisIndex; // 0x01(0x01)
	char SelectedScaleAxis; // 0x02(0x01)
	bool bShouldUsePrecisionGridSnapping; // 0x03(0x01)
	bool bAllowGravityOnPlace; // 0x04(0x01)
	bool bShouldDestroyPropsWhenPlacing; // 0x05(0x01)
	char HitTraceRule; // 0x06(0x01)
	bool bIsScalingInsteadOfRotating; // 0x07(0x01)
};

// ScriptStruct FortniteGame.ServerSideHitMarker
// Size: 0x28 (Inherited: 0x00)
struct FServerSideHitMarker {
	char pad_0[0x28]; // 0x00(0x28)
};

// ScriptStruct FortniteGame.VoiceChatUsageAnalytics
// Size: 0x38 (Inherited: 0x00)
struct FVoiceChatUsageAnalytics {
	char pad_0[0x38]; // 0x00(0x38)
};

// ScriptStruct FortniteGame.CraftingQueueInfo
// Size: 0x0c (Inherited: 0x00)
struct FCraftingQueueInfo {
	char pad_0[0xc]; // 0x00(0x0c)
};

// ScriptStruct FortniteGame.XPEventArray
// Size: 0x120 (Inherited: 0x108)
struct FXPEventArray : FFastArraySerializer {
	struct TArray<struct FXPEventEntry> Entries; // 0x108(0x10)
	struct UFortPlayerControllerAthenaXPComponent* ParentComp; // 0x118(0x08)
};

// ScriptStruct FortniteGame.XPEventEntry
// Size: 0x50 (Inherited: 0x0c)
struct FXPEventEntry : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct FText SimulatedXpEvent; // 0x10(0x18)
	struct UFortQuestItemDefinition* QuestDef; // 0x28(0x08)
	struct FPrimaryAssetId Accolade; // 0x30(0x10)
	float Time; // 0x40(0x04)
	int32_t EventXpValue; // 0x44(0x04)
	int32_t TotalXpEarnedInMatch; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// ScriptStruct FortniteGame.XPUIEvent
// Size: 0x28 (Inherited: 0x00)
struct FXPUIEvent {
	struct UFortAccoladeItemDefinition* AccoladeDef; // 0x00(0x08)
	struct FText SimulatedXpEvent; // 0x08(0x18)
	int32_t OldXPValue; // 0x20(0x04)
	int32_t EventXpValue; // 0x24(0x04)
};

// ScriptStruct FortniteGame.FortPhoenixLevelUpData
// Size: 0x18 (Inherited: 0x00)
struct FFortPhoenixLevelUpData {
	int32_t Level; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct TArray<struct FFortItemInstanceQuantityPair> Rewards; // 0x08(0x10)
};

// ScriptStruct FortniteGame.HighlightReel
// Size: 0x38 (Inherited: 0x00)
struct FHighlightReel {
	int32_t TotalDurationSeconds; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FText Description; // 0x08(0x18)
	enum class EHighlightReelTypes HighlightType; // 0x20(0x01)
	char pad_21[0x17]; // 0x21(0x17)
};

// ScriptStruct FortniteGame.FortTagToGliderAnimSetPair
// Size: 0x248 (Inherited: 0x00)
struct FFortTagToGliderAnimSetPair {
	struct FGameplayTag MatchingTag; // 0x00(0x08)
	struct FFortAnimInput_PlayerGliderAnimAsset OverrideAnimAsset; // 0x08(0x240)
};

// ScriptStruct FortniteGame.FortInputActionThatShouldAlwaysBeBound
// Size: 0x18 (Inherited: 0x00)
struct FFortInputActionThatShouldAlwaysBeBound {
	struct FName ActionName; // 0x00(0x08)
	struct TArray<struct FName> AlternateActionNames; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortInputActionGroupContext
// Size: 0x0c (Inherited: 0x00)
struct FFortInputActionGroupContext {
	struct FName ActionName; // 0x00(0x08)
	enum class EFortInputActionGroup InputActionGroup; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.FortInputActionDetails
// Size: 0x20 (Inherited: 0x00)
struct FFortInputActionDetails {
	enum class EFortInputActionType InputActionType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FKey ActionKey; // 0x08(0x18)
};

// ScriptStruct FortniteGame.FortAxisSmoothing
// Size: 0x18 (Inherited: 0x00)
struct FFortAxisSmoothing {
	float ZeroTime; // 0x00(0x04)
	struct FVector AverageValue; // 0x04(0x0c)
	int32_t Samples; // 0x10(0x04)
	float TotalSampleTime; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortInputActionKeyAlias
// Size: 0x28 (Inherited: 0x00)
struct FFortInputActionKeyAlias {
	struct FName ActionName; // 0x00(0x08)
	struct FKey KeyAlias; // 0x08(0x18)
	enum class EFortInputActionType InputActionType; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
};

// ScriptStruct FortniteGame.MorphValuePair
// Size: 0x0c (Inherited: 0x00)
struct FMorphValuePair {
	struct FName MorphName; // 0x00(0x08)
	float MorphValue; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortPlayerPawnObjectReference
// Size: 0x10 (Inherited: 0x00)
struct FFortPlayerPawnObjectReference {
	char pad_0[0x8]; // 0x00(0x08)
	struct UObject* TrackedObject; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortPawnMaterialOverrideState
// Size: 0x40 (Inherited: 0x00)
struct FFortPawnMaterialOverrideState {
	struct USceneComponent* SceneComp; // 0x00(0x08)
	struct TArray<struct UMaterialInterface*> OriginalMaterials; // 0x08(0x10)
	struct TArray<struct UMaterialInterface*> AppliedMaterials; // 0x18(0x10)
	struct TArray<struct UFXSystemComponent*> FXComps; // 0x28(0x10)
	char pad_38[0x8]; // 0x38(0x08)
};

// ScriptStruct FortniteGame.FortPickupRequestInfo
// Size: 0x24 (Inherited: 0x00)
struct FFortPickupRequestInfo {
	struct FGuid SwapWithItem; // 0x00(0x10)
	float FlyTime; // 0x10(0x04)
	struct FVector Direction; // 0x14(0x0c)
	char bPlayPickupSound : 1; // 0x20(0x01)
	char bIsAutoPickup : 1; // 0x20(0x01)
	char bUseRequestedSwap : 1; // 0x20(0x01)
	char bTrySwapWithWeapon : 1; // 0x20(0x01)
	char bIsVisualOnlyPickup : 1; // 0x20(0x01)
	char pad_20_5 : 3; // 0x20(0x01)
	char pad_21[0x3]; // 0x21(0x03)
};

// ScriptStruct FortniteGame.PreviouslyAppliedVariantData
// Size: 0x88 (Inherited: 0x00)
struct FPreviouslyAppliedVariantData {
	char pad_0[0x8]; // 0x00(0x08)
	struct UAthenaCharacterItemDefinition* Character; // 0x08(0x08)
	struct UAthenaSkyDiveContrailItemDefinition* Contrail; // 0x10(0x08)
	struct UAthenaPickaxeItemDefinition* Pickaxe; // 0x18(0x08)
	struct UAthenaBackpackItemDefinition* Backpack; // 0x20(0x08)
	char pad_28[0x50]; // 0x28(0x50)
	struct TArray<struct FMcpVariantChannelInfo> Variants; // 0x78(0x10)
};

// ScriptStruct FortniteGame.IgnoreCollisionActor
// Size: 0x10 (Inherited: 0x00)
struct FIgnoreCollisionActor {
	struct AActor* IgnoreActor; // 0x00(0x08)
	float TimeIgnoreStarted; // 0x08(0x04)
	float IgnoreDuration; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortTetherSessionTelemetryInfo
// Size: 0x38 (Inherited: 0x00)
struct FFortTetherSessionTelemetryInfo {
	char pad_0[0x38]; // 0x00(0x38)
};

// ScriptStruct FortniteGame.AnimLayersOverrideData
// Size: 0x18 (Inherited: 0x00)
struct FAnimLayersOverrideData {
	char pad_0[0x18]; // 0x00(0x18)
};

// ScriptStruct FortniteGame.AnimSetOverrideData
// Size: 0x0c (Inherited: 0x00)
struct FAnimSetOverrideData {
	char pad_0[0xc]; // 0x00(0x0c)
};

// ScriptStruct FortniteGame.FortFootstepBankOverrideData
// Size: 0x0c (Inherited: 0x00)
struct FFortFootstepBankOverrideData {
	char pad_0[0xc]; // 0x00(0x0c)
};

// ScriptStruct FortniteGame.FortAnimBPOverrideData
// Size: 0x10 (Inherited: 0x00)
struct FFortAnimBPOverrideData {
	char pad_0[0x10]; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortRedeployGliderTelemetryData
// Size: 0x20 (Inherited: 0x00)
struct FFortRedeployGliderTelemetryData {
	char pad_0[0x20]; // 0x00(0x20)
};

// ScriptStruct FortniteGame.SlipperySlopeParams
// Size: 0x1b8 (Inherited: 0x00)
struct FSlipperySlopeParams {
	struct FScalableFloat SlopeForceAcceleration; // 0x00(0x28)
	struct FScalableFloat MaxLateralSpeed; // 0x28(0x28)
	struct FScalableFloat MaxLateralSpeedMultiplierInWater; // 0x50(0x28)
	struct FScalableFloat BrakingDecelerationInWater; // 0x78(0x28)
	struct FScalableFloat MaxVerticalLaunchSpeed; // 0xa0(0x28)
	struct FScalableFloat SlopeLandingForceScalar; // 0xc8(0x28)
	struct FScalableFloat SlopeLandingMaxHorizontalForce; // 0xf0(0x28)
	struct FScalableFloat SlopeLaunchMinRequiredSpeed; // 0x118(0x28)
	struct FScalableFloat SlopeLaunchMinRequiredAngleChange; // 0x140(0x28)
	struct FScalableFloat SlopeLaunchVerticalVelocityBoost; // 0x168(0x28)
	struct FScalableFloat SlopeLaunchVerticalVelocityBoostMultiplierJumping; // 0x190(0x28)
};

// ScriptStruct FortniteGame.VortexParams
// Size: 0x10 (Inherited: 0x00)
struct FVortexParams {
	float GravityFloorAltitude; // 0x00(0x04)
	float GravityFloorWidth; // 0x04(0x04)
	float GravityFloorGravityScalar; // 0x08(0x04)
	float GravityFloorTerminalVelocity; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.ZiplinePawnState
// Size: 0x28 (Inherited: 0x00)
struct FZiplinePawnState {
	struct AFortAthenaZiplineBase* Zipline; // 0x00(0x08)
	bool bIsZiplining; // 0x08(0x01)
	bool bJumped; // 0x09(0x01)
	bool bReachedEnd; // 0x0a(0x01)
	char pad_B[0x1]; // 0x0b(0x01)
	int32_t AuthoritativeValue; // 0x0c(0x04)
	struct FVector SocketOffset; // 0x10(0x0c)
	float TimeZipliningBegan; // 0x1c(0x04)
	float TimeZipliningEndedFromJump; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.VehiclePawnState
// Size: 0x20 (Inherited: 0x00)
struct FVehiclePawnState {
	struct AActor* Vehicle; // 0x00(0x08)
	float VehicleApexZ; // 0x08(0x04)
	char SeatIndex; // 0x0c(0x01)
	char ExitSocketIndex; // 0x0d(0x01)
	bool bOverrideVehicleExit; // 0x0e(0x01)
	char pad_F[0x1]; // 0x0f(0x01)
	struct FVector SeatTransitionVector; // 0x10(0x0c)
	float EntryTime; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.RepFortMeshAttachment
// Size: 0x10 (Inherited: 0x00)
struct FRepFortMeshAttachment {
	struct USkeletalMesh* SkeletalMesh; // 0x00(0x08)
	struct UAnimInstance* AnimBP; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortCharacterPartsRepMontageInfo
// Size: 0x20 (Inherited: 0x00)
struct FFortCharacterPartsRepMontageInfo {
	struct TArray<struct FFortCharacterPartMontageInfo> CharPartMontages; // 0x00(0x10)
	struct UAnimMontage* PawnMontage; // 0x10(0x08)
	bool bPlayBit; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
};

// ScriptStruct FortniteGame.FortPlayerPawnStats
// Size: 0xd8 (Inherited: 0xb8)
struct FFortPlayerPawnStats : FFortPawnStats {
	float MaxJumpTime; // 0xb8(0x04)
	float MaxStamina; // 0xbc(0x04)
	float StaminaRegenRate; // 0xc0(0x04)
	float StaminaRegenDelay; // 0xc4(0x04)
	float SprintingStaminaExpenditureRate; // 0xc8(0x04)
	struct FName PersonalVehicleFallingDamageTableRow; // 0xcc(0x08)
	char pad_D4[0x4]; // 0xd4(0x04)
};

// ScriptStruct FortniteGame.FortDBNOCarryHoisterData
// Size: 0x10 (Inherited: 0x00)
struct FFortDBNOCarryHoisterData {
	struct AFortPlayerPawn* DBNOHoister; // 0x00(0x08)
	enum class EFortDBNOCarryEvent DBNOCarryEvent; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
};

// ScriptStruct FortniteGame.CustomHighlighting
// Size: 0x04 (Inherited: 0x00)
struct FCustomHighlighting {
	char pad_0[0x4]; // 0x00(0x04)
};

// ScriptStruct FortniteGame.FortPlayerAthenaAttributeReplicationProxy
// Size: 0x18 (Inherited: 0x00)
struct FFortPlayerAthenaAttributeReplicationProxy {
	float WalkSpeed; // 0x00(0x04)
	float RunSpeed; // 0x04(0x04)
	float SprintSpeed; // 0x08(0x04)
	float FlySpeed; // 0x0c(0x04)
	float CrouchedRunSpeed; // 0x10(0x04)
	float CrouchedSprintSpeed; // 0x14(0x04)
};

// ScriptStruct FortniteGame.SharedRepMovement
// Size: 0x58 (Inherited: 0x00)
struct FSharedRepMovement {
	struct FRepMovement RepMovement; // 0x00(0x34)
	float RepTimeStamp; // 0x34(0x04)
	float TurretYaw; // 0x38(0x04)
	float TurretPitch; // 0x3c(0x04)
	uint32_t RemoteViewData32; // 0x40(0x04)
	uint16_t AccelerationPack; // 0x44(0x02)
	int8_t AccelerationZPack; // 0x46(0x01)
	char RepMovementMode; // 0x47(0x01)
	char JumpFlashCountPacked; // 0x48(0x01)
	char LandingFlashCountPacked; // 0x49(0x01)
	enum class EFortMovementStyle CurrentMovementStyle; // 0x4a(0x01)
	bool bProxyIsJumpForceApplied; // 0x4b(0x01)
	bool bIsCrouched; // 0x4c(0x01)
	bool bIsSkydiving; // 0x4d(0x01)
	bool bIsParachuteOpen; // 0x4e(0x01)
	bool bIsSlopeSliding; // 0x4f(0x01)
	bool bIsProxySimulationTimedOut; // 0x50(0x01)
	bool bIsTargeting; // 0x51(0x01)
	bool bIsWaterJump; // 0x52(0x01)
	bool bIsWaterSprintBoost; // 0x53(0x01)
	bool bIsWaterSprintBoostPending; // 0x54(0x01)
	char pad_55[0x3]; // 0x55(0x03)
};

// ScriptStruct FortniteGame.AthenaPawnReplayData
// Size: 0x30 (Inherited: 0x00)
struct FAthenaPawnReplayData {
	float HealthRatio; // 0x00(0x04)
	float ShieldRatio; // 0x04(0x04)
	struct TArray<char> CipherText; // 0x08(0x10)
	struct UWorld* World; // 0x18(0x08)
	char pad_20[0x10]; // 0x20(0x10)
};

// ScriptStruct FortniteGame.TechCurrentLevelCap
// Size: 0x28 (Inherited: 0x00)
struct FTechCurrentLevelCap {
	struct FString CalendarEvent; // 0x00(0x10)
	struct FString EventFlag; // 0x10(0x10)
	int32_t LevelCap; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.PlayerPerkLevel
// Size: 0x10 (Inherited: 0x00)
struct FPlayerPerkLevel {
	struct TArray<struct UFortSpyTechItemDefinition*> PlayerPerks; // 0x00(0x10)
};

// ScriptStruct FortniteGame.PetStimuliRepData
// Size: 0x0c (Inherited: 0x00)
struct FPetStimuliRepData {
	struct FGameplayTag Stimuli; // 0x00(0x08)
	float GameTimeEnd; // 0x08(0x04)
};

// ScriptStruct FortniteGame.PersistenceDelegateHandle
// Size: 0x10 (Inherited: 0x00)
struct FPersistenceDelegateHandle {
	char pad_0[0x10]; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortVehicleUseTelemetryInfo
// Size: 0x30 (Inherited: 0x00)
struct FFortVehicleUseTelemetryInfo {
	char pad_0[0x30]; // 0x00(0x30)
};

// ScriptStruct FortniteGame.CustomFeedMessageContext
// Size: 0x14 (Inherited: 0x00)
struct FCustomFeedMessageContext {
	struct TWeakObjectPtr<struct AFortPlayerStateAthena> OwningPlayerState; // 0x00(0x08)
	struct FVector OriginLocation; // 0x08(0x0c)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsData
// Size: 0x30 (Inherited: 0x00)
struct FFortPlayerSurveyAnalyticsData {
	struct FString SurveyID; // 0x00(0x10)
	struct TArray<struct FFortPlayerSurveyAnalyticsQuestion> Questions; // 0x10(0x10)
	struct TArray<struct FFortPlayerSurveyAnalyticsTextReplacementEvaluation> TextReplacementEvaluations; // 0x20(0x10)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsTextReplacementEvaluation
// Size: 0x30 (Inherited: 0x00)
struct FFortPlayerSurveyAnalyticsTextReplacementEvaluation {
	struct FString TextReplacementTag; // 0x00(0x10)
	struct FString TextReplacementValueID; // 0x10(0x10)
	struct FString TextReplacementValueLocalized; // 0x20(0x10)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsQuestion
// Size: 0x40 (Inherited: 0x00)
struct FFortPlayerSurveyAnalyticsQuestion {
	uint32_t InitialOrder; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FString QuestionTextID; // 0x08(0x10)
	struct FString QuestionTextLocalized; // 0x18(0x10)
	struct TArray<struct FFortPlayerSurveyAnalyticsResponse> Responses; // 0x28(0x10)
	uint32_t TimeTaken; // 0x38(0x04)
	bool bAnswered; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsResponse
// Size: 0x38 (Inherited: 0x00)
struct FFortPlayerSurveyAnalyticsResponse {
	uint32_t InitialOrder; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FString ResponseTextID; // 0x08(0x10)
	struct FString ResponseTextLocalized; // 0x18(0x10)
	struct FString Selection; // 0x28(0x10)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsSurveyResponse
// Size: 0x48 (Inherited: 0x00)
struct FFortPlayerSurveyAnalyticsSurveyResponse {
	struct FString SurveyID; // 0x00(0x10)
	enum class EFortPlayerSurveyAnalyticsFinishReason FinishReason; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct FJsonObjectWrapper MetaData; // 0x18(0x20)
	struct TArray<struct FFortPlayerSurveyAnalyticsAnswer> Answers; // 0x38(0x10)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsAnswer
// Size: 0x20 (Inherited: 0x00)
struct FFortPlayerSurveyAnalyticsAnswer {
	char pad_0[0x20]; // 0x00(0x20)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsAnswerBase
// Size: 0x04 (Inherited: 0x00)
struct FFortPlayerSurveyAnalyticsAnswerBase {
	uint32_t TimeTaken; // 0x00(0x04)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsAnswerFreeFormText
// Size: 0x18 (Inherited: 0x04)
struct FFortPlayerSurveyAnalyticsAnswerFreeFormText : FFortPlayerSurveyAnalyticsAnswerBase {
	char pad_4[0x4]; // 0x04(0x04)
	struct FString AnswerText; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsAnswerMultipleSelection
// Size: 0x18 (Inherited: 0x04)
struct FFortPlayerSurveyAnalyticsAnswerMultipleSelection : FFortPlayerSurveyAnalyticsAnswerBase {
	char pad_4[0x4]; // 0x04(0x04)
	struct TArray<struct FFortPlayerSurveyAnalyticsAnswerMultipleSelectionSingleAnswer> AnswerList; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsAnswerMultipleSelectionSingleAnswer
// Size: 0x08 (Inherited: 0x00)
struct FFortPlayerSurveyAnalyticsAnswerMultipleSelectionSingleAnswer {
	bool Selected; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	uint32_t TimeTaken; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnalyticsAnswerMultipleChoice
// Size: 0x08 (Inherited: 0x04)
struct FFortPlayerSurveyAnalyticsAnswerMultipleChoice : FFortPlayerSurveyAnalyticsAnswerBase {
	int32_t AnswerIndex; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnswerBase
// Size: 0x08 (Inherited: 0x00)
struct FFortPlayerSurveyAnswerBase {
	struct FTimespan TimeSpentAnswering; // 0x00(0x08)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnswerFreeFormText
// Size: 0x18 (Inherited: 0x08)
struct FFortPlayerSurveyAnswerFreeFormText : FFortPlayerSurveyAnswerBase {
	struct FString AnswerText; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnswerMultipleChoice
// Size: 0x10 (Inherited: 0x08)
struct FFortPlayerSurveyAnswerMultipleChoice : FFortPlayerSurveyAnswerBase {
	int32_t AnswerIndex; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnswerMultipleSelection
// Size: 0x18 (Inherited: 0x08)
struct FFortPlayerSurveyAnswerMultipleSelection : FFortPlayerSurveyAnswerBase {
	struct TArray<struct FFortPlayerSurveyAnswerMultipleSelectionSingleAnswer> AnswerList; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortPlayerSurveyAnswerMultipleSelectionSingleAnswer
// Size: 0x10 (Inherited: 0x00)
struct FFortPlayerSurveyAnswerMultipleSelectionSingleAnswer {
	bool bSelected; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FTimespan TimeTaken; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortPlayerSurveyCMSSurveyKey
// Size: 0x10 (Inherited: 0x00)
struct FFortPlayerSurveyCMSSurveyKey {
	struct FString ID; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortPlayerSurveyDescription
// Size: 0x50 (Inherited: 0x00)
struct FFortPlayerSurveyDescription {
	struct FText SurveyTitle; // 0x00(0x18)
	struct FFortPlayerSurveyDescriptionMessage CancelConfirmationMessage; // 0x18(0x30)
	int32_t DefaultAnswer; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// ScriptStruct FortniteGame.FortPlayerSurveyDescriptionMessage
// Size: 0x30 (Inherited: 0x00)
struct FFortPlayerSurveyDescriptionMessage {
	struct FText Title; // 0x00(0x18)
	struct FText Message; // 0x18(0x18)
};

// ScriptStruct FortniteGame.FortPlayerSurveyMcpDataRoot
// Size: 0x60 (Inherited: 0x00)
struct FFortPlayerSurveyMcpDataRoot {
	struct FFortPlayerSurveyMcpDataSurveyMetadata AllSurveysMetadata; // 0x00(0x10)
	struct TMap<struct FString, struct FFortPlayerSurveyMcpDataSurveyMetadata> MetaData; // 0x10(0x50)
};

// ScriptStruct FortniteGame.FortPlayerSurveyMcpDataSurveyMetadata
// Size: 0x10 (Inherited: 0x00)
struct FFortPlayerSurveyMcpDataSurveyMetadata {
	int32_t NumTimesCompleted; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FDateTime LastTimeCompleted; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortPlayerSurveyQuestionChoice
// Size: 0x18 (Inherited: 0x00)
struct FFortPlayerSurveyQuestionChoice {
	struct FText ChoiceText; // 0x00(0x18)
};

// ScriptStruct FortniteGame.VehicleTrickLocalAxisRotInfo
// Size: 0x18 (Inherited: 0x00)
struct FVehicleTrickLocalAxisRotInfo {
	float Angle; // 0x00(0x04)
	int32_t AccumulatedHalfSpinCount; // 0x04(0x04)
	float AccumulatedAngle; // 0x08(0x04)
	float AngleAtFurthestExtent; // 0x0c(0x04)
	int32_t TrickOrder; // 0x10(0x04)
	int32_t Points; // 0x14(0x04)
};

// ScriptStruct FortniteGame.CharacterFallbackPreloadBlock
// Size: 0x0c (Inherited: 0x00)
struct FCharacterFallbackPreloadBlock {
	bool bShouldGoInNPCBudget; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FGameplayTag FallbackTag; // 0x04(0x08)
};

// ScriptStruct FortniteGame.CharacterPreloadBlock
// Size: 0x30 (Inherited: 0x00)
struct FCharacterPreloadBlock {
	bool bShouldGoInNPCBudget; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TSoftObjectPtr<struct UAthenaCharacterItemDefinition> CID; // 0x08(0x28)
};

// ScriptStruct FortniteGame.NamedWeightTableRow
// Size: 0x18 (Inherited: 0x08)
struct FNamedWeightTableRow : FTableRowBase {
	struct FQueryName QueryName; // 0x08(0x08)
	float Weight; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.QueryName
// Size: 0x08 (Inherited: 0x00)
struct FQueryName {
	struct FName QueryName; // 0x00(0x08)
};

// ScriptStruct FortniteGame.RatingExpansion
// Size: 0x08 (Inherited: 0x00)
struct FRatingExpansion {
	int32_t Priority; // 0x00(0x04)
	int32_t RatingDelta; // 0x04(0x04)
};

// ScriptStruct FortniteGame.WinConditionScoreData
// Size: 0x60 (Inherited: 0x00)
struct FWinConditionScoreData {
	struct FScalableFloat GoalScore; // 0x00(0x28)
	struct FScalableFloat BigScoreThreshold; // 0x28(0x28)
	struct TArray<struct FAthenaScoreData> ScoreDataList; // 0x50(0x10)
};

// ScriptStruct FortniteGame.AthenaScoreData
// Size: 0x70 (Inherited: 0x00)
struct FAthenaScoreData {
	enum class EAthenaScoringEvent ScoringEvent; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FText ScoreNameText; // 0x08(0x18)
	struct FGameplayTagContainer EventInclusionTags; // 0x20(0x20)
	int32_t NumOccurrencesForScore; // 0x40(0x04)
	int32_t NumOccurrencesPermitted; // 0x44(0x04)
	struct FScalableFloat ScoreAwarded; // 0x48(0x28)
};

// ScriptStruct FortniteGame.SupplyDropModifierData
// Size: 0x18 (Inherited: 0x00)
struct FSupplyDropModifierData {
	struct FName SupplyDropID; // 0x00(0x08)
	struct TArray<struct FSupplyDropSubPhaseModifier> ModifierList; // 0x08(0x10)
};

// ScriptStruct FortniteGame.SupplyDropSubPhaseModifier
// Size: 0x0c (Inherited: 0x00)
struct FSupplyDropSubPhaseModifier {
	enum class EAthenaGamePhase GamePhase; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t SubPhaseIndex; // 0x04(0x04)
	float SpawnInPreviousZonePercentChance; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortPlaylistCuratedContent
// Size: 0x10 (Inherited: 0x00)
struct FFortPlaylistCuratedContent {
	struct TArray<struct FString> CuratedLinkCodes; // 0x00(0x10)
};

// ScriptStruct FortniteGame.PlaylistData
// Size: 0x38 (Inherited: 0x00)
struct FPlaylistData {
	struct FName PlaylistName; // 0x00(0x08)
	struct FString TournamentId; // 0x08(0x10)
	struct FString EventWindowId; // 0x18(0x10)
	struct FString RegionId; // 0x28(0x10)
};

// ScriptStruct FortniteGame.PlaylistOverrideData
// Size: 0x20 (Inherited: 0x00)
struct FPlaylistOverrideData {
	struct FName PlaylistName; // 0x00(0x08)
	bool bEnabled; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct TArray<struct FString> RegionsDisabled; // 0x10(0x10)
};

// ScriptStruct FortniteGame.PlaylistFrontEndSettings
// Size: 0x28 (Inherited: 0x00)
struct FPlaylistFrontEndSettings {
	struct FName PlaylistName; // 0x00(0x08)
	struct FPlaylistAccess PlaylistAccess; // 0x08(0x10)
	struct TArray<struct FPlaylistAccessOverride> AccessOverrides; // 0x18(0x10)
};

// ScriptStruct FortniteGame.PlaylistAccessOverride
// Size: 0x30 (Inherited: 0x00)
struct FPlaylistAccessOverride {
	struct TArray<struct FString> Regions; // 0x00(0x10)
	struct TArray<struct FString> Platforms; // 0x10(0x10)
	struct FPlaylistAccess OverrideAccess; // 0x20(0x10)
};

// ScriptStruct FortniteGame.PlaylistAccess
// Size: 0x10 (Inherited: 0x00)
struct FPlaylistAccess {
	bool bForcePlaylistOff; // 0x00(0x01)
	bool bEnabled; // 0x01(0x01)
	bool bVisibleWhenDisabled; // 0x02(0x01)
	bool bInvisibleWhenEnabled; // 0x03(0x01)
	bool bIsDefaultPlaylist; // 0x04(0x01)
	enum class EPlaylistAdvertisementType AdvertiseType; // 0x05(0x01)
	bool bDisplayAsLimitedTime; // 0x06(0x01)
	char pad_7[0x1]; // 0x07(0x01)
	int32_t DisplayPriority; // 0x08(0x04)
	int32_t CategoryIndex; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.PostGameScreenTagClassPair
// Size: 0x10 (Inherited: 0x00)
struct FPostGameScreenTagClassPair {
	struct FGameplayTag ScreenType; // 0x00(0x08)
	struct UUserWidget* PostGameScreenClass; // 0x08(0x08)
};

// ScriptStruct FortniteGame.UserOptionValueDescription
// Size: 0x28 (Inherited: 0x00)
struct FUserOptionValueDescription {
	struct FString Value; // 0x00(0x10)
	struct FText Description; // 0x10(0x18)
};

// ScriptStruct FortniteGame.PlaylistOptionValue
// Size: 0x28 (Inherited: 0x00)
struct FPlaylistOptionValue {
	struct FText DisplayName; // 0x00(0x18)
	struct FString OptionValueName; // 0x18(0x10)
};

// ScriptStruct FortniteGame.PlaylistOptionCollisionProfileValue
// Size: 0x30 (Inherited: 0x28)
struct FPlaylistOptionCollisionProfileValue : FPlaylistOptionValue {
	struct FCollisionProfileName Value; // 0x28(0x08)
};

// ScriptStruct FortniteGame.PlaylistOptionColorValue
// Size: 0x38 (Inherited: 0x28)
struct FPlaylistOptionColorValue : FPlaylistOptionValue {
	struct FLinearColor Value; // 0x28(0x10)
};

// ScriptStruct FortniteGame.PlaylistOptionStringValue
// Size: 0x38 (Inherited: 0x28)
struct FPlaylistOptionStringValue : FPlaylistOptionValue {
	struct FString Value; // 0x28(0x10)
};

// ScriptStruct FortniteGame.PlaylistOptionFloatValue
// Size: 0x50 (Inherited: 0x28)
struct FPlaylistOptionFloatValue : FPlaylistOptionValue {
	struct FScalableFloat Value; // 0x28(0x28)
};

// ScriptStruct FortniteGame.PlaylistOptionIntValue
// Size: 0x30 (Inherited: 0x28)
struct FPlaylistOptionIntValue : FPlaylistOptionValue {
	int32_t Value; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortPreviewActorData
// Size: 0x48 (Inherited: 0x00)
struct FFortPreviewActorData {
	SoftClassProperty ActorClass; // 0x00(0x28)
	struct FVector RelativeLocation; // 0x28(0x0c)
	struct FRotator RelativeRotation; // 0x34(0x0c)
	float InfluenceDistance; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// ScriptStruct FortniteGame.FortPlayspaceMatchmakingSettings
// Size: 0x28 (Inherited: 0x00)
struct FFortPlayspaceMatchmakingSettings {
	enum class EFortPlayspaceMatchmakingRules MatchmakingRule; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FName> SpecificPlaylists; // 0x08(0x10)
	struct TArray<struct FName> ExcludedPlaylists; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortPlayspaceConfigData
// Size: 0x30 (Inherited: 0x00)
struct FFortPlayspaceConfigData {
	SoftClassProperty PlayspaceClass; // 0x00(0x28)
	enum class EPlayspaceCreationType CreationType; // 0x28(0x01)
	bool bSpawnAtPlayspaceSpawnActors; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
};

// ScriptStruct FortniteGame.EventDrivenDiscoveryID
// Size: 0x18 (Inherited: 0x00)
struct FEventDrivenDiscoveryID {
	struct FString CalendarEventName; // 0x00(0x10)
	bool bRequireEventActive; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
	int32_t ActiveBitId; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortPOIAmbientAudioOneShot
// Size: 0x48 (Inherited: 0x00)
struct FFortPOIAmbientAudioOneShot {
	struct TSoftObjectPtr<struct USoundBase> OneShotSound; // 0x00(0x28)
	struct FVector2D RetriggerTimeRange; // 0x28(0x08)
	struct FVector2D TriggerDistanceRange; // 0x30(0x08)
	struct TArray<enum class EFortDayPhase> AllowedDayPhases; // 0x38(0x10)
};

// ScriptStruct FortniteGame.FortPOIAmbientAudioLoop
// Size: 0x30 (Inherited: 0x00)
struct FFortPOIAmbientAudioLoop {
	struct TSoftObjectPtr<struct USoundBase> LoopingSound; // 0x00(0x28)
	float CrossfadeTime; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortPoiGridInfo
// Size: 0x28 (Inherited: 0x00)
struct FFortPoiGridInfo {
	struct FVector2D WorldGridStart; // 0x00(0x08)
	struct FVector2D WorldGridEnd; // 0x08(0x08)
	struct FVector2D WorldGridSpacing; // 0x10(0x08)
	int32_t GridCountX; // 0x18(0x04)
	int32_t GridCountY; // 0x1c(0x04)
	struct FVector2D WorldGridTotalSize; // 0x20(0x08)
};

// ScriptStruct FortniteGame.FortPoiVolumeGridCell
// Size: 0x10 (Inherited: 0x00)
struct FFortPoiVolumeGridCell {
	char pad_0[0x10]; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortPortalOriginInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortPortalOriginInfo {
	struct FName PlaylistName; // 0x00(0x08)
	struct FString LinkCode; // 0x08(0x10)
};

// ScriptStruct FortniteGame.PreferredItemSlotSettingData
// Size: 0x30 (Inherited: 0x00)
struct FPreferredItemSlotSettingData {
	struct FGameplayTag OverrideTag; // 0x00(0x08)
	struct FGameplayTagContainer GameplayTags; // 0x08(0x20)
	struct UTexture2D* Icon; // 0x28(0x08)
};

// ScriptStruct FortniteGame.ProfileGoCommand
// Size: 0x40 (Inherited: 0x00)
struct FProfileGoCommand {
	struct FString Group; // 0x00(0x10)
	struct FString Command; // 0x10(0x10)
	float Wait; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
	struct FString Log; // 0x28(0x10)
	bool CopyOutputToGameLog; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// ScriptStruct FortniteGame.ProfileGoCollection
// Size: 0x20 (Inherited: 0x00)
struct FProfileGoCollection {
	struct FString Name; // 0x00(0x10)
	struct FString Scenarios; // 0x10(0x10)
};

// ScriptStruct FortniteGame.ProfileGoGeneratedScenario
// Size: 0x90 (Inherited: 0x50)
struct FProfileGoGeneratedScenario : FProfileGoScenario {
	struct FString Command; // 0x50(0x10)
	struct FString Parameters; // 0x60(0x10)
	struct FString Location; // 0x70(0x10)
	struct FString Arguments; // 0x80(0x10)
};

// ScriptStruct FortniteGame.FortProjectileCues
// Size: 0x40 (Inherited: 0x00)
struct FFortProjectileCues {
	struct FGameplayCueTag Spawn; // 0x00(0x08)
	struct FGameplayCueTag HitPawn; // 0x08(0x08)
	struct FGameplayCueTag HitWorld; // 0x10(0x08)
	struct FGameplayCueTag HitWater; // 0x18(0x08)
	bool bOrientHitGCsToProjectileVelocity; // 0x20(0x01)
	char pad_21[0x3]; // 0x21(0x03)
	float MaxSurfaceNormalDeviationAngle; // 0x24(0x04)
	struct FGameplayCueTag Bounce; // 0x28(0x08)
	struct FGameplayCueTag Explosion; // 0x30(0x08)
	struct FGameplayCueTag UnderwaterExplosion; // 0x38(0x08)
};

// ScriptStruct FortniteGame.PropertyOverridePropertyDataRedirect
// Size: 0x30 (Inherited: 0x00)
struct FPropertyOverridePropertyDataRedirect {
	struct FString PropertyKnobName; // 0x00(0x10)
	struct FString OldPropertyData; // 0x10(0x10)
	struct FString NewPropertyData; // 0x20(0x10)
};

// ScriptStruct FortniteGame.PropertyOverrideRedirect
// Size: 0x40 (Inherited: 0x00)
struct FPropertyOverrideRedirect {
	struct FString OldPropertyScope; // 0x00(0x10)
	struct FString OldPropertyName; // 0x10(0x10)
	struct FString NewPropertyScope; // 0x20(0x10)
	struct FString NewPropertyName; // 0x30(0x10)
};

// ScriptStruct FortniteGame.PropertyOverrideDataRepl
// Size: 0x130 (Inherited: 0x108)
struct FPropertyOverrideDataRepl : FFastArraySerializer {
	struct FMulticastInlineDelegate ReplNotifier; // 0x108(0x10)
	struct TArray<struct FPropertyOverrideRepl> PropertyOverridesRepl; // 0x118(0x10)
	char pad_128[0x8]; // 0x128(0x08)
};

// ScriptStruct FortniteGame.PropertyOverrideRepl
// Size: 0x88 (Inherited: 0x0c)
struct FPropertyOverrideRepl : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct FPropertyOverrideId PropertyId; // 0x10(0x08)
	struct FString PropertyScopedName; // 0x18(0x10)
	struct FString PropertyData; // 0x28(0x10)
	char pad_38[0x50]; // 0x38(0x50)
};

// ScriptStruct FortniteGame.FortPointsOnCurve
// Size: 0x38 (Inherited: 0x00)
struct FFortPointsOnCurve {
	struct TSoftObjectPtr<struct UCurveFloat> Curve; // 0x00(0x28)
	struct TArray<struct FFortPointOnCurveRange> RangesForPointsOnCurve; // 0x28(0x10)
};

// ScriptStruct FortniteGame.FortPointOnCurveRange
// Size: 0x08 (Inherited: 0x00)
struct FFortPointOnCurveRange {
	float MinPercentage; // 0x00(0x04)
	float MaxPercentage; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortGameplayTagQueryPerDifficulty
// Size: 0x60 (Inherited: 0x00)
struct FFortGameplayTagQueryPerDifficulty {
	struct FDataTableRowHandle DifficultyInfo; // 0x00(0x10)
	struct FGameplayTagQuery TagQueryToMatch; // 0x10(0x48)
	float Difficulty; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// ScriptStruct FortniteGame.GoalDistanceData
// Size: 0xa0 (Inherited: 0x00)
struct FGoalDistanceData {
	bool bIgnoreScreeningDistance; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FAIDataProviderFloatValue ScreeningTestMaxDistance; // 0x08(0x38)
	struct TSoftObjectPtr<struct UCurveFloat> TestScoreCurve; // 0x40(0x28)
	struct FAIDataProviderFloatValue CurveDistanceScale; // 0x68(0x38)
};

// ScriptStruct FortniteGame.FortQuestAchievementTableRow
// Size: 0x18 (Inherited: 0x08)
struct FFortQuestAchievementTableRow : FTableRowBase {
	enum class EFortQuestState QuestState; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	int32_t XboxAchievementID; // 0x0c(0x04)
	int32_t PS4TrophyID; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortQuestTagToCategoryDataRow
// Size: 0x40 (Inherited: 0x08)
struct FFortQuestTagToCategoryDataRow : FTableRowBase {
	struct FText DisplayName; // 0x08(0x18)
	struct FText AllChallengesText; // 0x20(0x18)
	int32_t Priority; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.FortQuestTagToIconDataRow
// Size: 0x30 (Inherited: 0x08)
struct FFortQuestTagToIconDataRow : FTableRowBase {
	struct TSoftObjectPtr<struct UTexture2D> Icon; // 0x08(0x28)
};

// ScriptStruct FortniteGame.FortQuestTagToLocationDataRow
// Size: 0x18 (Inherited: 0x08)
struct FFortQuestTagToLocationDataRow : FTableRowBase {
	struct FVector WorldLocation; // 0x08(0x0c)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortQuestIndicatorCustomCategory
// Size: 0x40 (Inherited: 0x00)
struct FFortQuestIndicatorCustomCategory {
	struct FGameplayTag CategoryTag; // 0x00(0x08)
	struct FText DisplayName; // 0x08(0x18)
	struct FText AllChallengesText; // 0x20(0x18)
	int32_t Priority; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.FortChallengeMapPoiData
// Size: 0x80 (Inherited: 0x00)
struct FFortChallengeMapPoiData {
	struct FText Text; // 0x00(0x18)
	struct FVector WorldLocation; // 0x18(0x0c)
	struct FGameplayTag LocationTag; // 0x24(0x08)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct TArray<struct FString> CalendarEventsRequired; // 0x30(0x10)
	struct TSoftObjectPtr<struct UFortQuestItemDefinition> DiscoveryQuest; // 0x40(0x28)
	struct FName DiscoverObjectiveBackendName; // 0x68(0x08)
	struct TArray<int32_t> ActiveDiscoverableBlodIds; // 0x70(0x10)
};

// ScriptStruct FortniteGame.CompletionCountEntry
// Size: 0x0c (Inherited: 0x00)
struct FCompletionCountEntry {
	char pad_0[0xc]; // 0x00(0x0c)
};

// ScriptStruct FortniteGame.FortQuestRewardTableRow
// Size: 0x28 (Inherited: 0x08)
struct FFortQuestRewardTableRow : FTableRowBase {
	struct FString QuestTemplateId; // 0x08(0x10)
	struct FName TemplateId; // 0x18(0x08)
	int32_t Quantity; // 0x20(0x04)
	bool Hidden; // 0x24(0x01)
	bool Feature; // 0x25(0x01)
	bool Selectable; // 0x26(0x01)
	bool Exportable; // 0x27(0x01)
};

// ScriptStruct FortniteGame.FortQuestRewardTableCacheData
// Size: 0x50 (Inherited: 0x28)
struct FFortQuestRewardTableCacheData : FFortQuestRewardTableRow {
	struct TSoftObjectPtr<struct UFortItemDefinition> ItemPtr; // 0x28(0x28)
};

// ScriptStruct FortniteGame.FortCategoryTableRow
// Size: 0x28 (Inherited: 0x08)
struct FFortCategoryTableRow : FTableRowBase {
	struct FText Name; // 0x08(0x18)
	int32_t SortPriority; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.FortMcpQuestObjectiveInfo
// Size: 0x140 (Inherited: 0x00)
struct FFortMcpQuestObjectiveInfo {
	struct FName BackendName; // 0x00(0x08)
	struct TArray<struct FFortQuestObjectiveStat> InlineObjectiveStats; // 0x08(0x10)
	struct FDataTableRowHandle ObjectiveStatHandle; // 0x18(0x10)
	struct TArray<struct FDataTableRowHandle> AlternativeStatHandles; // 0x28(0x10)
	enum class EFortQuestObjectiveItemEvent ItemEvent; // 0x38(0x01)
	char bHidden : 1; // 0x39(0x01)
	char bRequirePrimaryMissionCompletion : 1; // 0x39(0x01)
	char bCanProgressInZone : 1; // 0x39(0x01)
	char bDisplayDynamicAnnouncementUpdate : 1; // 0x39(0x01)
	char pad_39_4 : 4; // 0x39(0x01)
	enum class EObjectiveStatusUpdateType DynamicStatusUpdateType; // 0x3a(0x01)
	enum class EFortInventoryFilter LinkVaultTab; // 0x3b(0x01)
	enum class EFortFrontendInventoryFilter LinkToItemManagement; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
	struct TSoftObjectPtr<struct UFortItemDefinition> ItemReference; // 0x40(0x28)
	struct FString ItemTemplateIdOverride; // 0x68(0x10)
	struct FName LinkSquadID; // 0x78(0x08)
	int32_t LinkSquadIndex; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	struct FText Description; // 0x88(0x18)
	struct FText HudShortDescription; // 0xa0(0x18)
	struct TSoftObjectPtr<struct UTexture2D> HudIcon; // 0xb8(0x28)
	int32_t Count; // 0xe0(0x04)
	int32_t Stage; // 0xe4(0x04)
	int32_t DynamicStatusUpdatePercentInterval; // 0xe8(0x04)
	float DynamicUpdateCompletionDelay; // 0xec(0x04)
	SoftClassProperty ScriptedAction; // 0xf0(0x28)
	SoftClassProperty FrontendScriptedAction; // 0x118(0x28)
};

// ScriptStruct FortniteGame.FortQuestObjectiveStat
// Size: 0x48 (Inherited: 0x00)
struct FFortQuestObjectiveStat {
	struct TArray<struct FInlineObjectiveStatTagCheckEntry> TagConditions; // 0x00(0x10)
	struct FString Condition; // 0x10(0x10)
	struct TArray<struct FString> TemplateIds; // 0x20(0x10)
	enum class EFortQuestObjectiveStatEvent Type; // 0x30(0x01)
	char bIsCached : 1; // 0x31(0x01)
	char bHasInclusiveTargetTags : 1; // 0x31(0x01)
	char bHasInclusiveSourceTags : 1; // 0x31(0x01)
	char bHasInclusiveContextTags : 1; // 0x31(0x01)
	char pad_31_4 : 4; // 0x31(0x01)
	char pad_32[0x16]; // 0x32(0x16)
};

// ScriptStruct FortniteGame.InlineObjectiveStatTagCheckEntry
// Size: 0x0c (Inherited: 0x00)
struct FInlineObjectiveStatTagCheckEntry {
	struct FGameplayTag Tag; // 0x00(0x08)
	enum class EInlineObjectiveStatTagCheckEntryType Type; // 0x08(0x01)
	char Require : 1; // 0x09(0x01)
	char pad_9_1 : 7; // 0x09(0x01)
	char pad_A[0x2]; // 0x0a(0x02)
};

// ScriptStruct FortniteGame.FeatSeriesObjectiveStep
// Size: 0x04 (Inherited: 0x00)
struct FFeatSeriesObjectiveStep {
	int32_t Count; // 0x00(0x04)
};

// ScriptStruct FortniteGame.FortMcpQuestRewardInfo
// Size: 0x10 (Inherited: 0x00)
struct FFortMcpQuestRewardInfo {
	struct TArray<struct FFortItemQuantityPair> Rewards; // 0x00(0x10)
};

// ScriptStruct FortniteGame.PartyAssistQuestData
// Size: 0x28 (Inherited: 0x00)
struct FPartyAssistQuestData {
	struct UFortQuestItemDefinition* AssistedQuestDef; // 0x00(0x08)
	struct AFortPlayerState* AssistedPlayer; // 0x08(0x08)
	int32_t CurrentQuestStage; // 0x10(0x04)
	bool QuestCompleted; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
	struct TArray<struct FPartyAssistObjectiveData> Objectives; // 0x18(0x10)
};

// ScriptStruct FortniteGame.PartyAssistObjectiveData
// Size: 0x10 (Inherited: 0x00)
struct FPartyAssistObjectiveData {
	struct FName BackendName; // 0x00(0x08)
	int32_t Count; // 0x08(0x04)
	bool bCompleted; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
};

// ScriptStruct FortniteGame.SharedQuestData
// Size: 0x18 (Inherited: 0x00)
struct FSharedQuestData {
	struct TArray<struct UFortQuestItem*> SharedQuests; // 0x00(0x10)
	struct UFortQuestItem* PinnedQuest; // 0x10(0x08)
};

// ScriptStruct FortniteGame.SharedQuestRow
// Size: 0x58 (Inherited: 0x08)
struct FSharedQuestRow : FTableRowBase {
	struct TSoftObjectPtr<struct UFortQuestItemDefinition> Quest; // 0x08(0x28)
	float DefaultWeight; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct TArray<struct FString> PlaylistNames; // 0x38(0x10)
	struct TArray<float> PlaylistWeights; // 0x48(0x10)
};

// ScriptStruct FortniteGame.FortQuestMapPageCosmetics
// Size: 0x48 (Inherited: 0x08)
struct FFortQuestMapPageCosmetics : FTableRowBase {
	bool bUseNodeArrowColorOverride; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct FSlateColor NodeArrowColorOverride; // 0x10(0x28)
	struct TArray<struct FFortQuestMapCosmetic> CosmeticList; // 0x38(0x10)
};

// ScriptStruct FortniteGame.FortQuestMapCosmetic
// Size: 0xd0 (Inherited: 0x00)
struct FFortQuestMapCosmetic {
	enum class ECosmeticType CosmeticType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FSlateBrush CosmeticBrush; // 0x08(0x88)
	struct UUserWidget* WidgetClass; // 0x90(0x08)
	struct TArray<struct UFortItemDefinition*> CosmeticDataList; // 0x98(0x10)
	struct FVector2D CosmeticPosition; // 0xa8(0x08)
	struct FWidgetTransform CosmeticTransform; // 0xb0(0x1c)
	char pad_CC[0x4]; // 0xcc(0x04)
};

// ScriptStruct FortniteGame.FortQuestMapPage
// Size: 0x58 (Inherited: 0x08)
struct FFortQuestMapPage : FTableRowBase {
	struct FText PageTitle; // 0x08(0x18)
	int32_t PageIndex; // 0x20(0x04)
	int32_t ChapterPageCount; // 0x24(0x04)
	struct FString QuestEventFlag; // 0x28(0x10)
	enum class EFrontEndCamera CameraMode; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct UUserWidget* QuestNodeLayout; // 0x40(0x08)
	struct TArray<struct FFortQuestMapNode> QuestList; // 0x48(0x10)
};

// ScriptStruct FortniteGame.FortQuestMapNode
// Size: 0x20 (Inherited: 0x00)
struct FFortQuestMapNode {
	struct FPrimaryAssetId QuestItemDefinitionId; // 0x00(0x10)
	struct UFortQuestItemDefinition* QuestItemDefinition; // 0x10(0x08)
	enum class EFortQuestMapNodeType NodeType; // 0x18(0x01)
	enum class EFortQuestMapNodeLabelPosition LabelPosition; // 0x19(0x01)
	bool UseHighContrastMode; // 0x1a(0x01)
	char pad_1B[0x5]; // 0x1b(0x05)
};

// ScriptStruct FortniteGame.FortQuestObjectiveStatTableRow
// Size: 0xb8 (Inherited: 0x08)
struct FFortQuestObjectiveStatTableRow : FTableRowBase {
	enum class EFortQuestObjectiveStatEvent Type; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct FGameplayTagContainer TargetTagContainer; // 0x10(0x20)
	struct FGameplayTagContainer SourceTagContainer; // 0x30(0x20)
	struct FGameplayTagContainer ContextTagContainer; // 0x50(0x20)
	struct FString Condition; // 0x70(0x10)
	struct FString TemplateId; // 0x80(0x10)
	struct TArray<struct FString> AlternateTemplateIds; // 0x90(0x10)
	bool bIsCached; // 0xa0(0x01)
	char pad_A1[0x17]; // 0xa1(0x17)
};

// ScriptStruct FortniteGame.FortQuestObjectiveStatXPTableRow
// Size: 0xd0 (Inherited: 0x08)
struct FFortQuestObjectiveStatXPTableRow : FTableRowBase {
	enum class EFortQuestObjectiveStatEvent Type; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct FGameplayTagContainer TargetTags; // 0x10(0x20)
	struct FGameplayTagContainer SourceTags; // 0x30(0x20)
	struct FGameplayTagContainer ContextTags; // 0x50(0x20)
	struct FGameplayTagContainer ExcludeContextTags; // 0x70(0x20)
	struct FString Condition; // 0x90(0x10)
	int32_t CountThreshhold; // 0xa0(0x04)
	int32_t MaxCount; // 0xa4(0x04)
	struct FPrimaryAssetId AccoladePrimaryAssetId; // 0xa8(0x10)
	bool bOnceOnly; // 0xb8(0x01)
	enum class EFortXPPropagationRule XPPropagationRule; // 0xb9(0x01)
	bool bIsCached; // 0xba(0x01)
	char pad_BB[0x15]; // 0xbb(0x15)
};

// ScriptStruct FortniteGame.StatEventFilter
// Size: 0x68 (Inherited: 0x00)
struct FStatEventFilter {
	enum class EFortQuestObjectiveStatEvent StatEvent; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FGameplayTagContainer TargetTagsQuery; // 0x08(0x20)
	struct FGameplayTagContainer SourceTagsQuery; // 0x28(0x20)
	struct FGameplayTagContainer ContextTagsQuery; // 0x48(0x20)
};

// ScriptStruct FortniteGame.FortQuestPoolTableRow
// Size: 0xa0 (Inherited: 0x08)
struct FFortQuestPoolTableRow : FTableRowBase {
	struct FString PrerequisiteCompletedQuests; // 0x08(0x10)
	struct FString PrerequisiteNotCompletedQuests; // 0x18(0x10)
	struct FString PrerequisiteEventChannel; // 0x28(0x10)
	struct FString PrerequisiteEventName; // 0x38(0x10)
	int32_t RefreshIntervalHours; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct FString RefreshEvent; // 0x50(0x10)
	struct FString LootTierGroup; // 0x60(0x10)
	int32_t LootTier; // 0x70(0x04)
	int32_t RerollLimit; // 0x74(0x04)
	bool bGlobalPull; // 0x78(0x01)
	bool bRollOnActivation; // 0x79(0x01)
	bool bDeleteActiveOnRefresh; // 0x7a(0x01)
	char pad_7B[0x1]; // 0x7b(0x01)
	int32_t MaxActive; // 0x7c(0x04)
	int32_t DaysToKeepClaimed; // 0x80(0x04)
	int32_t DaysToKeepCompleted; // 0x84(0x04)
	int32_t MaxUnclaimed; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct FString LockoutName; // 0x90(0x10)
};

// ScriptStruct FortniteGame.AthenaAccolades
// Size: 0x20 (Inherited: 0x00)
struct FAthenaAccolades {
	struct UFortAccoladeItemDefinition* AccoladeDef; // 0x00(0x08)
	struct FString TemplateId; // 0x08(0x10)
	int32_t Count; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortChallengeBundleInfoLockedReason
// Size: 0x28 (Inherited: 0x00)
struct FFortChallengeBundleInfoLockedReason {
	enum class EFortChallengeBundleInfoLockedReasonCode ReasonCode; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FString EventName; // 0x08(0x10)
	int32_t RequiredTier; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct FTimespan UnlockTimespanAfterStart; // 0x20(0x08)
};

// ScriptStruct FortniteGame.FortCreateItemDetail
// Size: 0x18 (Inherited: 0x00)
struct FFortCreateItemDetail {
	struct FString TemplateId; // 0x00(0x10)
	int32_t Quantity; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortQuestManagerAttributes
// Size: 0x20 (Inherited: 0x00)
struct FFortQuestManagerAttributes {
	struct FDateTime DailyLoginInterval; // 0x00(0x08)
	int32_t DailyQuestRerolls; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FFortQuestPoolStats QuestPoolStats; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortQuestPoolStats
// Size: 0x10 (Inherited: 0x00)
struct FFortQuestPoolStats {
	struct TArray<struct FFortQuestPoolStats_PerPool> PoolStats; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortQuestPoolStats_PerPool
// Size: 0x20 (Inherited: 0x00)
struct FFortQuestPoolStats_PerPool {
	struct FString PoolName; // 0x00(0x10)
	struct FDateTime NextRefresh; // 0x10(0x08)
	int32_t RerollsRemaining; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortTransientQuestGrant
// Size: 0x40 (Inherited: 0x00)
struct FFortTransientQuestGrant {
	struct FString TemplateId; // 0x00(0x10)
	struct TArray<struct FFortQuestObjectiveCompletion> Objectives; // 0x10(0x10)
	struct FString ExpirationTime; // 0x20(0x10)
	struct FString CreationTime; // 0x30(0x10)
};

// ScriptStruct FortniteGame.SecondaryXpGained
// Size: 0x18 (Inherited: 0x00)
struct FSecondaryXpGained {
	struct FString Type; // 0x00(0x10)
	int32_t secondaryXp; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortQuestMissionCreationContext
// Size: 0x40 (Inherited: 0x00)
struct FFortQuestMissionCreationContext {
	struct TSoftObjectPtr<struct UFortMissionInfo> MissionInfo; // 0x00(0x28)
	struct TArray<struct FGameplayTagContainer> MissionCreationContextTags; // 0x28(0x10)
	bool bSetQuestOwnerAsMissionOwner; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	int32_t MaxNumberToSpawnInWorld; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.QuickBarAndSlot
// Size: 0x08 (Inherited: 0x00)
struct FQuickBarAndSlot {
	enum class EFortQuickBars QuickBarType; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t QuickBarSlot; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortRarityItemData
// Size: 0x80 (Inherited: 0x00)
struct FFortRarityItemData {
	struct FText Name; // 0x00(0x18)
	struct FLinearColor Color1; // 0x18(0x10)
	struct FLinearColor Color2; // 0x28(0x10)
	struct FLinearColor Color3; // 0x38(0x10)
	struct FLinearColor Color4; // 0x48(0x10)
	struct FLinearColor Color5; // 0x58(0x10)
	float Radius; // 0x68(0x04)
	float Falloff; // 0x6c(0x04)
	float Brightness; // 0x70(0x04)
	float Roughness; // 0x74(0x04)
	float Glow; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// ScriptStruct FortniteGame.FortColorPalette
// Size: 0x50 (Inherited: 0x00)
struct FFortColorPalette {
	struct FLinearColor Color1; // 0x00(0x10)
	struct FLinearColor Color2; // 0x10(0x10)
	struct FLinearColor Color3; // 0x20(0x10)
	struct FLinearColor Color4; // 0x30(0x10)
	struct FLinearColor Color5; // 0x40(0x10)
};

// ScriptStruct FortniteGame.FortRechargingActionTimerConfig
// Size: 0x28 (Inherited: 0x00)
struct FFortRechargingActionTimerConfig {
	char pad_0[0x8]; // 0x00(0x08)
	float ChargeRate; // 0x08(0x04)
	float ActiveExpenseRate; // 0x0c(0x04)
	float PassiveExpenseRate; // 0x10(0x04)
	float MinActiveDuration; // 0x14(0x04)
	float MinActivationCharge; // 0x18(0x04)
	float ActiveCooldownTime; // 0x1c(0x04)
	float ChargeThreshold; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.FortRecordVersion
// Size: 0x40 (Inherited: 0x00)
struct FFortRecordVersion {
	int32_t DataVersion; // 0x00(0x04)
	int32_t PackageFileVersion; // 0x04(0x04)
	struct FReflectedEngineVersion EngineVersion; // 0x08(0x20)
	char pad_28[0x18]; // 0x28(0x18)
};

// ScriptStruct FortniteGame.ReflectedEngineVersion
// Size: 0x20 (Inherited: 0x00)
struct FReflectedEngineVersion {
	int32_t Major; // 0x00(0x04)
	int32_t Minor; // 0x04(0x04)
	int32_t Patch; // 0x08(0x04)
	int32_t Changelist; // 0x0c(0x04)
	struct FString Branch; // 0x10(0x10)
};

// ScriptStruct FortniteGame.RepeatableDailiesCardDateOverride
// Size: 0x38 (Inherited: 0x00)
struct FRepeatableDailiesCardDateOverride {
	struct TSoftObjectPtr<struct UFortQuestItemDefinition> Quest; // 0x00(0x28)
	struct FDateTime Start; // 0x28(0x08)
	struct FDateTime End; // 0x30(0x08)
};

// ScriptStruct FortniteGame.FortReplayPlaybackState
// Size: 0x18 (Inherited: 0x00)
struct FFortReplayPlaybackState {
	float StartTime; // 0x00(0x04)
	float EndTime; // 0x04(0x04)
	float TimeNow; // 0x08(0x04)
	bool bIsPaused; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
	float PlaybackSpeedMultiplier; // 0x10(0x04)
	enum class EHudVisibilityState HUDVisibility; // 0x14(0x01)
	bool bLevelStreaming; // 0x15(0x01)
	bool bHasRelevancyZone; // 0x16(0x01)
	char pad_17[0x1]; // 0x17(0x01)
};

// ScriptStruct FortniteGame.FortReplayEvent
// Size: 0x50 (Inherited: 0x00)
struct FFortReplayEvent {
	char pad_0[0x50]; // 0x00(0x50)
};

// ScriptStruct FortniteGame.FortReplayMetadata
// Size: 0x378 (Inherited: 0x00)
struct FFortReplayMetadata {
	struct FString ReplayName; // 0x00(0x10)
	struct FString PlaylistName; // 0x10(0x10)
	float ReplayLength; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
	struct FUniqueNetIdRepl RecordingPlayer; // 0x28(0x28)
	struct TMap<float, struct FUniqueNetIdRepl> RelevancyList; // 0x50(0x50)
	struct TMap<struct FUniqueNetIdRepl, struct FString> PlayerIds; // 0xa0(0x50)
	struct TMap<struct FString, struct FString> PlayerMatchReportToName; // 0xf0(0x50)
	struct TMap<struct FUniqueNetIdRepl, struct FString> PlayerIdToMatchReport; // 0x140(0x50)
	struct TMap<struct FUniqueNetIdRepl, int32_t> PlayerIdToWorldIdentifier; // 0x190(0x50)
	struct TArray<struct FReplayKillSummary> KillSummaries; // 0x1e0(0x10)
	struct TMap<struct FUniqueNetIdRepl, int32_t> PlayerFinalRankings; // 0x1f0(0x50)
	struct FGameStateInformation GameInformation; // 0x240(0x128)
	struct TArray<struct FAthenaTravelLogEntry> WorldLogEntries; // 0x368(0x10)
};

// ScriptStruct FortniteGame.GameStateInformation
// Size: 0x128 (Inherited: 0x00)
struct FGameStateInformation {
	struct FGameMemberInfoArray PlayerInfos; // 0x00(0x120)
	bool bIsTeamBasedGame; // 0x120(0x01)
	char pad_121[0x7]; // 0x121(0x07)
};

// ScriptStruct FortniteGame.ReplayKillSummary
// Size: 0xd0 (Inherited: 0x00)
struct FReplayKillSummary {
	struct FUniqueNetIdRepl Victim; // 0x00(0x28)
	char pad_28[0x8]; // 0x28(0x08)
	struct FTransform VictimLocation; // 0x30(0x30)
	struct FUniqueNetIdRepl Instigator; // 0x60(0x28)
	char pad_88[0x8]; // 0x88(0x08)
	struct FTransform InstigatorLocation; // 0x90(0x30)
	float Timestamp; // 0xc0(0x04)
	bool bIsDownButNotOut; // 0xc4(0x01)
	enum class EDeathCause DeathCause; // 0xc5(0x01)
	char pad_C6[0xa]; // 0xc6(0x0a)
};

// ScriptStruct FortniteGame.BaseReplayEventInfo
// Size: 0x18 (Inherited: 0x00)
struct FBaseReplayEventInfo {
	char pad_0[0x8]; // 0x00(0x08)
	float EventTime; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	int32_t VersionNumber; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.ReplayServerHighlights
// Size: 0x28 (Inherited: 0x18)
struct FReplayServerHighlights : FBaseReplayEventInfo {
	struct TArray<struct FMinimalHighlightShot> Shots; // 0x18(0x10)
};

// ScriptStruct FortniteGame.MinimalHighlightShot
// Size: 0xa8 (Inherited: 0x00)
struct FMinimalHighlightShot {
	int32_t VersionNumber; // 0x00(0x04)
	float StartTimestamp; // 0x04(0x04)
	float ShotDuration; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FUniqueNetIdRepl PlayerID; // 0x10(0x28)
	struct FString PlayerName; // 0x38(0x10)
	struct TMap<enum class EHighlightFeatures, float> FeatureScores; // 0x48(0x50)
	int32_t NumEliminations; // 0x98(0x04)
	enum class EHighlightSignificances ClipSignificance; // 0x9c(0x01)
	char pad_9D[0x3]; // 0x9d(0x03)
	float FinalScore; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// ScriptStruct FortniteGame.ReplayDataSinglePlayerMove
// Size: 0x48 (Inherited: 0x18)
struct FReplayDataSinglePlayerMove : FBaseReplayEventInfo {
	char pad_18[0x30]; // 0x18(0x30)
};

// ScriptStruct FortniteGame.ReplayEliminationEventInfo
// Size: 0xe0 (Inherited: 0x18)
struct FReplayEliminationEventInfo : FBaseReplayEventInfo {
	char pad_18[0x8]; // 0x18(0x08)
	struct FTransform EventLocation; // 0x20(0x30)
	struct FTransform InstigatorLocation; // 0x50(0x30)
	struct FUniqueNetIdRepl Victim; // 0x80(0x28)
	struct FUniqueNetIdRepl Instigator; // 0xa8(0x28)
	enum class EDeathCause DeathCause; // 0xd0(0x01)
	bool bDBNO; // 0xd1(0x01)
	enum class EFortReplayEventType EventType; // 0xd2(0x01)
	char pad_D3[0xd]; // 0xd3(0x0d)
};

// ScriptStruct FortniteGame.ReplayActorsPosition
// Size: 0x28 (Inherited: 0x18)
struct FReplayActorsPosition : FBaseReplayEventInfo {
	struct TArray<struct FReplayDataActorPosition> Chests; // 0x18(0x10)
};

// ScriptStruct FortniteGame.ReplayDataActorPosition
// Size: 0x0c (Inherited: 0x00)
struct FReplayDataActorPosition {
	struct FVector_NetQuantize Position; // 0x00(0x0c)
};

// ScriptStruct FortniteGame.ReplayTimecodeEventInfo
// Size: 0x20 (Inherited: 0x18)
struct FReplayTimecodeEventInfo : FBaseReplayEventInfo {
	int64_t UTCTimecode; // 0x18(0x08)
};

// ScriptStruct FortniteGame.ReplayZoneEventInfo
// Size: 0x28 (Inherited: 0x18)
struct FReplayZoneEventInfo : FBaseReplayEventInfo {
	struct FVector ZoneCenter; // 0x18(0x0c)
	float ZoneRadius; // 0x24(0x04)
};

// ScriptStruct FortniteGame.ReplayTeamFlightEventInfo
// Size: 0x40 (Inherited: 0x18)
struct FReplayTeamFlightEventInfo : FBaseReplayEventInfo {
	struct FVector StartLocation; // 0x18(0x0c)
	struct FRotator StartRotation; // 0x24(0x0c)
	struct FVector EndLocation; // 0x30(0x0c)
	char IndexNum; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
};

// ScriptStruct FortniteGame.ReplayDataPlayerMoves
// Size: 0x68 (Inherited: 0x18)
struct FReplayDataPlayerMoves : FBaseReplayEventInfo {
	struct TMap<struct FString, struct FReplayDataMoveSnapshotContainer> PlayerPersistentIdToMoveSamples; // 0x18(0x50)
};

// ScriptStruct FortniteGame.ReplayDataMoveSnapshotContainer
// Size: 0x10 (Inherited: 0x00)
struct FReplayDataMoveSnapshotContainer {
	char pad_0[0x10]; // 0x00(0x10)
};

// ScriptStruct FortniteGame.ReplayDataMoveSnapshot
// Size: 0x10 (Inherited: 0x00)
struct FReplayDataMoveSnapshot {
	struct FVector_NetQuantize Position; // 0x00(0x0c)
	enum class EFortMovementStyle MovementStyle; // 0x0c(0x01)
	char pad_D[0x1]; // 0x0d(0x01)
	uint16_t WorldTime; // 0x0e(0x02)
};

// ScriptStruct FortniteGame.FortAlwaysRelevantActorInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortAlwaysRelevantActorInfo {
	struct UNetConnection* Connection; // 0x00(0x08)
	struct AActor* LastPawn; // 0x08(0x08)
	struct AActor* LastTetherPawn; // 0x10(0x08)
};

// ScriptStruct FortniteGame.RepGraphClassTracking
// Size: 0x28 (Inherited: 0x00)
struct FRepGraphClassTracking {
	struct FString ClassName; // 0x00(0x10)
	struct FString CSVStatNamePrefix; // 0x10(0x10)
	bool bIncludeFastPath; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
};

// ScriptStruct FortniteGame.RepGraphActorSettingsBase
// Size: 0x90 (Inherited: 0x00)
struct FRepGraphActorSettingsBase {
	char bAddClassRepInfoToMap : 1; // 0x00(0x01)
	char bUseCustomClassRepInfo : 1; // 0x00(0x01)
	char bAddToExplicitCSVStatTracker : 1; // 0x00(0x01)
	char bAddToImplicitCSVStatTracker : 1; // 0x00(0x01)
	char bAddToRPC_Multicast_OpenChannelForClassMap : 1; // 0x00(0x01)
	char bRPC_Multicast_OpenChannelForClass : 1; // 0x00(0x01)
	char pad_0_6 : 2; // 0x00(0x01)
	enum class EClassRepNodeMapping ClassNodeMapping; // 0x01(0x01)
	char pad_2[0xe]; // 0x02(0x0e)
	struct FClassReplicationInfo ClassRepInfo; // 0x10(0x70)
	struct FName CSVStatNamePrefix; // 0x80(0x08)
	char pad_88[0x8]; // 0x88(0x08)
};

// ScriptStruct FortniteGame.RepGraphActorClassSettings
// Size: 0xa0 (Inherited: 0x90)
struct FRepGraphActorClassSettings : FRepGraphActorSettingsBase {
	struct FName ActorClassName; // 0x88(0x08)
	struct FName MapToTemplate; // 0x90(0x08)
};

// ScriptStruct FortniteGame.RepGraphActorTemplateSettings
// Size: 0x90 (Inherited: 0x90)
struct FRepGraphActorTemplateSettings : FRepGraphActorSettingsBase {
	struct FName TemplateName; // 0x88(0x08)
};

// ScriptStruct FortniteGame.FortRespawnDataRow
// Size: 0x28 (Inherited: 0x08)
struct FFortRespawnDataRow : FTableRowBase {
	struct FLinearColor FadeColor; // 0x08(0x10)
	float FadeOutTime; // 0x18(0x04)
	float FadeInTime; // 0x1c(0x04)
	float WaitTime; // 0x20(0x04)
	float SafetyTime; // 0x24(0x04)
};

// ScriptStruct FortniteGame.CreativeBetaPermission
// Size: 0x20 (Inherited: 0x00)
struct FCreativeBetaPermission {
	struct FPrimaryAssetId PrimaryAssetId; // 0x00(0x10)
	struct TArray<struct FString> PermissionTagContainer; // 0x10(0x10)
};

// ScriptStruct FortniteGame.CreativeIslandResource
// Size: 0x24 (Inherited: 0x00)
struct FCreativeIslandResource {
	char pad_0[0x14]; // 0x00(0x14)
	float WorldRadius; // 0x14(0x04)
	struct FName Tag; // 0x18(0x08)
	int32_t MaxCount; // 0x20(0x04)
};

// ScriptStruct FortniteGame.CreativeIslandDescriptionTag
// Size: 0x28 (Inherited: 0x00)
struct FCreativeIslandDescriptionTag {
	struct FString Name; // 0x00(0x10)
	struct FText DisplayText; // 0x10(0x18)
};

// ScriptStruct FortniteGame.ExperimentalCohortPercent
// Size: 0x18 (Inherited: 0x00)
struct FExperimentalCohortPercent {
	int32_t ExperimentNum; // 0x00(0x04)
	int32_t CohortPercent; // 0x04(0x04)
	struct FString Name; // 0x08(0x10)
};

// ScriptStruct FortniteGame.RuntimeOptionSpectateAPartyMemberOverride
// Size: 0x0c (Inherited: 0x00)
struct FRuntimeOptionSpectateAPartyMemberOverride {
	struct FName PropertyName; // 0x00(0x08)
	bool bEnabled; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
};

// ScriptStruct FortniteGame.RuntimeOptionScheduledNotification
// Size: 0x30 (Inherited: 0x00)
struct FRuntimeOptionScheduledNotification {
	struct FDateTime FireDateTime; // 0x00(0x08)
	bool LocalTime; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct FRuntimeOptionLocalizableString Title; // 0x10(0x10)
	struct FRuntimeOptionLocalizableString Body; // 0x20(0x10)
};

// ScriptStruct FortniteGame.RuntimeOptionLocalizableString
// Size: 0x10 (Inherited: 0x00)
struct FRuntimeOptionLocalizableString {
	struct TArray<struct FRuntimeOptionLocalizableStringEntry> Entries; // 0x00(0x10)
};

// ScriptStruct FortniteGame.RuntimeOptionLocalizableStringEntry
// Size: 0x20 (Inherited: 0x00)
struct FRuntimeOptionLocalizableStringEntry {
	struct FString Culture; // 0x00(0x10)
	struct FString Text; // 0x10(0x10)
};

// ScriptStruct FortniteGame.AthenaItemShopSectionPriority
// Size: 0x08 (Inherited: 0x00)
struct FAthenaItemShopSectionPriority {
	enum class EFortItemShopSection Section; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t Priority; // 0x04(0x04)
};

// ScriptStruct FortniteGame.AthenaItemShopSectionOverrideDisplayData
// Size: 0x03 (Inherited: 0x00)
struct FAthenaItemShopSectionOverrideDisplayData {
	enum class EFortItemShopSection Section; // 0x00(0x01)
	bool bHideTitle; // 0x01(0x01)
	bool bNoSectionTab; // 0x02(0x01)
};

// ScriptStruct FortniteGame.RuntimeOptionDisabledGameplayMessage
// Size: 0x10 (Inherited: 0x00)
struct FRuntimeOptionDisabledGameplayMessage {
	struct FName MessageOwnerClassName; // 0x00(0x08)
	struct FName MessageName; // 0x08(0x08)
};

// ScriptStruct FortniteGame.RuntimeOptionPlaygroundKnobOverride
// Size: 0x28 (Inherited: 0x00)
struct FRuntimeOptionPlaygroundKnobOverride {
	struct FString KnobID; // 0x00(0x10)
	bool bEnabled; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct FString OverrideDefault; // 0x18(0x10)
};

// ScriptStruct FortniteGame.RuntimeOptionTabStateInfo
// Size: 0x0c (Inherited: 0x00)
struct FRuntimeOptionTabStateInfo {
	struct FName TabName; // 0x00(0x08)
	enum class EFortRuntimeOptionTabState TabState; // 0x08(0x01)
	enum class EFortRuntimeOptionTabStateTarget TargetPlayer; // 0x09(0x01)
	char pad_A[0x2]; // 0x0a(0x02)
};

// ScriptStruct FortniteGame.PlayerMarkerConfig
// Size: 0x58 (Inherited: 0x00)
struct FPlayerMarkerConfig {
	float DoubleClickTime; // 0x00(0x04)
	bool bShowMarkerDetailsWidget; // 0x04(0x01)
	bool bCreateMarkerActors; // 0x05(0x01)
	bool bCreateMarkerWidgets; // 0x06(0x01)
	bool bClampEnemyMarkers; // 0x07(0x01)
	bool bClampItemMarkers; // 0x08(0x01)
	bool bShowLocationMarkersOnCompass; // 0x09(0x01)
	char pad_A[0x2]; // 0x0a(0x02)
	int32_t LocalPlaceableMarkersPerRate; // 0x0c(0x04)
	float LocalPlaceableMarkersRechargeRate; // 0x10(0x04)
	int32_t RemotePlayableMarkerSoundsPerRate; // 0x14(0x04)
	int32_t RemotePlayableMarkerSoundsRechargeRate; // 0x18(0x04)
	int32_t RemotePlayableMarkerSoundsByPlayerIDPerRate; // 0x1c(0x04)
	int32_t RemotePlayableMarkerSoundsByPlayerIDRechargeRate; // 0x20(0x04)
	int32_t RemotePlayableMarkerSoundsByPlayerIDRechargeRateCap; // 0x24(0x04)
	bool EnableDoubleClickAction; // 0x28(0x01)
	bool EnableItemMarking; // 0x29(0x01)
	bool EnableInteractionMarking; // 0x2a(0x01)
	char pad_2B[0x1]; // 0x2b(0x01)
	float ScreenPercentageDistanceToShowMarkerInfo; // 0x2c(0x04)
	float EnemyMarkerTLL; // 0x30(0x04)
	float ItemMarkerTTL; // 0x34(0x04)
	float SpecialServerMarkerTTL; // 0x38(0x04)
	float EliminationMarkerTTL; // 0x3c(0x04)
	float SelfEliminationMarkerTTL; // 0x40(0x04)
	int32_t MaxItemMarkers; // 0x44(0x04)
	int32_t MaxEnemyMarkers; // 0x48(0x04)
	int32_t MaxEliminationMarkers; // 0x4c(0x04)
	int32_t MaxSpecialLocalMarkers; // 0x50(0x04)
	int32_t MaxSpecialServerMarkers; // 0x54(0x04)
};

// ScriptStruct FortniteGame.RuntimeOptionReviewPromptCriteria
// Size: 0x14 (Inherited: 0x00)
struct FRuntimeOptionReviewPromptCriteria {
	int32_t MinutesPlayed; // 0x00(0x04)
	int32_t GamesPlayed; // 0x04(0x04)
	int32_t BestResult; // 0x08(0x04)
	int32_t KillCount; // 0x0c(0x04)
	bool RequireAll; // 0x10(0x01)
	char pad_11[0x3]; // 0x11(0x03)
};

// ScriptStruct FortniteGame.RuntimeOptionTournamentScoreThreshold
// Size: 0x08 (Inherited: 0x00)
struct FRuntimeOptionTournamentScoreThreshold {
	int32_t StartingPlacement; // 0x00(0x04)
	int32_t PointsIncrement; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortSafeZoneVolumeDefinition
// Size: 0x30 (Inherited: 0x00)
struct FFortSafeZoneVolumeDefinition {
	struct AVolume* Volume; // 0x00(0x08)
	struct FScalableFloat RejectionChance; // 0x08(0x28)
};

// ScriptStruct FortniteGame.FortSafeZoneDefinition
// Size: 0x298 (Inherited: 0x00)
struct FFortSafeZoneDefinition {
	struct FScalableFloat Count; // 0x00(0x28)
	struct FScalableFloat Radius; // 0x28(0x28)
	struct FScalableFloat ForceDistanceMin; // 0x50(0x28)
	struct FScalableFloat ForceDistanceMax; // 0x78(0x28)
	struct FScalableFloat RejectRadius; // 0xa0(0x28)
	struct FScalableFloat RejectOuterDistance; // 0xc8(0x28)
	struct FScalableFloat WaitTime; // 0xf0(0x28)
	struct FScalableFloat ShrinkTime; // 0x118(0x28)
	struct FScalableFloat MegaStormGridCellThickness; // 0x140(0x28)
	struct FScalableFloat PlayerCapSolo; // 0x168(0x28)
	struct FScalableFloat PlayerCapDuo; // 0x190(0x28)
	struct FScalableFloat PlayerCapSquad; // 0x1b8(0x28)
	char pad_1E0[0xb8]; // 0x1e0(0xb8)
};

// ScriptStruct FortniteGame.SanitizedEntry
// Size: 0x20 (Inherited: 0x00)
struct FSanitizedEntry {
	char pad_0[0x20]; // 0x00(0x20)
};

// ScriptStruct FortniteGame.SanitizationData
// Size: 0x60 (Inherited: 0x00)
struct FSanitizationData {
	struct UAsyncTaskQueue* TaskQueue; // 0x00(0x08)
	char pad_8[0x58]; // 0x08(0x58)
};

// ScriptStruct FortniteGame.FortBuildingActorArray
// Size: 0x10 (Inherited: 0x00)
struct FFortBuildingActorArray {
	struct TArray<struct FFortDestroyedActorRecord> ActorRecords; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortDestroyedActorRecord
// Size: 0x50 (Inherited: 0x00)
struct FFortDestroyedActorRecord {
	struct FGuid ActorGuid; // 0x00(0x10)
	struct ABuildingActor* ActorClass; // 0x10(0x08)
	char pad_18[0x8]; // 0x18(0x08)
	struct FTransform ActorTransform; // 0x20(0x30)
};

// ScriptStruct FortniteGame.FortScoreStylingInfo
// Size: 0x358 (Inherited: 0x00)
struct FFortScoreStylingInfo {
	struct FText Name; // 0x00(0x18)
	struct FFortMultiSizeBrush Icon; // 0x18(0x330)
	struct FLinearColor Color; // 0x348(0x10)
};

// ScriptStruct FortniteGame.FortScriptedActionParams
// Size: 0x30 (Inherited: 0x00)
struct FFortScriptedActionParams {
	struct AFortPlayerController* Player; // 0x00(0x08)
	enum class EFortScriptedActionSource SourceType; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct UFortItem* SourceItem; // 0x10(0x08)
	struct FDataTableRowHandle SourceData; // 0x18(0x10)
	struct FName SourceName; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortAvailableScriptedAction
// Size: 0x38 (Inherited: 0x00)
struct FFortAvailableScriptedAction {
	struct FFortScriptedActionParams Params; // 0x00(0x30)
	struct AFortScriptedAction* ActionDefaults; // 0x30(0x08)
};

// ScriptStruct FortniteGame.FortSearchPassState
// Size: 0x18 (Inherited: 0x00)
struct FFortSearchPassState {
	int32_t BestSessionIdx; // 0x00(0x04)
	bool bWasCanceled; // 0x04(0x01)
	enum class EFortSessionHelperJoinResult FailureType; // 0x05(0x01)
	enum class EMatchmakingState MatchmakingState; // 0x06(0x01)
	enum class EPartyReservationResult LastBeaconResponse; // 0x07(0x01)
	char pad_8[0x10]; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortSearchPassParams
// Size: 0x28 (Inherited: 0x00)
struct FFortSearchPassParams {
	int32_t ControllerId; // 0x00(0x04)
	struct FName SessionName; // 0x04(0x08)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FString BestDatacenterId; // 0x10(0x10)
	int32_t MaxProcessedSearchResults; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.MMAttemptState
// Size: 0x0c (Inherited: 0x00)
struct FMMAttemptState {
	int32_t BestSessionIdx; // 0x00(0x04)
	int32_t NumSearchResults; // 0x04(0x04)
	enum class EMatchmakingState State; // 0x08(0x01)
	enum class EPartyReservationResult LastBeaconResponse; // 0x09(0x01)
	char pad_A[0x2]; // 0x0a(0x02)
};

// ScriptStruct FortniteGame.FortTimedKeysState
// Size: 0x10 (Inherited: 0x00)
struct FFortTimedKeysState {
	struct TArray<struct FString> K; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortMatchmakingEventsState
// Size: 0x50 (Inherited: 0x00)
struct FFortMatchmakingEventsState {
	struct TMap<struct FString, struct FFortMatchmakingRegionState> Region; // 0x00(0x50)
};

// ScriptStruct FortniteGame.FortMatchmakingRegionState
// Size: 0xa0 (Inherited: 0x00)
struct FFortMatchmakingRegionState {
	struct TSet<struct FName> EventFlagsForcedOn; // 0x00(0x50)
	struct TSet<struct FName> EventFlagsForcedOff; // 0x50(0x50)
};

// ScriptStruct FortniteGame.FortRotationalContentEventsState
// Size: 0x140 (Inherited: 0x00)
struct FFortRotationalContentEventsState {
	struct TSet<struct FName> ActiveStorefronts; // 0x00(0x50)
	struct TSet<struct FName> ActiveEventFlags; // 0x50(0x50)
	struct TMap<struct FName, double> EventNamedWeights; // 0xa0(0x50)
	struct TSet<struct FDateTime> ExpirationTimes; // 0xf0(0x50)
};

// ScriptStruct FortniteGame.FortClientEventsState
// Size: 0x1f0 (Inherited: 0x140)
struct FFortClientEventsState : FFortRotationalContentEventsState {
	int32_t SeasonNumber; // 0x140(0x04)
	char pad_144[0x4]; // 0x144(0x04)
	struct FString SeasonTemplateId; // 0x148(0x10)
	float MatchXpBonusPoints; // 0x158(0x04)
	char pad_15C[0x4]; // 0x15c(0x04)
	struct FDateTime SeasonBegin; // 0x160(0x08)
	struct FDateTime SeasonEnd; // 0x168(0x08)
	struct FDateTime SeasonDisplayedEnd; // 0x170(0x08)
	struct FDateTime WeeklyStoreEnd; // 0x178(0x08)
	struct FDateTime DailyStoreEnd; // 0x180(0x08)
	struct FDateTime StwDailyStoreEnd; // 0x188(0x08)
	struct FDateTime StwEventStoreEnd; // 0x190(0x08)
	struct FDateTime StwWeeklyStoreEnd; // 0x198(0x08)
	struct TMap<struct FName, struct FDateTime> SectionStoreEnds; // 0x1a0(0x50)
};

// ScriptStruct FortniteGame.FortStandaloneStoreState
// Size: 0x08 (Inherited: 0x00)
struct FFortStandaloneStoreState {
	struct FDateTime StoreEnd; // 0x00(0x08)
};

// ScriptStruct FortniteGame.FortCommunityVotesState
// Size: 0x30 (Inherited: 0x00)
struct FFortCommunityVotesState {
	struct FString ElectionId; // 0x00(0x10)
	struct TArray<struct FCatalogOffer> Candidates; // 0x10(0x10)
	struct FDateTime ElectionEnds; // 0x20(0x08)
	int32_t NumWinners; // 0x28(0x04)
	int32_t WinnerStateHours; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortFeaturedIslandsState
// Size: 0xc0 (Inherited: 0x00)
struct FFortFeaturedIslandsState {
	struct TArray<struct FString> IslandCodes; // 0x00(0x10)
	struct TMap<struct FString, struct FFortPlaylistCuratedContent> PlaylistCuratedContent; // 0x10(0x50)
	struct TMap<struct FString, struct FString> PlaylistCuratedHub; // 0x60(0x50)
	struct TArray<struct FString> IslandTemplates; // 0xb0(0x10)
};

// ScriptStruct FortniteGame.FortBotFaction
// Size: 0x50 (Inherited: 0x00)
struct FFortBotFaction {
	struct FGameplayTagContainer FactionTags; // 0x00(0x20)
	struct TArray<struct AFortPlayerStateAthena*> BotPlayerStates; // 0x20(0x10)
	struct TArray<struct AFortPlayerStateAthena*> NoneParticipantPlayerStates; // 0x30(0x10)
	struct TArray<struct AFortPlayerStateAthena*> AllBotPlayerStates; // 0x40(0x10)
};

// ScriptStruct FortniteGame.CachedPOIVolumeLocations
// Size: 0x20 (Inherited: 0x00)
struct FCachedPOIVolumeLocations {
	struct AFortPoiVolume* POIVolume; // 0x00(0x08)
	char pad_8[0x18]; // 0x08(0x18)
};

// ScriptStruct FortniteGame.NavigationPOI
// Size: 0x80 (Inherited: 0x00)
struct FNavigationPOI {
	struct FScalableFloat IsEnabled; // 0x00(0x28)
	struct FGameplayTagQuery POIFilterQuery; // 0x28(0x48)
	struct TArray<struct AFortPoiVolume*> ValidPOIVolumeList; // 0x70(0x10)
};

// ScriptStruct FortniteGame.BattleBusPOI
// Size: 0x90 (Inherited: 0x00)
struct FBattleBusPOI {
	struct FScalableFloat IsEnabled; // 0x00(0x28)
	struct FGameplayTagQuery POIFilterQuery; // 0x28(0x48)
	struct TArray<struct AFortPoiVolume*> ValidPOIVolumeList; // 0x70(0x10)
	char pad_80[0x10]; // 0x80(0x10)
};

// ScriptStruct FortniteGame.QuestDrivenMissionSubList
// Size: 0x20 (Inherited: 0x00)
struct FQuestDrivenMissionSubList {
	struct FName MissionSubListName; // 0x00(0x08)
	bool bEnabled; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct TArray<struct FFortQuestDrivenMission> QuestDrivenMissionList; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortGlobalMission
// Size: 0x178 (Inherited: 0x00)
struct FFortGlobalMission {
	struct TSoftObjectPtr<struct UFortMissionInfo> MissionInfo; // 0x00(0x28)
	struct TArray<enum class EFortTheaterType> AllowedTheaterTypes; // 0x28(0x10)
	struct FGameplayTagQuery TheaterTagQuery; // 0x38(0x48)
	struct FGameplayTagQuery RegionTagQuery; // 0x80(0x48)
	struct TArray<enum class EFortZoneType> AllowedZoneTypes; // 0xc8(0x10)
	struct FGameplayTagQuery ZoneTagQuery; // 0xd8(0x48)
	struct FGameplayTagQuery PrimaryMissionTagQuery; // 0x120(0x48)
	float MaxDifficultyLevel; // 0x168(0x04)
	float MinDifficultyLevel; // 0x16c(0x04)
	bool bIsPrototype; // 0x170(0x01)
	bool bAllowInTestMaps; // 0x171(0x01)
	bool bEnabled; // 0x172(0x01)
	char pad_173[0x5]; // 0x173(0x05)
};

// ScriptStruct FortniteGame.FortQuestDrivenMission
// Size: 0x180 (Inherited: 0x178)
struct FFortQuestDrivenMission : FFortGlobalMission {
	struct UFortQuestItemDefinition* RequiredQuest; // 0x178(0x08)
};

// ScriptStruct FortniteGame.FortMissionDistributionCategory
// Size: 0x48 (Inherited: 0x00)
struct FFortMissionDistributionCategory {
	struct FGameplayTagQuery CategoryTagQuery; // 0x00(0x48)
};

// ScriptStruct FortniteGame.FortNonPrimaryMission
// Size: 0xb8 (Inherited: 0x00)
struct FFortNonPrimaryMission {
	struct TSoftObjectPtr<struct UFortMissionInfo> MissionInfo; // 0x00(0x28)
	struct FGameplayTagQuery ContextTagQuery; // 0x28(0x48)
	struct FDataTableRowHandle MinDifficulty; // 0x70(0x10)
	struct FDataTableRowHandle MaxDifficulty; // 0x80(0x10)
	bool bSatisfiesCurrentRequirement; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
	struct TArray<int32_t> RequirementIndicesSatisfied; // 0x98(0x10)
	struct TArray<int32_t> DistributionCategoryIndicesSatisfied; // 0xa8(0x10)
};

// ScriptStruct FortniteGame.SavedShopSectionState
// Size: 0x10 (Inherited: 0x00)
struct FSavedShopSectionState {
	struct TArray<struct FString> OfferIds; // 0x00(0x10)
};

// ScriptStruct FortniteGame.SkeletalAudioBoneInstance
// Size: 0xc0 (Inherited: 0x00)
struct FSkeletalAudioBoneInstance {
	char pad_0[0x10]; // 0x00(0x10)
	struct UAudioComponent* LoopInstance; // 0x10(0x08)
	float Delta; // 0x18(0x04)
	char pad_1C[0xa4]; // 0x1c(0xa4)
};

// ScriptStruct FortniteGame.SkeletalAudioBoneConfig
// Size: 0x38 (Inherited: 0x00)
struct FSkeletalAudioBoneConfig {
	struct FName BoneName; // 0x00(0x08)
	struct USoundBase* SoundLoop; // 0x08(0x08)
	struct USoundBase* SoundMediumDelta; // 0x10(0x08)
	struct USoundBase* SoundHighDelta; // 0x18(0x08)
	float ThresholdLoop; // 0x20(0x04)
	float ThresholdMedium; // 0x24(0x04)
	float ThresholdHigh; // 0x28(0x04)
	float RetriggerDelay; // 0x2c(0x04)
	enum class ESkeletalAudioBoneSpace TrackingSpace; // 0x30(0x01)
	enum class ESkeletalAudioBoneVelocityType VelocityTrackingType; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// ScriptStruct FortniteGame.FortPartyRepData
// Size: 0x5e0 (Inherited: 0x80)
struct FFortPartyRepData : FPartyRepData {
	struct FString PrimaryGameSessionId; // 0x80(0x10)
	char pad_90[0x30]; // 0x90(0x30)
	enum class EFortPartyState PartyState; // 0xc0(0x01)
	char pad_C1[0x37]; // 0xc1(0x37)
	bool LobbyConnectionStarted; // 0xf8(0x01)
	char pad_F9[0x37]; // 0xf9(0x37)
	enum class EMatchmakingCompleteResult MatchmakingResult; // 0x130(0x01)
	char pad_131[0x37]; // 0x131(0x37)
	enum class EMatchmakingState MatchmakingState; // 0x168(0x01)
	char pad_169[0x37]; // 0x169(0x37)
	bool SessionIsCriticalMission; // 0x1a0(0x01)
	char pad_1A1[0x37]; // 0x1a1(0x37)
	int32_t ZoneTileIndex; // 0x1d8(0x04)
	char pad_1DC[0x34]; // 0x1dc(0x34)
	struct FString ZoneInstanceId; // 0x210(0x10)
	char pad_220[0x30]; // 0x220(0x30)
	struct FString TheaterId; // 0x250(0x10)
	char pad_260[0x30]; // 0x260(0x30)
	struct TArray<bool> TileStates; // 0x290(0x10)
	char pad_2A0[0x30]; // 0x2a0(0x30)
	struct FFortPartyMatchmakingInfo PartyMatchmakingInfo; // 0x2d0(0x58)
	char pad_328[0x30]; // 0x328(0x30)
	struct TArray<struct FFortCreativeDiscoverySurfaceRevision> CreativeDiscoverySurfaceRevisions; // 0x358(0x10)
	char pad_368[0x30]; // 0x368(0x30)
	struct FString CustomMatchKey; // 0x398(0x10)
	char pad_3A8[0x30]; // 0x3a8(0x30)
	struct FPlaylistData PlaylistData; // 0x3d8(0x38)
	char pad_410[0x30]; // 0x410(0x30)
	struct FString ActivityName; // 0x440(0x10)
	char pad_450[0x30]; // 0x450(0x30)
	bool AllowJoinInProgress; // 0x480(0x01)
	char pad_481[0x37]; // 0x481(0x37)
	struct FDateTime LFGTime; // 0x4b8(0x08)
	char pad_4C0[0x30]; // 0x4c0(0x30)
	bool AthenaSquadFill; // 0x4f0(0x01)
	char pad_4F1[0x37]; // 0x4f1(0x37)
	bool PartyIsJoinedInProgress; // 0x528(0x01)
	char pad_529[0x37]; // 0x529(0x37)
	struct FString GameSessionKey; // 0x560(0x10)
	char pad_570[0x30]; // 0x570(0x30)
	struct TArray<struct FFortPartySquadAssignment> RawSquadAssignments; // 0x5a0(0x10)
	char pad_5B0[0x30]; // 0x5b0(0x30)
};

// ScriptStruct FortniteGame.FortPartySquadAssignment
// Size: 0x30 (Inherited: 0x00)
struct FFortPartySquadAssignment {
	struct FUniqueNetIdRepl MemberId; // 0x00(0x28)
	int32_t AbsoluteMemberIdx; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortCreativeDiscoverySurfaceRevision
// Size: 0x0c (Inherited: 0x00)
struct FFortCreativeDiscoverySurfaceRevision {
	struct FName SurfaceName; // 0x00(0x08)
	int32_t Revision; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortPartyMatchmakingInfo
// Size: 0x58 (Inherited: 0x00)
struct FFortPartyMatchmakingInfo {
	int32_t BuildId; // 0x00(0x04)
	int32_t HotfixVersion; // 0x04(0x04)
	struct FString RegionId; // 0x08(0x10)
	struct FName PlaylistName; // 0x18(0x08)
	int32_t PlaylistRevision; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
	struct FString TournamentId; // 0x28(0x10)
	struct FString EventWindowId; // 0x38(0x10)
	struct FString LinkCode; // 0x48(0x10)
};

// ScriptStruct FortniteGame.FortPartySquad
// Size: 0x10 (Inherited: 0x00)
struct FFortPartySquad {
	struct TArray<struct TWeakObjectPtr<struct UFortPartyMember>> SquadMembers; // 0x00(0x10)
};

// ScriptStruct FortniteGame.SoundIndicatorInitializationData
// Size: 0x18 (Inherited: 0x00)
struct FSoundIndicatorInitializationData {
	struct FName EmitterName; // 0x00(0x08)
	struct FVector Offset; // 0x08(0x0c)
	float LifeTime; // 0x14(0x04)
};

// ScriptStruct FortniteGame.PlayerExitSpatialActorContext
// Size: 0x10 (Inherited: 0x00)
struct FPlayerExitSpatialActorContext {
	struct AActor* SpatialGameplayInterfaceActor; // 0x00(0x08)
	struct APlayerState* ExitingPlayerState; // 0x08(0x08)
};

// ScriptStruct FortniteGame.PlayerEnterSpatialActorContext
// Size: 0x10 (Inherited: 0x00)
struct FPlayerEnterSpatialActorContext {
	struct AActor* SpatialGameplayInterfaceActor; // 0x00(0x08)
	struct APlayerState* EnteringPlayerState; // 0x08(0x08)
};

// ScriptStruct FortniteGame.SpatialGameplayInterfaceContext
// Size: 0x08 (Inherited: 0x00)
struct FSpatialGameplayInterfaceContext {
	struct AActor* SpatialGameplayInterfaceActor; // 0x00(0x08)
};

// ScriptStruct FortniteGame.FortSpatialCellIndex
// Size: 0x0c (Inherited: 0x00)
struct FFortSpatialCellIndex {
	int32_t X; // 0x00(0x04)
	int32_t Y; // 0x04(0x04)
	int32_t Z; // 0x08(0x04)
};

// ScriptStruct FortniteGame.SpecialActorRepDataArray
// Size: 0x118 (Inherited: 0x108)
struct FSpecialActorRepDataArray : FFastArraySerializer {
	struct TArray<struct FSpecialActorRepData> SpecialActorList; // 0x108(0x10)
};

// ScriptStruct FortniteGame.SpecialGameplayAreaOverrideBodyPartsExtraSpecial
// Size: 0x30 (Inherited: 0x00)
struct FSpecialGameplayAreaOverrideBodyPartsExtraSpecial {
	struct TArray<struct UCustomCharacterPart*> OverrideBodyPartsForExtraSpecial; // 0x00(0x10)
	struct FGameplayTagContainer SkinMetaTagsForExtraSpecial; // 0x10(0x20)
};

// ScriptStruct FortniteGame.SpecialGameplayAreaLootData
// Size: 0x10 (Inherited: 0x00)
struct FSpecialGameplayAreaLootData {
	struct FGameplayTag LootSourceTag; // 0x00(0x08)
	struct FName LootTierGroup; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortChaseCameraHelper
// Size: 0x170 (Inherited: 0x00)
struct FFortChaseCameraHelper {
	struct FTransform PivotToViewTarget; // 0x00(0x30)
	struct FTransform PivotToViewTarget_Crouching; // 0x30(0x30)
	struct FTransform MinCameraToPivot; // 0x60(0x30)
	struct FTransform MaxCameraToPivot; // 0x90(0x30)
	char pad_C0[0x8]; // 0xc0(0x08)
	float CameraToPivotAlphaInterpSpeed; // 0xc8(0x04)
	float CameraCollisionSphereRadius; // 0xcc(0x04)
	float PivotLocationInterpSpeed; // 0xd0(0x04)
	float PivotRotationInterpSpeed; // 0xd4(0x04)
	char pad_D8[0x8]; // 0xd8(0x08)
	struct TArray<struct AActor*> IgnoreActors; // 0xe0(0x10)
	enum class EThirdPersonAutoFollowMode AutoFollowMode; // 0xf0(0x01)
	char pad_F1[0x3]; // 0xf1(0x03)
	float CameraTruckRate; // 0xf4(0x04)
	float AutoFollowPitch; // 0xf8(0x04)
	float LazyAutoFollowPitchMin; // 0xfc(0x04)
	float LazyAutoFollowPitchMax; // 0x100(0x04)
	char pad_104[0x6c]; // 0x104(0x6c)
};

// ScriptStruct FortniteGame.SphericalDriveParams
// Size: 0x48 (Inherited: 0x00)
struct FSphericalDriveParams {
	float Radius; // 0x00(0x04)
	float MaxSpeedKmh; // 0x04(0x04)
	float LowSpeedAccelerationForce; // 0x08(0x04)
	float HighSpeedAccelerationForce; // 0x0c(0x04)
	float MaxInclineDeg; // 0x10(0x04)
	float MaxAirControlForce; // 0x14(0x04)
	float MaxAirControlSpeedKmh; // 0x18(0x04)
	float ShellAngularDrag; // 0x1c(0x04)
	float DragCoefficient; // 0x20(0x04)
	float DragCoefficientAutoBrake; // 0x24(0x04)
	float MaxAutoBrakeSpeedKmh; // 0x28(0x04)
	float ContactRepulsionForce; // 0x2c(0x04)
	float ContactThreshold; // 0x30(0x04)
	float MassDirectionMaxAngleDeg; // 0x34(0x04)
	float MassDirectionStiffness; // 0x38(0x04)
	bool bMassDirectionInvert; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
	float TractionMultiplier; // 0x40(0x04)
	float BounceForce; // 0x44(0x04)
};

// ScriptStruct FortniteGame.FortSphericalVehicleAsyncDef
// Size: 0x01 (Inherited: 0x00)
struct FFortSphericalVehicleAsyncDef {
	char pad_0[0x1]; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortSphericalVehicleOutPersistent
// Size: 0x10 (Inherited: 0x10)
struct FFortSphericalVehicleOutPersistent : FFortVehicleOutPersistent {
};

// ScriptStruct FortniteGame.FortSphericalVehicleOutContinuous
// Size: 0x28 (Inherited: 0x28)
struct FFortSphericalVehicleOutContinuous : FFortVehicleOutContinuous {
};

// ScriptStruct FortniteGame.FortSphericalVehicleInPersistent
// Size: 0x240 (Inherited: 0x138)
struct FFortSphericalVehicleInPersistent : FFortVehicleInPersistent {
	char pad_138[0x108]; // 0x138(0x108)
};

// ScriptStruct FortniteGame.FortLinearSpline
// Size: 0x01 (Inherited: 0x00)
struct FFortLinearSpline {
	char pad_0[0x1]; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortSplineBase
// Size: 0x10 (Inherited: 0x00)
struct FFortSplineBase {
	char pad_0[0x8]; // 0x00(0x08)
	float StartTime; // 0x08(0x04)
	float Duration; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortCatmullRomSpline
// Size: 0x20 (Inherited: 0x10)
struct FFortCatmullRomSpline : FFortSplineBase {
	struct TArray<struct FVector> ControlPoints; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortEvenlySizedSegment
// Size: 0x68 (Inherited: 0x00)
struct FFortEvenlySizedSegment {
	char pad_0[0x50]; // 0x00(0x50)
	struct USplineMeshComponent* SplineMeshComponent; // 0x50(0x08)
	struct UCapsuleComponent* CapsuleComponent; // 0x58(0x08)
	char pad_60[0x8]; // 0x60(0x08)
};

// ScriptStruct FortniteGame.RawPointToLastServerIndexPlusAlpha
// Size: 0x04 (Inherited: 0x00)
struct FRawPointToLastServerIndexPlusAlpha {
	float ReppedLastServerIndexPlusAlpha; // 0x00(0x04)
};

// ScriptStruct FortniteGame.ReppedLastServerIndexToIndex
// Size: 0x04 (Inherited: 0x00)
struct FReppedLastServerIndexToIndex {
	int32_t ReppedPointIdx; // 0x00(0x04)
};

// ScriptStruct FortniteGame.FortReppedPointList
// Size: 0x120 (Inherited: 0x108)
struct FFortReppedPointList : FFastArraySerializer {
	struct TArray<struct FFortReppedPoint> FortReppedPoints; // 0x108(0x10)
	struct AFortSplineGroundPath* FortSplineGroundPath; // 0x118(0x08)
};

// ScriptStruct FortniteGame.FortReppedPoint
// Size: 0x20 (Inherited: 0x0c)
struct FFortReppedPoint : FFastArraySerializerItem {
	int32_t LastServerIndex; // 0x0c(0x04)
	float BurnTime; // 0x10(0x04)
	struct FVector_NetQuantize ReppedPoint; // 0x14(0x0c)
};

// ScriptStruct FortniteGame.SplineWaterAudioZone
// Size: 0x10 (Inherited: 0x00)
struct FSplineWaterAudioZone {
	struct FVector Position; // 0x00(0x0c)
	float Radius; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.FortSprayDecalRepPayload
// Size: 0x20 (Inherited: 0x00)
struct FFortSprayDecalRepPayload {
	struct UAthenaSprayItemDefinition* SprayAsset; // 0x00(0x08)
	struct FName BannerName; // 0x08(0x08)
	struct FName BannerColor; // 0x10(0x08)
	int32_t SavedStatValue; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortStatEventSequence
// Size: 0x50 (Inherited: 0x00)
struct FFortStatEventSequence {
	struct FName StatEventName; // 0x00(0x08)
	enum class EFortEventRepeat RepeatType; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct TArray<struct FFortStatEvent> EventSequence; // 0x10(0x10)
	struct UStat* AssociatedStat; // 0x20(0x08)
	struct AFortPlayerController* FPC; // 0x28(0x08)
	struct TArray<struct FName> StatsToMonitor; // 0x30(0x10)
	struct TArray<struct FFortEventConditional> Conditions; // 0x40(0x10)
};

// ScriptStruct FortniteGame.FortEventConditional
// Size: 0x28 (Inherited: 0x00)
struct FFortEventConditional {
	enum class EFortEventConditionType ConditionalType; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FName StatToCompare; // 0x04(0x08)
	enum class EStatRecordingPeriod RelevantPeriod; // 0x0c(0x01)
	enum class EFortCompare ComparisonType; // 0x0d(0x01)
	char pad_E[0x2]; // 0x0e(0x02)
	int32_t Value; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct UStat* Stat; // 0x18(0x08)
	struct AFortPlayerController* FPC; // 0x20(0x08)
};

// ScriptStruct FortniteGame.FortStatEvent
// Size: 0x50 (Inherited: 0x00)
struct FFortStatEvent {
	struct FName StatEventName; // 0x00(0x08)
	enum class EFortEventRepeat RepeatType; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct TArray<struct FName> StatsToMonitor; // 0x10(0x10)
	struct TArray<struct FFortEventConditional> Conditions; // 0x20(0x10)
	struct AFortClientAnnouncement* AnnouncementToDisplay; // 0x30(0x08)
	struct UObject* NotificationParameter; // 0x38(0x08)
	struct UStat* AssociatedStat; // 0x40(0x08)
	struct AFortPlayerController* FPC; // 0x48(0x08)
};

// ScriptStruct FortniteGame.TransformableNavLinkClass
// Size: 0x20 (Inherited: 0x00)
struct FTransformableNavLinkClass {
	struct FVector Translation; // 0x00(0x0c)
	struct FRotator Rotation; // 0x0c(0x0c)
	struct UNavLinkDefinition* NavigationLinksClass; // 0x18(0x08)
};

// ScriptStruct FortniteGame.FortSupplyDropGamePhaseData
// Size: 0x210 (Inherited: 0x00)
struct FFortSupplyDropGamePhaseData {
	enum class EAthenaGamePhase GamePhase; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FScalableFloat SupplyDropMinPlacementHeight; // 0x08(0x28)
	struct FScalableFloat SupplyDropMaxPlacementHeight; // 0x30(0x28)
	struct FScalableFloat SupplyDropTimeInterval; // 0x58(0x28)
	struct FScalableFloat SupplyDropTimeDeviation; // 0x80(0x28)
	struct FScalableFloat SupplyDropSpawnMinWaitTime; // 0xa8(0x28)
	struct FScalableFloat SupplyDropSpawnMaxWaitTime; // 0xd0(0x28)
	struct FScalableFloat SupplyDropMinSpawnHeight; // 0xf8(0x28)
	struct FScalableFloat SupplyDropMaxSpawnHeight; // 0x120(0x28)
	struct FScalableFloat SupplyDropMinSpeed; // 0x148(0x28)
	struct FScalableFloat SupplyDropMaxSpeed; // 0x170(0x28)
	struct FFortSupplyDropSubPhaseData SubPhaseData; // 0x198(0x78)
};

// ScriptStruct FortniteGame.FortSupplyDropSubPhaseData
// Size: 0x78 (Inherited: 0x00)
struct FFortSupplyDropSubPhaseData {
	struct FScalableFloat SupplyDropMinCount; // 0x00(0x28)
	struct FScalableFloat SupplyDropMaxCount; // 0x28(0x28)
	struct FScalableFloat SupplyDropCap; // 0x50(0x28)
};

// ScriptStruct FortniteGame.FortSurfaceTypeToSurfaceTypeTag
// Size: 0x10 (Inherited: 0x00)
struct FFortSurfaceTypeToSurfaceTypeTag {
	enum class EFortFootstepSurfaceType FootSurfaceType; // 0x00(0x01)
	enum class EPhysicalSurface SurfaceType; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	struct FGameplayTag SurfaceTypeTag; // 0x04(0x08)
	bool bAllowsSurfaceRetriggerOfEvents; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
};

// ScriptStruct FortniteGame.FortSurvivorNameData
// Size: 0x20 (Inherited: 0x08)
struct FFortSurvivorNameData : FTableRowBase {
	struct FText Name; // 0x08(0x18)
};

// ScriptStruct FortniteGame.FortGameFeatureDataBaseDataTableOverrides
// Size: 0x78 (Inherited: 0x00)
struct FFortGameFeatureDataBaseDataTableOverrides {
	struct TSoftObjectPtr<struct UDataTable> BaseTable; // 0x00(0x28)
	struct TMap<struct FGameplayTag, struct TSoftObjectPtr<struct UDataTable>> PlaylistToOverrideTableMap; // 0x28(0x50)
};

// ScriptStruct FortniteGame.FortGameFeatureDataBaseCurveTableOverrides
// Size: 0x78 (Inherited: 0x00)
struct FFortGameFeatureDataBaseCurveTableOverrides {
	struct TSoftObjectPtr<struct UCurveTable> BaseTable; // 0x00(0x28)
	struct TMap<struct FGameplayTag, struct TSoftObjectPtr<struct UCurveTable>> PlaylistToOverrideTableMap; // 0x28(0x50)
};

// ScriptStruct FortniteGame.FortPlaylistBaseCurveTableOverride
// Size: 0x50 (Inherited: 0x00)
struct FFortPlaylistBaseCurveTableOverride {
	struct TSoftObjectPtr<struct UCurveTable> BaseTable; // 0x00(0x28)
	struct TSoftObjectPtr<struct UCurveTable> OverrideTable; // 0x28(0x28)
};

// ScriptStruct FortniteGame.FortPlaylistBaseDataTableOverride
// Size: 0x50 (Inherited: 0x00)
struct FFortPlaylistBaseDataTableOverride {
	struct TSoftObjectPtr<struct UDataTable> BaseTable; // 0x00(0x28)
	struct TSoftObjectPtr<struct UDataTable> OverrideTable; // 0x28(0x28)
};

// ScriptStruct FortniteGame.FortTagUIData
// Size: 0x368 (Inherited: 0x00)
struct FFortTagUIData {
	struct FGameplayTag Tag; // 0x00(0x08)
	struct FFortMultiSizeBrush Icon; // 0x08(0x330)
	struct FText DisplayName; // 0x338(0x18)
	struct FText Description; // 0x350(0x18)
};

// ScriptStruct FortniteGame.FortTaggedActorOctreeFilter
// Size: 0x68 (Inherited: 0x00)
struct FFortTaggedActorOctreeFilter {
	struct FBoxSphereBounds Bounds; // 0x00(0x1c)
	float MinDistanceFromBoundsCenter; // 0x1c(0x04)
	struct TArray<struct ABuildingActor*> OptionalSubclasses; // 0x20(0x10)
	struct TArray<struct FFortFinderProperty> RequiredProperties; // 0x30(0x10)
	struct FGameplayTagContainer TagsToLookFor; // 0x40(0x20)
	bool bHasAllTags; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
};

// ScriptStruct FortniteGame.FortFinderProperty
// Size: 0x30 (Inherited: 0x00)
struct FFortFinderProperty {
	FieldPathProperty Property; // 0x00(0x20)
	struct FString Value; // 0x20(0x10)
};

// ScriptStruct FortniteGame.TaggedSoundBankResponseList
// Size: 0x10 (Inherited: 0x00)
struct FTaggedSoundBankResponseList {
	struct TArray<struct FFortTaggedSoundCue> CueList; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortTaggedSoundCue
// Size: 0x50 (Inherited: 0x00)
struct FFortTaggedSoundCue {
	struct FGameplayTagQuery Requirements; // 0x00(0x48)
	struct USoundBase* sound; // 0x48(0x08)
};

// ScriptStruct FortniteGame.TeamSpottedActorInfoArray
// Size: 0x120 (Inherited: 0x108)
struct FTeamSpottedActorInfoArray : FFastArraySerializer {
	struct TArray<struct FTeamSpottedActorInfo> SpottedActorInfo; // 0x108(0x10)
	struct AFortTeamInfo* OwningTeam; // 0x118(0x08)
};

// ScriptStruct FortniteGame.TeamSpottedActorInfo
// Size: 0x20 (Inherited: 0x0c)
struct FTeamSpottedActorInfo : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct AFortPlayerController* Spotter; // 0x10(0x08)
	struct AActor* SpottedActor; // 0x18(0x08)
};

// ScriptStruct FortniteGame.FortTeamPerkLoadoutCondition
// Size: 0x68 (Inherited: 0x00)
struct FFortTeamPerkLoadoutCondition {
	int32_t NumTimesSatisfiable; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FGameplayTagQuery RequiredTagQuery; // 0x08(0x48)
	char bConsiderMinimumTier : 1; // 0x50(0x01)
	char bConsiderMaximumTier : 1; // 0x50(0x01)
	char bConsiderMinimumLevel : 1; // 0x50(0x01)
	char bConsiderMaximumLevel : 1; // 0x50(0x01)
	char bConsiderMinimumRarity : 1; // 0x50(0x01)
	char bConsiderMaximumRarity : 1; // 0x50(0x01)
	char pad_50_6 : 2; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	enum class EFortItemTier MinimumHeroTier; // 0x54(0x01)
	enum class EFortItemTier MaximumHeroTier; // 0x55(0x01)
	char pad_56[0x2]; // 0x56(0x02)
	int32_t MinimumHeroLevel; // 0x58(0x04)
	int32_t MaximumHeroLevel; // 0x5c(0x04)
	enum class EFortRarity MinimumHeroRarity; // 0x60(0x01)
	enum class EFortRarity MaximumHeroRarity; // 0x61(0x01)
	char pad_62[0x6]; // 0x62(0x06)
};

// ScriptStruct FortniteGame.LatentRepTeamDataArray
// Size: 0x120 (Inherited: 0x108)
struct FLatentRepTeamDataArray : FFastArraySerializer {
	struct TArray<struct FLatentRepPlayerData> PlayerData; // 0x108(0x10)
	int32_t CurrPlayerUpdateIndex; // 0x118(0x04)
	char pad_11C[0x4]; // 0x11c(0x04)
};

// ScriptStruct FortniteGame.LatentRepPlayerData
// Size: 0x78 (Inherited: 0x0c)
struct FLatentRepPlayerData : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct AFortPlayerStateAthena* PlayerState; // 0x10(0x08)
	float LastPawnNotRelevantTime; // 0x18(0x04)
	bool bPawnIsRelevant; // 0x1c(0x01)
	bool bWasPawnRelevantLastUpdate; // 0x1d(0x01)
	char pad_1E[0x2]; // 0x1e(0x02)
	struct FVector CurrentLocation; // 0x20(0x0c)
	float CurrentYaw; // 0x2c(0x04)
	float LastLocationReplicationTime; // 0x30(0x04)
	float PrevLocationReplicatedTime; // 0x34(0x04)
	struct FVector_NetQuantize100 LastRepLocation; // 0x38(0x0c)
	struct FVector_NetQuantize100 PrevRepLocation; // 0x44(0x0c)
	struct FVector LerpStartLocation; // 0x50(0x0c)
	float LastYawReplicationTime; // 0x5c(0x04)
	float PrevYawReplicatedTime; // 0x60(0x04)
	float LastRepYaw; // 0x64(0x04)
	float PrevRepYaw; // 0x68(0x04)
	float LerpStartYaw; // 0x6c(0x04)
	enum class EFortPawnState PawnStateMask; // 0x70(0x01)
	enum class EFortPawnState CurrPawnStateMask; // 0x71(0x01)
	uint16_t CurieStateBitfield; // 0x72(0x02)
	char pad_74[0x4]; // 0x74(0x04)
};

// ScriptStruct FortniteGame.PrivateTeamDataArray
// Size: 0x180 (Inherited: 0x108)
struct FPrivateTeamDataArray : FFastArraySerializer {
	struct TArray<struct FPrivateTeamDataItem> Items; // 0x108(0x10)
	char pad_118[0x68]; // 0x118(0x68)
};

// ScriptStruct FortniteGame.PrivateTeamDataItem
// Size: 0x40 (Inherited: 0x0c)
struct FPrivateTeamDataItem : FFastArraySerializerItem {
	float Value; // 0x0c(0x04)
	struct FUniqueNetIdRepl PlayerID; // 0x10(0x28)
	char pad_38[0x8]; // 0x38(0x08)
};

// ScriptStruct FortniteGame.SmokeTestResult
// Size: 0x38 (Inherited: 0x00)
struct FSmokeTestResult {
	struct FString TestStep; // 0x00(0x10)
	struct FString TestSummary; // 0x10(0x10)
	bool bWasExecuted; // 0x20(0x01)
	bool bPassed; // 0x21(0x01)
	char pad_22[0x6]; // 0x22(0x06)
	struct FString ResultMessage; // 0x28(0x10)
};

// ScriptStruct FortniteGame.CosmeticScreenshotTestConfig
// Size: 0x148 (Inherited: 0x00)
struct FCosmeticScreenshotTestConfig {
	int32_t ScreenshotResX; // 0x00(0x04)
	int32_t ScreenshotResY; // 0x04(0x04)
	struct TSet<struct FString> CosmeticIgnores; // 0x08(0x50)
	struct TSet<struct FString> VariantIgnores; // 0x58(0x50)
	struct TSet<struct FString> CosmeticWhitelist; // 0xa8(0x50)
	struct TMap<struct FString, struct FScreenshotTransformPair> IndividualOverrides; // 0xf8(0x50)
};

// ScriptStruct FortniteGame.ScreenshotTransformPair
// Size: 0x60 (Inherited: 0x00)
struct FScreenshotTransformPair {
	struct FTransform Left; // 0x00(0x30)
	struct FTransform Right; // 0x30(0x30)
};

// ScriptStruct FortniteGame.StreamingTestSkydivePath
// Size: 0x80 (Inherited: 0x00)
struct FStreamingTestSkydivePath {
	struct FStreamingTestPOIVector DropLocation; // 0x00(0x20)
	struct FStreamingTestPOIVector GlideLocation; // 0x20(0x20)
	struct FStreamingTestPOIVector LandingLocation; // 0x40(0x20)
	struct FString TargetPOI; // 0x60(0x10)
	struct FString CalendarEvent; // 0x70(0x10)
};

// ScriptStruct FortniteGame.StreamingTestPOIVector
// Size: 0x20 (Inherited: 0x00)
struct FStreamingTestPOIVector {
	struct FString POI; // 0x00(0x10)
	struct FVector Location; // 0x10(0x0c)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortTheaterTileEditorData
// Size: 0xd8 (Inherited: 0x00)
struct FFortTheaterTileEditorData {
	int32_t XCoordinate; // 0x00(0x04)
	int32_t YCoordinate; // 0x04(0x04)
	struct UFortZoneTheme* ZoneTheme; // 0x08(0x08)
	struct UFortRegionInfo* Region; // 0x10(0x08)
	struct FFortRequirementsInfo Requirements; // 0x18(0x60)
	struct TArray<struct FFortLinkedQuest> LinkedQuests; // 0x78(0x10)
	enum class EFortTheaterMapTileType TileType; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
	struct FGameplayTagContainer TileTags; // 0x90(0x20)
	struct TArray<struct FFortTheaterMissionWeight> MissionWeightOverrides; // 0xb0(0x10)
	struct TArray<struct FFortTheaterDifficultyWeight> DifficultyWeightOverrides; // 0xc0(0x10)
	bool bCanBeMissionAlert; // 0xd0(0x01)
	bool bDisallowQuickplay; // 0xd1(0x01)
	char pad_D2[0x6]; // 0xd2(0x06)
};

// ScriptStruct FortniteGame.FortEditorTheaterMapRegionColor
// Size: 0x18 (Inherited: 0x00)
struct FFortEditorTheaterMapRegionColor {
	struct UFortRegionInfo* Region; // 0x00(0x08)
	struct FLinearColor RegionColor; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortTheaterMapMissionAlertData
// Size: 0x10 (Inherited: 0x00)
struct FFortTheaterMapMissionAlertData {
	struct TArray<struct FFortMissionAlertRegionData> AvailabilityDataPerRegion; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortMissionAlertRegionData
// Size: 0x20 (Inherited: 0x00)
struct FFortMissionAlertRegionData {
	struct TArray<struct FString> RegionUniqueIds; // 0x00(0x10)
	struct TArray<struct FFortMissionAlertAvailableData> AvailabilityDataPerCategory; // 0x10(0x10)
};

// ScriptStruct FortniteGame.FortMissionAlertAvailableData
// Size: 0x0c (Inherited: 0x00)
struct FFortMissionAlertAvailableData {
	struct FName MissionAlertCategoryName; // 0x00(0x08)
	int32_t NumMissionAlertsAvailable; // 0x08(0x04)
};

// ScriptStruct FortniteGame.FortFoundQuestMissions
// Size: 0x48 (Inherited: 0x00)
struct FFortFoundQuestMissions {
	struct FString TheaterId; // 0x00(0x10)
	bool bIsValidForAllPlayableMissions; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct TArray<struct FFortAvailableMissionData> LinkedMissions; // 0x18(0x10)
	struct TArray<struct FFortAvailableMissionData> TagMatchingMissions; // 0x28(0x10)
	struct TArray<struct FFortAvailableMissionData> FallbackMatchingMissions; // 0x38(0x10)
};

// ScriptStruct FortniteGame.StormWindArray
// Size: 0x118 (Inherited: 0x108)
struct FStormWindArray : FFastArraySerializer {
	struct TArray<struct FStormWind> StormWinds; // 0x108(0x10)
};

// ScriptStruct FortniteGame.StormWind
// Size: 0x50 (Inherited: 0x0c)
struct FStormWind : FFastArraySerializerItem {
	struct FVector Location; // 0x0c(0x0c)
	struct FVector Direction; // 0x18(0x0c)
	float Radius; // 0x24(0x04)
	float Magnitude; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct AFortThreatVisualsManager* ThreatVisualsManager; // 0x30(0x08)
	struct TArray<struct UFortAIEncounterInfo*> Encounters; // 0x38(0x10)
	struct FFortWindImpulseHandle WindHandle; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// ScriptStruct FortniteGame.FortWindImpulseHandle
// Size: 0x04 (Inherited: 0x00)
struct FFortWindImpulseHandle {
	int32_t UID; // 0x00(0x04)
};

// ScriptStruct FortniteGame.ThreatLocationArray
// Size: 0x118 (Inherited: 0x108)
struct FThreatLocationArray : FFastArraySerializer {
	struct TArray<struct FThreatLocationInfo> Locations; // 0x108(0x10)
};

// ScriptStruct FortniteGame.ThreatLocationInfo
// Size: 0x60 (Inherited: 0x0c)
struct FThreatLocationInfo : FFastArraySerializerItem {
	struct FVector CloudLocation; // 0x0c(0x0c)
	struct FBox ThreatVolume; // 0x18(0x1c)
	char pad_34[0x4]; // 0x34(0x04)
	struct AFortThreatVisualsManager* ThreatVisualsManager; // 0x38(0x08)
	struct TWeakObjectPtr<struct AThreatCloud> CloudActor; // 0x40(0x08)
	char pad_48[0x1]; // 0x48(0x01)
	bool bThreatActivated; // 0x49(0x01)
	enum class EFortThreatDeactivationType DeactivationType; // 0x4a(0x01)
	char pad_4B[0x15]; // 0x4b(0x15)
};

// ScriptStruct FortniteGame.ThreatGridIndex
// Size: 0x08 (Inherited: 0x00)
struct FThreatGridIndex {
	int32_t X; // 0x00(0x04)
	int32_t Y; // 0x04(0x04)
};

// ScriptStruct FortniteGame.ThresholdTestConfig
// Size: 0x30 (Inherited: 0x00)
struct FThresholdTestConfig {
	enum class EThresholdRequirement Requirement; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FScalableFloat Quantity; // 0x08(0x28)
};

// ScriptStruct FortniteGame.TieredCollectionProgressionDataBase
// Size: 0x01 (Inherited: 0x00)
struct FTieredCollectionProgressionDataBase {
	enum class ECollectionSelectionMethod SelectionMethod; // 0x00(0x01)
};

// ScriptStruct FortniteGame.CollectionLootSetData
// Size: 0x18 (Inherited: 0x01)
struct FCollectionLootSetData : FTieredCollectionProgressionDataBase {
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FName> LootSetNames; // 0x08(0x10)
};

// ScriptStruct FortniteGame.RewardBadgesCollectionProgressionData
// Size: 0x18 (Inherited: 0x01)
struct FRewardBadgesCollectionProgressionData : FTieredCollectionProgressionDataBase {
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FRewardBadgesProgression> BadgeCollections; // 0x08(0x10)
};

// ScriptStruct FortniteGame.RewardBadgesProgression
// Size: 0x10 (Inherited: 0x00)
struct FRewardBadgesProgression {
	struct TArray<struct UFortBadgeItemDefinition*> RewardBadges; // 0x00(0x10)
};

// ScriptStruct FortniteGame.DifficultyCollectionProgressionData
// Size: 0x18 (Inherited: 0x01)
struct FDifficultyCollectionProgressionData : FTieredCollectionProgressionDataBase {
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FDifficultyRowProgression> DifficultyCollections; // 0x08(0x10)
};

// ScriptStruct FortniteGame.DifficultyRowProgression
// Size: 0x30 (Inherited: 0x00)
struct FDifficultyRowProgression {
	struct FName DifficultyRowName; // 0x00(0x08)
	struct FScalableFloat AdditiveDifficultyMod; // 0x08(0x28)
};

// ScriptStruct FortniteGame.TieredNamedCollectionProgressionData
// Size: 0x18 (Inherited: 0x01)
struct FTieredNamedCollectionProgressionData : FTieredCollectionProgressionDataBase {
	char pad_1[0x7]; // 0x01(0x07)
	struct TArray<struct FName> CollectionNames; // 0x08(0x10)
};

// ScriptStruct FortniteGame.WorldAmbientPropertiesMatchingGameContext
// Size: 0xa0 (Inherited: 0x00)
struct FWorldAmbientPropertiesMatchingGameContext {
	struct FGameplayTagQuery QueryToMatch; // 0x00(0x48)
	struct FFortTimeOfDayTheme TimeOfDayTheme; // 0x48(0x40)
	struct FFortGlobalWindInfo GlobalWindInfo; // 0x88(0x18)
};

// ScriptStruct FortniteGame.TimeOfDayEditorViewSettings
// Size: 0x01 (Inherited: 0x00)
struct FTimeOfDayEditorViewSettings {
	char pad_0[0x1]; // 0x00(0x01)
};

// ScriptStruct FortniteGame.TimeOfDayDirectOverrides
// Size: 0x50 (Inherited: 0x00)
struct FTimeOfDayDirectOverrides {
	char bOverrideLightIntensity : 1; // 0x00(0x01)
	char bOverrideLightColor : 1; // 0x00(0x01)
	char bOverrideSkyLightIntensity : 1; // 0x00(0x01)
	char bOverrideSkyLightColor : 1; // 0x00(0x01)
	char bOverrideFogDensity : 1; // 0x00(0x01)
	char bOverrideFogColor : 1; // 0x00(0x01)
	char bOverrideFogStartDistance : 1; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	float OverriddenLightIntensity; // 0x04(0x04)
	struct FLinearColor OverriddenLightColor; // 0x08(0x10)
	float OverriddenSkyLightIntensity; // 0x18(0x04)
	struct FLinearColor OverriddenSkyLightColor; // 0x1c(0x10)
	float OverriddenFogDensity; // 0x2c(0x04)
	float OverriddenFogStartDistance; // 0x30(0x04)
	struct FLinearColor OverriddenFogColor; // 0x34(0x10)
	char pad_44[0x4]; // 0x44(0x04)
	struct UObject* OverriddenPostProcessActorClass; // 0x48(0x08)
};

// ScriptStruct FortniteGame.DayPhaseInfo
// Size: 0x210 (Inherited: 0x00)
struct FDayPhaseInfo {
	struct FString PhaseStartAnnouncement; // 0x00(0x10)
	float TimePhaseBegins; // 0x10(0x04)
	float PhaseLengthInHours; // 0x14(0x04)
	float PercentageTransitionIn; // 0x18(0x04)
	float TransitionInTimeInMinutes; // 0x1c(0x04)
	float PercentageTransitionOut; // 0x20(0x04)
	float TransitionOutTimeInMinutes; // 0x24(0x04)
	struct FSkyLightValues SkyLightValues; // 0x28(0x38)
	struct FThreatCloudValues ThreatCloudValues; // 0x60(0xa0)
	struct FElementalCharValues ElementalCharValues; // 0x100(0x14)
	struct FDirectionalLightValues DirectionalLightValues; // 0x114(0x0c)
	struct FExponentialHeightFogValues ExpHeightFogValues; // 0x120(0x60)
	struct FSkyAtmosphereValues SkyAtmosphereValues; // 0x180(0x74)
	char pad_1F4[0x4]; // 0x1f4(0x04)
	struct UPostProcessComponent* LowPriPostProcessComponent; // 0x1f8(0x08)
	struct UMaterialInstance* SkyMaterialInstance; // 0x200(0x08)
	struct UMaterialInstance* StarMapMaterialInstance; // 0x208(0x08)
};

// ScriptStruct FortniteGame.SkyAtmosphereValues
// Size: 0x74 (Inherited: 0x00)
struct FSkyAtmosphereValues {
	float RayleighScatteringScale; // 0x00(0x04)
	struct FLinearColor RayleighScattering; // 0x04(0x10)
	float RayleighExponentialDistribution; // 0x14(0x04)
	float MieScatteringScale; // 0x18(0x04)
	struct FLinearColor MieScattering; // 0x1c(0x10)
	float MieAbsorptionScale; // 0x2c(0x04)
	struct FLinearColor MieAbsorption; // 0x30(0x10)
	float MieAnisotropy; // 0x40(0x04)
	float MieExponentialDistribution; // 0x44(0x04)
	float OtherAbsorptionScale; // 0x48(0x04)
	struct FLinearColor OtherAbsorption; // 0x4c(0x10)
	struct FLinearColor SkyLuminanceFactor; // 0x5c(0x10)
	float AerialPespectiveViewDistanceScale; // 0x6c(0x04)
	float HeightFogContribution; // 0x70(0x04)
};

// ScriptStruct FortniteGame.ExponentialHeightFogValues
// Size: 0x60 (Inherited: 0x00)
struct FExponentialHeightFogValues {
	float FogDensity; // 0x00(0x04)
	float FogHeightFalloff; // 0x04(0x04)
	float FogMaxOpacity; // 0x08(0x04)
	float StartDistance; // 0x0c(0x04)
	float DirectionalInscatteringExponent; // 0x10(0x04)
	float DirectionalInscatteringStartDistance; // 0x14(0x04)
	struct FLinearColor DirectionalInscatteringColor; // 0x18(0x10)
	struct FLinearColor FogInscatteringColor; // 0x28(0x10)
	float VolumetricFogScatteringDistribution; // 0x38(0x04)
	struct FLinearColor VolumetricFogAlbedo; // 0x3c(0x10)
	float VolumetricFogExtinctionScale; // 0x4c(0x04)
	float VolumetricFogDistance; // 0x50(0x04)
	struct FExponentialHeightFogData SecondFogData; // 0x54(0x0c)
};

// ScriptStruct FortniteGame.DirectionalLightValues
// Size: 0x0c (Inherited: 0x00)
struct FDirectionalLightValues {
	struct FColor LightColor; // 0x00(0x04)
	float Brightness; // 0x04(0x04)
	float VolumetricScatteringIntensity; // 0x08(0x04)
};

// ScriptStruct FortniteGame.ElementalCharValues
// Size: 0x14 (Inherited: 0x00)
struct FElementalCharValues {
	struct FLinearColor FireCharColor; // 0x00(0x10)
	float ElectricalCharEmissive; // 0x10(0x04)
};

// ScriptStruct FortniteGame.ThreatCloudValues
// Size: 0xa0 (Inherited: 0x00)
struct FThreatCloudValues {
	struct FCloudColorState CloudActivated; // 0x00(0x50)
	struct FCloudColorState CloudDeactivated; // 0x50(0x50)
};

// ScriptStruct FortniteGame.CloudColorState
// Size: 0x50 (Inherited: 0x00)
struct FCloudColorState {
	struct FLinearColor BottomEmissive; // 0x00(0x10)
	struct FLinearColor TopEmissive; // 0x10(0x10)
	struct FLinearColor BottomLightning; // 0x20(0x10)
	struct FLinearColor TopLightning; // 0x30(0x10)
	struct FLinearColor InternalColor; // 0x40(0x10)
};

// ScriptStruct FortniteGame.SkyLightValues
// Size: 0x38 (Inherited: 0x00)
struct FSkyLightValues {
	struct FLinearColor SkyLightColor; // 0x00(0x10)
	struct FLinearColor SkyLightOcclusionTint; // 0x10(0x10)
	float SkyLightMinOcclusion; // 0x20(0x04)
	float VolumetricScatteringIntensity; // 0x24(0x04)
	struct UTextureCube* Cubemap; // 0x28(0x08)
	struct UTextureCube* DestinationCubemap; // 0x30(0x08)
};

// ScriptStruct FortniteGame.CameraAltitudeAdjustments
// Size: 0x10 (Inherited: 0x00)
struct FCameraAltitudeAdjustments {
	float Altitude; // 0x00(0x04)
	float FogHeightFalloff; // 0x04(0x04)
	float HeightFogZOffset; // 0x08(0x04)
	float FogDensity; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.GlobalWeatherData
// Size: 0x8f0 (Inherited: 0x00)
struct FGlobalWeatherData {
	struct FString WeatherEventName; // 0x00(0x10)
	struct FString RequiredCalendarEvent; // 0x10(0x10)
	struct FGameplayTagContainer WeatherEventTags; // 0x20(0x20)
	struct FScalableFloat FrequencyMin; // 0x40(0x28)
	struct FScalableFloat FrequencyMax; // 0x68(0x28)
	struct FScalableFloat ChanceMin; // 0x90(0x28)
	struct FScalableFloat ChanceMax; // 0xb8(0x28)
	struct FScalableFloat IntensityMin; // 0xe0(0x28)
	struct FScalableFloat IntensityMax; // 0x108(0x28)
	struct FScalableFloat DurationMin; // 0x130(0x28)
	struct FScalableFloat DurationMax; // 0x158(0x28)
	struct FScalableFloat CooldownMin; // 0x180(0x28)
	struct FScalableFloat CooldownMax; // 0x1a8(0x28)
	struct FScalableFloat ChanceToRemainActiveMin; // 0x1d0(0x28)
	struct FScalableFloat ChanceToRemainActiveMax; // 0x1f8(0x28)
	struct FScalableFloat BlendInMin; // 0x220(0x28)
	struct FScalableFloat BlendInMax; // 0x248(0x28)
	struct FScalableFloat BlendOutMin; // 0x270(0x28)
	struct FScalableFloat BlendOutMax; // 0x298(0x28)
	struct FGameplayTagContainer Tags; // 0x2c0(0x20)
	struct UCurveFloat* BotVisibilityScale; // 0x2e0(0x08)
	char pad_2E8[0x8]; // 0x2e8(0x08)
	struct FPostProcessSettings PostProcessSettings; // 0x2f0(0x550)
	struct UCurveFloat* PostProcessBlendWeight; // 0x840(0x08)
	struct FSkylightWeatherData SkylightWeatherData; // 0x848(0x10)
	struct FDirectionalLightWeatherData DirectionalLightWeatherData; // 0x858(0x20)
	struct FExponentialHeightFogWeatherData ExponentialHeightFogWeatherData; // 0x878(0x28)
	struct FSkyAtmosphereWeatherData SkyAtmosphereWeatherData; // 0x8a0(0x18)
	struct FHeightFogAltitudeWeatherData HeightFogAltitudeWeatherData; // 0x8b8(0x08)
	struct FMaterialWeatherData MaterialWeatherData; // 0x8c0(0x10)
	struct FWindWeatherData WindWeatherData; // 0x8d0(0x10)
	float TimeForNextAttempt; // 0x8e0(0x04)
	char pad_8E4[0xc]; // 0x8e4(0x0c)
};

// ScriptStruct FortniteGame.WindWeatherData
// Size: 0x10 (Inherited: 0x00)
struct FWindWeatherData {
	struct UCurveVector* WindDirection; // 0x00(0x08)
	struct UCurveFloat* WindStrength; // 0x08(0x08)
};

// ScriptStruct FortniteGame.MaterialWeatherData
// Size: 0x10 (Inherited: 0x00)
struct FMaterialWeatherData {
	struct UMaterialInstance* SkyMaterialInstance; // 0x00(0x08)
	struct UMaterialInstanceDynamic* DynamicSkyMaterialInstance; // 0x08(0x08)
};

// ScriptStruct FortniteGame.HeightFogAltitudeWeatherData
// Size: 0x08 (Inherited: 0x00)
struct FHeightFogAltitudeWeatherData {
	struct UCurveFloat* HeightFogZOffset; // 0x00(0x08)
};

// ScriptStruct FortniteGame.SkyAtmosphereWeatherData
// Size: 0x18 (Inherited: 0x00)
struct FSkyAtmosphereWeatherData {
	struct UCurveFloat* MieScatteringScaleScale; // 0x00(0x08)
	struct UCurveFloat* MieAbsorptionScaleScale; // 0x08(0x08)
	struct UCurveFloat* HeightFogContributionScale; // 0x10(0x08)
};

// ScriptStruct FortniteGame.ExponentialHeightFogWeatherData
// Size: 0x28 (Inherited: 0x00)
struct FExponentialHeightFogWeatherData {
	struct UCurveFloat* FogDensityScale; // 0x00(0x08)
	struct UCurveFloat* FogHeightFalloffScale; // 0x08(0x08)
	struct UCurveFloat* SecondFogDensityScale; // 0x10(0x08)
	struct UCurveFloat* SecondFogHeightFalloffScale; // 0x18(0x08)
	struct UCurveFloat* SecondHeightFogOffsetBias; // 0x20(0x08)
};

// ScriptStruct FortniteGame.DirectionalLightWeatherData
// Size: 0x20 (Inherited: 0x00)
struct FDirectionalLightWeatherData {
	struct UCurveLinearColor* DirectionalLightColor; // 0x00(0x08)
	struct UCurveFloat* DirectionalLightColorWeight; // 0x08(0x08)
	struct UCurveFloat* DirectionalLightColorBrightness; // 0x10(0x08)
	struct UCurveFloat* VolumetricScatteringIntensity; // 0x18(0x08)
};

// ScriptStruct FortniteGame.SkylightWeatherData
// Size: 0x10 (Inherited: 0x00)
struct FSkylightWeatherData {
	struct UCurveLinearColor* SkyLightColor; // 0x00(0x08)
	struct UCurveFloat* SkyLightColorWeight; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortTooltipTokenInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortTooltipTokenInfo {
	struct FGameplayTag Token; // 0x00(0x08)
	struct TArray<struct FFortTokenContextInfo> ContextDetails; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortTokenContextInfo
// Size: 0x38 (Inherited: 0x00)
struct FFortTokenContextInfo {
	struct FGameplayTagContainer RequiredContextTags; // 0x00(0x20)
	struct FText Text; // 0x20(0x18)
};

// ScriptStruct FortniteGame.FortTooltipDisplayInfo
// Size: 0x38 (Inherited: 0x00)
struct FFortTooltipDisplayInfo {
	struct UObject* PrimaryObjectClass; // 0x00(0x08)
	struct UObject* SecondaryObjectClass; // 0x08(0x08)
	struct FGameplayTagContainer DescriptionStatsTags; // 0x10(0x20)
	struct UFortTooltipDisplayStatsList* TooltipStatsList; // 0x30(0x08)
};

// ScriptStruct FortniteGame.FortTooltipDisplayStatsCategory
// Size: 0x28 (Inherited: 0x00)
struct FFortTooltipDisplayStatsCategory {
	struct FText CategoryName; // 0x00(0x18)
	struct TArray<struct FFortTooltipDisplayStatInfo> TooltipStats; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortTooltipDisplayStatInfo
// Size: 0x68 (Inherited: 0x00)
struct FFortTooltipDisplayStatInfo {
	struct FGameplayTag Token; // 0x00(0x08)
	struct FGameplayAttribute Attribute; // 0x08(0x38)
	struct FGameplayTagContainer ContextTags; // 0x40(0x20)
	bool bLowerIsBetter; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
};

// ScriptStruct FortniteGame.FortTooltipMapEntry
// Size: 0x18 (Inherited: 0x00)
struct FFortTooltipMapEntry {
	struct UObject* ObjectClass; // 0x00(0x08)
	struct UObject* SecondaryObjectClass; // 0x08(0x08)
	struct UFortTooltip* TooltipClass; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortTooltipValueData
// Size: 0x70 (Inherited: 0x00)
struct FFortTooltipValueData {
	struct FText DisplayName; // 0x00(0x18)
	struct FText FormattedValue; // 0x18(0x18)
	struct FText ExplanationText; // 0x30(0x18)
	float Value; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct FGameplayTagContainer StateTags; // 0x50(0x20)
};

// ScriptStruct FortniteGame.FortTouchAimAssist
// Size: 0x260 (Inherited: 0x00)
struct FFortTouchAimAssist {
	struct FFortAimAssist2D_InputParams InputParams; // 0x00(0x48)
	char pad_48[0x8]; // 0x48(0x08)
	struct FFortAimAssist2D_OwnerInfo OwnerInfo; // 0x50(0x150)
	struct TArray<struct FFortAimAssist2D_Target> TargetCache0; // 0x1a0(0x10)
	struct TArray<struct FFortAimAssist2D_Target> TargetCache1; // 0x1b0(0x10)
	char pad_1C0[0x8]; // 0x1c0(0x08)
	struct AActor* AutoFireTargetActor; // 0x1c8(0x08)
	char pad_1D0[0x90]; // 0x1d0(0x90)
};

// ScriptStruct FortniteGame.FortTouchAimAssistSettings
// Size: 0x60 (Inherited: 0x00)
struct FFortTouchAimAssistSettings {
	float AssistReticleWidth; // 0x00(0x04)
	float AssistReticleHeight; // 0x04(0x04)
	float AutoFireReticleWidth; // 0x08(0x04)
	float AutoFireReticleHeight; // 0x0c(0x04)
	struct FVector2D AutofireTargetSizeReduction; // 0x10(0x08)
	float AutoFireTrackingReticleWidth; // 0x18(0x04)
	float AutoFireTrackingReticleHeight; // 0x1c(0x04)
	float TargetingReticleWidth; // 0x20(0x04)
	float TargetingReticleHeight; // 0x24(0x04)
	float TargetRange; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct UCurveFloat* TargetWeightCurve; // 0x30(0x08)
	struct UCurveFloat* PullStrengthYawCurve; // 0x38(0x08)
	struct UCurveFloat* PullStrengthPitchCurve; // 0x40(0x08)
	float PullMaxRate; // 0x48(0x04)
	float AutoTrackDuration; // 0x4c(0x04)
	float AutoTrackPullStrength; // 0x50(0x04)
	float ProjectileMinSpeedForAssist; // 0x54(0x04)
	float ProjectileMaxLookAheadTime; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// ScriptStruct FortniteGame.FortCompetitiveIdentityInfo
// Size: 0x58 (Inherited: 0x08)
struct FFortCompetitiveIdentityInfo : FTableRowBase {
	struct FString RegionId; // 0x08(0x10)
	struct FText DisplayName; // 0x18(0x18)
	struct TSoftObjectPtr<struct UTexture2D> FlagAsset; // 0x30(0x28)
};

// ScriptStruct FortniteGame.TournamentPayoutThresholdData
// Size: 0x20 (Inherited: 0x00)
struct FTournamentPayoutThresholdData {
	enum class EPayoutScoringType ScoringType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	double Threshold; // 0x08(0x08)
	struct TArray<struct FTournamentPayoutData> PayoutData; // 0x10(0x10)
};

// ScriptStruct FortniteGame.TournamentPayoutData
// Size: 0x20 (Inherited: 0x00)
struct FTournamentPayoutData {
	enum class EPayoutRewardType RewardType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FString Value; // 0x08(0x10)
	int32_t Quantity; // 0x18(0x04)
	int32_t TeamSize; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortShowdownScoringRuleInfo
// Size: 0x18 (Inherited: 0x08)
struct FFortShowdownScoringRuleInfo : FTableRowBase {
	struct FName DisplayInfoId; // 0x08(0x08)
	int32_t PointValue; // 0x10(0x04)
	int32_t ScoreRequirement; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortTowhookModel
// Size: 0x2c0 (Inherited: 0x00)
struct FFortTowhookModel {
	char pad_0[0x2c0]; // 0x00(0x2c0)
};

// ScriptStruct FortniteGame.TowhookAttachState
// Size: 0x20 (Inherited: 0x00)
struct FTowhookAttachState {
	char pad_0[0x20]; // 0x00(0x20)
};

// ScriptStruct FortniteGame.NetTowhookAttachState
// Size: 0x20 (Inherited: 0x00)
struct FNetTowhookAttachState {
	struct UPrimitiveComponent* Component; // 0x00(0x08)
	struct FVector_NetQuantize100 LocalLocation; // 0x08(0x0c)
	struct FVector_NetQuantize100 LocalNormal; // 0x14(0x0c)
};

// ScriptStruct FortniteGame.TowhookParams
// Size: 0x54 (Inherited: 0x00)
struct FTowhookParams {
	float MaxCableLength; // 0x00(0x04)
	float MinCableLength; // 0x04(0x04)
	bool bUseSpring; // 0x08(0x01)
	bool bUseRope; // 0x09(0x01)
	bool bUseAsTractorBeam; // 0x0a(0x01)
	char pad_B[0x1]; // 0x0b(0x01)
	float SpringStiffness; // 0x0c(0x04)
	float SpringDamping; // 0x10(0x04)
	float SpringMaxStiffnessForce; // 0x14(0x04)
	float SpringMaxStiffnessVelocity; // 0x18(0x04)
	float SpringDeformationRate; // 0x1c(0x04)
	float RopeGive; // 0x20(0x04)
	float RopeBreakForce; // 0x24(0x04)
	float RopeYankForce; // 0x28(0x04)
	float ExtendSpeedKmh; // 0x2c(0x04)
	float ContractSpeedKmh; // 0x30(0x04)
	bool bApplySpringToSelf; // 0x34(0x01)
	bool bApplySpringToOther; // 0x35(0x01)
	bool bTakeUpSlack; // 0x36(0x01)
	bool bEnableParentDominates; // 0x37(0x01)
	bool bAttachToOwnersVehicle; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float TractorBeamRestLength; // 0x3c(0x04)
	float TractorBeamUpSpringStiffness; // 0x40(0x04)
	float TractorBeamSideSpringStiffness; // 0x44(0x04)
	float TractorBeamUpSpringDamping; // 0x48(0x04)
	float TractorBeamSideSpringDamping; // 0x4c(0x04)
	float TractorBeamMaxStiffnessTime; // 0x50(0x04)
};

// ScriptStruct FortniteGame.FortTrackClassData
// Size: 0xc0 (Inherited: 0xc0)
struct FFortTrackClassData : FBuildingPropClassData {
};

// ScriptStruct FortniteGame.TrackConnectorMeshConfig
// Size: 0x10 (Inherited: 0x00)
struct FTrackConnectorMeshConfig {
	enum class ETrackIncline InclineSideA; // 0x00(0x01)
	enum class ETrackIncline InclineSideB; // 0x01(0x01)
	char pad_2[0x6]; // 0x02(0x06)
	struct UStaticMesh* Mesh; // 0x08(0x08)
};

// ScriptStruct FortniteGame.TrackConfiguration
// Size: 0x38 (Inherited: 0x00)
struct FTrackConfiguration {
	struct TArray<bool> NeighborsByDirection; // 0x00(0x10)
	struct TArray<struct FTrackSwitchStateConfig> SwitchStates; // 0x10(0x10)
	struct FRotator SwitchRotation; // 0x20(0x0c)
	struct FVector SwitchOffset; // 0x2c(0x0c)
};

// ScriptStruct FortniteGame.TrackSwitchStateConfig
// Size: 0x24 (Inherited: 0x00)
struct FTrackSwitchStateConfig {
	struct FTrackPieceConfig TrackPiece; // 0x00(0x1c)
	struct FTrackSplineConfig SplineConfig1; // 0x1c(0x03)
	struct FTrackSplineConfig SplineConfig2; // 0x1f(0x03)
	char pad_22[0x2]; // 0x22(0x02)
};

// ScriptStruct FortniteGame.TrackSplineConfig
// Size: 0x03 (Inherited: 0x00)
struct FTrackSplineConfig {
	bool bUseSpline; // 0x00(0x01)
	enum class ETrackDirection Start; // 0x01(0x01)
	enum class ETrackDirection End; // 0x02(0x01)
};

// ScriptStruct FortniteGame.TrackPieceConfig
// Size: 0x1c (Inherited: 0x00)
struct FTrackPieceConfig {
	enum class ETrackPieceType Type; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	struct FRotator Rotation; // 0x04(0x0c)
	struct FVector Scale; // 0x10(0x0c)
};

// ScriptStruct FortniteGame.TrackMovement
// Size: 0x10 (Inherited: 0x00)
struct FTrackMovement {
	struct USplineComponent* CurrentSpline; // 0x00(0x08)
	float DistanceAlongSpline; // 0x08(0x04)
	bool bReverseDirectionAlongSpline; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
};

// ScriptStruct FortniteGame.RepTrackMovement
// Size: 0x18 (Inherited: 0x10)
struct FRepTrackMovement : FTrackMovement {
	float Timestamp; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.TransactionalAnalyticEvent
// Size: 0x28 (Inherited: 0x00)
struct FTransactionalAnalyticEvent {
	char pad_0[0x28]; // 0x00(0x28)
};

// ScriptStruct FortniteGame.FortBaseWeaponStats
// Size: 0x168 (Inherited: 0x08)
struct FFortBaseWeaponStats : FTableRowBase {
	char pad_8[0x4]; // 0x08(0x04)
	int32_t BaseLevel; // 0x0c(0x04)
	struct FName NamedWeightRow; // 0x10(0x08)
	float DmgPB; // 0x18(0x04)
	float DmgMid; // 0x1c(0x04)
	float DmgLong; // 0x20(0x04)
	float DmgMaxRange; // 0x24(0x04)
	float EnvDmgPB; // 0x28(0x04)
	float EnvDmgMid; // 0x2c(0x04)
	float EnvDmgLong; // 0x30(0x04)
	float EnvDmgMaxRange; // 0x34(0x04)
	float ImpactDmgPB; // 0x38(0x04)
	float ImpactDmgMid; // 0x3c(0x04)
	float ImpactDmgLong; // 0x40(0x04)
	float ImpactDmgMaxRange; // 0x44(0x04)
	bool bForceControl; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	float RngPB; // 0x4c(0x04)
	float RngMid; // 0x50(0x04)
	float RngLong; // 0x54(0x04)
	float RngMax; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
	struct UCurveTable* DmgScaleTable; // 0x60(0x08)
	struct FName DmgScaleTableRow; // 0x68(0x08)
	float DmgScale; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
	struct UCurveTable* EnvDmgScaleTable; // 0x78(0x08)
	struct FName EnvDmgScaleTableRow; // 0x80(0x08)
	float EnvDmgScale; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct UCurveTable* ImpactDmgScaleTable; // 0x90(0x08)
	struct FName ImpactDmgScaleTableRow; // 0x98(0x08)
	float ImpactDmgScale; // 0xa0(0x04)
	struct FName SurfaceRatioRowName; // 0xa4(0x08)
	float DamageZone_Light; // 0xac(0x04)
	float DamageZone_Normal; // 0xb0(0x04)
	float DamageZone_Critical; // 0xb4(0x04)
	float DamageZone_Vulnerability; // 0xb8(0x04)
	float KnockbackMagnitude; // 0xbc(0x04)
	float MidRangeKnockbackMagnitude; // 0xc0(0x04)
	float LongRangeKnockbackMagnitude; // 0xc4(0x04)
	float KnockbackZAngle; // 0xc8(0x04)
	float ShortRangeHitImpulseMagnitude; // 0xcc(0x04)
	float MidRangeHitImpulseMagnitude; // 0xd0(0x04)
	float LongRangeHitImpulseMagnitude; // 0xd4(0x04)
	float HitImpulseZBias; // 0xd8(0x04)
	float StunTime; // 0xdc(0x04)
	float StunScale; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct UDataTable* Durability; // 0xe8(0x08)
	struct FName DurabilityRowName; // 0xf0(0x08)
	float DurabilityScale; // 0xf8(0x04)
	float DurabilityPerUse; // 0xfc(0x04)
	float FullChargeDurabilityPerUse; // 0x100(0x04)
	float DiceCritChance; // 0x104(0x04)
	float DiceCritDamageMultiplier; // 0x108(0x04)
	float ReloadTime; // 0x10c(0x04)
	float ReloadScale; // 0x110(0x04)
	enum class EFortWeaponReloadType ReloadType; // 0x114(0x01)
	bool bAllowReloadInterrupt; // 0x115(0x01)
	bool bReloadInterruptIsImmediate; // 0x116(0x01)
	char pad_117[0x1]; // 0x117(0x01)
	int32_t NumIndividualBulletsToReload; // 0x118(0x04)
	int32_t ClipSize; // 0x11c(0x04)
	float ClipScale; // 0x120(0x04)
	int32_t InitialClips; // 0x124(0x04)
	int32_t CartridgePerFire; // 0x128(0x04)
	int32_t AmmoCostPerFire; // 0x12c(0x04)
	int32_t MaxAmmoCostPerFire; // 0x130(0x04)
	float MinChargeTime; // 0x134(0x04)
	float MaxChargeTime; // 0x138(0x04)
	float ChargeDownTime; // 0x13c(0x04)
	bool bAutoDischarge; // 0x140(0x01)
	char pad_141[0x3]; // 0x141(0x03)
	float MaxChargeTimeUntilDischarge; // 0x144(0x04)
	float MinChargeDamageMultiplier; // 0x148(0x04)
	float MaxChargeDamageMultiplier; // 0x14c(0x04)
	struct UCurveFloat* ChargeDamageMultiplierCurve; // 0x150(0x08)
	float EquipAnimRate; // 0x158(0x04)
	float QuickBarSlotCooldownDuration; // 0x15c(0x04)
	char pad_160[0x8]; // 0x160(0x08)
};

// ScriptStruct FortniteGame.FortTrapStats
// Size: 0x180 (Inherited: 0x168)
struct FFortTrapStats : FFortBaseWeaponStats {
	float ArmTime; // 0x168(0x04)
	float FireDelay; // 0x16c(0x04)
	float DamageDelay; // 0x170(0x04)
	int32_t PlacementScore; // 0x174(0x04)
	int32_t ActivationScore; // 0x178(0x04)
	char pad_17C[0x4]; // 0x17c(0x04)
};

// ScriptStruct FortniteGame.NameStringGameplayMessage
// Size: 0x18 (Inherited: 0x00)
struct FNameStringGameplayMessage {
	struct FName Name; // 0x00(0x08)
	struct FString String; // 0x08(0x10)
};

// ScriptStruct FortniteGame.AmmoItemState
// Size: 0x10 (Inherited: 0x00)
struct FAmmoItemState {
	struct UFortWorldItemDefinition* AmmoItemDefintion; // 0x00(0x08)
	int32_t AmmoLoadedCount; // 0x08(0x04)
	int32_t AmmoMaxCount; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.ItemGuidAndCount
// Size: 0x14 (Inherited: 0x00)
struct FItemGuidAndCount {
	int32_t Count; // 0x00(0x04)
	struct FGuid ItemGuid; // 0x04(0x10)
};

// ScriptStruct FortniteGame.FortInGameLeaderboardPlacementData
// Size: 0x48 (Inherited: 0x01)
struct FFortInGameLeaderboardPlacementData : FFortChangeMonitoringStruct {
	char pad_1[0x7]; // 0x01(0x07)
	struct FString DisplayName; // 0x08(0x10)
	int32_t Score; // 0x18(0x04)
	int32_t ScoreToWin; // 0x1c(0x04)
	char TeamNum; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
	struct TArray<struct AFortPlayerStateAthena*> TeamMembers; // 0x28(0x10)
	int32_t Placement; // 0x38(0x04)
	int32_t SortIndex; // 0x3c(0x04)
	bool bRepresentsLocalPlayer; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float PctToWin; // 0x44(0x04)
};

// ScriptStruct FortniteGame.ProjectileMovementDrunkConfig
// Size: 0x28 (Inherited: 0x00)
struct FProjectileMovementDrunkConfig {
	struct UCurveFloat* DrunkSpeedScaleCurve; // 0x00(0x08)
	struct UCurveFloat* DrunkGravityScaleCurve; // 0x08(0x08)
	float InitialDelay; // 0x10(0x04)
	float Duration; // 0x14(0x04)
	float DirectionChangeRate; // 0x18(0x04)
	float TurnAngle; // 0x1c(0x04)
	float MinPitch; // 0x20(0x04)
	float TurnAngleClamp; // 0x24(0x04)
};

// ScriptStruct FortniteGame.DrunkHomingConfig
// Size: 0x40 (Inherited: 0x00)
struct FDrunkHomingConfig {
	struct UCurveFloat* DrunkOverrideSpeedCurve; // 0x00(0x08)
	float DirectionChangeRate; // 0x08(0x04)
	float LookaheadDist; // 0x0c(0x04)
	float TurnAngle; // 0x10(0x04)
	float TurnAngleBlendOut; // 0x14(0x04)
	float DrunkDuration; // 0x18(0x04)
	float MinPitch; // 0x1c(0x04)
	float RandomTargetPositionRadius; // 0x20(0x04)
	float PassedTargetSlackTime; // 0x24(0x04)
	float TurnAngleClamp; // 0x28(0x04)
	float DrunkBlendOutRange; // 0x2c(0x04)
	float DrunkBlendOutTimeThreshold; // 0x30(0x04)
	float DrunkBlendOutTime; // 0x34(0x04)
	float DrunkBlendOutTurnSpeed; // 0x38(0x04)
	float AimPointMaxRange; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.FortGameHotfixUpdateResponse
// Size: 0x10 (Inherited: 0x00)
struct FFortGameHotfixUpdateResponse {
	struct FString Status; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortGameAnalyticsSessionResponse
// Size: 0x60 (Inherited: 0x00)
struct FFortGameAnalyticsSessionResponse {
	struct FString SessionId; // 0x00(0x10)
	struct FString AppID; // 0x10(0x10)
	struct FString AppVersion; // 0x20(0x10)
	struct FString DeviceType; // 0x30(0x10)
	struct FString DeviceModel; // 0x40(0x10)
	struct FString OS; // 0x50(0x10)
};

// ScriptStruct FortniteGame.DamageDistanceTagEval
// Size: 0x0c (Inherited: 0x00)
struct FDamageDistanceTagEval {
	float DistanceLimit; // 0x00(0x04)
	struct FGameplayTag DistanceTag; // 0x04(0x08)
};

// ScriptStruct FortniteGame.CreativeDeviceMeshSettings
// Size: 0x68 (Inherited: 0x00)
struct FCreativeDeviceMeshSettings {
	struct TSoftObjectPtr<struct UStaticMesh> Mesh; // 0x00(0x28)
	struct FVector Scale; // 0x28(0x0c)
	struct FGameplayTag StatTag; // 0x34(0x08)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct TSoftObjectPtr<struct UMaterialInterface> Material; // 0x40(0x28)
};

// ScriptStruct FortniteGame.RemoteViewRotSnapshot
// Size: 0x10 (Inherited: 0x00)
struct FRemoteViewRotSnapshot {
	char pad_0[0x10]; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortRealEstatePlotItemTableRow
// Size: 0x20 (Inherited: 0x08)
struct FFortRealEstatePlotItemTableRow : FTableRowBase {
	struct FPrimaryAssetId RealEstatePlotItemId; // 0x08(0x10)
	bool bIncluded; // 0x18(0x01)
	char pad_19[0x3]; // 0x19(0x03)
	float SortPriority; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortCreativeItemListData
// Size: 0x28 (Inherited: 0x08)
struct FFortCreativeItemListData : FTableRowBase {
	enum class ECreativeItemCategory Category; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	struct FPrimaryAssetId ItemPrimaryAssetId; // 0x0c(0x10)
	int32_t Count; // 0x1c(0x04)
	float SortPriority; // 0x20(0x04)
	bool bIncluded; // 0x24(0x01)
	char pad_25[0x3]; // 0x25(0x03)
};

// ScriptStruct FortniteGame.FortGameFeatureSizeDetailed
// Size: 0x20 (Inherited: 0x00)
struct FFortGameFeatureSizeDetailed {
	uint64_t DownloadSize; // 0x00(0x08)
	uint64_t InstallSize; // 0x08(0x08)
	uint64_t InstallOverheadSize; // 0x10(0x08)
	uint64_t FreeSpace; // 0x18(0x08)
};

// ScriptStruct FortniteGame.FortGameFeatureSize
// Size: 0x18 (Inherited: 0x00)
struct FFortGameFeatureSize {
	uint64_t DownloadSize; // 0x00(0x08)
	uint64_t InstallSize; // 0x08(0x08)
	uint64_t FreeSpace; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortGameFeatureStatusList
// Size: 0x78 (Inherited: 0x00)
struct FFortGameFeatureStatusList {
	struct FCombinedFeatureProgressSummary ProgressSummary; // 0x00(0x50)
	struct TArray<struct FFortGameFeatureStatus> Features; // 0x50(0x10)
	struct TArray<struct FFortGameFeatureOptionalInstallStatus> FeatureOptionalInstalls; // 0x60(0x10)
	bool bHasNetworkConnection; // 0x70(0x01)
	bool bIsUsingCellularConnection; // 0x71(0x01)
	bool bAutoLaunchFullGame; // 0x72(0x01)
	char pad_73[0x5]; // 0x73(0x05)
};

// ScriptStruct FortniteGame.FortGameFeatureOptionalInstallStatus
// Size: 0xa0 (Inherited: 0x00)
struct FFortGameFeatureOptionalInstallStatus {
	enum class EFortGameFeature Feature; // 0x00(0x01)
	bool bContentReady; // 0x01(0x01)
	char pad_2[0x6]; // 0x02(0x06)
	struct FString ErrorCode; // 0x08(0x10)
	struct FText ErrorText; // 0x18(0x18)
	bool bIsUsingBackgroundDownloads; // 0x30(0x01)
	bool bIsProgressPaused; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
	struct FString PauseReason; // 0x38(0x10)
	struct FCombinedFeatureProgressSummary ProgressSummary; // 0x48(0x50)
	int32_t BundlesToInstall; // 0x98(0x04)
	bool bEnoughFreeSpace; // 0x9c(0x01)
	char pad_9D[0x3]; // 0x9d(0x03)
};

// ScriptStruct FortniteGame.CombinedFeatureProgressSummary
// Size: 0x50 (Inherited: 0x00)
struct FCombinedFeatureProgressSummary {
	enum class EFortGameFeature GameFeature; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FString PrimaryTextKey; // 0x08(0x10)
	struct FString LocalizedPrimaryText; // 0x18(0x10)
	struct FString SecondaryTextKey; // 0x28(0x10)
	struct FString LocalizedSecondaryText; // 0x38(0x10)
	float CombinedProgress; // 0x48(0x04)
	bool bIsPaused; // 0x4c(0x01)
	bool bCanBePaused; // 0x4d(0x01)
	bool bIsFinished; // 0x4e(0x01)
	char pad_4F[0x1]; // 0x4f(0x01)
};

// ScriptStruct FortniteGame.FortGameFeatureStatus
// Size: 0x148 (Inherited: 0x00)
struct FFortGameFeatureStatus {
	enum class EFortGameFeature Feature; // 0x00(0x01)
	enum class EFortGameFeatureState CurrentState; // 0x01(0x01)
	enum class EFortGameFeatureState RequestedState; // 0x02(0x01)
	char pad_3[0x5]; // 0x03(0x05)
	struct FString ErrorCode; // 0x08(0x10)
	struct FText ErrorText; // 0x18(0x18)
	bool bIsUsingBackgroundDownloads; // 0x30(0x01)
	bool bIsProgressPaused; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
	struct FString PauseReason; // 0x38(0x10)
	struct FCombinedFeatureProgressSummary ProgressSummary; // 0x48(0x50)
	struct TMap<struct FName, struct FJsonObjectWrapper> BundleFullProgress; // 0x98(0x50)
	struct TMap<struct FName, struct FJsonObjectWrapper> PreloadBundleFullProgress; // 0xe8(0x50)
	bool IsActive; // 0x138(0x01)
	bool IsPendingActive; // 0x139(0x01)
	char pad_13A[0x2]; // 0x13a(0x02)
	int32_t BundlesToInstall; // 0x13c(0x04)
	bool bEnoughFreeSpace; // 0x140(0x01)
	char pad_141[0x7]; // 0x141(0x07)
};

// ScriptStruct FortniteGame.FortGameFeatureResponse
// Size: 0x30 (Inherited: 0x00)
struct FFortGameFeatureResponse {
	struct FString ErrorCode; // 0x00(0x10)
	struct FText ErrorText; // 0x10(0x18)
	enum class EFortErrorSeverity ErrorSeverity; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// ScriptStruct FortniteGame.AthenaPickResult
// Size: 0x18 (Inherited: 0x00)
struct FAthenaPickResult {
	enum class EAthenaPickerType PickType; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct ABuildingActor* FoundBuildingActor; // 0x08(0x08)
	struct AFortPlayerPawnAthena* FoundPlayer; // 0x10(0x08)
};

// ScriptStruct FortniteGame.DataTableRowHandleQuantityPair
// Size: 0x18 (Inherited: 0x00)
struct FDataTableRowHandleQuantityPair {
	struct FDataTableRowHandle DataTableRowHandle; // 0x00(0x10)
	int32_t Quantity; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortEffectDistanceQuality
// Size: 0x18 (Inherited: 0x00)
struct FFortEffectDistanceQuality {
	float MinDistanceCinematic; // 0x00(0x04)
	float MinDistanceEpic; // 0x04(0x04)
	float MinDistanceHigh; // 0x08(0x04)
	float MinDistanceMedium; // 0x0c(0x04)
	float MinDistanceLow; // 0x10(0x04)
	char bAllowCinematic : 1; // 0x14(0x01)
	char bAllowEpic : 1; // 0x14(0x01)
	char bAllowHigh : 1; // 0x14(0x01)
	char bAllowMedium : 1; // 0x14(0x01)
	char bAllowLow : 1; // 0x14(0x01)
	char pad_14_5 : 3; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
};

// ScriptStruct FortniteGame.FortParticleSystemParamBucket
// Size: 0x10 (Inherited: 0x00)
struct FFortParticleSystemParamBucket {
	struct TArray<struct FParticleSysParam> Parameters; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortAlterationSlotStatus
// Size: 0x10 (Inherited: 0x00)
struct FFortAlterationSlotStatus {
	struct UFortAlterationItemDefinition* Alteration; // 0x00(0x08)
	int32_t MinRequiredLevel; // 0x08(0x04)
	enum class EFortRarity MinHostItemRarity; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
};

// ScriptStruct FortniteGame.FortClientEvent
// Size: 0x20 (Inherited: 0x00)
struct FFortClientEvent {
	struct FName CategoryName; // 0x00(0x08)
	struct FName EventName; // 0x08(0x08)
	struct UObject* EventSource; // 0x10(0x08)
	struct UObject* EventFocus; // 0x18(0x08)
};

// ScriptStruct FortniteGame.FortMissionEventName
// Size: 0x10 (Inherited: 0x10)
struct FFortMissionEventName : FFortEventName {
};

// ScriptStruct FortniteGame.FortCatalogMetaPreload
// Size: 0x38 (Inherited: 0x00)
struct FFortCatalogMetaPreload {
	struct TArray<struct TSoftObjectPtr<struct UFortAccountItemDefinition>> ChaseItems; // 0x00(0x10)
	struct TSoftObjectPtr<struct UFortCardPackItemDefinition> PackDefinition; // 0x10(0x28)
};

// ScriptStruct FortniteGame.FortCatalogMeta
// Size: 0x18 (Inherited: 0x00)
struct FFortCatalogMeta {
	struct TArray<struct UFortAccountItemDefinition*> ChaseItems; // 0x00(0x10)
	struct UFortCardPackItemDefinition* PackDefinition; // 0x10(0x08)
};

// ScriptStruct FortniteGame.FortSpawnContext
// Size: 0x28 (Inherited: 0x00)
struct FFortSpawnContext {
	char Team; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FGameplayTagContainer Tags; // 0x08(0x20)
};

// ScriptStruct FortniteGame.FortQuestPackInfo
// Size: 0x38 (Inherited: 0x00)
struct FFortQuestPackInfo {
	struct FString Name; // 0x00(0x10)
	struct FString DefaultQuestPack; // 0x10(0x10)
	int32_t MaxActiveDailyQuests; // 0x20(0x04)
	int32_t MaxRerollsPerDay; // 0x24(0x04)
	int32_t DaysToKeepClaimedQuests; // 0x28(0x04)
	int32_t DaysToKeepCompletedQuests; // 0x2c(0x04)
	int32_t MaxUnclaimedQuests; // 0x30(0x04)
	bool IsStreamingQuestPack; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// ScriptStruct FortniteGame.FortNamedWeightRow
// Size: 0x58 (Inherited: 0x08)
struct FFortNamedWeightRow : FTableRowBase {
	struct TMap<struct FString, float> NamedWeightMap; // 0x08(0x50)
};

// ScriptStruct FortniteGame.FortLoginReward
// Size: 0x58 (Inherited: 0x08)
struct FFortLoginReward : FTableRowBase {
	struct TSoftObjectPtr<struct UFortAccountItemDefinition> ItemDefinition; // 0x08(0x28)
	int32_t ItemCount; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct FText Description; // 0x38(0x18)
	bool bIsMajorReward; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
};

// ScriptStruct FortniteGame.CostOnlyRecipe
// Size: 0x38 (Inherited: 0x08)
struct FCostOnlyRecipe : FTableRowBase {
	struct TArray<struct FFortItemQuantityPair> RecipeCosts; // 0x08(0x10)
	struct FGameplayTagContainer RequiredCatalysts; // 0x18(0x20)
};

// ScriptStruct FortniteGame.FortEncounterSettingsFixedPace
// Size: 0x14 (Inherited: 0x00)
struct FFortEncounterSettingsFixedPace {
	float RiftSpawnInterval; // 0x00(0x04)
	int32_t RiftSpawnCount; // 0x04(0x04)
	int32_t AIMaxCount; // 0x08(0x04)
	float SpawnAIIntervalTime; // 0x0c(0x04)
	int32_t SpawnAIIntervalCount; // 0x10(0x04)
};

// ScriptStruct FortniteGame.FortDayPhaseCallbackHandle
// Size: 0x10 (Inherited: 0x00)
struct FFortDayPhaseCallbackHandle {
	char pad_0[0x10]; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortSpecialEventEmoteData
// Size: 0x20 (Inherited: 0x00)
struct FFortSpecialEventEmoteData {
	struct TArray<struct FName> BoundActions; // 0x00(0x10)
	struct TArray<struct UAthenaDanceItemDefinition*> Emotes; // 0x10(0x10)
};

// ScriptStruct FortniteGame.ItemCategory
// Size: 0x368 (Inherited: 0x00)
struct FItemCategory {
	struct FGameplayTagContainer TagContainer; // 0x00(0x20)
	struct FText CategoryName; // 0x20(0x18)
	struct FFortMultiSizeBrush CategoryBrush; // 0x38(0x330)
};

// ScriptStruct FortniteGame.FortMultiSizeMargin
// Size: 0x60 (Inherited: 0x00)
struct FFortMultiSizeMargin {
	struct FMargin Margin_XXS; // 0x00(0x10)
	struct FMargin Margin_XS; // 0x10(0x10)
	struct FMargin Margin_S; // 0x20(0x10)
	struct FMargin Margin_M; // 0x30(0x10)
	struct FMargin Margin_L; // 0x40(0x10)
	struct FMargin Margin_XL; // 0x50(0x10)
};

// ScriptStruct FortniteGame.FortMultiSizeFont
// Size: 0x210 (Inherited: 0x00)
struct FFortMultiSizeFont {
	struct FSlateFontInfo Font_XXS; // 0x00(0x58)
	struct FSlateFontInfo Font_XS; // 0x58(0x58)
	struct FSlateFontInfo Font_S; // 0xb0(0x58)
	struct FSlateFontInfo Font_M; // 0x108(0x58)
	struct FSlateFontInfo Font_L; // 0x160(0x58)
	struct FSlateFontInfo Font_XL; // 0x1b8(0x58)
};

// ScriptStruct FortniteGame.SpecialActorStatData
// Size: 0x18 (Inherited: 0x00)
struct FSpecialActorStatData {
	struct FGameplayTag CategoryTag; // 0x00(0x08)
	struct TArray<struct FSpecialActorSingleStatData> Stats; // 0x08(0x10)
};

// ScriptStruct FortniteGame.PurchasedBattlePassInfo
// Size: 0x18 (Inherited: 0x00)
struct FPurchasedBattlePassInfo {
	int32_t Count; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FString ID; // 0x08(0x10)
};

// ScriptStruct FortniteGame.UIExtension
// Size: 0x30 (Inherited: 0x00)
struct FUIExtension {
	enum class EUIExtensionSlot Slot; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	SoftClassProperty WidgetClass; // 0x08(0x28)
};

// ScriptStruct FortniteGame.CameraPair
// Size: 0x10 (Inherited: 0x00)
struct FCameraPair {
	enum class EFrontEndCamera Type; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct AFortCameraBase* Camera; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortUIFeedback
// Size: 0x18 (Inherited: 0x00)
struct FFortUIFeedback {
	struct USoundBase* Audio; // 0x00(0x08)
	bool bLooping; // 0x08(0x01)
	char pad_9[0x3]; // 0x09(0x03)
	float FadeIn; // 0x0c(0x04)
	float FadeOut; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortUIFeedbackBlueprintOnly
// Size: 0x18 (Inherited: 0x18)
struct FFortUIFeedbackBlueprintOnly : FFortUIFeedback {
};

// ScriptStruct FortniteGame.FortUserCloudRequestQueue
// Size: 0x28 (Inherited: 0x00)
struct FFortUserCloudRequestQueue {
	char bFreezeIncomingRequests : 1; // 0x00(0x01)
	char pad_0_1 : 7; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FFortUserCloudRequestHandle FirstFrozenHandle; // 0x08(0x08)
	struct FTimerHandle ProcessingTimerHandle; // 0x10(0x08)
	struct TArray<struct FFortUserCloudRequest> RequestQueue; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortUserCloudRequest
// Size: 0x70 (Inherited: 0x00)
struct FFortUserCloudRequest {
	struct FFortUserCloudRequestPayload RequestPayload; // 0x00(0x58)
	char bNeedsFileEnumeration : 1; // 0x58(0x01)
	char bStartedProcessing : 1; // 0x58(0x01)
	char pad_58_2 : 6; // 0x58(0x01)
	char pad_59[0x17]; // 0x59(0x17)
};

// ScriptStruct FortniteGame.FortUserCloudRequestPayload
// Size: 0x58 (Inherited: 0x00)
struct FFortUserCloudRequestPayload {
	struct FFortUserCloudRequestHandle RequestHandle; // 0x00(0x08)
	struct FUniqueNetIdRepl UserNetId; // 0x08(0x28)
	struct FString Filename; // 0x30(0x10)
	enum class EFortUserCloudRequestType RequestType; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct TArray<char> DataBuffer; // 0x48(0x10)
};

// ScriptStruct FortniteGame.FortVehicleAudioOneshotGate
// Size: 0x28 (Inherited: 0x00)
struct FFortVehicleAudioOneshotGate {
	float GateValue; // 0x00(0x04)
	enum class EVehicleAudioTriggerDir Direction; // 0x04(0x01)
	bool FadeWhenOutsideGate; // 0x05(0x01)
	char pad_6[0x2]; // 0x06(0x02)
	struct USoundBase* sound; // 0x08(0x08)
	float MinTimeSinceTrigger; // 0x10(0x04)
	float InterruptFadeTime; // 0x14(0x04)
	char pad_18[0x8]; // 0x18(0x08)
	struct UAudioComponent* AudioComp; // 0x20(0x08)
};

// ScriptStruct FortniteGame.FortVehicleAudioFloatParam
// Size: 0x28 (Inherited: 0x00)
struct FFortVehicleAudioFloatParam {
	struct FName Name; // 0x00(0x08)
	struct FFortVehicleAudioParam Data; // 0x08(0x20)
};

// ScriptStruct FortniteGame.FortVehicleAudioParam
// Size: 0x20 (Inherited: 0x00)
struct FFortVehicleAudioParam {
	float Value; // 0x00(0x04)
	enum class EVehicleAudioInterpolationType InterpType; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
	struct UCurveFloat* Curve; // 0x08(0x08)
	float AttackSpeed; // 0x10(0x04)
	float ReleaseSpeed; // 0x14(0x04)
	char pad_18[0x8]; // 0x18(0x08)
};

// ScriptStruct FortniteGame.VehicleRuntimeModifiers
// Size: 0x02 (Inherited: 0x00)
struct FVehicleRuntimeModifiers {
	char DataVersion; // 0x00(0x01)
	char bHasInfiniteFuel : 1; // 0x01(0x01)
	char bSupportCosmeticWrap : 1; // 0x01(0x01)
	char pad_1_2 : 6; // 0x01(0x01)
};

// ScriptStruct FortniteGame.DampedSpringConfig
// Size: 0x0c (Inherited: 0x00)
struct FDampedSpringConfig {
	float Stiffness; // 0x00(0x04)
	float Damping; // 0x04(0x04)
	float MaxAccel; // 0x08(0x04)
};

// ScriptStruct FortniteGame.PotentiallyDestroyedBuilding
// Size: 0x10 (Inherited: 0x00)
struct FPotentiallyDestroyedBuilding {
	struct ABuildingActor* BuildingActor; // 0x00(0x08)
	float TimeSinceCollision; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.VehicleGamepadLiftInputs
// Size: 0x08 (Inherited: 0x00)
struct FVehicleGamepadLiftInputs {
	float MoveUpPressTime; // 0x00(0x04)
	float MoveDownPressTime; // 0x04(0x04)
};

// ScriptStruct FortniteGame.VehicleCosmeticInfo
// Size: 0x38 (Inherited: 0x00)
struct FVehicleCosmeticInfo {
	struct AFortPlayerPawn* MostRecentCosmeticSourcePawn; // 0x00(0x08)
	struct UAthenaVehicleCosmeticItemDefinition* ActiveCosmeticItem; // 0x08(0x08)
	struct AFortPlayerPawn* PawnAssociatedWithWrap; // 0x10(0x08)
	struct UAthenaItemWrapDefinition* ActiveCosmeticWrap; // 0x18(0x08)
	struct TArray<struct USceneComponent*> SpawnedCosmeticComponents; // 0x20(0x10)
	struct ACustomItemWrapModifier* ItemWrapModifier; // 0x30(0x08)
};

// ScriptStruct FortniteGame.FortAthenaVehicleSessionTelemetryInfo
// Size: 0x70 (Inherited: 0x00)
struct FFortAthenaVehicleSessionTelemetryInfo {
	char pad_0[0x70]; // 0x00(0x70)
};

// ScriptStruct FortniteGame.VehicleEffectsPontoonParamSet
// Size: 0x50 (Inherited: 0x00)
struct FVehicleEffectsPontoonParamSet {
	struct FName PontoonName; // 0x00(0x08)
	struct FName EffectsName; // 0x08(0x08)
	struct FName ImpulseParamName; // 0x10(0x08)
	struct FName LocationParamName; // 0x18(0x08)
	struct FName RotationParamName; // 0x20(0x08)
	struct FName WaterBodyIndex; // 0x28(0x08)
	struct FName WaterHeightParamName; // 0x30(0x08)
	struct FName DepthParamName; // 0x38(0x08)
	struct FName WaterPlaneLocation; // 0x40(0x08)
	struct FName WaterPlaneNormal; // 0x48(0x08)
};

// ScriptStruct FortniteGame.SeatTransitionMontage
// Size: 0x18 (Inherited: 0x00)
struct FSeatTransitionMontage {
	struct UAnimMontage* Montage; // 0x00(0x08)
	int32_t FromSeatIndex; // 0x08(0x04)
	int32_t ToSeatIndex; // 0x0c(0x04)
	bool bUseFromSeatIndex; // 0x10(0x01)
	bool bUseToSeatIndex; // 0x11(0x01)
	char pad_12[0x6]; // 0x12(0x06)
};

// ScriptStruct FortniteGame.AthenaCarPlayerSlot
// Size: 0x108 (Inherited: 0x00)
struct FAthenaCarPlayerSlot {
	struct FName SeatSocket; // 0x00(0x08)
	struct FName SeatChoiceSocket; // 0x08(0x08)
	struct FName SeatIndicatorSocket; // 0x10(0x08)
	struct FText SeatChoiceDisplayText; // 0x18(0x18)
	struct FName SeatCollision; // 0x30(0x08)
	struct TArray<struct FName> ExitSockets; // 0x38(0x10)
	struct FAthenaVehicleShootingCone ShootingCone; // 0x48(0x08)
	struct USoundBase* SoundOnEnter; // 0x50(0x08)
	struct USoundBase* SoundOnExit; // 0x58(0x08)
	struct UAnimInstance* AnimInstanceOverride; // 0x60(0x08)
	struct UAnimInstance* AnimLayerOverride; // 0x68(0x08)
	char bUsePerSeatAnimInstanceOverride : 1; // 0x70(0x01)
	char bIsSelectable : 1; // 0x70(0x01)
	char bUseGroundMotion : 1; // 0x70(0x01)
	char bUseVehicleIsOnGround : 1; // 0x70(0x01)
	char bCanEmote : 1; // 0x70(0x01)
	char bCanCarryDBNOPlayer : 1; // 0x70(0x01)
	char bForceCrouch : 1; // 0x70(0x01)
	char bPlayEnterSoundForTransition : 1; // 0x70(0x01)
	char bPlayExitSoundForTransition : 1; // 0x71(0x01)
	char bIsPushDriver : 1; // 0x71(0x01)
	char bCanOnlyFireWhenTargeting : 1; // 0x71(0x01)
	char pad_71_3 : 5; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	struct FVector ActorSpaceCameraOffset; // 0x74(0x0c)
	struct FVector VehicleSpaceCameraOffset; // 0x80(0x0c)
	float SlopeCompensationCameraOffset; // 0x8c(0x04)
	struct FVector StandingFiringOffset; // 0x90(0x0c)
	struct FVector CrouchingFiringOffset; // 0x9c(0x0c)
	struct FVector EmoteOffset; // 0xa8(0x0c)
	char pad_B4[0x4]; // 0xb4(0x04)
	struct AFortPlayerPawn* Player; // 0xb8(0x08)
	struct TScriptInterface<None> ControllerUser; // 0xc0(0x10)
	float PlayerEntryTime; // 0xd0(0x04)
	float EnterSeatTime; // 0xd4(0x04)
	bool bConstrainPawnToSeatTransform; // 0xd8(0x01)
	bool bConstrainPawnToSeatDuringTransitionMontage; // 0xd9(0x01)
	bool bOffsetPlayerRelativeAttachLocation; // 0xda(0x01)
	bool bUseExitTimer; // 0xdb(0x01)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct UFortVehicleSeatWeaponComponent* WeaponComponent; // 0xe0(0x08)
	bool bIsMountedWeaponOnlySeat; // 0xe8(0x01)
	char pad_E9[0x3]; // 0xe9(0x03)
	float CameraPitchConstraint; // 0xec(0x04)
	float CameraYawConstraint; // 0xf0(0x04)
	bool bReserved; // 0xf4(0x01)
	char pad_F5[0x3]; // 0xf5(0x03)
	struct TArray<struct FActionDefForUI> ActionDefForUI; // 0xf8(0x10)
};

// ScriptStruct FortniteGame.AthenaVehicleShootingCone
// Size: 0x08 (Inherited: 0x00)
struct FAthenaVehicleShootingCone {
	float YawConstraint; // 0x00(0x04)
	float PitchConstraint; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortVehicleIncrementTrick
// Size: 0x30 (Inherited: 0x00)
struct FFortVehicleIncrementTrick {
	struct FText Name; // 0x00(0x18)
	int32_t HalfSpinsNeeded; // 0x18(0x04)
	int32_t BaseScore; // 0x1c(0x04)
	int32_t Repeats; // 0x20(0x04)
	int32_t RepeatsHalfSpinsPerTrick; // 0x24(0x04)
	int32_t MultiplierIncrement; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.VehicleTrickSequenceBasics
// Size: 0x20 (Inherited: 0x08)
struct FVehicleTrickSequenceBasics : FTableRowBase {
	float TrickStartTime; // 0x08(0x04)
	float TrickStartDistance; // 0x0c(0x04)
	float TrickStartHeight; // 0x10(0x04)
	float TrickPointsPerAirSecond; // 0x14(0x04)
	float TrickPointsPerAirDistance; // 0x18(0x04)
	float TrickPointsPerAirHeight; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.VehicleSpringInfo
// Size: 0x1a0 (Inherited: 0x00)
struct FVehicleSpringInfo {
	struct FName SpringStart; // 0x00(0x08)
	struct FVector SpringStartLocalOffset; // 0x08(0x0c)
	struct FName ForceApplicationPoint; // 0x14(0x08)
	float SpringLength; // 0x1c(0x04)
	float SpringStiff; // 0x20(0x04)
	float SpringDamp; // 0x24(0x04)
	float SpringRadius; // 0x28(0x04)
	float MaxAccelChange; // 0x2c(0x04)
	int8_t SeatSocketIndex; // 0x30(0x01)
	char bIsLookAhead : 1; // 0x31(0x01)
	char bNormalToGroundTriangle : 1; // 0x31(0x01)
	char bForceAlongSpringGroundNormal : 1; // 0x31(0x01)
	char pad_31_3 : 5; // 0x31(0x01)
	char pad_32[0x2]; // 0x32(0x02)
	float LookAheadMinSpeed; // 0x34(0x04)
	float LookAheadMaxSpeed; // 0x38(0x04)
	float LookAheadMinStiff; // 0x3c(0x04)
	float LookAheadMaxStiff; // 0x40(0x04)
	char pad_44[0xc]; // 0x44(0x0c)
	struct FTransform LocalStartTM; // 0x50(0x30)
	struct FTransform LocalApplyTM; // 0x80(0x30)
	struct FHitResult Hit; // 0xb0(0x88)
	char pad_138[0x8]; // 0x138(0x08)
	struct FPlane GroundPlane; // 0x140(0x10)
	float SprungMass; // 0x150(0x04)
	bool bEnabled; // 0x154(0x01)
	char pad_155[0x3]; // 0x155(0x03)
	struct FVector Start; // 0x158(0x0c)
	struct FVector End; // 0x164(0x0c)
	struct FVector RayDir; // 0x170(0x0c)
	struct FVector ForcePt; // 0x17c(0x0c)
	struct FVector ForceDir; // 0x188(0x0c)
	char pad_194[0xc]; // 0x194(0x0c)
};

// ScriptStruct FortniteGame.ActiveVehicleUI
// Size: 0x18 (Inherited: 0x00)
struct FActiveVehicleUI {
	char pad_0[0x10]; // 0x00(0x10)
	struct UUserWidget* ActiveWidget; // 0x10(0x08)
};

// ScriptStruct FortniteGame.VehicleSpecificUIDetails
// Size: 0x20 (Inherited: 0x00)
struct FVehicleSpecificUIDetails {
	struct UUserWidget* WidgetClass; // 0x00(0x08)
	enum class EUIExtensionSlot Slot; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct TArray<enum class EVehicleSeats> ValidSeats; // 0x10(0x10)
};

// ScriptStruct FortniteGame.AthenaCarPlayerSlotUnreplicated
// Size: 0x08 (Inherited: 0x00)
struct FAthenaCarPlayerSlotUnreplicated {
	struct UInputComponent* Input; // 0x00(0x08)
};

// ScriptStruct FortniteGame.MarshalledVFXRuntimeData
// Size: 0x68 (Inherited: 0x00)
struct FMarshalledVFXRuntimeData {
	char pad_0[0x50]; // 0x00(0x50)
	struct TArray<struct UFXSystemComponent*> DynamicSystems; // 0x50(0x10)
	struct USceneComponent* BasedOn; // 0x60(0x08)
};

// ScriptStruct FortniteGame.MarshalledVFXAuthoredData
// Size: 0x70 (Inherited: 0x00)
struct FMarshalledVFXAuthoredData {
	struct TArray<struct FMarshalledVFXData> NiagaraVFX; // 0x00(0x10)
	struct TArray<struct FMarshalledVFXData> CascadeVFX; // 0x10(0x10)
	struct TMap<struct FName, struct FParameterNameMapping> NameReplacements; // 0x20(0x50)
};

// ScriptStruct FortniteGame.ParameterNameMapping
// Size: 0x10 (Inherited: 0x00)
struct FParameterNameMapping {
	struct FName CascadeName; // 0x00(0x08)
	struct FName NiagaraName; // 0x08(0x08)
};

// ScriptStruct FortniteGame.MarshalledVFXData
// Size: 0xa0 (Inherited: 0x00)
struct FMarshalledVFXData {
	struct FGameplayTagContainer ParameterGroups; // 0x00(0x20)
	enum class EFXType Type; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
	struct TSoftObjectPtr<struct UFXSystemAsset> Asset; // 0x28(0x28)
	struct FName AttachAtBone; // 0x50(0x08)
	char pad_58[0x8]; // 0x58(0x08)
	struct FTransform RelativeOffset; // 0x60(0x30)
	struct FGameplayTag EffectIdTag; // 0x90(0x08)
	bool bAutoActivate; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
};

// ScriptStruct FortniteGame.VisibiltyInfoArray
// Size: 0x118 (Inherited: 0x108)
struct FVisibiltyInfoArray : FFastArraySerializer {
	struct TArray<struct FVisibilityInfo> VisibilityInfoArray; // 0x108(0x10)
};

// ScriptStruct FortniteGame.VisibilityInfo
// Size: 0x28 (Inherited: 0x0c)
struct FVisibilityInfo : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct AActor* Actor; // 0x10(0x08)
	struct UFortVisibilityComponent* VisibilityComponent; // 0x18(0x08)
	uint16_t TeamVisibilityFlag; // 0x20(0x02)
	char pad_22[0x6]; // 0x22(0x06)
};

// ScriptStruct FortniteGame.FortVolumeManagerBlackListObjects
// Size: 0x30 (Inherited: 0x08)
struct FFortVolumeManagerBlackListObjects : FTableRowBase {
	struct TSoftObjectPtr<struct UObject> ObjectPath; // 0x08(0x28)
};

// ScriptStruct FortniteGame.FortVolumeManagerBlackListClasses
// Size: 0x30 (Inherited: 0x08)
struct FFortVolumeManagerBlackListClasses : FTableRowBase {
	SoftClassProperty ClassPath; // 0x08(0x28)
};

// ScriptStruct FortniteGame.PendingSpawnLevelSaveRecord
// Size: 0x0c (Inherited: 0x00)
struct FPendingSpawnLevelSaveRecord {
	char pad_0[0xc]; // 0x00(0x0c)
};

// ScriptStruct FortniteGame.FortCreativePersistenceOptions
// Size: 0x01 (Inherited: 0x00)
struct FFortCreativePersistenceOptions {
	bool bAllowPlayerToClearData; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortVolumeTimeOfDayConfig
// Size: 0x01 (Inherited: 0x00)
struct FFortVolumeTimeOfDayConfig {
	char bShouldOverrideTimeOfDay : 1; // 0x00(0x01)
	char bUseRandomTimeOfDay : 1; // 0x00(0x01)
	char pad_0_2 : 6; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortVolumeActiveUsers
// Size: 0x120 (Inherited: 0x108)
struct FFortVolumeActiveUsers : FFastArraySerializer {
	struct TArray<struct FVolumePlayerStateInfo> Items; // 0x108(0x10)
	struct AFortVolumeManager* Manager; // 0x118(0x08)
};

// ScriptStruct FortniteGame.VolumePlayerStateInfo
// Size: 0x40 (Inherited: 0x0c)
struct FVolumePlayerStateInfo : FFastArraySerializerItem {
	char pad_C[0x4]; // 0x0c(0x04)
	struct FUniqueNetIdRepl UniquePlayerId; // 0x10(0x28)
	struct AFortVolume* Volume; // 0x38(0x08)
};

// ScriptStruct FortniteGame.PlayerWaypointContext
// Size: 0x10 (Inherited: 0x00)
struct FPlayerWaypointContext {
	struct APlayerState* PlayerState; // 0x00(0x08)
	struct ABuildingTrapFloor_Waypoint* Waypoint; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortWeakPointTypeData
// Size: 0xf0 (Inherited: 0x00)
struct FFortWeakPointTypeData {
	struct FGameplayTag WeakPointsTag; // 0x00(0x08)
	struct FScalableFloat StartActive; // 0x08(0x28)
	struct FScalableFloat PassDamageToOwner; // 0x30(0x28)
	struct FScalableFloat ResetHealthOnActivation; // 0x58(0x28)
	struct FScalableFloat AllowWeakPointDestruction; // 0x80(0x28)
	struct FScalableFloat DestroyedWeakPointAutoRegenerationTime; // 0xa8(0x28)
	struct UGameplayEffect* PassthroughDamageGEClass; // 0xd0(0x08)
	struct FGameplayTag SetByCallerDamageTag; // 0xd8(0x08)
	struct TArray<struct AFortWeakPoint*> WeakPointActors; // 0xe0(0x10)
};

// ScriptStruct FortniteGame.FortEquippedWeaponModSlot
// Size: 0x40 (Inherited: 0x00)
struct FFortEquippedWeaponModSlot {
	struct FFortAbilitySetHandle EquippedAbilitySetHandle; // 0x00(0x38)
	struct UFortWeaponModItemDefinition* EquippedWeaponMod; // 0x38(0x08)
};

// ScriptStruct FortniteGame.MaterialInterfaceArray
// Size: 0x10 (Inherited: 0x00)
struct FMaterialInterfaceArray {
	struct TArray<struct UMaterialInterface*> Materials; // 0x00(0x10)
};

// ScriptStruct FortniteGame.WeaponHudData
// Size: 0x40 (Inherited: 0x00)
struct FWeaponHudData {
	struct FName KeyActionName; // 0x00(0x08)
	struct FName GamepadActionName; // 0x08(0x08)
	struct FText ActionDescription; // 0x10(0x18)
	bool bVisible; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct FString KeyActionId; // 0x30(0x10)
};

// ScriptStruct FortniteGame.WeaponHudKeyActionVisibility
// Size: 0x08 (Inherited: 0x00)
struct FWeaponHudKeyActionVisibility {
	int32_t Index; // 0x00(0x04)
	bool bVisibility; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
};

// ScriptStruct FortniteGame.FortHarvestingToolMontageOverrides
// Size: 0x10 (Inherited: 0x00)
struct FFortHarvestingToolMontageOverrides {
	struct TArray<struct FFortHarvestingToolMontageOverrideData> MontageOverrideData; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortHarvestingToolMontageOverrideData
// Size: 0x30 (Inherited: 0x00)
struct FFortHarvestingToolMontageOverrideData {
	struct FGameplayTag CosmeticTag; // 0x00(0x08)
	struct TSoftObjectPtr<struct UAnimMontage> MontageToPlay; // 0x08(0x28)
};

// ScriptStruct FortniteGame.FortWeaponDurabilityByRarityStats
// Size: 0x28 (Inherited: 0x08)
struct FFortWeaponDurabilityByRarityStats : FTableRowBase {
	int32_t Common; // 0x08(0x04)
	int32_t Uncommon; // 0x0c(0x04)
	int32_t Rare; // 0x10(0x04)
	int32_t Epic; // 0x14(0x04)
	int32_t Legendary; // 0x18(0x04)
	int32_t Mythic; // 0x1c(0x04)
	int32_t Transcendent; // 0x20(0x04)
	int32_t Unattainable; // 0x24(0x04)
};

// ScriptStruct FortniteGame.AttachedParticleComponentDef
// Size: 0x70 (Inherited: 0x00)
struct FAttachedParticleComponentDef {
	struct FTransform Transform; // 0x00(0x30)
	struct FName ParentSocket; // 0x30(0x08)
	struct TSoftObjectPtr<struct UParticleSystem> Template; // 0x38(0x28)
	enum class EDetailMode DetailMode; // 0x60(0x01)
	char pad_61[0xf]; // 0x61(0x0f)
};

// ScriptStruct FortniteGame.FortMeleeWeaponStats
// Size: 0x190 (Inherited: 0x168)
struct FFortMeleeWeaponStats : FFortBaseWeaponStats {
	float RangeVSEnemies; // 0x168(0x04)
	float ConeYawAngle; // 0x16c(0x04)
	float ConePitchAngle; // 0x170(0x04)
	float SwingPlaySpeed; // 0x174(0x04)
	float SwingTime; // 0x178(0x04)
	float BuildingConeAngle; // 0x17c(0x04)
	float BuildingConeAnglePitch; // 0x180(0x04)
	float RangeVSBuildings2D; // 0x184(0x04)
	float RangeVSBuildingsZ; // 0x188(0x04)
	float RangeVSWeakSpots; // 0x18c(0x04)
};

// ScriptStruct FortniteGame.HelperGameplayTagToAmmoCountMultiplier
// Size: 0x30 (Inherited: 0x00)
struct FHelperGameplayTagToAmmoCountMultiplier {
	struct FGameplayTag Tag; // 0x00(0x08)
	struct FScalableFloat CountMultiplier; // 0x08(0x28)
};

// ScriptStruct FortniteGame.SourceToAmmoMultiplierOverrideData
// Size: 0x30 (Inherited: 0x30)
struct FSourceToAmmoMultiplierOverrideData : FHelperGameplayTagToAmmoCountMultiplier {
};

// ScriptStruct FortniteGame.WeaponPickupAmmoMultiplierOverrideData
// Size: 0x30 (Inherited: 0x30)
struct FWeaponPickupAmmoMultiplierOverrideData : FHelperGameplayTagToAmmoCountMultiplier {
};

// ScriptStruct FortniteGame.WeaponPickupAmmoCountData
// Size: 0x30 (Inherited: 0x00)
struct FWeaponPickupAmmoCountData {
	struct FGameplayTag AmmoItemDefinitionTag; // 0x00(0x08)
	struct FScalableFloat SpawnCount; // 0x08(0x28)
};

// ScriptStruct FortniteGame.FortBulletPatternEntry
// Size: 0x24 (Inherited: 0x00)
struct FFortBulletPatternEntry {
	struct FName SocketName; // 0x00(0x08)
	struct FRotator RelativeRotation; // 0x08(0x0c)
	char pad_14[0x10]; // 0x14(0x10)
};

// ScriptStruct FortniteGame.FortRangedWeaponStats
// Size: 0x2f0 (Inherited: 0x168)
struct FFortRangedWeaponStats : FFortBaseWeaponStats {
	char pad_168[0x4]; // 0x168(0x04)
	float Spread; // 0x16c(0x04)
	float SpreadDownsights; // 0x170(0x04)
	float StandingStillSpreadMultiplier; // 0x174(0x04)
	float AthenaCrouchingSpreadMultiplier; // 0x178(0x04)
	float AthenaJumpingFallingSpreadMultiplier; // 0x17c(0x04)
	float AthenaSprintingSpreadMultiplier; // 0x180(0x04)
	float MinSpeedForSpreadMultiplier; // 0x184(0x04)
	float MaxSpeedForSpreadMultiplier; // 0x188(0x04)
	float SpreadDownsightsAdditionalCooldownTime; // 0x18c(0x04)
	float HeatX1; // 0x190(0x04)
	float HeatY1; // 0x194(0x04)
	float HeatX2; // 0x198(0x04)
	float HeatY2; // 0x19c(0x04)
	float HeatX3; // 0x1a0(0x04)
	float HeatY3; // 0x1a4(0x04)
	float HeatXScale; // 0x1a8(0x04)
	float HeatYScale; // 0x1ac(0x04)
	float CoolX1; // 0x1b0(0x04)
	float CoolY1; // 0x1b4(0x04)
	float CoolX2; // 0x1b8(0x04)
	float CoolY2; // 0x1bc(0x04)
	float CoolX3; // 0x1c0(0x04)
	float CoolY3; // 0x1c4(0x04)
	float CoolXScale; // 0x1c8(0x04)
	float CoolYScale; // 0x1cc(0x04)
	float PerfectAimCooldown; // 0x1d0(0x04)
	int32_t BulletsPerCartridge; // 0x1d4(0x04)
	float FiringRate; // 0x1d8(0x04)
	float ROFScale; // 0x1dc(0x04)
	float BurstFiringRate; // 0x1e0(0x04)
	float FiringRateDownsightsMultiplier; // 0x1e4(0x04)
	float AutofireRange; // 0x1e8(0x04)
	float AutofireAcquisitionDelay; // 0x1ec(0x04)
	float AutofireDBNOAcquisitionDelay; // 0x1f0(0x04)
	float AutofireAcquisitionRechargeTime; // 0x1f4(0x04)
	float AutofireReleaseTime; // 0x1f8(0x04)
	float AutofireCooldown; // 0x1fc(0x04)
	float RecoilVert; // 0x200(0x04)
	float RecoilVertScale; // 0x204(0x04)
	float RecoilVertScaleGamepad; // 0x208(0x04)
	float VertRecoilDownChance; // 0x20c(0x04)
	float RecoilHoriz; // 0x210(0x04)
	float RecoilHorizScale; // 0x214(0x04)
	float RecoilHorizScaleGamepad; // 0x218(0x04)
	float RecoilInterpSpeed; // 0x21c(0x04)
	float RecoilRecoveryInterpSpeed; // 0x220(0x04)
	float RecoilRecoveryDelay; // 0x224(0x04)
	float RecoilRecoveryFraction; // 0x228(0x04)
	float RecoilDownsightsMultiplier; // 0x22c(0x04)
	float AthenaRecoilMagnitudeMin; // 0x230(0x04)
	float AthenaRecoilMagnitudeMax; // 0x234(0x04)
	float AthenaRecoilMagnitudeScale; // 0x238(0x04)
	float AthenaRecoilAngleMin; // 0x23c(0x04)
	float AthenaRecoilAngleMax; // 0x240(0x04)
	float AthenaRecoilRollMagnitudeMin; // 0x244(0x04)
	float AthenaRecoilRollMagnitudeMax; // 0x248(0x04)
	float AthenaRecoilInterpSpeed; // 0x24c(0x04)
	float AthenaRecoilRecoveryInterpSpeed; // 0x250(0x04)
	float AthenaRecoilDownsightsMultiplier; // 0x254(0x04)
	float AthenaRecoilHipFireMultiplier; // 0x258(0x04)
	float AthenaAimAssistRange; // 0x25c(0x04)
	float ADSTransitionInTime; // 0x260(0x04)
	float ADSTransitionOutTime; // 0x264(0x04)
	int32_t MaxSpareAmmo; // 0x268(0x04)
	int32_t BulletsPerTracer; // 0x26c(0x04)
	float AIDelayBeforeFiringMin; // 0x270(0x04)
	float AIDelayBeforeFiringMax; // 0x274(0x04)
	float AIFireDurationMin; // 0x278(0x04)
	float AIFireDurationMax; // 0x27c(0x04)
	float AIMinSpreadDuration; // 0x280(0x04)
	float AIMaxSpreadDuration; // 0x284(0x04)
	float AIDurationSpreadMultiplier; // 0x288(0x04)
	float AIAdditionalSpreadForTargetMovingLaterally; // 0x28c(0x04)
	float AIAthenaHearFiringNoiseRange; // 0x290(0x04)
	float EQSDensity; // 0x294(0x04)
	float MinApproachRange; // 0x298(0x04)
	float MinActualRange; // 0x29c(0x04)
	float MinPreferredRange; // 0x2a0(0x04)
	float MinPreferredRangeEQS; // 0x2a4(0x04)
	float MaxPreferredRangeEQS; // 0x2a8(0x04)
	float MaxPreferredRange; // 0x2ac(0x04)
	float MaxActualRange; // 0x2b0(0x04)
	float MaxApproachRange; // 0x2b4(0x04)
	float RangeToAutomaticallyAddEnemyPawnGoals; // 0x2b8(0x04)
	float SweepRadius; // 0x2bc(0x04)
	float AutoReloadDelayOverride; // 0x2c0(0x04)
	float OverheatingMaxValue; // 0x2c4(0x04)
	float OverheatHeatingValue; // 0x2c8(0x04)
	float FullChargeOverheatHeatingValue; // 0x2cc(0x04)
	float OverheatingCoolingValue; // 0x2d0(0x04)
	float HeatingCooldownDelay; // 0x2d4(0x04)
	float OverheatedCooldownDelay; // 0x2d8(0x04)
	bool bCoolOverheatWhileCharging; // 0x2dc(0x01)
	char pad_2DD[0x3]; // 0x2dd(0x03)
	float FortHomingTurnSpeedMin; // 0x2e0(0x04)
	float FortHomingTurnSpeedMax; // 0x2e4(0x04)
	float FortHomingTimeUntilMaxTurnSpeed; // 0x2e8(0x04)
	char pad_2EC[0x4]; // 0x2ec(0x04)
};

// ScriptStruct FortniteGame.WeaponRechargeAmmoMappingData
// Size: 0x18 (Inherited: 0x00)
struct FWeaponRechargeAmmoMappingData {
	struct FGameplayTag TagOnPlayer; // 0x00(0x08)
	struct TArray<struct FPrimaryAssetId> WeaponIds; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortWeightedActorTypeList
// Size: 0x50 (Inherited: 0x00)
struct FFortWeightedActorTypeList {
	struct TMap<struct AActor*, struct FScalableFloat> WeightedClassTypes; // 0x00(0x50)
};

// ScriptStruct FortniteGame.FortWindImpulseCylinderDelta
// Size: 0x90 (Inherited: 0x00)
struct FFortWindImpulseCylinderDelta {
	struct FVector DeltaCenter; // 0x00(0x0c)
	bool bInitialized; // 0x0c(0x01)
	bool bRippleOutward; // 0x0d(0x01)
	char pad_E[0x2]; // 0x0e(0x02)
	float SectionWidth; // 0x10(0x04)
	float InnerSectionRadius; // 0x14(0x04)
	float OuterSectionRadius; // 0x18(0x04)
	float MaximumRadius; // 0x1c(0x04)
	float DesiredOverallBlendTime; // 0x20(0x04)
	float SectionBlendTime; // 0x24(0x04)
	float SectionCurrentBlendTime; // 0x28(0x04)
	float PreviousMagnitude; // 0x2c(0x04)
	float SectionCurrentMagnitude; // 0x30(0x04)
	float DesiredMagnitude; // 0x34(0x04)
	struct FBox OuterWorldBounds; // 0x38(0x1c)
	struct FBox InnerWorldBounds; // 0x54(0x1c)
	struct FBox WindImpulseBounds; // 0x70(0x1c)
	struct FFortWindImpulseHandle WindImpulseHandleToModify; // 0x8c(0x04)
};

// ScriptStruct FortniteGame.FortWindImpulseRadius
// Size: 0x4c (Inherited: 0x00)
struct FFortWindImpulseRadius {
	struct FVector Location; // 0x00(0x0c)
	float Radius; // 0x0c(0x04)
	float CurrentRadius; // 0x10(0x04)
	float PreviousRadius; // 0x14(0x04)
	float Magnitude; // 0x18(0x04)
	float CurrentMagnitude; // 0x1c(0x04)
	float PreviousMagnitude; // 0x20(0x04)
	float BlendTime; // 0x24(0x04)
	float CurrentBlendTime; // 0x28(0x04)
	struct FBox WorldBounds; // 0x2c(0x1c)
	struct FFortWindImpulseHandle Handle; // 0x48(0x04)
};

// ScriptStruct FortniteGame.FortWindImpulseCylinderRadial
// Size: 0x3c (Inherited: 0x00)
struct FFortWindImpulseCylinderRadial {
	struct FVector Location; // 0x00(0x0c)
	float InnerRadius; // 0x0c(0x04)
	float OuterRadius; // 0x10(0x04)
	float Magnitude; // 0x14(0x04)
	struct FBox WorldBounds; // 0x18(0x1c)
	bool bIsChanging; // 0x34(0x01)
	bool bIsChangePending; // 0x35(0x01)
	char pad_36[0x2]; // 0x36(0x02)
	struct FFortWindImpulseHandle Handle; // 0x38(0x04)
};

// ScriptStruct FortniteGame.FortWindImpulseCylinder
// Size: 0x48 (Inherited: 0x3c)
struct FFortWindImpulseCylinder : FFortWindImpulseCylinderRadial {
	struct FVector WindDirection; // 0x3c(0x0c)
};

// ScriptStruct FortniteGame.FortWindResponder
// Size: 0x90 (Inherited: 0x00)
struct FFortWindResponder {
	struct ABuildingSMActor* WindUpdatingBuildingSMActor; // 0x00(0x08)
	struct UCurveLinearColor* WindSpeedCurve; // 0x08(0x08)
	struct UCurveLinearColor* WindPannerSpeedCurve; // 0x10(0x08)
	struct USoundBase* WindAudio; // 0x18(0x08)
	struct TArray<struct UMaterialInterface*> MildWindMaterialInstances; // 0x20(0x10)
	struct TArray<struct UMaterialInterface*> IntenseWindMaterialInstances; // 0x30(0x10)
	struct TArray<struct FFortWindMaterialData> MaterialsData; // 0x40(0x10)
	int32_t MaterialParameterPairIndices; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct TArray<struct FFortWindResponderMaterialVariablePairData> PairedVariablesData; // 0x58(0x10)
	char pad_68[0x1c]; // 0x68(0x1c)
	float WindSpeed; // 0x84(0x04)
	char pad_88[0x4]; // 0x88(0x04)
	bool bHasSetupAnimatingMaterials; // 0x8c(0x01)
	char pad_8D[0x3]; // 0x8d(0x03)
};

// ScriptStruct FortniteGame.FortWindResponderMaterialVariablePairData
// Size: 0x24 (Inherited: 0x00)
struct FFortWindResponderMaterialVariablePairData {
	float PreviousSpeed; // 0x00(0x04)
	float PreviousOffset; // 0x04(0x04)
	float MaterialsPreviousTime; // 0x08(0x04)
	float DeltaTimeModifiedByMaterialSpeed; // 0x0c(0x04)
	int32_t MaterialVariableIndex; // 0x10(0x04)
	struct FName SpeedVariableName; // 0x14(0x08)
	struct FName TimeOffsetVariableName; // 0x1c(0x08)
};

// ScriptStruct FortniteGame.FortWindMaterialData
// Size: 0x48 (Inherited: 0x00)
struct FFortWindMaterialData {
	struct UMaterialInstanceDynamic* Mid; // 0x00(0x08)
	struct UMaterialInstanceDynamic* IntenseStateMID; // 0x08(0x08)
	int32_t MaterialParameterPairIndices; // 0x10(0x04)
	int32_t WindVectorParameterIndex; // 0x14(0x04)
	struct TArray<struct FWindScalarMaterialInterpolationData> ScalarInterpolationData; // 0x18(0x10)
	struct TArray<struct FWindVectorMaterialInterpolationData> VectorInterpolationData; // 0x28(0x10)
	struct TArray<struct FFortWindMaterialParameterPairID> ParametersToSet; // 0x38(0x10)
};

// ScriptStruct FortniteGame.FortWindMaterialParameterPairID
// Size: 0x1c (Inherited: 0x00)
struct FFortWindMaterialParameterPairID {
	int32_t PairIndex; // 0x00(0x04)
	struct FFortMaterialParameterID SpeedParameter; // 0x04(0x0c)
	struct FFortMaterialParameterID OffsetParameter; // 0x10(0x0c)
};

// ScriptStruct FortniteGame.FortMaterialParameterID
// Size: 0x0c (Inherited: 0x00)
struct FFortMaterialParameterID {
	int32_t VariableIndex; // 0x00(0x04)
	struct FName VariableName; // 0x04(0x08)
};

// ScriptStruct FortniteGame.WindVectorMaterialInterpolationData
// Size: 0x2c (Inherited: 0x00)
struct FWindVectorMaterialInterpolationData {
	struct FName MaterialParameterName; // 0x00(0x08)
	int32_t MaterialParameterIndex; // 0x08(0x04)
	struct FLinearColor LerpFromValue; // 0x0c(0x10)
	struct FLinearColor LerpToValue; // 0x1c(0x10)
};

// ScriptStruct FortniteGame.WindScalarMaterialInterpolationData
// Size: 0x14 (Inherited: 0x00)
struct FWindScalarMaterialInterpolationData {
	struct FName MaterialParameterName; // 0x00(0x08)
	int32_t MaterialParameterIndex; // 0x08(0x04)
	float LerpFromValue; // 0x0c(0x04)
	float LerpToValue; // 0x10(0x04)
};

// ScriptStruct FortniteGame.FortPickupRestrictionLists
// Size: 0x70 (Inherited: 0x00)
struct FFortPickupRestrictionLists {
	struct FFortPickupTagTestContainer WhiteList; // 0x00(0x38)
	struct FFortPickupTagTestContainer Blacklist; // 0x38(0x38)
};

// ScriptStruct FortniteGame.FortPickupTagTestContainer
// Size: 0x38 (Inherited: 0x00)
struct FFortPickupTagTestContainer {
	struct FGameplayTagContainer Tags; // 0x00(0x20)
	struct FText FailReason; // 0x20(0x18)
};

// ScriptStruct FortniteGame.FortPIEMissionOverrideData
// Size: 0x01 (Inherited: 0x00)
struct FFortPIEMissionOverrideData {
	char pad_0[0x1]; // 0x00(0x01)
};

// ScriptStruct FortniteGame.FortPlacementLocationTagHandler
// Size: 0x30 (Inherited: 0x00)
struct FFortPlacementLocationTagHandler {
	struct ABuildingActor* SpawnLocationBuildingActor; // 0x00(0x08)
	struct AActor* SpawnedActor; // 0x08(0x08)
	struct FGameplayTagContainer TagsToRemove; // 0x10(0x20)
};

// ScriptStruct FortniteGame.FortDeferredNewActorData
// Size: 0x10 (Inherited: 0x00)
struct FFortDeferredNewActorData {
	struct ABuildingActor* BuildingActor; // 0x00(0x08)
	int32_t SavedLevelIndex; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.WorldTileSubArray
// Size: 0x10 (Inherited: 0x00)
struct FWorldTileSubArray {
	struct TArray<struct AWorldTileFoundation*> X; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortLevelStreamingInfo
// Size: 0x0c (Inherited: 0x00)
struct FFortLevelStreamingInfo {
	struct FName PackageName; // 0x00(0x08)
	enum class EFortLevelStreamingState LevelState; // 0x08(0x01)
	bool bFailedToLoad; // 0x09(0x01)
	char pad_A[0x2]; // 0x0a(0x02)
};

// ScriptStruct FortniteGame.FortPlayerEarnedItemCaches
// Size: 0x38 (Inherited: 0x00)
struct FFortPlayerEarnedItemCaches {
	struct FUniqueNetIdRepl PlayerID; // 0x00(0x28)
	struct TArray<struct UFortItemCacheItemDefinition*> EarnedItemCaches; // 0x28(0x10)
};

// ScriptStruct FortniteGame.FortClientMarkerRequest
// Size: 0x40 (Inherited: 0x00)
struct FFortClientMarkerRequest {
	int32_t InstanceID; // 0x00(0x04)
	enum class EFortWorldMarkerType MarkerType; // 0x04(0x01)
	char pad_5[0x3]; // 0x05(0x03)
	struct FVector BasePosition; // 0x08(0x0c)
	struct FVector BasePositionOffset; // 0x14(0x0c)
	struct FVector WorldNormal; // 0x20(0x0c)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct AActor* MarkedActor; // 0x30(0x08)
	bool bIncludeSquad; // 0x38(0x01)
	bool bUseHoveredMarkerDetail; // 0x39(0x01)
	char pad_3A[0x6]; // 0x3a(0x06)
};

// ScriptStruct FortniteGame.FortWorldMarkerContainer
// Size: 0x128 (Inherited: 0x108)
struct FFortWorldMarkerContainer : FFastArraySerializer {
	struct TArray<struct FFortWorldMarkerData> Markers; // 0x108(0x10)
	struct UAthenaMarkerComponent* OwningComponent; // 0x118(0x08)
	char pad_120[0x8]; // 0x120(0x08)
};

// ScriptStruct FortniteGame.FortPlayerRecord
// Size: 0xd0 (Inherited: 0x00)
struct FFortPlayerRecord {
	struct FString DisplayName; // 0x00(0x10)
	struct FString UniqueId; // 0x10(0x10)
	struct TArray<char> BackpackData; // 0x20(0x10)
	bool bPlayerIsNew; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	struct FPlayerStatsRecord PlayerStatsData; // 0x34(0x8c)
	struct FStatManagerPeriodRecord CampaignPeriodRecord; // 0xc0(0x10)
};

// ScriptStruct FortniteGame.StatManagerPeriodRecord
// Size: 0x10 (Inherited: 0x00)
struct FStatManagerPeriodRecord {
	struct TArray<struct FStatRecord> StatRecords; // 0x00(0x10)
};

// ScriptStruct FortniteGame.StatRecord
// Size: 0x0c (Inherited: 0x00)
struct FStatRecord {
	struct FName StatName; // 0x00(0x08)
	int32_t StatValue; // 0x08(0x04)
};

// ScriptStruct FortniteGame.PlayerStatsRecord
// Size: 0x8c (Inherited: 0x00)
struct FPlayerStatsRecord {
	int32_t Stats[0x23]; // 0x00(0x8c)
};

// ScriptStruct FortniteGame.PlaysetPropSettings
// Size: 0x01 (Inherited: 0x00)
struct FPlaysetPropSettings {
	char pad_0[0x1]; // 0x00(0x01)
};

// ScriptStruct FortniteGame.PlaysetSettings
// Size: 0x01 (Inherited: 0x00)
struct FPlaysetSettings {
	char pad_0[0x1]; // 0x00(0x01)
};

// ScriptStruct FortniteGame.MapLocationRenderData
// Size: 0x1d0 (Inherited: 0x00)
struct FMapLocationRenderData {
	char pad_0[0x48]; // 0x00(0x48)
	struct FSlateFontInfo Font[0x3]; // 0x48(0x108)
	char pad_150[0x80]; // 0x150(0x80)
};

// ScriptStruct FortniteGame.MapLocation
// Size: 0x90 (Inherited: 0x00)
struct FMapLocation {
	struct FText Text; // 0x00(0x18)
	struct FVector2D Position; // 0x18(0x08)
	struct FSlateFontInfo Font; // 0x20(0x58)
	struct FLinearColor Color; // 0x78(0x10)
	struct FGameplayTag LocationTag; // 0x88(0x08)
};

// ScriptStruct FortniteGame.FortZoneStats
// Size: 0x190 (Inherited: 0x00)
struct FFortZoneStats {
	char pad_0[0x190]; // 0x00(0x190)
};

// ScriptStruct FortniteGame.ContainerStatInfo
// Size: 0x0c (Inherited: 0x00)
struct FContainerStatInfo {
	char pad_0[0xc]; // 0x00(0x0c)
};

// ScriptStruct FortniteGame.EnemyNpcStatInfo
// Size: 0x10 (Inherited: 0x00)
struct FEnemyNpcStatInfo {
	char pad_0[0x10]; // 0x00(0x10)
};

// ScriptStruct FortniteGame.DefenderNPCStatInfo
// Size: 0x0c (Inherited: 0x00)
struct FDefenderNPCStatInfo {
	char pad_0[0xc]; // 0x00(0x0c)
};

// ScriptStruct FortniteGame.FortLevelRecord
// Size: 0x40 (Inherited: 0x00)
struct FFortLevelRecord {
	int32_t ParentLevelIndex; // 0x00(0x04)
	struct FGuid BoundActorGuid; // 0x04(0x10)
	struct FName PackageName; // 0x14(0x08)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct TArray<struct FFortActorRecord> SavedActors; // 0x20(0x10)
	int32_t X_Loc; // 0x30(0x04)
	int32_t Y_Loc; // 0x34(0x04)
	char Rotation; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// ScriptStruct FortniteGame.DeployableBaseSupportSettings
// Size: 0x98 (Inherited: 0x00)
struct FDeployableBaseSupportSettings {
	bool bUseDeployableBases; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct TSoftObjectPtr<struct UFortDeployableBaseCloudSaveItemDefinition> DeployableBaseCloudSaveItemDef; // 0x08(0x28)
	SoftClassProperty DeployableBasePlot; // 0x30(0x28)
	struct TSoftObjectPtr<struct UFortDeployableBaseSkillTreeUnlocks> SupportedUnlocks; // 0x58(0x28)
	bool bDeployableBasesReadOnly; // 0x80(0x01)
	enum class EDeployableBaseUseType SupportedUseType; // 0x81(0x01)
	char pad_82[0x6]; // 0x82(0x06)
	struct TArray<struct UFortTieredCollectionLayout*> TieredCollectionLayouts; // 0x88(0x10)
};

// ScriptStruct FortniteGame.ZoneThemeDifficultyProperties
// Size: 0x68 (Inherited: 0x00)
struct FZoneThemeDifficultyProperties {
	struct TArray<struct FDataTableRowHandle> ValidDifficulties; // 0x00(0x10)
	struct FFortTimeOfDayTheme TimeOfDayTheme; // 0x10(0x40)
	struct FFortGlobalWindInfo GlobalWindInfo; // 0x50(0x18)
};

// ScriptStruct FortniteGame.PlayerAttributeClampRow
// Size: 0x48 (Inherited: 0x08)
struct FPlayerAttributeClampRow : FTableRowBase {
	struct FGameplayAttribute Attribute; // 0x08(0x38)
	enum class EPlayerAttributeClampType ClampType; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float ClampValue; // 0x44(0x04)
};

// ScriptStruct FortniteGame.WeaponUpgradeItemRow
// Size: 0x20 (Inherited: 0x08)
struct FWeaponUpgradeItemRow : FTableRowBase {
	struct UFortWeaponRangedItemDefinition* CurrentWeaponDef; // 0x08(0x08)
	struct UFortWeaponRangedItemDefinition* UpgradedWeaponDef; // 0x10(0x08)
	enum class EFortWeaponUpgradeCosts WoodCost; // 0x18(0x01)
	enum class EFortWeaponUpgradeCosts MetalCost; // 0x19(0x01)
	enum class EFortWeaponUpgradeCosts BrickCost; // 0x1a(0x01)
	enum class EFortWeaponUpgradeDirection Direction; // 0x1b(0x01)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.GameplayTagMessage
// Size: 0x38 (Inherited: 0x00)
struct FGameplayTagMessage {
	struct FGameplayTagContainer Tags; // 0x00(0x20)
	struct FText Text; // 0x20(0x18)
};

// ScriptStruct FortniteGame.AthenaLevelUpData
// Size: 0x28 (Inherited: 0x08)
struct FAthenaLevelUpData : FTableRowBase {
	int32_t Level; // 0x08(0x04)
	int32_t XpToNextLevel; // 0x0c(0x04)
	int32_t XpTotal; // 0x10(0x04)
	int32_t CurrencyReward; // 0x14(0x04)
	struct FString ChaseRewardTemplateId; // 0x18(0x10)
};

// ScriptStruct FortniteGame.EmoteActivationTrigger
// Size: 0xb8 (Inherited: 0x00)
struct FEmoteActivationTrigger {
	struct FGameplayTagQuery EmoteTagQuery; // 0x00(0x48)
	struct FGameplayTagQuery PlayerTagQuery; // 0x48(0x48)
	struct FGameplayTagContainer TagsToApply; // 0x90(0x20)
	float Duration; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// ScriptStruct FortniteGame.FallbackAIPawnCustomizationMapper
// Size: 0x30 (Inherited: 0x00)
struct FFallbackAIPawnCustomizationMapper {
	struct FGameplayTag RequiredTag; // 0x00(0x08)
	struct TSoftObjectPtr<struct UFortAIPawnCustomizationDefinition> CustomizationFallback; // 0x08(0x28)
};

// ScriptStruct FortniteGame.FallbackCharacterPartsMapper
// Size: 0x18 (Inherited: 0x00)
struct FFallbackCharacterPartsMapper {
	struct FGameplayTag RequiredTag; // 0x00(0x08)
	struct TArray<struct TSoftObjectPtr<struct UCustomCharacterPart>> CharacterParts; // 0x08(0x10)
};

// ScriptStruct FortniteGame.ItemPromotionCosts
// Size: 0x18 (Inherited: 0x08)
struct FItemPromotionCosts : FTableRowBase {
	struct TArray<struct FFortItemQuantityPair> PromotionCosts; // 0x08(0x10)
};

// ScriptStruct FortniteGame.DefaultCharacterPartsForPawnClass
// Size: 0x18 (Inherited: 0x00)
struct FDefaultCharacterPartsForPawnClass {
	struct FGameplayTag ClassTag; // 0x00(0x08)
	struct TArray<struct TSoftObjectPtr<struct UCustomCharacterPart>> CharacterParts; // 0x08(0x10)
};

// ScriptStruct FortniteGame.ConditionalFoundationQuota
// Size: 0x10 (Inherited: 0x00)
struct FConditionalFoundationQuota {
	struct TArray<struct FConditionalFoundationQuotaTier> Tiers; // 0x00(0x10)
};

// ScriptStruct FortniteGame.ConditionalFoundationQuotaTier
// Size: 0x18 (Inherited: 0x00)
struct FConditionalFoundationQuotaTier {
	struct TArray<SoftClassProperty> FoundationClasses; // 0x00(0x10)
	int32_t MinFoundations; // 0x10(0x04)
	int32_t MaxFoundations; // 0x14(0x04)
};

// ScriptStruct FortniteGame.TieredWaveCollectionLootSet
// Size: 0x18 (Inherited: 0x08)
struct FTieredWaveCollectionLootSet : FTableRowBase {
	struct TArray<struct FTieredWaveCollectionLootSetData> LootSetData; // 0x08(0x10)
};

// ScriptStruct FortniteGame.TieredWaveCollectionLootSetData
// Size: 0x20 (Inherited: 0x00)
struct FTieredWaveCollectionLootSetData {
	struct TArray<struct FName> StartOfCollectionItemTierGroups; // 0x00(0x10)
	struct TArray<struct FName> SuccessfulWaveItemTierGroups; // 0x10(0x10)
};

// ScriptStruct FortniteGame.TieredModifierSet
// Size: 0x18 (Inherited: 0x08)
struct FTieredModifierSet : FTableRowBase {
	struct TArray<struct FTieredModifierSetData> ModifierData; // 0x08(0x10)
};

// ScriptStruct FortniteGame.TieredModifierSetData
// Size: 0x10 (Inherited: 0x00)
struct FTieredModifierSetData {
	int32_t WaveNumber; // 0x00(0x04)
	int32_t ModifierDuration; // 0x04(0x04)
	struct FName ModifierLootTierGroup; // 0x08(0x08)
};

// ScriptStruct FortniteGame.TieredWaveSet
// Size: 0x18 (Inherited: 0x08)
struct FTieredWaveSet : FTableRowBase {
	struct TArray<struct FTieredWaveSetData> WaveData; // 0x08(0x10)
};

// ScriptStruct FortniteGame.TieredWaveSetCollection
// Size: 0x18 (Inherited: 0x08)
struct FTieredWaveSetCollection : FTableRowBase {
	struct TArray<struct FTieredWaveSetCollectionData> CollectionData; // 0x08(0x10)
};

// ScriptStruct FortniteGame.TieredWaveSetCollectionData
// Size: 0x88 (Inherited: 0x00)
struct FTieredWaveSetCollectionData {
	struct FText DefenseText; // 0x00(0x18)
	struct FText LevelText; // 0x18(0x18)
	struct FText WaveText; // 0x30(0x18)
	struct FText BreatherText; // 0x48(0x18)
	int32_t MinLvl; // 0x60(0x04)
	int32_t MaxLvl; // 0x64(0x04)
	struct FName BaseWaveLengthRowName; // 0x68(0x08)
	struct FName BaseNumOfKillsRowName; // 0x70(0x08)
	struct FName BaseNumOfKillPointsRowName; // 0x78(0x08)
	struct FName WaveSet; // 0x80(0x08)
};

// ScriptStruct FortniteGame.ScoreMultiplierRow
// Size: 0x88 (Inherited: 0x08)
struct FScoreMultiplierRow : FTableRowBase {
	float CombatMultiplier; // 0x08(0x04)
	float BuildingMultiplier; // 0x0c(0x04)
	float UtilityMultiplier; // 0x10(0x04)
	float BadgeMultiplier; // 0x14(0x04)
	int32_t MonsterKills; // 0x18(0x04)
	int32_t MonsterDamagePoints; // 0x1c(0x04)
	int32_t PlayerKills; // 0x20(0x04)
	int32_t WoodGathered; // 0x24(0x04)
	int32_t StoneGathered; // 0x28(0x04)
	int32_t MetalGathered; // 0x2c(0x04)
	int32_t Deaths; // 0x30(0x04)
	int32_t BluGloActivity; // 0x34(0x04)
	int32_t BuildingsBuilt; // 0x38(0x04)
	int32_t BuildingsBuilt_Wood; // 0x3c(0x04)
	int32_t BuildingsBuilt_Stone; // 0x40(0x04)
	int32_t BuildingsBuilt_Metal; // 0x44(0x04)
	int32_t BuildingsUpgraded_Wood2; // 0x48(0x04)
	int32_t BuildingsUpgraded_Wood3; // 0x4c(0x04)
	int32_t BuildingsUpgraded_Stone2; // 0x50(0x04)
	int32_t BuildingsUpgraded_Stone3; // 0x54(0x04)
	int32_t BuildingsUpgraded_Metal2; // 0x58(0x04)
	int32_t BuildingsUpgraded_Metal3; // 0x5c(0x04)
	int32_t BuildingsDestroyed; // 0x60(0x04)
	int32_t Repair_Wood; // 0x64(0x04)
	int32_t Repair_Stone; // 0x68(0x04)
	int32_t Repair_Metal; // 0x6c(0x04)
	int32_t FlagsCaptured; // 0x70(0x04)
	int32_t FlagsReturned; // 0x74(0x04)
	int32_t ContainersLooted; // 0x78(0x04)
	int32_t CraftingPoints; // 0x7c(0x04)
	int32_t TrapPlacementPoints; // 0x80(0x04)
	int32_t TrapActivationPoints; // 0x84(0x04)
};

// ScriptStruct FortniteGame.FortReplicatedStatMapping
// Size: 0x20 (Inherited: 0x00)
struct FFortReplicatedStatMapping {
	enum class EStatCategory StatCategory; // 0x00(0x01)
	char pad_1[0x7]; // 0x01(0x07)
	struct FText DisplayName; // 0x08(0x18)
};

// ScriptStruct FortniteGame.TagRestrictedTable
// Size: 0x70 (Inherited: 0x00)
struct FTagRestrictedTable {
	struct TSoftObjectPtr<struct UDataTable> SoftTablePtr; // 0x00(0x28)
	struct FGameplayTagQuery TagQuery; // 0x28(0x48)
};

// ScriptStruct FortniteGame.WorldItemAndMinMaxCount
// Size: 0x28 (Inherited: 0x00)
struct FWorldItemAndMinMaxCount {
	struct FCurveTableRowHandle MinCurveTable; // 0x00(0x10)
	struct FCurveTableRowHandle MaxCurveTable; // 0x10(0x10)
	struct UFortWorldItemDefinition* Item; // 0x20(0x08)
};

// ScriptStruct FortniteGame.ItemDefinitionAndCount
// Size: 0x30 (Inherited: 0x00)
struct FItemDefinitionAndCount {
	int32_t Count; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct TSoftObjectPtr<struct UFortItemDefinition> ItemDefinition; // 0x08(0x28)
};

// ScriptStruct FortniteGame.PhoneixXPStats
// Size: 0x20 (Inherited: 0x00)
struct FPhoneixXPStats {
	struct FString CalendarEventFlag; // 0x00(0x10)
	int32_t MaxLevelXP; // 0x10(0x04)
	int32_t MaxLevel; // 0x14(0x04)
	int32_t NumOverlevelRewards; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.FortPostMaxPhoenixLevelRewardData
// Size: 0x30 (Inherited: 0x08)
struct FFortPostMaxPhoenixLevelRewardData : FTableRowBase {
	bool bIsMajorReward; // 0x08(0x01)
	char pad_9[0x7]; // 0x09(0x07)
	struct TArray<struct FFortRewardQuantityPair> VisibleReward; // 0x10(0x10)
	struct FString EventTag; // 0x20(0x10)
};

// ScriptStruct FortniteGame.FortRewardQuantityPair
// Size: 0x18 (Inherited: 0x00)
struct FFortRewardQuantityPair {
	struct FString TemplateId; // 0x00(0x10)
	int32_t Quantity; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortPhoenixLevelRewardData
// Size: 0x40 (Inherited: 0x08)
struct FFortPhoenixLevelRewardData : FTableRowBase {
	int32_t TotalRequiredXP; // 0x08(0x04)
	bool bIsMajorReward; // 0x0c(0x01)
	char pad_D[0x3]; // 0x0d(0x03)
	struct TArray<struct FFortRewardQuantityPair> VisibleReward; // 0x10(0x10)
	struct TArray<struct FFortRewardQuantityPair> HiddenRewards; // 0x20(0x10)
	struct FString EventTag; // 0x30(0x10)
};

// ScriptStruct FortniteGame.FortPostMaxAccountLevelRewardData
// Size: 0x18 (Inherited: 0x08)
struct FFortPostMaxAccountLevelRewardData : FTableRowBase {
	struct TArray<struct FFortRewardQuantityPair> Rewards; // 0x08(0x10)
};

// ScriptStruct FortniteGame.HomebaseRatingDifficultyMappingData
// Size: 0x10 (Inherited: 0x08)
struct FHomebaseRatingDifficultyMappingData : FTableRowBase {
	int32_t Difficulty; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.IronCityDifficultyInfo
// Size: 0x30 (Inherited: 0x00)
struct FIronCityDifficultyInfo {
	int32_t AccountLevel; // 0x00(0x04)
	int32_t Difficulty; // 0x04(0x04)
	int32_t LootLevel; // 0x08(0x04)
	struct FName StatClamp; // 0x0c(0x08)
	char pad_14[0x4]; // 0x14(0x04)
	struct FString MissionRewards; // 0x18(0x10)
	struct FGameplayTag RewardBadgeTag; // 0x28(0x08)
};

// ScriptStruct FortniteGame.IronCityRowToRating
// Size: 0x10 (Inherited: 0x00)
struct FIronCityRowToRating {
	int32_t Difficulty; // 0x00(0x04)
	int32_t RecommendedRating; // 0x04(0x04)
	int32_t MinRating; // 0x08(0x04)
	int32_t MaxRating; // 0x0c(0x04)
};

// ScriptStruct FortniteGame.IronCityMatchmakingBuckets
// Size: 0x08 (Inherited: 0x00)
struct FIronCityMatchmakingBuckets {
	int32_t Difficulty; // 0x00(0x04)
	int32_t RecommendedRating; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortIronCityDifficultyData
// Size: 0x30 (Inherited: 0x08)
struct FFortIronCityDifficultyData : FTableRowBase {
	int32_t DifficultyLevel; // 0x08(0x04)
	int32_t LootLevel; // 0x0c(0x04)
	struct FName SuggestedStatClamp; // 0x10(0x08)
	struct FString MissionRewards; // 0x18(0x10)
	struct FGameplayTag RewardBadgeTag; // 0x28(0x08)
};

// ScriptStruct FortniteGame.FortWeaponAlterationRarityMappingData
// Size: 0x28 (Inherited: 0x08)
struct FFortWeaponAlterationRarityMappingData : FTableRowBase {
	struct FString SlotRarityValues; // 0x08(0x10)
	struct FString LowSlotRarityValues; // 0x18(0x10)
};

// ScriptStruct FortniteGame.FortLevelUpDataV2
// Size: 0x38 (Inherited: 0x08)
struct FFortLevelUpDataV2 : FTableRowBase {
	int32_t XP; // 0x08(0x04)
	int32_t DifficultyLevel; // 0x0c(0x04)
	float XPDisplayMultiplier; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct TArray<struct FFortRewardQuantityPair> Rewards; // 0x18(0x10)
	int32_t RestXPCap; // 0x28(0x04)
	int32_t RestXPRechargeRate; // 0x2c(0x04)
	int32_t BoostXPPerConsumable; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// ScriptStruct FortniteGame.GenericMessage
// Size: 0x50 (Inherited: 0x00)
struct FGenericMessage {
	char pad_0[0x50]; // 0x00(0x50)
};

// ScriptStruct FortniteGame.FortMobileHUDPresetHotfix
// Size: 0x18 (Inherited: 0x00)
struct FFortMobileHUDPresetHotfix {
	struct FGameplayTag HUDPresetTag; // 0x00(0x08)
	struct FFortMobileSchemaModificationContainer Modifications; // 0x08(0x10)
};

// ScriptStruct FortniteGame.HUDLayoutData
// Size: 0x10 (Inherited: 0x00)
struct FHUDLayoutData {
	struct TArray<struct FHUDLayoutDataEntry> LayoutEntries; // 0x00(0x10)
};

// ScriptStruct FortniteGame.HUDLayoutDataEntry
// Size: 0x180 (Inherited: 0x00)
struct FHUDLayoutDataEntry {
	struct FGameplayTag VisualType; // 0x00(0x08)
	struct FAnchorData AnchroData; // 0x08(0x28)
	int32_t ZOrder; // 0x30(0x04)
	enum class EBacchusHUDStateType BuildVisibility; // 0x34(0x01)
	enum class EBacchusHUDStateType CombatVisibility; // 0x35(0x01)
	enum class EBacchusHUDStateType EditVisibility; // 0x36(0x01)
	enum class EBacchusHUDStateType CreativeVisibility; // 0x37(0x01)
	float Property_1; // 0x38(0x04)
	float Property_2; // 0x3c(0x04)
	float Property_3; // 0x40(0x04)
	float Property_4; // 0x44(0x04)
	struct TMap<struct FName, float> FloatProperties; // 0x48(0x50)
	char pad_98[0xe8]; // 0x98(0xe8)
};

// ScriptStruct FortniteGame.FireModeData
// Size: 0x05 (Inherited: 0x00)
struct FFireModeData {
	bool bAutoFireIsEnabled; // 0x00(0x01)
	bool b3DTouchEnabled; // 0x01(0x01)
	bool bTapToShootEnabled; // 0x02(0x01)
	bool bAlwaysShowDedicatedButton; // 0x03(0x01)
	enum class EFireModeType FireModeType; // 0x04(0x01)
};

// ScriptStruct FortniteGame.TrackDynamicBackground
// Size: 0x60 (Inherited: 0x00)
struct FTrackDynamicBackground {
	struct TSoftObjectPtr<struct UTexture2D> BackgroundSubstance; // 0x00(0x28)
	struct FLinearColor PrimaryColor; // 0x28(0x10)
	struct FLinearColor SecondaryColor; // 0x38(0x10)
	struct FLinearColor TertiaryColor; // 0x48(0x10)
	bool bIsSpecial; // 0x58(0x01)
	bool bIsFoil; // 0x59(0x01)
	char pad_5A[0x2]; // 0x5a(0x02)
	int32_t MinimalDiscoveryLevel; // 0x5c(0x04)
};

// ScriptStruct FortniteGame.FortKeepAmmoStash
// Size: 0x30 (Inherited: 0x08)
struct FFortKeepAmmoStash : FTableRowBase {
	int32_t Max1; // 0x08(0x04)
	int32_t Cooldown1; // 0x0c(0x04)
	int32_t Max2; // 0x10(0x04)
	int32_t Cooldown2; // 0x14(0x04)
	int32_t Max3; // 0x18(0x04)
	int32_t Cooldown3; // 0x1c(0x04)
	int32_t Max4; // 0x20(0x04)
	int32_t Cooldown4; // 0x24(0x04)
	int32_t PickupTier; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortKeepItemGroup
// Size: 0x18 (Inherited: 0x08)
struct FFortKeepItemGroup : FTableRowBase {
	int32_t Items; // 0x08(0x04)
	int32_t MaxTier; // 0x0c(0x04)
	int32_t BaseLevel; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortKeepResourceGroup
// Size: 0x50 (Inherited: 0x08)
struct FFortKeepResourceGroup : FTableRowBase {
	struct FName Container; // 0x08(0x08)
	int32_t ItemCount; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct FString ResourceName; // 0x18(0x10)
	struct TSoftObjectPtr<struct UFortItemDefinition> FullPath; // 0x28(0x28)
};

// ScriptStruct FortniteGame.LevelSaveRecordCollectionItem
// Size: 0x60 (Inherited: 0x00)
struct FLevelSaveRecordCollectionItem {
	struct TSoftObjectPtr<struct ULevelSaveRecord> LevelSaveRecord; // 0x00(0x28)
	struct FName RecordUniqueName; // 0x28(0x08)
	struct FTransform Transform; // 0x30(0x30)
};

// ScriptStruct FortniteGame.RecordBucketMap
// Size: 0x60 (Inherited: 0x00)
struct FRecordBucketMap {
	struct TMap<struct FIntPoint, struct FRecordBucket> PositionToRecord; // 0x00(0x50)
	struct TArray<int32_t> DuplicateRecords; // 0x50(0x10)
};

// ScriptStruct FortniteGame.RecordBucket
// Size: 0x10 (Inherited: 0x00)
struct FRecordBucket {
	struct TArray<int32_t> RecordIndices; // 0x00(0x10)
};

// ScriptStruct FortniteGame.SaveStructFile
// Size: 0x10 (Inherited: 0x00)
struct FSaveStructFile {
	struct TArray<struct FStructRecord> StructRecords; // 0x00(0x10)
};

// ScriptStruct FortniteGame.StructRecord
// Size: 0x04 (Inherited: 0x00)
struct FStructRecord {
	char pad_0[0x4]; // 0x00(0x04)
};

// ScriptStruct FortniteGame.DeleteActorRecord
// Size: 0x38 (Inherited: 0x00)
struct FDeleteActorRecord {
	char pad_0[0x38]; // 0x00(0x38)
};

// ScriptStruct FortniteGame.LevelStreamedDeleteActorRecord
// Size: 0x90 (Inherited: 0x00)
struct FLevelStreamedDeleteActorRecord {
	char pad_0[0x90]; // 0x00(0x90)
};

// ScriptStruct FortniteGame.ActorInstanceRecord
// Size: 0x70 (Inherited: 0x00)
struct FActorInstanceRecord {
	char pad_0[0x70]; // 0x00(0x70)
};

// ScriptStruct FortniteGame.ActorTemplateRecord
// Size: 0x58 (Inherited: 0x00)
struct FActorTemplateRecord {
	char pad_0[0x58]; // 0x00(0x58)
};

// ScriptStruct FortniteGame.ActorComponentRecord
// Size: 0x48 (Inherited: 0x00)
struct FActorComponentRecord {
	struct FName ComponentName; // 0x00(0x08)
	SoftClassProperty ComponentClass; // 0x08(0x28)
	struct TArray<char> ComponentData; // 0x30(0x10)
	uint32_t DataHash; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// ScriptStruct FortniteGame.ComponentRecordRedirect
// Size: 0x50 (Inherited: 0x00)
struct FComponentRecordRedirect {
	struct FString ClassName; // 0x00(0x10)
	struct FString OldComponentClass; // 0x10(0x10)
	struct FString OldComponentName; // 0x20(0x10)
	struct FString NewComponentClass; // 0x30(0x10)
	struct FString NewComponentName; // 0x40(0x10)
};

// ScriptStruct FortniteGame.MatchHeartbeatManagerTickFunction
// Size: 0x30 (Inherited: 0x28)
struct FMatchHeartbeatManagerTickFunction : FTickFunction {
	char pad_28[0x8]; // 0x28(0x08)
};

// ScriptStruct FortniteGame.VersionedMetricWrapper
// Size: 0x30 (Inherited: 0x00)
struct FVersionedMetricWrapper {
	enum class ELevelSaveRecordVersion IntroducedVersion; // 0x00(0x01)
	enum class ELevelSaveRecordVersion DeprecatedVersion; // 0x01(0x01)
	char pad_2[0x6]; // 0x02(0x06)
	SoftClassProperty Class; // 0x08(0x28)
};

// ScriptStruct FortniteGame.FortMissionManagerRecord
// Size: 0x38 (Inherited: 0x00)
struct FFortMissionManagerRecord {
	struct AFortMissionManager* MissionManagerClass; // 0x00(0x08)
	struct TArray<struct FFortMissionRecord> MissionRecords; // 0x08(0x10)
	int32_t NumRequiredMissionsOfType[0x4]; // 0x18(0x10)
	struct TArray<char> MissionManagerData; // 0x28(0x10)
};

// ScriptStruct FortniteGame.FortMissionRecord
// Size: 0x138 (Inherited: 0x00)
struct FFortMissionRecord {
	struct FFortMissionEntry MissionEntry; // 0x00(0x88)
	struct UFortMissionGenerator* MissionGenerator; // 0x88(0x08)
	struct FFortGeneratedDifficultyOptions GeneratedMissionOptions; // 0x90(0x40)
	int32_t DayGenerated; // 0xd0(0x04)
	int32_t UIIndex; // 0xd4(0x04)
	struct FUniqueNetIdRepl QuestOwnerAccount; // 0xd8(0x28)
	enum class EFortMissionStatus MissionStatus; // 0x100(0x01)
	char pad_101[0x7]; // 0x101(0x07)
	struct TArray<struct FFortObjectiveRecord> ObjectiveRecords; // 0x108(0x10)
	struct TArray<char> MissionData; // 0x118(0x10)
	struct FGuid MissionGuid; // 0x128(0x10)
};

// ScriptStruct FortniteGame.FortObjectiveRecord
// Size: 0x18 (Inherited: 0x00)
struct FFortObjectiveRecord {
	struct AFortObjectiveBase* ObjectiveClass; // 0x00(0x08)
	struct TArray<char> ObjectiveData; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortGeneratedDifficultyOptions
// Size: 0x40 (Inherited: 0x00)
struct FFortGeneratedDifficultyOptions {
	float GameDifficultyAtGeneration; // 0x00(0x04)
	int32_t DifficultyOptionPointsAvailableAtGeneration; // 0x04(0x04)
	int32_t MaxEncounterSpawnPointsAtGeneration; // 0x08(0x04)
	int32_t MinDifficultyOptionPointsToUse; // 0x0c(0x04)
	struct TArray<struct FFortGeneratedEncounterSequence> GeneratedEncounterSequences; // 0x10(0x10)
	struct TArray<struct FFortGeneratedMissionOption> MissionOptions; // 0x20(0x10)
	struct TArray<struct FFortGeneratedEncounterProfile> GeneratedEncounterProfiles; // 0x30(0x10)
};

// ScriptStruct FortniteGame.FortGeneratedEncounterProfile
// Size: 0x50 (Inherited: 0x00)
struct FFortGeneratedEncounterProfile {
	float EncounterDifficultyLevel; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct TArray<struct FFortGeneratedEncounterOption> EncounterOptions; // 0x08(0x10)
	struct FFortEncounterModeSettings EncounterModeSettings; // 0x18(0x05)
	char pad_1D[0x3]; // 0x1d(0x03)
	struct FGameplayTagContainer EncounterTypeTags; // 0x20(0x20)
	int32_t DifficultyOptionPointsAvailableAtGeneration; // 0x40(0x04)
	int32_t MinDifficultyOptionPointsToUse; // 0x44(0x04)
	bool bShouldReselectOptionsPerInstance; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	int32_t GeneratedEncounterIndex; // 0x4c(0x04)
};

// ScriptStruct FortniteGame.FortEncounterModeSettings
// Size: 0x05 (Inherited: 0x00)
struct FFortEncounterModeSettings {
	enum class EFortEncounterPacingMode PacingMode; // 0x00(0x01)
	enum class EFortEncounterSpawnLocationManagementMode SpawnLocationManagementMode; // 0x01(0x01)
	enum class EFortEncounterSpawnLocationPlacementMode SpawnLocationMode; // 0x02(0x01)
	enum class EFortEncounterUtilitiesMode UtilitiesMode; // 0x03(0x01)
	enum class EFortEncounterSpawnLimitType SpawnLimitMode; // 0x04(0x01)
};

// ScriptStruct FortniteGame.FortGeneratedEncounterOption
// Size: 0x20 (Inherited: 0x00)
struct FFortGeneratedEncounterOption {
	struct UFortDifficultyOptionCategoryEncounter* EncounterOptionCategory; // 0x00(0x08)
	struct UFortDifficultyOptionEncounter* EncounterOption; // 0x08(0x08)
	struct UFortDifficultyOptionEncounter* EncounterOptionInstance; // 0x10(0x08)
	float RangeLerpValue; // 0x18(0x04)
	bool bChangedSinceLastVLog; // 0x1c(0x01)
	char pad_1D[0x3]; // 0x1d(0x03)
};

// ScriptStruct FortniteGame.FortGeneratedMissionOption
// Size: 0x18 (Inherited: 0x00)
struct FFortGeneratedMissionOption {
	struct UFortDifficultyOptionCategoryMission* MissionOptionCategory; // 0x00(0x08)
	struct UFortDifficultyOptionMission* MissionOption; // 0x08(0x08)
	float RangeLerpValue; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.FortGeneratedEncounterSequence
// Size: 0x30 (Inherited: 0x00)
struct FFortGeneratedEncounterSequence {
	struct FFortEncounterTransitionSettings TransitionSettings; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t StartingGeneratedEncounterProfileIndex; // 0x04(0x04)
	int32_t NumEncountersInSequence; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FGameplayTagContainer EncounterSequenceTags; // 0x10(0x20)
};

// ScriptStruct FortniteGame.FortMissionEntry
// Size: 0x88 (Inherited: 0x00)
struct FFortMissionEntry {
	float Weight; // 0x00(0x04)
	int32_t WorldMinLevel; // 0x04(0x04)
	int32_t WorldMaxLevel; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct FDataTableRowHandle MinDifficultyInfoRow; // 0x10(0x10)
	struct UFortMissionGenerator* MissionGenerator; // 0x20(0x08)
	struct UFortMissionInfo* MissionInfo; // 0x28(0x08)
	enum class EMissionGenerationCategory GenerationCategory; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FFortGeneratedDifficultyOptions GeneratedDifficultyOptions; // 0x38(0x40)
	struct TArray<struct FFortMissionPlacementItemLookupData> BlueprintLookupData; // 0x78(0x10)
};

// ScriptStruct FortniteGame.FortMissionPlacementItemLookupData
// Size: 0x78 (Inherited: 0x00)
struct FFortMissionPlacementItemLookupData {
	struct FGameplayTagContainer ItemIdentifyingTags; // 0x00(0x20)
	struct FGameplayTagContainer TagsAddedToPlacementActors; // 0x20(0x20)
	struct AActor* ActorToPlace; // 0x40(0x08)
	struct AActor* ActorToUseForSpawnLocation; // 0x48(0x08)
	struct AActor* SpawnedActor; // 0x50(0x08)
	struct FVector SpawnLocation; // 0x58(0x0c)
	struct FRotator SpawnRotation; // 0x64(0x0c)
	char bDontCreateSpawnRiftsNearby : 1; // 0x70(0x01)
	char bShouldFreeLocationsOnDeath : 1; // 0x70(0x01)
	char pad_70_2 : 6; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// ScriptStruct FortniteGame.FortMissionInstancedConfigData
// Size: 0x10 (Inherited: 0x00)
struct FFortMissionInstancedConfigData {
	struct TArray<struct FFortMissionInstancedConfigDataBucket> ConfigDataBuckets; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortMissionInstancedConfigDataBucket
// Size: 0x10 (Inherited: 0x00)
struct FFortMissionInstancedConfigDataBucket {
	struct FGameplayTag Tag; // 0x00(0x08)
	struct UFortMissionConfigData* ConfigData; // 0x08(0x08)
};

// ScriptStruct FortniteGame.FortMissionConfigDataParams
// Size: 0x10 (Inherited: 0x00)
struct FFortMissionConfigDataParams {
	struct TArray<struct FFortMissionConfigDataBucket> ConfigParams; // 0x00(0x10)
};

// ScriptStruct FortniteGame.FortMissionConfigDataBucket
// Size: 0x30 (Inherited: 0x00)
struct FFortMissionConfigDataBucket {
	struct FGameplayTag Tag; // 0x00(0x08)
	SoftClassProperty ConfigDataClass; // 0x08(0x28)
};

// ScriptStruct FortniteGame.FortPlacementActorFinderInfo
// Size: 0x18 (Inherited: 0x00)
struct FFortPlacementActorFinderInfo {
	float DistanceRangeMin; // 0x00(0x04)
	float DistanceRangeMax; // 0x04(0x04)
	struct TArray<struct FFortPlacementActorFinderEntry> BuildingData; // 0x08(0x10)
};

// ScriptStruct FortniteGame.FortPlacementActorFinderEntry
// Size: 0xb8 (Inherited: 0x00)
struct FFortPlacementActorFinderEntry {
	SoftClassProperty BuildingToSpawn; // 0x00(0x28)
	struct ABuildingActor* BuildingClassToFind; // 0x28(0x08)
	struct TArray<struct ABuildingActor*> BuildingClassesToFind; // 0x30(0x10)
	struct FGameplayTagContainer RequiredTags; // 0x40(0x20)
	struct FGameplayTagContainer PreferredTags; // 0x60(0x20)
	struct FGameplayTagContainer ExlusionTags; // 0x80(0x20)
	struct TArray<struct FFortFinderProperty> RequiredProperties; // 0xa0(0x10)
	bool bIgnoreCollisionCheck; // 0xb0(0x01)
	bool bSnapToGrid; // 0xb1(0x01)
	char pad_B2[0x6]; // 0xb2(0x06)
};

// ScriptStruct FortniteGame.FortPlacementDistanceRequirements
// Size: 0x08 (Inherited: 0x00)
struct FFortPlacementDistanceRequirements {
	float DistanceRangeMin; // 0x00(0x04)
	float DistanceRangeMax; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortMissionEvent
// Size: 0x98 (Inherited: 0x00)
struct FFortMissionEvent {
	struct FName EventType; // 0x00(0x08)
	struct FGameplayTagContainer ObjectiveHandle; // 0x08(0x20)
	struct UObject* EventFocus; // 0x28(0x08)
	struct UDataAsset* EventContent; // 0x30(0x08)
	struct AActor* EventInstigator; // 0x38(0x08)
	int32_t GenericInt; // 0x40(0x04)
	float GenericFloat; // 0x44(0x04)
	struct FText GenericText; // 0x48(0x18)
	struct FGameplayTagContainer GameplayTags; // 0x60(0x20)
	struct FGuid MissionGuid; // 0x80(0x10)
	struct UFortMissionEventParams* Params; // 0x90(0x08)
};

// ScriptStruct FortniteGame.WidgetVisibilityOverride
// Size: 0x68 (Inherited: 0x00)
struct FWidgetVisibilityOverride {
	struct FGameplayTag Key; // 0x00(0x08)
	struct FGameplayTagContainer VisibleOverrides; // 0x08(0x20)
	struct FGameplayTagContainer AllowedOverrides; // 0x28(0x20)
	struct FGameplayTagContainer HideOverrides; // 0x48(0x20)
};

// ScriptStruct FortniteGame.WidgetLayoutProxy
// Size: 0x38 (Inherited: 0x00)
struct FWidgetLayoutProxy {
	struct FGameplayTag Key; // 0x00(0x08)
	struct FAnchorData AnchorData; // 0x08(0x28)
	struct FVector2D DefaultContentSize; // 0x30(0x08)
};

// ScriptStruct FortniteGame.WidgetPropertyUpgradeData
// Size: 0x78 (Inherited: 0x00)
struct FWidgetPropertyUpgradeData {
	struct FGameplayTag Key; // 0x00(0x08)
	struct UInstancedPropertyUpgradeMappingBase* InstancedPropertyData0; // 0x08(0x08)
	struct UInstancedPropertyUpgradeMappingBase* InstancedPropertyData1; // 0x10(0x08)
	struct UInstancedPropertyUpgradeMappingBase* InstancedPropertyData2; // 0x18(0x08)
	struct UInstancedPropertyUpgradeMappingBase* InstancedPropertyData3; // 0x20(0x08)
	struct TMap<struct FName, struct UInstancedPropertyUpgradeMappingBase*> InstancedFloatPropertyToTagPropertyMap; // 0x28(0x50)
};

// ScriptStruct FortniteGame.WidgetMappingContainer
// Size: 0x70 (Inherited: 0x00)
struct FWidgetMappingContainer {
	struct FGameplayTag LegacyTag; // 0x00(0x08)
	struct FWidgetMapping DefaultMapping; // 0x08(0x58)
	struct TArray<struct FWidgetMapping> ContextMappings; // 0x60(0x10)
};

// ScriptStruct FortniteGame.WidgetMapping
// Size: 0x58 (Inherited: 0x00)
struct FWidgetMapping {
	struct FGameplayTagContainer KeyTags; // 0x00(0x20)
	struct FGameplayTag ReplacementTag; // 0x20(0x08)
	bool bUseLegacyTagAsBehavior; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct FGameplayTagContainer AlternativeWidgetTags; // 0x30(0x20)
	struct FGameplayTag ClassTag; // 0x50(0x08)
};

// ScriptStruct FortniteGame.MyTownWorkerSetBonusData
// Size: 0x50 (Inherited: 0x00)
struct FMyTownWorkerSetBonusData {
	struct FGameplayTagContainer SetBonusTypeTag; // 0x00(0x20)
	struct FText DisplayName; // 0x20(0x18)
	int32_t RequiredWorkersCount; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct UGameplayEffect* SetBonusEffect; // 0x40(0x08)
	int32_t SelectionWeight; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// ScriptStruct FortniteGame.MyTownWorkerPersonalityData
// Size: 0x50 (Inherited: 0x00)
struct FMyTownWorkerPersonalityData {
	struct FGameplayTagContainer PersonalityTypeTag; // 0x00(0x20)
	struct FText PersonalityName; // 0x20(0x18)
	int32_t SelectionWeight; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct TArray<struct FMyTownWorkerGenderData> GenderData; // 0x40(0x10)
};

// ScriptStruct FortniteGame.MyTownWorkerGenderData
// Size: 0x18 (Inherited: 0x00)
struct FMyTownWorkerGenderData {
	enum class EFortCustomGender Gender; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t SelectionWeight; // 0x04(0x04)
	struct TArray<struct FMyTownWorkerPortraitData> PotraitData; // 0x08(0x10)
};

// ScriptStruct FortniteGame.MyTownWorkerPortraitData
// Size: 0x30 (Inherited: 0x00)
struct FMyTownWorkerPortraitData {
	struct TSoftObjectPtr<struct UFortItemIconDefinition> Portrait; // 0x00(0x28)
	int32_t SelectionWeight; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.NPCGiftItemInventoryRow
// Size: 0x40 (Inherited: 0x08)
struct FNPCGiftItemInventoryRow : FTableRowBase {
	struct FGameplayTag NPC; // 0x08(0x08)
	struct FName LootTier; // 0x10(0x08)
	int32_t LootLevel; // 0x18(0x04)
	int32_t OverrideNumDrops; // 0x1c(0x04)
	struct FGameplayTagContainer LootTags; // 0x20(0x20)
};

// ScriptStruct FortniteGame.NPCConversationGiftRow
// Size: 0x30 (Inherited: 0x08)
struct FNPCConversationGiftRow : FTableRowBase {
	struct FGameplayTag NPC; // 0x08(0x08)
	struct FGameplayTag GiftTag; // 0x10(0x08)
	struct FString AnalyticsEventName; // 0x18(0x10)
	float Weight; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.NPCSaleInventoryRow
// Size: 0x48 (Inherited: 0x08)
struct FNPCSaleInventoryRow : FTableRowBase {
	struct FGameplayTag NPC; // 0x08(0x08)
	struct FName LootTier; // 0x10(0x08)
	int32_t LootLevel; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct FGameplayTagContainer LootTags; // 0x20(0x20)
	int32_t Priority; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// ScriptStruct FortniteGame.NPCDynamicServiceRow
// Size: 0x20 (Inherited: 0x08)
struct FNPCDynamicServiceRow : FTableRowBase {
	struct FGameplayTag NPC; // 0x08(0x08)
	float Chance; // 0x10(0x04)
	struct FGameplayTag ServiceTag; // 0x14(0x08)
	int32_t Priority; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.NPCQuestRow
// Size: 0x40 (Inherited: 0x08)
struct FNPCQuestRow : FTableRowBase {
	struct FGameplayTag NPC; // 0x08(0x08)
	struct TSoftObjectPtr<struct UFortQuestItemDefinition> Quest; // 0x10(0x28)
	float Weight; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// ScriptStruct FortniteGame.ObjectCostContainer
// Size: 0xb0 (Inherited: 0x00)
struct FObjectCostContainer {
	char pad_0[0x60]; // 0x00(0x60)
	struct TMap<struct FObjectCostVersion, struct FObjectCostCollection> VersionedObjectCostCollections; // 0x60(0x50)
};

// ScriptStruct FortniteGame.ObjectCostVersion
// Size: 0x18 (Inherited: 0x00)
struct FObjectCostVersion {
	int32_t MajorVersion; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	int64_t Timestamp; // 0x08(0x08)
	uint32_t MinorVersionStringHash; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.ObjectCostCollection
// Size: 0xa0 (Inherited: 0x00)
struct FObjectCostCollection {
	struct TMap<uint32_t, struct FObjectIdentifier> HashToIdentifier; // 0x00(0x50)
	struct TMap<struct FObjectIdentifier, struct FObjectCostData> ObjectIdentifiersToCostData; // 0x50(0x50)
};

// ScriptStruct FortniteGame.ObjectIdentifier
// Size: 0x80 (Inherited: 0x00)
struct FObjectIdentifier {
	struct TMap<uint32_t, uint32_t> ContainedIdentifierHashes; // 0x00(0x50)
	uint32_t CachedHash; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	SoftClassProperty SoftClassPtr; // 0x58(0x28)
};

// ScriptStruct FortniteGame.ObjectCostData
// Size: 0x50 (Inherited: 0x00)
struct FObjectCostData {
	struct TMap<uint32_t, int32_t> PerMetricCosts; // 0x00(0x50)
};

// ScriptStruct FortniteGame.ObjectTracker_Legacy
// Size: 0x138 (Inherited: 0x00)
struct FObjectTracker_Legacy {
	char pad_0[0xf8]; // 0x00(0xf8)
	struct UMetricConfiguration_Legacy* MetricConfiguration; // 0xf8(0x08)
	char pad_100[0x38]; // 0x100(0x38)
};

// ScriptStruct FortniteGame.VersionedBudget
// Size: 0x08 (Inherited: 0x00)
struct FVersionedBudget {
	enum class ELevelSaveRecordVersion Version; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t Value; // 0x04(0x04)
};

// ScriptStruct FortniteGame.FortTrackedObjectCostOverrideListData
// Size: 0x68 (Inherited: 0x08)
struct FFortTrackedObjectCostOverrideListData : FTableRowBase {
	struct TSoftObjectPtr<struct UObject> ObjectPtr; // 0x08(0x28)
	SoftClassProperty ClassPtr; // 0x30(0x28)
	struct TArray<struct FVersionedCostOverride> Overrides; // 0x58(0x10)
};

// ScriptStruct FortniteGame.VersionedCostOverride
// Size: 0x30 (Inherited: 0x00)
struct FVersionedCostOverride {
	SoftClassProperty ClassPtr; // 0x00(0x28)
	enum class ELevelSaveRecordVersion IntroducedVersion; // 0x28(0x01)
	enum class ELevelSaveRecordVersion DeprecatedVersion; // 0x29(0x01)
	char pad_2A[0x2]; // 0x2a(0x02)
	int32_t OverrideCost; // 0x2c(0x04)
};

// ScriptStruct FortniteGame.FortTrackedObjectListData
// Size: 0x08 (Inherited: 0x08)
struct FFortTrackedObjectListData : FTableRowBase {
};

// ScriptStruct FortniteGame.ServerMigrationAlertData
// Size: 0x10 (Inherited: 0x00)
struct FServerMigrationAlertData {
	int32_t SecondsRemainingStart; // 0x00(0x04)
	int32_t SecondsRemainingEnd; // 0x04(0x04)
	struct FTimerHandle TimerHandle; // 0x08(0x08)
};

// ScriptStruct FortniteGame.HeroSlotInfo
// Size: 0x1c0 (Inherited: 0x00)
struct FHeroSlotInfo {
	char pad_0[0x1c0]; // 0x00(0x1c0)
};

// ScriptStruct FortniteGame.BackendAlarmPayload
// Size: 0x230 (Inherited: 0x00)
struct FBackendAlarmPayload {
	struct FString PGS_Message; // 0x00(0x10)
	struct FString PGS_ErrorCode; // 0x10(0x10)
	struct FBackendJobsPayload PGS_ReceivedJobPayload; // 0x20(0x48)
	struct FString PGS_RenderQueueUrl; // 0x68(0x10)
	struct FString PGS_ASGName; // 0x78(0x10)
	struct FBackendJobCompletePayload PGS_JobProgress; // 0x88(0x138)
	uint32_t PGS_SQSRecievedCount; // 0x1c0(0x04)
	bool PGS_bIsVideoManagerFinished; // 0x1c4(0x01)
	bool PGS_bIsShuttingDown; // 0x1c5(0x01)
	char pad_1C6[0x2]; // 0x1c6(0x02)
	int32_t PGS_WastedSeconds; // 0x1c8(0x04)
	char pad_1CC[0x4]; // 0x1cc(0x04)
	struct FDriverInstanceInfo PGS_InstanceInfo; // 0x1d0(0x60)
};

// ScriptStruct FortniteGame.DriverInstanceInfo
// Size: 0x60 (Inherited: 0x00)
struct FDriverInstanceInfo {
	struct FString PGS_JobsEndpoint; // 0x00(0x10)
	struct FString PGS_LocalInstanceId; // 0x10(0x10)
	struct FString PGS_CloudInstanceId; // 0x20(0x10)
	struct FString PGS_ASGName; // 0x30(0x10)
	struct FString PGS_InstanceType; // 0x40(0x10)
	struct FString PGS_CloudOperatingRegion; // 0x50(0x10)
};

// ScriptStruct FortniteGame.BackendJobCompletePayload
// Size: 0x138 (Inherited: 0x00)
struct FBackendJobCompletePayload {
	struct FString PGS_RenderJobMessageHandle; // 0x00(0x10)
	struct FString PGS_RenderQueueUrl; // 0x10(0x10)
	struct FString PGS_ASGName; // 0x20(0x10)
	struct TArray<struct FBackendExportedClipInfo> PGS_ExportedVideos; // 0x30(0x10)
	struct TArray<struct FBackendExportedTimelineEvents> PGS_ExportedTimelines; // 0x40(0x10)
	struct FPegasusJobMeta PGS_PayloadMeta; // 0x50(0x38)
	struct TMap<enum class EVideoManagerStates, float> PGS_VideoManagerStateDurations; // 0x88(0x50)
	struct FDriverInstanceInfo PGS_InstanceInfo; // 0xd8(0x60)
};

// ScriptStruct FortniteGame.PegasusJobMeta
// Size: 0x38 (Inherited: 0x00)
struct FPegasusJobMeta {
	struct FString PGS_VideoJobId; // 0x00(0x10)
	struct TArray<struct FString> PGS_AdditionalTags; // 0x10(0x10)
	struct FString PGS_RenderJobId; // 0x20(0x10)
	int32_t PGS_RenderJobCreationEpoch; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// ScriptStruct FortniteGame.BackendExportedTimelineEvents
// Size: 0x30 (Inherited: 0x00)
struct FBackendExportedTimelineEvents {
	struct FString PGS_DatabaseId; // 0x00(0x10)
	struct FString PGS_DatabaseIdPartitionKey; // 0x10(0x10)
	struct TArray<struct FPegasusTimelineEvent> PGS_TimelineEvents; // 0x20(0x10)
};

// ScriptStruct FortniteGame.PegasusTimelineEvent
// Size: 0x40 (Inherited: 0x00)
struct FPegasusTimelineEvent {
	struct FString PGS_TagName; // 0x00(0x10)
	bool PGS_IsScalarValueRelevant; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct FString PGS_ScalarValueDescription; // 0x18(0x10)
	enum class EPegasusTimelineCategories PGS_Category; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct TArray<struct FPegasusTimelineEventHit> EventHits; // 0x30(0x10)
};

// ScriptStruct FortniteGame.PegasusTimelineEventHit
// Size: 0x68 (Inherited: 0x00)
struct FPegasusTimelineEventHit {
	int32_t PGS_HitCount; // 0x00(0x04)
	float PGS_ScalarValue; // 0x04(0x04)
	float PGS_ReplayStartTimeStamp; // 0x08(0x04)
	float PGS_ReplayEndTimeStamp; // 0x0c(0x04)
	struct TMap<struct FString, struct FPegasusAdditionalTagInfo> PGS_AdditionalTags; // 0x10(0x50)
	float PGS_ClipRelativeStartTime; // 0x60(0x04)
	float PGS_ClipRelativeEndTime; // 0x64(0x04)
};

// ScriptStruct FortniteGame.PegasusAdditionalTagInfo
// Size: 0x28 (Inherited: 0x00)
struct FPegasusAdditionalTagInfo {
	float PGS_ScalarValue; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct FString PGS_StringValue; // 0x08(0x10)
	struct FString PGS_TagKeyContext; // 0x18(0x10)
};

// ScriptStruct FortniteGame.BackendExportedClipInfo
// Size: 0x48 (Inherited: 0x00)
struct FBackendExportedClipInfo {
	struct FString PGS_DatabaseId; // 0x00(0x10)
	struct FString PGS_DatabaseIdPartitionKey; // 0x10(0x10)
	struct FString PGS_S3Bucket; // 0x20(0x10)
	struct FString PGS_S3key; // 0x30(0x10)
	float PGS_Duration; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// ScriptStruct FortniteGame.BackendJobsPayload
// Size: 0x48 (Inherited: 0x00)
struct FBackendJobsPayload {
	struct TArray<struct FPegasusJob> JobsToRun; // 0x00(0x10)
	struct FPegasusJobMeta PayloadMeta; // 0x10(0x38)
};

// ScriptStruct FortniteGame.PegasusJob
// Size: 0x30 (Inherited: 0x00)
struct FPegasusJob {
	struct FString ReplayId; // 0x00(0x10)
	bool bExportShotsIndividually; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct TArray<struct FClipInfo> ClipsToExport; // 0x18(0x10)
	bool bGenerateTimelineEventData; // 0x28(0x01)
	bool bJobAllowsFailure; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
};

// ScriptStruct FortniteGame.ClipInfo
// Size: 0x2c0 (Inherited: 0x00)
struct FClipInfo {
	float StartTimestamp; // 0x00(0x04)
	float Duration; // 0x04(0x04)
	struct FUniqueNetIdRepl PlayerID; // 0x08(0x28)
	struct FString S3KeyName; // 0x30(0x10)
	struct FString S3Bucket; // 0x40(0x10)
	struct FString DatabaseId; // 0x50(0x10)
	struct FString DatabaseParitionKey; // 0x60(0x10)
	enum class ESpectatorCameraType CameraType; // 0x70(0x01)
	enum class EClipMessageSettings MessageSettings; // 0x71(0x01)
	enum class ECameraShotNotificationTypes MessageNotificationType; // 0x72(0x01)
	char pad_73[0x1]; // 0x73(0x01)
	float MessageDisplayTime; // 0x74(0x04)
	struct FString MessageString; // 0x78(0x10)
	struct TMap<enum class EHighlightFeatures, float> FeatureScores; // 0x88(0x50)
	struct FString PlayerName; // 0xd8(0x10)
	char pad_E8[0x8]; // 0xe8(0x08)
	struct FSavedSpectatorCameraShot CameraShotPrefab; // 0xf0(0x1d0)
};

// ScriptStruct FortniteGame.RoundTechDataCache
// Size: 0x28 (Inherited: 0x00)
struct FRoundTechDataCache {
	struct TArray<struct FFutureTechData> FuturePerks; // 0x00(0x10)
	int32_t LevelAtRoundStart; // 0x10(0x04)
	int32_t FactionXPAtRoundStart; // 0x14(0x04)
	bool bDataReady; // 0x18(0x01)
	char pad_19[0x3]; // 0x19(0x03)
	int32_t MaxCalandarLevel; // 0x1c(0x04)
	int32_t MaxLevel; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
};

// ScriptStruct FortniteGame.FutureTechData
// Size: 0x18 (Inherited: 0x00)
struct FFutureTechData {
	int32_t UnlockLevel; // 0x00(0x04)
	int32_t XpToGetThisLevelFromRoundStartLevel; // 0x04(0x04)
	int32_t SingleLevelRequiredXp; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct UFortSpyTechItemDefinition* PerkItemDef; // 0x10(0x08)
};

// ScriptStruct FortniteGame.PerkAccoladeInfo
// Size: 0x18 (Inherited: 0x00)
struct FPerkAccoladeInfo {
	int32_t Index; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct UFortAccoladeItemDefinition* AccoladeDef; // 0x08(0x08)
	int32_t PipCount; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.PerkItemSet
// Size: 0x18 (Inherited: 0x00)
struct FPerkItemSet {
	struct TArray<struct UFortSpyTechItemDefinition*> Items; // 0x00(0x10)
	float Time; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.PlayerReportingInfoContainer
// Size: 0x60 (Inherited: 0x00)
struct FPlayerReportingInfoContainer {
	struct UFortLocalPlayer* Owner; // 0x00(0x08)
	struct TArray<struct UReportablePlayerInfo*> AllPlayerInfo; // 0x08(0x10)
	struct TArray<struct UReportablePlayerInfo*> AllIslandInfo; // 0x18(0x10)
	char pad_28[0x38]; // 0x28(0x38)
};

// ScriptStruct FortniteGame.CachedPlayerReportingMatchInfoAnalytics
// Size: 0x38 (Inherited: 0x00)
struct FCachedPlayerReportingMatchInfoAnalytics {
	struct FString GameSessionId; // 0x00(0x10)
	struct FName PlaylistName; // 0x10(0x08)
	struct FString TournamentId; // 0x18(0x10)
	struct FString EventWindowId; // 0x28(0x10)
};

// ScriptStruct FortniteGame.ApproachingActorContext
// Size: 0x18 (Inherited: 0x00)
struct FApproachingActorContext {
	struct TArray<struct FVector> ApproachingActorLocations; // 0x00(0x10)
	char pad_10[0x8]; // 0x10(0x08)
};

// ScriptStruct FortniteGame.PairedWeightContainer
// Size: 0x10 (Inherited: 0x00)
struct FPairedWeightContainer {
	struct TArray<struct FPairedWeightEntry> Weights; // 0x00(0x10)
};

// ScriptStruct FortniteGame.PairedWeightEntry
// Size: 0x30 (Inherited: 0x00)
struct FPairedWeightEntry {
	struct FName Name; // 0x00(0x08)
	struct FScalableFloat Value; // 0x08(0x28)
};

// ScriptStruct FortniteGame.PrimitiveCrosstalkNameArray
// Size: 0x10 (Inherited: 0x00)
struct FPrimitiveCrosstalkNameArray {
	struct TArray<struct FName> SupportedFunctions; // 0x00(0x10)
};

// ScriptStruct FortniteGame.CreativePerfCost
// Size: 0x08 (Inherited: 0x00)
struct FCreativePerfCost {
	char pad_0[0x8]; // 0x00(0x08)
};

// ScriptStruct FortniteGame.AnimClassStats
// Size: 0x60 (Inherited: 0x00)
struct FAnimClassStats {
	struct FString AnimClassName; // 0x00(0x10)
	struct TMap<struct FString, float> StatValues; // 0x10(0x50)
};

// ScriptStruct FortniteGame.QuickHealPriority
// Size: 0x20 (Inherited: 0x00)
struct FQuickHealPriority {
	float MinHealth; // 0x00(0x04)
	float MaxHealth; // 0x04(0x04)
	float MinShields; // 0x08(0x04)
	float MaxShields; // 0x0c(0x04)
	struct TArray<struct FGameplayTag> GameplayTags; // 0x10(0x10)
};

// ScriptStruct FortniteGame.WatchedReplayShotInfo
// Size: 0x18 (Inherited: 0x00)
struct FWatchedReplayShotInfo {
	int32_t ShotIndex; // 0x00(0x04)
	char pad_4[0x4]; // 0x04(0x04)
	struct TArray<struct FPegasusTimelineEvent> TimelineEvents; // 0x08(0x10)
};

// ScriptStruct FortniteGame.VideoManagerExtractionJob
// Size: 0x130 (Inherited: 0x00)
struct FVideoManagerExtractionJob {
	char pad_0[0x130]; // 0x00(0x130)
};

// ScriptStruct FortniteGame.SolarisPrototype
// Size: 0x10 (Inherited: 0x00)
struct FSolarisPrototype {
	char pad_0[0x10]; // 0x00(0x10)
};

// ScriptStruct FortniteGame.RelevantPawnArray
// Size: 0x10 (Inherited: 0x00)
struct FRelevantPawnArray {
	struct TArray<struct AFortPlayerPawn*> PlayerPawns; // 0x00(0x10)
};

// ScriptStruct FortniteGame.SpecialRelevancyMultiSquadControllerGroupsContainer
// Size: 0x10 (Inherited: 0x00)
struct FSpecialRelevancyMultiSquadControllerGroupsContainer {
	struct TArray<struct FSpecialRelevancyMultiSquadControllerGroup> ControllerGroups; // 0x00(0x10)
};

// ScriptStruct FortniteGame.SpecialRelevancyMultiSquadControllerGroup
// Size: 0x10 (Inherited: 0x00)
struct FSpecialRelevancyMultiSquadControllerGroup {
	struct TArray<struct AFortPlayerControllerAthena*> Controllers; // 0x00(0x10)
};

// ScriptStruct FortniteGame.SpecialRelevancyGroup
// Size: 0x28 (Inherited: 0x00)
struct FSpecialRelevancyGroup {
	char pad_0[0x8]; // 0x00(0x08)
	struct TArray<struct AFortPlayerControllerAthena*> Controllers; // 0x08(0x10)
	struct TArray<struct AActor*> SpecialActors; // 0x18(0x10)
};

// ScriptStruct FortniteGame.SpecialActorSpawnData
// Size: 0x50 (Inherited: 0x00)
struct FSpecialActorSpawnData {
	struct AActor* ActorClass; // 0x00(0x08)
	char pad_8[0x8]; // 0x08(0x08)
	struct FTransform Transform; // 0x10(0x30)
	struct AActor* Owner; // 0x40(0x08)
	char pad_48[0x8]; // 0x48(0x08)
};

// ScriptStruct FortniteGame.SpecialRelevancyModeData
// Size: 0x08 (Inherited: 0x00)
struct FSpecialRelevancyModeData {
	enum class ESpecialRelevancyMode Mode; // 0x00(0x01)
	char pad_1[0x3]; // 0x01(0x03)
	int32_t NumberOfSquads; // 0x04(0x04)
};

// ScriptStruct FortniteGame.StatNamesToTrack
// Size: 0x18 (Inherited: 0x08)
struct FStatNamesToTrack : FTableRowBase {
	struct FName StatName; // 0x08(0x08)
	enum class EStatRecordingPeriod Period; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
};

// ScriptStruct FortniteGame.DevHeroClassInfo
// Size: 0x18 (Inherited: 0x00)
struct FDevHeroClassInfo {
	struct FString Name; // 0x00(0x10)
	int32_t Level; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
};

// ScriptStruct FortniteGame.GameLogStream
// Size: 0x90 (Inherited: 0x00)
struct FGameLogStream {
	struct TArray<struct FDeathEvent> DeathEvents; // 0x00(0x10)
	char pad_10[0x8]; // 0x10(0x08)
	struct TArray<struct FGameLogPawnSample> PawnSamples; // 0x18(0x10)
	char pad_28[0x8]; // 0x28(0x08)
	struct TArray<struct FGameLogBuildSample> BuildEvents; // 0x30(0x10)
	char pad_40[0x8]; // 0x40(0x08)
	struct TArray<struct FStormSample> StormSamples; // 0x48(0x10)
	char pad_58[0x8]; // 0x58(0x08)
	struct TArray<struct FGameLogPlayerMetaSample> PlayerMetaInfoSamples; // 0x60(0x10)
	char pad_70[0x8]; // 0x70(0x08)
	struct TArray<struct FGameLogDancePartySample> PlayerDancePartySamples; // 0x78(0x10)
	char pad_88[0x8]; // 0x88(0x08)
};

// ScriptStruct FortniteGame.GameLogPlayerSampleBase
// Size: 0x28 (Inherited: 0x00)
struct FGameLogPlayerSampleBase {
	struct FUniqueNetIdRepl PlayerID; // 0x00(0x28)
};

// ScriptStruct FortniteGame.GameLogDancePartySample
// Size: 0xa8 (Inherited: 0x28)
struct FGameLogDancePartySample : FGameLogPlayerSampleBase {
	struct FPlayerDancePartySample TheSample; // 0x28(0x80)
};

// ScriptStruct FortniteGame.BaseSample
// Size: 0x18 (Inherited: 0x00)
struct FBaseSample {
	char pad_0[0x8]; // 0x00(0x08)
	float Timestamp; // 0x08(0x04)
	struct FVector Location; // 0x0c(0x0c)
};

// ScriptStruct FortniteGame.PlayerDancePartySample
// Size: 0x80 (Inherited: 0x18)
struct FPlayerDancePartySample : FBaseSample {
	struct FUnicornDancePartyInfo DancePartyInfo; // 0x18(0x68)
};

// ScriptStruct FortniteGame.UnicornDancePartyInfo
// Size: 0x68 (Inherited: 0x00)
struct FUnicornDancePartyInfo {
	float StartTimestamp; // 0x00(0x04)
	float EndTimestamp; // 0x04(0x04)
	int32_t PeakMembers; // 0x08(0x04)
	float PeakStartTimestamp; // 0x0c(0x04)
	float PeakEndTimestamp; // 0x10(0x04)
	bool bEndsBecauseOfUs; // 0x14(0x01)
	bool bIsMovingEmote; // 0x15(0x01)
	char pad_16[0x2]; // 0x16(0x02)
	struct TSet<struct FUniqueNetIdRepl> LatestMembers; // 0x18(0x50)
};

// ScriptStruct FortniteGame.GameLogPlayerMetaSample
// Size: 0x48 (Inherited: 0x28)
struct FGameLogPlayerMetaSample : FGameLogPlayerSampleBase {
	struct FPlayerMetaInfo TheSample; // 0x28(0x20)
};

// ScriptStruct FortniteGame.PlayerMetaInfo
// Size: 0x20 (Inherited: 0x18)
struct FPlayerMetaInfo : FBaseSample {
	int32_t MatchPlacement; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
};

// ScriptStruct FortniteGame.StormSample
// Size: 0x20 (Inherited: 0x18)
struct FStormSample : FBaseSample {
	float Radius; // 0x18(0x04)
	bool bIsValid; // 0x1c(0x01)
	char pad_1D[0x3]; // 0x1d(0x03)
};

// ScriptStruct FortniteGame.GameLogBuildSample
// Size: 0x48 (Inherited: 0x28)
struct FGameLogBuildSample : FGameLogPlayerSampleBase {
	struct FBuildEvent TheSample; // 0x28(0x20)
};

// ScriptStruct FortniteGame.BuildEvent
// Size: 0x20 (Inherited: 0x18)
struct FBuildEvent : FBaseSample {
	bool bIsEdit; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
};

// ScriptStruct FortniteGame.GameLogPawnSample
// Size: 0x58 (Inherited: 0x28)
struct FGameLogPawnSample : FGameLogPlayerSampleBase {
	struct FPawnSample TheSample; // 0x28(0x30)
};

// ScriptStruct FortniteGame.PawnSample
// Size: 0x30 (Inherited: 0x18)
struct FPawnSample : FBaseSample {
	struct FRotator Rotation; // 0x18(0x0c)
	float Health; // 0x24(0x04)
	float Shield; // 0x28(0x04)
	char bIsJumpingOrFalling : 1; // 0x2c(0x01)
	char bIsInVehicle : 1; // 0x2c(0x01)
	char bIsParachuteOpen : 1; // 0x2c(0x01)
	char bIsDBNO : 1; // 0x2c(0x01)
	char bIsDead : 1; // 0x2c(0x01)
	char bIsSwimming : 1; // 0x2c(0x01)
	char pad_2C_6 : 2; // 0x2c(0x01)
	char pad_2D[0x1]; // 0x2d(0x01)
	int16_t POITag; // 0x2e(0x02)
};

// ScriptStruct FortniteGame.DeathEvent
// Size: 0x108 (Inherited: 0x18)
struct FDeathEvent : FBaseSample {
	char pad_18[0x8]; // 0x18(0x08)
	struct FUniqueNetIdRepl Instigator; // 0x20(0x28)
	struct FUniqueNetIdRepl Victim; // 0x48(0x28)
	bool bIsDBNO; // 0x70(0x01)
	bool bWasDBNOOnDeath; // 0x71(0x01)
	enum class EDeathCause DeathCause; // 0x72(0x01)
	char pad_73[0x1]; // 0x73(0x01)
	float DeathDistance; // 0x74(0x04)
	struct FPawnSample PawnSampleBeforeDeath; // 0x78(0x30)
	struct FGameplayTagContainer DeathTags; // 0xa8(0x20)
	struct FGameplayTagContainer VictimTags; // 0xc8(0x20)
	struct FGameplayTagContainer KillerTags; // 0xe8(0x20)
};

// ScriptStruct FortniteGame.HighlightsPayload
// Size: 0x98 (Inherited: 0x00)
struct FHighlightsPayload {
	struct FHighlightsPayloadMeta UCRN_Meta; // 0x00(0x88)
	struct TArray<struct FHighlightReelPayload> UCRN_HighlightReels; // 0x88(0x10)
};

// ScriptStruct FortniteGame.HighlightReelPayload
// Size: 0xa8 (Inherited: 0x00)
struct FHighlightReelPayload {
	struct FUniqueNetIdRepl UCRN_PlayerId; // 0x00(0x28)
	struct FString UCRN_PlayerName; // 0x28(0x10)
	int32_t UCRN_MMR; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct FHighlightReelPlayerInfoPayload UCRN_PlayerInfo; // 0x40(0x50)
	enum class EHighlightReelIds UCRN_HighlightReelId; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
	struct TArray<struct FHighlightClipPayload> UCRN_Clips; // 0x98(0x10)
};

// ScriptStruct FortniteGame.HighlightClipPayload
// Size: 0x3f8 (Inherited: 0x00)
struct FHighlightClipPayload {
	int32_t UCRN_HighlightId; // 0x00(0x04)
	float UCRN_StartTimestamp; // 0x04(0x04)
	float UCRN_Duration; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct TMap<enum class EHighlightFeatures, float> UCRN_GameplayFeatures; // 0x10(0x50)
	float UCRN_GameplayScore; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
	struct FUnicornSocialMetaPayload UCRN_SocialMeta; // 0x68(0xa8)
	float UCRN_NetworkingFidelityAverage; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
	struct TArray<struct FString> UCRN_POITags; // 0x118(0x10)
	struct FVictimGameplayInfoPayload UCRN_FollowingPlayerKill_VictimGameplayInfo; // 0x128(0x140)
	struct FVictimGameplayInfoPayload UCRN_FollowingPlayerDeath_VictimGameplayInfo; // 0x268(0x140)
	struct TMap<struct FString, struct FString> UCRN_UnicornTags; // 0x3a8(0x50)
};

// ScriptStruct FortniteGame.VictimGameplayInfoPayload
// Size: 0x140 (Inherited: 0x00)
struct FVictimGameplayInfoPayload {
	struct TSet<enum class EDeathCause> UCRN_DeathCauses; // 0x00(0x50)
	struct TSet<struct FString> UCRN_VictimTags; // 0x50(0x50)
	struct TSet<struct FString> UCRN_KillerTags; // 0xa0(0x50)
	struct TSet<struct FString> UCRN_DeathTags; // 0xf0(0x50)
};

// ScriptStruct FortniteGame.UnicornSocialMetaPayload
// Size: 0xa8 (Inherited: 0x00)
struct FUnicornSocialMetaPayload {
	struct TMap<enum class EUnicornSocialFeatures, float> UCRN_FeatureScores; // 0x00(0x50)
	struct TSet<struct FUniqueNetIdRepl> UCRN_FriendsInvolved; // 0x50(0x50)
	float UCRN_SocialScore; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// ScriptStruct FortniteGame.HighlightReelPlayerInfoPayload
// Size: 0x50 (Inherited: 0x00)
struct FHighlightReelPlayerInfoPayload {
	struct FCosmeticLoadoutPayload UCRN_CosmeticInfo; // 0x00(0x50)
};

// ScriptStruct FortniteGame.CosmeticLoadoutPayload
// Size: 0x50 (Inherited: 0x00)
struct FCosmeticLoadoutPayload {
	struct TMap<enum class EFortItemType, struct FString> UCRN_CharacterVarients; // 0x00(0x50)
};

// ScriptStruct FortniteGame.HighlightsPayloadMeta
// Size: 0x88 (Inherited: 0x00)
struct FHighlightsPayloadMeta {
	struct FString UCRN_ReplayId; // 0x00(0x10)
	struct FString UCRN_BuildVersion; // 0x10(0x10)
	struct FString UCRN_McpDeployment; // 0x20(0x10)
	char UCRN_PayloadVersion; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FDateTime UCRN_GenerationDate; // 0x38(0x08)
	struct FString UCRN_McpBackendEnvironment; // 0x40(0x10)
	struct FString UCRN_McpAppName; // 0x50(0x10)
	struct FString UCRN_McpGameBackendName; // 0x60(0x10)
	struct FString UCRN_PlaylistName; // 0x70(0x10)
	bool UCRN_bIsCustomMatch; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
};

// ScriptStruct FortniteGame.TileGroupSelection
// Size: 0x10 (Inherited: 0x00)
struct FTileGroupSelection {
	struct TArray<struct FTileGroupInfo> TileGroupOptions; // 0x00(0x10)
};

// ScriptStruct FortniteGame.TileGroupInfo
// Size: 0x18 (Inherited: 0x00)
struct FTileGroupInfo {
	struct UWorldTileGroup* TileGroup; // 0x00(0x08)
	int32_t Weight; // 0x08(0x04)
	int32_t MinTiles; // 0x0c(0x04)
	int32_t MaxTiles; // 0x10(0x04)
	char bPlaceAdjacent : 1; // 0x14(0x01)
	char pad_14_1 : 7; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
};

// ScriptStruct FortniteGame.TileGroupMapInfo
// Size: 0x38 (Inherited: 0x00)
struct FTileGroupMapInfo {
	struct TSoftObjectPtr<struct UWorld> GroupWorld; // 0x00(0x28)
	float Weight; // 0x28(0x04)
	struct FName QuotaCategory; // 0x2c(0x08)
	char pad_34[0x4]; // 0x34(0x04)
};

// ScriptStruct FortniteGame.FortTileLootData
// Size: 0x318 (Inherited: 0x00)
struct FFortTileLootData {
	struct FFortLootQuotaData LootQuotas[0x12]; // 0x00(0x2d0)
	int32_t LootDrops[0x12]; // 0x2d0(0x48)
};

