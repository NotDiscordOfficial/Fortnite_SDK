// BlueprintGeneratedClass Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C
// Size: 0x28 (Inherited: 0x28)
struct UCreative_CommonDeviceFunctionLibrary_C : UBlueprintFunctionLibrary {

	void Get PlayerState from NetID(struct FUniqueNetIdRepl Unique Net Id, struct UObject* __WorldContext, struct AFortPlayerState* Fort Player State); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Get PlayerState from NetID // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0xda7c34
	void Is Matching Channel ID(struct UFortGameplayMessageComponentBase* A, struct UFortGameplayMessageComponentBase* B, struct UObject* __WorldContext, bool Matches); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Is Matching Channel ID // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0xda7c34
	void Bool to Bool with Unset(bool Input, struct UObject* __WorldContext, enum class EBoolWithUnset Output); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Bool to Bool with Unset // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0xda7c34
	void GetMinigameSettingsMachineForMinigame(struct AFortMinigame* Minigame, struct UObject* __WorldContext, struct AMinigameSettingsMachine_C* MinigameSettingsMachine); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.GetMinigameSettingsMachineForMinigame // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void Reattach or Create MID(struct UPrimitiveComponent* Mesh, struct UMaterialInstanceDynamic* Target MID, int32_t MatId, struct UObject* __WorldContext); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Reattach or Create MID // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xda7c34
	void Wrapping Modulo(int32_t A, int32_t B, struct UObject* __WorldContext, int32_t Out); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Wrapping Modulo // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void Animate Float Curve(float Delta Time, float Current Time, struct UCurveFloat* FCurve, float Animation Time, bool Invert Time, struct UObject* __WorldContext, float Value, bool bIsComplete); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Animate Float Curve // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xda7c34
	void TeamToIndex(char Team, struct UObject* __WorldContext, int32_t Index); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.TeamToIndex // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void IndexToTeam(int32_t Index, struct UObject* __WorldContext, char Team); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IndexToTeam // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void IsLogicInPlayMode(struct UFortMinigameLogicComponent* Logic, struct UObject* __WorldContext, bool Play Mode); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IsLogicInPlayMode // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void Get Dynamic Team Color(struct AActor* Actor, struct AFortMinigame* Minigame, enum class ECreativeColorSetType Color Type, struct UObject* __WorldContext, int32_t Array Index); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Get Dynamic Team Color // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void Get Team Color Index from Tag(struct AActor* Actor with Tag, struct AFortMinigame* Minigame, struct UObject* __WorldContext, int32_t Array Index, enum class ECreativeColorSetType Color Type Out); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Get Team Color Index from Tag // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	int32_t Get Team Color Index or Team Index(struct UFortMinigameLogicComponent* Minigame Logic, int32_t Team Index, struct UObject* __WorldContext); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Get Team Color Index or Team Index // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void IsLocalPawn(struct AActor* Actor, struct UObject* __WorldContext, bool IsLocalPawn); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IsLocalPawn // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void IsInPlayMode(struct AActor* Actor, struct UObject* __WorldContext, bool Play Mode); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IsInPlayMode // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void Get Driver or Pawn Controller(struct AActor* Actor to Check, struct UObject* __WorldContext, bool Valid Controller, struct AController* Controller); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Get Driver or Pawn Controller // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void GetMID_FromMaterial(struct UPrimitiveComponent* Target, int32_t Index, struct UMaterialInterface* SourceMaterial, struct UObject* __WorldContext, struct UMaterialInstanceDynamic* Mid); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.GetMID_FromMaterial // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void Refresh Team Change Binding(struct UFortMinigameLogicComponent* Minigame Logic, bool Unbind, struct FDelegate event, struct UObject* __WorldContext); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Refresh Team Change Binding // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xda7c34
	void Update Team Color(struct UFortMinigameLogicComponent* Minigame Logic, struct UPrimitiveComponent* Mesh, int32_t Team, struct UObject* __WorldContext); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.Update Team Color // (Static|Public|BlueprintCallable|BlueprintEvent) // @ game+0xda7c34
	void GetMID(struct UPrimitiveComponent* Target, struct UObject* __WorldContext, struct UMaterialInstanceDynamic* Mid); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.GetMID // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void ActorCanTrigger(struct AActor* Actor to Check, struct UPrimitiveComponent* Overlap Component, struct UObject* __WorldContext, bool CanTrigger, struct AController* Controller); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.ActorCanTrigger // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void IsActivatedOnPhase(enum class EFortMinigameState State, int32_t PhaseIndex, struct AActor* Actor, struct UObject* __WorldContext, bool Enabled); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IsActivatedOnPhase // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void IsEnabledPhaseMatch(enum class EFortMinigameState State, int32_t PhaseIndex, struct AActor* Actor, struct UObject* __WorldContext, bool Enabled); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IsEnabledPhaseMatch // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void IsValidTeam(int32_t Team to Check, struct AActor* Actor to Check, struct UObject* __WorldContext, bool Valid); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IsValidTeam // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
	void AwardScore(struct AActor* Actor, int32_t Score, enum class EAwardScoreType Type, struct AController* Controller, struct UFortMinigameLogicComponent* Minigame Logic, struct FGameplayTagContainer TargetTags, struct UObject* __WorldContext); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.AwardScore // (Static|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xda7c34
	void IsOnUnpublishedIsland(struct AActor* Actor, struct UObject* __WorldContext, bool Edit Mode); // Function Creative_CommonDeviceFunctionLibrary.Creative_CommonDeviceFunctionLibrary_C.IsOnUnpublishedIsland // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xda7c34
};

